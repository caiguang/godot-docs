# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:4
msgid "Heads up display"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:6
msgid "The final piece our game needs is a User Interface (UI) to display things like score, a \"game over\" message, and a restart button."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:9
msgid "Create a new scene, click the \"Other Node\" button and add a :ref:`CanvasLayer <class_CanvasLayer>` node named ``HUD``. \"HUD\" stands for \"heads-up display\", an informational display that appears as an overlay on top of the game view."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:13
msgid "The :ref:`CanvasLayer <class_CanvasLayer>` node lets us draw our UI elements on a layer above the rest of the game, so that the information it displays isn't covered up by any game elements like the player or mobs."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:17
msgid "The HUD needs to display the following information:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:19
msgid "Score, changed by ``ScoreTimer``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:20
msgid "A message, such as \"Game Over\" or \"Get Ready!\""
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:21
msgid "A \"Start\" button to begin the game."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:23
msgid "The basic node for UI elements is :ref:`Control <class_Control>`. To create our UI, we'll use two types of :ref:`Control <class_Control>` nodes: :ref:`Label <class_Label>` and :ref:`Button <class_Button>`."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:27
msgid "Create the following as children of the ``HUD`` node:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:29
msgid ":ref:`Label <class_Label>` named ``ScoreLabel``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:30
msgid ":ref:`Label <class_Label>` named ``Message``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:31
msgid ":ref:`Button <class_Button>` named ``StartButton``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:32
msgid ":ref:`Timer <class_Timer>` named ``MessageTimer``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:34
msgid "Click on the ``ScoreLabel`` and type a number into the ``Text`` field in the Inspector. The default font for ``Control`` nodes is small and doesn't scale well. There is a font file included in the game assets called \"Xolonium-Regular.ttf\". To use this font, do the following:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:39
msgid "Under \"Theme Overrides > Fonts\", choose \"Load\" and select the \"Xolonium-Regular.ttf\" file."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:43
msgid "The font size is still too small, increase it to ``64`` under \"Theme Overrides > Font Sizes\". Once you've done this with the ``ScoreLabel``, repeat the changes for the ``Message`` and ``StartButton`` nodes."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:48
msgid "**Anchors:** ``Control`` nodes have a position and size, but they also have anchors. Anchors define the origin - the reference point for the edges of the node."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:52
msgid "Arrange the nodes as shown below. You can drag the nodes to place them manually, or for more precise placement, use \"Anchor Presets\"."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:59
msgid "ScoreLabel"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:61
msgid "Add the text ``0``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:62
#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:69
msgid "Set the \"Horizontal Alignment\" and \"Vertical Alignment\" to ``Center``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:63
msgid "Choose the \"Anchor Preset\" ``Center Top``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:66
msgid "Message"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:68
msgid "Add the text ``Dodge the Creeps!``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:70
msgid "Set the \"Autowrap Mode\" to ``Word``, otherwise the label will stay on one line."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:71
msgid "Under \"Control - Layout/Transform\" set \"Size X\"  to ``480`` to use the entire width of the screen."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:72
msgid "Choose the \"Anchor Preset\" ``Center``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:75
msgid "StartButton"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:77
msgid "Add the text ``Start``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:78
msgid "Under \"Control - Layout/Transform\", set \"Size X\" to ``200`` and \"Size Y\" to ``100`` to add a little bit more padding between the border and text."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:80
msgid "Choose the \"Anchor Preset\" ``Center Bottom``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:81
msgid "Under \"Control - Layout/Transform\", set \"Position Y\" to ``580``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:83
msgid "On the ``MessageTimer``, set the ``Wait Time`` to ``2`` and set the ``One Shot`` property to \"On\"."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:86
msgid "Now add this script to ``HUD``:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:108
msgid "We now want to display a message temporarily, such as \"Get Ready\", so we add the following code"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:130
msgid "We also need to process what happens when the player loses. The code below will show \"Game Over\" for 2 seconds, then return to the title screen and, after a brief pause, show the \"Start\" button."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:163
msgid "This function is called when the player loses. It will show \"Game Over\" for 2 seconds, then return to the title screen and, after a brief pause, show the \"Start\" button."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:167
msgid "When you need to pause for a brief time, an alternative to using a Timer node is to use the SceneTree's ``create_timer()`` function. This can be very useful to add delays such as in the above code, where we want to wait some time before showing the \"Start\" button."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:172
msgid "Add the code below to ``HUD`` to update the score"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:187
msgid "Connect the ``pressed()`` signal of ``StartButton`` and the ``timeout()`` signal of ``MessageTimer``, and add the following code to the new functions:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:214
msgid "Connecting HUD to Main"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:216
msgid "Now that we're done creating the ``HUD`` scene, go back to ``Main``. Instance the ``HUD`` scene in ``Main`` like you did the ``Player`` scene. The scene tree should look like this, so make sure you didn't miss anything:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:222
msgid "Now we need to connect the ``HUD`` functionality to our ``Main`` script. This requires a few additions to the ``Main`` scene:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:225
msgid "In the Node tab, connect the HUD's ``start_game`` signal to the ``new_game()`` function of the Main node by clicking the \"Pick\" button in the \"Connect a Signal\" window and selecting the ``new_game()`` method or type \"new_game\" below \"Receiver Method\" in the window. Verify that the green connection icon now appears next to ``func new_game()`` in the script."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:231
msgid "In ``new_game()``, update the score display and show the \"Get Ready\" message:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:245
msgid "In ``game_over()`` we need to call the corresponding ``HUD`` function:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:256
msgid "Finally, add this to ``_on_score_timer_timeout()`` to keep the display in sync with the changing score:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:270
msgid "Remember to remove the call to ``new_game()`` from ``_ready()`` if you haven't already, otherwise your game will start automatically."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:274
msgid "Now you're ready to play! Click the \"Play the Project\" button. You will be asked to select a main scene, so choose ``main.tscn``."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:278
msgid "Removing old creeps"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:280
msgid "If you play until \"Game Over\" and then start a new game right away, the creeps from the previous game may still be on the screen. It would be better if they all disappeared at the start of a new game. We just need a way to tell *all* the mobs to remove themselves. We can do this with the \"group\" feature."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:285
msgid "In the ``Mob`` scene, select the root node and click the \"Node\" tab next to the Inspector (the same place where you find the node's signals). Next to \"Signals\", click \"Groups\" and you can type a new group name and click \"Add\"."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:291
msgid "Now all mobs will be in the \"mobs\" group. We can then add the following line to the ``new_game()`` function in ``Main``:"
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:305
msgid "The ``call_group()`` function calls the named function on every node in a group - in this case we are telling every mob to delete itself."
msgstr ""

#: ../../docs/getting_started/first_2d_game/06.heads_up_display.rst:308
msgid "The game's mostly done at this point. In the next and last part, we'll polish it a bit by adding a background, looping music, and some keyboard shortcuts."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
