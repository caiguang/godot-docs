# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:6
msgid "Making main screen plugins"
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:9
msgid "What this tutorial covers"
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:11
msgid "Main screen plugins allow you to create new UIs in the central part of the editor, which appear next to the \"2D\", \"3D\", \"Script\", and \"AssetLib\" buttons. Such editor plugins are referred as \"Main screen plugins\"."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:16
msgid "This tutorial leads you through the creation of a basic main screen plugin. For the sake of simplicity, our main screen plugin will contain a single button that prints text to the console."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:21
msgid "Initializing the plugin"
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:23
msgid "First create a new plugin from the Plugins menu. For this tutorial, we'll put it in a folder called ``main_screen``, but you can use any name you'd like."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:26
msgid "The plugin script will come with ``_enter_tree()`` and ``_exit_tree()`` methods, but for a main screen plugin we need to add a few extra methods. Add five extra methods such that the script looks like this:"
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:100
msgid "The important part in this script is the ``_has_main_screen()`` function, which is overloaded so it returns ``true``. This function is automatically called by the editor on plugin activation, to tell it that this plugin adds a new center view to the editor. For now, we'll leave this script as-is and we'll come back to it later."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:107
msgid "Main screen scene"
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:109
msgid "Create a new scene with a root node derived from ``Control`` (for this example plugin, we'll make the root node a ``CenterContainer``). Select this root node, and in the viewport, click the ``Layout`` menu and select ``Full Rect``. You also need to enable the ``Expand`` vertical size flag in the inspector. The panel now uses all the space available in the main viewport."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:116
msgid "Next, let's add a button to our example main screen plugin. Add a ``Button`` node, and set the text to \"Print Hello\" or similar. Add a script to the button like this:"
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:144
msgid "Then connect the \"pressed\" signal to itself. If you need help with signals, see the :ref:`doc_signals` article."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:147
msgid "We are done with the main screen panel. Save the scene as ``main_panel.tscn``."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:150
msgid "Update the plugin script"
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:152
msgid "We need to update the ``main_screen_plugin.gd`` script so the plugin instances our main panel scene and places it where it needs to be. Here is the full plugin script:"
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:252
msgid "A couple of specific lines were added. ``MainPanel`` is a constant that holds a reference to the scene, and we instance it into `main_panel_instance`."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:255
msgid "The ``_enter_tree()`` function is called before ``_ready()``. This is where we instance the main panel scene, and add them as children of specific parts of the editor. We use ``EditorInterface.get_editor_main_screen()`` to obtain the main editor screen and add our main panel instance as a child to it. We call the ``_make_visible(false)`` function to hide the main panel so it doesn't compete for space when first activating the plugin."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:262
msgid "The ``_exit_tree()`` function is called when the plugin is deactivated. If the main screen still exists, we call ``queue_free()`` to free the instance and remove it from memory."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:266
msgid "The ``_make_visible()`` function is overridden to hide or show the main panel as needed. This function is automatically called by the editor when the user clicks on the main viewport buttons at the top of the editor."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:270
msgid "The ``_get_plugin_name()`` and ``_get_plugin_icon()`` functions control the displayed name and icon for the plugin's main viewport button."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:273
msgid "Another function you can add is the ``handles()`` function, which allows you to handle a node type, automatically focusing the main screen when the type is selected. This is similar to how clicking on a 3D node will automatically switch to the 3D viewport."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:279
msgid "Try the plugin"
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:281
msgid "Activate the plugin in the Project Settings. You'll observe a new button next to 2D, 3D, Script above the main viewport. Clicking it will take you to your new main screen plugin, and the button in the middle will print text."
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:285
msgid "If you would like to try a finished version of this plugin, check out the plugin demos here: https://github.com/godotengine/godot-demo-projects/tree/master/plugins"
msgstr ""

#: ../../docs/tutorials/plugins/editor/making_main_screen_plugins.rst:289
msgid "If you would like to see a more complete example of what main screen plugins are capable of, check out the 2.5D demo projects here: https://github.com/godotengine/godot-demo-projects/tree/master/misc/2.5d"
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
