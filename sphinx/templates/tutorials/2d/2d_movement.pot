# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/2d/2d_movement.rst:4
msgid "2D movement overview"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:7
msgid "Introduction"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:9
msgid "Every beginner has been there: \"How do I move my character?\" Depending on the style of game you're making, you may have special requirements, but in general the movement in most 2D games is based on a small number of designs."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:13
msgid "We'll use :ref:`CharacterBody2D <class_CharacterBody2D>` for these examples, but the principles will apply to other node types (Area2D, RigidBody2D) as well."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:19
msgid "Setup"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:21
msgid "Each example below uses the same scene setup. Start with a ``CharacterBody2D`` with two children: ``Sprite2D`` and ``CollisionShape2D``. You can use the Godot icon (\"icon.png\") for the Sprite2D's texture or use any other 2D image you have."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:25
msgid "Open ``Project -> Project Settings`` and select the \"Input Map\" tab. Add the following input actions (see :ref:`InputEvent <doc_inputevent>` for details):"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:31
msgid "8-way movement"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:33
msgid "In this scenario, you want the user to press the four directional keys (up/left/down/right or W/A/S/D) and move in the selected direction. The name \"8-way movement\" comes from the fact that the player can move diagonally by pressing two keys at the same time."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:39
msgid "Add a script to the character body and add the following code:"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:79
msgid "In the ``get_input()`` function, we use :ref:`Input <class_Input>` ``get_vector()`` to check for the four key events and sum return a direction vector."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:82
msgid "We can then set our velocity by multiplying this direction vector, which has a length of ``1``, by our desired speed."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:85
msgid "If you've never used vector math before, or need a refresher, you can see an explanation of vector usage in Godot at :ref:`doc_vector_math`."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:90
msgid "If the code above does nothing when you press the keys, double-check that you've set up input actions correctly as described in the :ref:`doc_2d_movement_setup` part of this tutorial."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:95
msgid "Rotation + movement"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:97
msgid "This type of movement is sometimes called \"Asteroids-style\" because it resembles how that classic arcade game worked. Pressing left/right rotates the character, while up/down moves it forward or backward in whatever direction it's facing."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:150
msgid "Here we've added two variables to track our rotation direction and speed. The rotation is applied directly to the body's ``rotation`` property."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:153
msgid "To set the velocity, we use the body's ``transform.x`` which is a vector pointing in the body's \"forward\" direction, and multiply that by the speed."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:157
msgid "Rotation + movement (mouse)"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:159
msgid "This style of movement is a variation of the previous one. This time, the direction is set by the mouse position instead of the keyboard. The character will always \"look at\" the mouse pointer. The forward/back inputs remain the same, however."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:202
msgid "Here we're using the :ref:`Node2D <class_Node2D>` ``look_at()`` method to point the player towards the mouse's position. Without this function, you could get the same effect by setting the angle like this:"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:217
msgid "Click-and-move"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:219
msgid "This last example uses only the mouse to control the character. Clicking on the screen will cause the player to move to the target location."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:274
msgid "Note the ``distance_to()`` check we make prior to movement. Without this test, the body would \"jitter\" upon reaching the target position, as it moves slightly past the position and tries to move back, only to move too far and repeat."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:279
msgid "Uncommenting the ``look_at()`` line will also turn the body to point in its direction of motion if you prefer."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:282
msgid "This technique can also be used as the basis of a \"following\" character. The ``target`` position can be that of any object you want to move to."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:286
msgid "Summary"
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:288
msgid "You may find these code samples useful as starting points for your own projects. Feel free to use them and experiment with them to see what you can make."
msgstr ""

#: ../../docs/tutorials/2d/2d_movement.rst:291
msgid "You can download this sample project here: `2d_movement_starter.zip <https://github.com/godotengine/godot-docs-project-starters/releases/download/latest-4.x/2d_movement_starter.zip>`_"
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
