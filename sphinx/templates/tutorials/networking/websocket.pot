# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/networking/websocket.rst:6
msgid "WebSocket"
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:9
msgid "HTML5 and WebSocket"
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:11
msgid "The WebSocket protocol was standardized in 2011 with the original goal of allowing browsers to create stable and bidirectional connections with a server. Before that, browsers used to only support HTTPRequests, which is not well-suited for bidirectional communication."
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:14
msgid "The protocol is message based and a very powerful tool to send push notifications to browsers, and has been used to implement chats, turn-based games, etc. It still uses a TCP connection, which is good for reliability but not for latency, so not good for real-time applications like VoIP and fast-paced games (see :ref:`WebRTC <doc_webrtc>` for those use cases)."
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:16
msgid "Due to its simplicity, its wide compatibility, and being easier to use than a raw TCP connection, WebSocket soon started to spread outside the browsers, in native applications as a mean to communicate with network servers."
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:18
msgid "Godot supports WebSocket in both native and HTML5 exports."
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:21
msgid "Using WebSocket in Godot"
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:23
msgid "WebSocket is implemented in Godot via :ref:`WebSocketPeer <class_WebSocketPeer>`. The WebSocket implementation is compatible with the High Level Multiplayer. See section on :ref:`high-level multiplayer <doc_high_level_multiplayer>` for more details."
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:27
msgid "When exporting to Android, make sure to enable the ``INTERNET`` permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android."
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:33
msgid "Minimal client example"
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:35
msgid "This example will show you how to create a WebSocket connection to a remote server, and how to send and receive data."
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:88
msgid "This will print:"
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:96
msgid "Minimal server example"
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:98
msgid "This example will show you how to create a WebSocket server that listens for remote connections, and how to send and receive data."
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:154
msgid "This will print (when a client connects) something similar to this:"
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:162
msgid "Advanced chat demo"
msgstr ""

#: ../../docs/tutorials/networking/websocket.rst:164
msgid "A more advanced chat demo which optionally uses the multiplayer mid-level abstraction and a high level multiplayer demo are available in the `godot demo projects <https://github.com/godotengine/godot-demo-projects>`_ under `networking/websocket_chat` and `networking/websocket_multiplayer`."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
