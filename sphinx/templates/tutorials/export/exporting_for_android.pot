# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/export/exporting_for_android.rst:4
msgid "Exporting for Android"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:9
msgid "This page describes how to export a Godot project to Android. If you're looking to compile export template binaries from source instead, read :ref:`doc_compiling_for_android`."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:13
msgid "Exporting for Android has fewer requirements than compiling Godot for Android. The following steps detail what is needed to set up the Android SDK and the engine."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:18
msgid "Projects written in C# can be exported to Android as of Godot 4.2, but support is experimental and :ref:`some limitations apply <doc_c_sharp_platforms>`."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:22
msgid "Install OpenJDK 17"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:24
msgid "Download and install `OpenJDK 17 <https://adoptium.net/temurin/releases/?variant=openjdk17>`__."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:27
msgid "Download the Android SDK"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:29
msgid "Download and install the Android SDK."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:31
msgid "You can install the Android SDK using `Android Studio version 4.1 or later <https://developer.android.com/studio/>`__."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:33
msgid "Run it once to complete the SDK setup using these `instructions <https://developer.android.com/studio/intro/update#sdk-manager>`__."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:34
msgid "Ensure that the `required packages <https://developer.android.com/studio/intro/update#recommended>`__ are installed as well."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:36
msgid "Android SDK Platform-Tools version 30.0.5 or later"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:37
msgid "Android SDK Build-Tools version 33.0.2"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:38
msgid "Android SDK Platform 33"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:39
msgid "Android SDK Command-line Tools (latest)"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:40
msgid "CMake version 3.10.2.4988404"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:41
msgid "NDK version r23c (23.2.8568313)"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:43
msgid "Alternatively, you can install the Android SDK using the `command line tools <https://developer.android.com/studio/#command-line-tools-only>`__."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:45
msgid "Once the command line tools are installed, run the `sdkmanager <https://developer.android.com/studio/command-line/sdkmanager>`__ command to complete the setup process:"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:53
msgid "If you are using Linux, **do not use an Android SDK provided by your distribution's repositories as it will often be outdated**."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:58
msgid "Create a debug.keystore"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:60
msgid "Android needs a debug keystore file to install to devices and distribute non-release APKs. If you have used the SDK before and have built projects, ant or eclipse probably generated one for you (in the ``~/.android`` directory on Linux and macOS, in the ``C:\\Users\\<user>\\.android\\`` directory on Windows)."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:65
msgid "If you can't find it or need to generate one, the keytool command from the JDK can be used for this purpose::"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:70
msgid "This will create a ``debug.keystore`` file in your current directory. You should move it to a memorable location such as ``%USERPROFILE%\\.android\\``, because you will need its location in a later step. For more information on ``keytool`` usage, see `this Q&A article <https://ask.godotengine.org/21349/jdk-android-file-missing>`__."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:74
msgid "It is important that the password is the same for the keystore and the key. This is a `known Android studio issue <https://developer.android.com/studio/known-issues#ki-key-keystore-warning>`__ that also affects Godot projects."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:79
msgid "Setting it up in Godot"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:81
msgid "Enter the Editor Settings screen. This screen contains the editor settings for the user account in the computer (it's independent of the project)."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:87
msgid "Scroll down to the section where the Android settings are located:"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:91
msgid "In that screen, 2 paths need to be set:"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:93
msgid "The ``Android Sdk Path`` should be the location where the Android SDK was installed. - For example ``%LOCALAPPDATA%\\Android\\Sdk\\`` on Windows or ``/Users/$USER/Library/Android/sdk/`` on macOS."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:96
msgid "The debug ``.keystore`` file - It can be found in the folder where you put the ``debug.keystore`` file you created above."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:99
msgid "Once that is configured, everything is ready to export to Android!"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:103
msgid "If you get an error saying *\"Could not install to device.\"*, make sure you do not have an application with the same Android package name already installed on the device (but signed with a different key)."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:107
msgid "If you have an application with the same Android package name but a different signing key already installed on the device, you **must** remove the application in question from the Android device before exporting to Android again."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:113
msgid "Providing launcher icons"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:115
msgid "Launcher icons are used by Android launcher apps to represent your application to users. Godot only requires high-resolution icons (for ``xxxhdpi`` density screens) and will automatically generate lower-resolution variants."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:117
msgid "There are two types of icons required by Godot:"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:119
msgid "**Main Icon:** The \"classic\" icon. This will be used on all Android versions up to Android 8 (Oreo), exclusive. Must be at least 192×192 px."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:120
msgid "**Adaptive Icons:** Starting from Android 8 (inclusive), `Adaptive Icons <https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive>`_ were introduced. Applications will need to include separate background and foreground icons to have a native look. The user's launcher application will control the icon's animation and masking. Must be at least 432×432 px."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:122
msgid "It's important to adhere to some rules when designing adaptive icons. `Google Design has provided a nice article <https://medium.com/google-design/designing-adaptive-icons-515af294c783>`_ that helps to understand those rules and some of the capabilities of adaptive icons."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:124
msgid "The most important adaptive icon design rule is to have your icon critical elements inside the safe zone: a centered circle with a diameter of 66dp (264 pixels on ``xxxhdpi``) to avoid being clipped by the launcher."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:126
msgid "If you don't provide some of the requested icons, Godot will replace them using a fallback chain, trying the next in line when the current one fails:"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:128
msgid "**Main Icon:** Provided main icon -> Project icon -> Default Godot main icon."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:129
msgid "**Adaptive Icon Foreground:** Provided foreground icon -> Provided main icon -> Project icon -> Default Godot foreground icon."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:130
msgid "**Adaptive Icon Background:** Provided background icon -> Default Godot background icon."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:132
msgid "It's highly recommended to provide all the requested icons with their specified resolutions. This way, your application will look great on all Android devices and versions."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:136
msgid "Exporting for Google Play Store"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:138
msgid "Uploading an APK to Google's Play Store requires you to sign using a non-debug keystore file; such file can be generated like this:"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:145
msgid "This keystore and key are used to verify your developer identity, remember the password and keep it in a safe place! Use Google's Android Developer guides to learn more about `APK signing <https://developer.android.com/studio/publish/app-signing>`__."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:148
msgid "Now fill in the following forms in your Android Export Presets:"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:152
msgid "**Release:** Enter the path to the keystore file you just generated."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:153
msgid "**Release User:** Replace with the key alias."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:154
msgid "**Release Password:** Key password. Note that the keystore password and the key password currently have to be the same."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:156
msgid "Don't forget to uncheck the **Export With Debug** checkbox while exporting."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:161
msgid "Optimizing the APK size"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:163
msgid "By default, the APK will contain native libraries for both ARMv7 and ARMv8 architectures. This increases its size significantly. To create a smaller APK, uncheck either **Armeabi-v 7a** or **Arm 64 -v 8a** in your project's Android export preset. This will create an APK that only contains a library for a single architecture. Note that applications targeting ARMv7 can also run on ARMv8 devices, but the opposite is not true."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:170
msgid "Since August 2019, Google Play requires all applications to be available in 64-bit form. This means you cannot upload an APK that contains *just* an ARMv7 library. To solve this, you can upload several APKs to Google Play using its `Multiple APK support <https://developer.android.com/google/play/publishing/multiple-apks>`__. Each APK should target a single architecture; creating an APK for ARMv7 and ARMv8 is usually sufficient to cover most devices in use today."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:177
msgid "You can optimize the size further by compiling an Android export template with only the features you need. See :ref:`doc_optimizing_for_size` for more information."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:182
msgid "Environment variables"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:184
msgid "You can use the following environment variables to set export options outside of the editor. During the export process, these override the values that you set in the export menu."
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:188
msgid "Android export environment variables"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:191
msgid "Export option"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:192
msgid "Environment variable"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:193
msgid "Encryption / Encryption Key"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:194
msgid "``GODOT_SCRIPT_ENCRYPTION_KEY``"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:195
msgid "Options / Keystore / Debug"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:196
msgid "``GODOT_ANDROID_KEYSTORE_DEBUG_PATH``"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:197
msgid "Options / Keystore / Debug User"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:198
msgid "``GODOT_ANDROID_KEYSTORE_DEBUG_USER``"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:199
msgid "Options / Keystore / Debug Password"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:200
msgid "``GODOT_ANDROID_KEYSTORE_DEBUG_PASSWORD``"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:201
msgid "Options / Keystore / Release"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:202
msgid "``GODOT_ANDROID_KEYSTORE_RELEASE_PATH``"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:203
msgid "Options / Keystore / Release User"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:204
msgid "``GODOT_ANDROID_KEYSTORE_RELEASE_USER``"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:205
msgid "Options / Keystore / Release Password"
msgstr ""

#: ../../docs/tutorials/export/exporting_for_android.rst:206
msgid "``GODOT_ANDROID_KEYSTORE_RELEASE_PASSWORD``"
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
