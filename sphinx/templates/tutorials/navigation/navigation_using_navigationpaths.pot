# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:4
msgid "Using NavigationPaths"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:7
msgid "Obtaining a NavigationPath"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:9
msgid "Navigation paths can be directly queried from the NavigationServer and do not require any additional nodes or objects as long as the navigation map has a navigation mesh to work with."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:12
msgid "To obtain a 2D path, use ``NavigationServer2D.map_get_path(map, from, to, optimize, navigation_layers)``."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:14
msgid "To obtain a 3D path, use ``NavigationServer3D.map_get_path(map, from, to, optimize, navigation_layers)``."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:16
msgid "For more customizable navigation path queries that require additional setup see :ref:`doc_navigation_using_navigationpathqueryobjects`."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:18
msgid "One of the required parameters for the query is the RID of the navigation map. Each game world has a default navigation map automatically created. The default navigation maps can be retrieved with ``get_world_2d().get_navigation_map()`` from any Node2D inheriting node or ``get_world_3d().get_navigation_map()`` from any Node3D inheriting node. The second and third parameters are the starting position and the target position as Vector2 for 2D or Vector3 for 3D."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:24
msgid "If the ``optimized`` parameter is ``true``, path positions will be shortened along polygon corners with an additional funnel algorithm pass. This works well for free movement on navigation meshes with unequally sized polygons as the path will hug around corners along the polygon corridor found by the A* algorithm. With small cells the A* algorithm creates a very narrow funnel corridor that can create ugly corner paths when used with grids."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:30
msgid "If the ``optimized`` parameter is ``false``, path positions will be placed at the center of each polygon edge. This works well for pure grid movement on navigation meshes with equally sized polygons as the path will go through the center of the grid cells. Outside of grids due to polygons often covering large open areas with a single, long edge this can create paths with unnecessary long detours."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:65
msgid "A returned ``path`` by the NavigationServer will be a ``PackedVector2Array`` for 2D or a ``PackedVector3Array`` for 3D. These are just a memory-optimized ``Array`` of vector positions. All position vectors inside the array are guaranteed to be inside a NavigationPolygon or NavigationMesh. The path array, if not empty, has the navigation mesh position closest to the starting position at the first index ``path[0]`` position. The closest available navigation mesh position to the target position is the last index ``path[path.size()-1]`` position. All indexes between are the path points that an actor should follow to reach the target without leaving the navigation mesh."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:74
msgid "If the target position is on a different navigation mesh that is not merged or connected the navigation path will lead to the closest possible position on the starting position navigation mesh."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpaths.rst:77
msgid "The following script moves a Node3D inheriting node along a navigation path using the default navigation map by setting the target position with ``set_movement_target()``."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
