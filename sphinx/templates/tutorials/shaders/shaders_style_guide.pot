# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:4
msgid "Shaders style guide"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:6
msgid "This style guide lists conventions to write elegant shaders. The goal is to encourage writing clean, readable code and promote consistency across projects, discussions, and tutorials. Hopefully, this will also support the development of auto-formatting tools."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:11
msgid "Since the Godot shader language is close to C-style languages and GLSL, this guide is inspired by Godot's own GLSL formatting. You can view an example of a GLSL file in Godot's source code `here <https://github.com/godotengine/godot/blob/master/drivers/gles3/shaders/copy.glsl>`__."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:16
msgid "Style guides aren't meant as hard rulebooks. At times, you may not be able to apply some of the guidelines below. When that happens, use your best judgment, and ask fellow developers for insights."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:20
msgid "In general, keeping your code consistent in your projects and within your team is more important than following this guide to a tee."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:23
msgid "Godot's built-in shader editor uses a lot of these conventions by default. Let it help you."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:26
msgid "Here is a complete shader example based on these guidelines:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:51
msgid "Formatting"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:54
msgid "Encoding and special characters"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:56
msgid "Use line feed (**LF**) characters to break lines, not CRLF or CR. *(editor default)*"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:57
msgid "Use one line feed character at the end of each file. *(editor default)*"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:58
msgid "Use **UTF-8** encoding without a `byte order mark <https://en.wikipedia.org/wiki/Byte_order_mark>`_. *(editor default)*"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:59
msgid "Use **Tabs** instead of spaces for indentation. *(editor default)*"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:62
msgid "Indentation"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:64
msgid "Each indent level should be one tab greater than the block containing it."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:66
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:85
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:112
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:163
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:195
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:227
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:257
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:281
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:332
msgid "**Good**:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:74
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:93
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:122
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:172
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:202
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:235
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:265
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:287
#: ../../docs/tutorials/shaders/shaders_style_guide.rst:346
msgid "**Bad**:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:82
msgid "Use 2 indent levels to distinguish continuation lines from regular code blocks."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:103
msgid "Line breaks and blank lines"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:105
msgid "For a general indentation rule, follow `the \"1TBS Style\" <https://en.wikipedia.org/wiki/Indentation_style#Variant:_1TBS_(OTBS)>`_ which recommends placing the brace associated with a control statement on the same line. Always use braces for statements, even if they only span one line. This makes them easier to refactor and avoids mistakes when adding more lines to an ``if`` statement or similar."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:133
msgid "Blank lines"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:135
msgid "Surround function definitions with one (and only one) blank line:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:147
msgid "Use one (and only one) blank line inside functions to separate logical sections."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:150
msgid "Line length"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:152
msgid "Keep individual lines of code under 100 characters."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:154
msgid "If you can, try to keep lines under 80 characters. This helps to read the code on small displays and with two shaders opened side-by-side in an external text editor. For example, when looking at a differential revision."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:159
msgid "One statement per line"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:161
msgid "Never combine multiple statements on a single line."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:180
msgid "The only exception to that rule is the ternary operator:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:190
msgid "Comment spacing"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:192
msgid "Regular comments should start with a space, but not code that you comment out. This helps differentiate text comments from disabled code."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:209
msgid "Don't use multiline comment syntax if your comment can fit on a single line:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:217
msgid "In the shader editor, to make the selected code a comment (or uncomment it), press :kbd:`Ctrl + K`. This feature adds or removes ``//`` at the start of the selected lines."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:222
msgid "Whitespace"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:224
msgid "Always use one space around operators and after commas. Also, avoid extraneous spaces in function calls."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:243
msgid "Don't use spaces to align expressions vertically:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:251
msgid "Floating-point numbers"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:253
msgid "Always specify at least one digit for both the integer and fractional part. This makes it easier to distinguish floating-point numbers from integers, as well as distinguishing numbers greater than 1 from those lower than 1."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:274
msgid "Accessing vector members"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:276
msgid "Use ``r``, ``g``, ``b``, and ``a`` when accessing a vector's members if it contains a color. If the vector contains anything else than a color, use ``x``, ``y``, ``z``, and ``w``. This allows those reading your code to better understand what the underlying data represents."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:294
msgid "Naming conventions"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:296
msgid "These naming conventions follow the Godot Engine style. Breaking these will make your code clash with the built-in naming conventions, leading to inconsistent code."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:301
msgid "Functions and variables"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:303
msgid "Use snake\\_case to name functions and variables:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:312
msgid "Constants"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:314
msgid "Write constants with CONSTANT\\_CASE, that is to say in all caps with an underscore (\\_) to separate words:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:322
msgid "Preprocessor directives"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:324
msgid ":ref:`doc_shader_preprocessor` directives should be written in CONSTANT__CASE. Directives should be written without any indentation before them, even if nested within a function."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:328
msgid "To preserve the natural flow of indentation when shader errors are printed to the console, extra indentation should **not** be added within ``#if``, ``#ifdef`` or ``#ifndef`` blocks:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:361
msgid "Code order"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:363
msgid "We suggest to organize shader code this way:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:380
msgid "We optimized the order to make it easy to read the code from top to bottom, to help developers reading the code for the first time understand how it works, and to avoid errors linked to the order of variable declarations."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:384
msgid "This code order follows two rules of thumb:"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:386
msgid "Metadata and properties first, followed by methods."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:387
msgid "\"Public\" comes before \"private\". In a shader language's context, \"public\" refers to what's easily adjustable by the user (uniforms)."
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:391
msgid "Local variables"
msgstr ""

#: ../../docs/tutorials/shaders/shaders_style_guide.rst:393
msgid "Declare local variables as close as possible to their first use. This makes it easier to follow the code, without having to scroll too much to find where the variable was declared."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
