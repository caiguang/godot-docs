# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to editor development"
msgstr "Godot 開發簡介"

msgid "On this page, you will learn:"
msgstr "在本指南中，我們將學到："

msgid "The **design decisions** behind the Godot editor."
msgstr "Godot 編輯器背後的**設計決策**。"

msgid "How to work efficiently on the Godot editor's C++ code."
msgstr "如何高效地處理Godot編輯器的C++程式碼。"

msgid ""
"This guide is aimed at current or future engine contributors. To create "
"editor plugins in GDScript, see :ref:`doc_making_plugins` instead."
msgstr ""
"本指南針對的是目前或未來的引擎貢獻者。要在GDScript中建立編輯器外掛程式，請參"
"見 :ref:`doc_making_plugins` 。"

msgid ""
"If you are new to Godot, we recommended you to read :ref:"
"`doc_godot_design_philosophy` before continuing. Since the Godot editor is a "
"Godot project written in C++, much of the engine's philosophy applies to the "
"editor."
msgstr ""
"如果你是 Godot 的新手，建議你在繼續之前先閱讀 :ref:"
"`doc_godot_design_philosophy` 。由於 Godot 編輯器是用 C++ 編寫的 Godot 專案，"
"引擎的許多理念同樣適用於編輯器。"

msgid "Technical choices"
msgstr "技術選擇"

msgid ""
"The Godot editor is drawn using Godot's renderer and :ref:`UI system "
"<doc_user_interface>`. It does *not* rely on a toolkit such as GTK or Qt. "
"This is similar in spirit to software like Blender. While using toolkits "
"makes it easier to achieve a \"native\" appearance, they are also quite "
"heavy and their licensing is not compatible with Godot's."
msgstr ""
"Godot 編輯器使用 Godot 的算繪器和 :ref:`UI 系統 <toc-gui-basics>`繪製。它*不*"
"依賴 GTK 或 Qt 這樣的工具包。這與 Blender 等軟體的精神相似。雖然使用工具包可"
"以更容易地實作“原生”外觀，但它們相當笨重，許可也與 Godot 的許可不相容。"

msgid ""
"The editor is fully written in C++. It can't contain any GDScript or C# code."
msgstr "該編輯器完全是用C++編寫的。它不能包含任何GDScript或C#程式碼。"

msgid "Directory structure"
msgstr "檔案結構"

msgid ""
"The editor's code is fully self-contained in the `editor/ <https://github."
"com/godotengine/godot/tree/master/editor>`__ folder of the Godot source "
"repository."
msgstr ""
"clang-format 所使用的規則列在 Godot 儲存庫中的 `.clang-format <https://"
"github.com/godotengine/godot/blob/master/.clang-format>`__ 檔案內。"

msgid ""
"Some editor functionality is also implemented via :ref:`modules "
"<doc_custom_modules_in_cpp>`. Some of these are only enabled in editor "
"builds to decrease the binary size of export templates. See the `modules/ "
"<https://github.com/godotengine/godot/tree/master/modules>`__ folder in the "
"Godot source repository."
msgstr ""
"一些編輯器的功能也是通過 :ref:`modules <doc_custom_modules_in_c++>` 實作的。"
"其中一些隻在編輯器建構中啟用，以減少匯出範本的二進位檔案大小。參見Godot源碼庫"
"中的 `modules/ <https://github.com/godotengine/godot/tree/master/modules>`__ "
"資料夾。"

msgid "Some important files in the editor are:"
msgstr "編輯器中的一些重要檔案包括："

msgid ""
"`editor/editor_node.cpp <https://github.com/godotengine/godot/blob/master/"
"editor/editor_node.cpp>`__: Main editor initialization file. Effectively the "
"\"main scene\" of the editor."
msgstr ""
"`core/io/resource_loader.cpp <https://github.com/godotengine/godot/blob/"
"master/core/io/resource_loader.cpp>`_"

msgid ""
"`editor/project_manager.cpp <https://github.com/godotengine/godot/blob/"
"master/editor/project_manager.cpp>`__: Main Project Manager initialization "
"file. Effectively the \"main scene\" of the Project Manager."
msgstr ""
"`core/io/resource_loader.cpp <https://github.com/godotengine/godot/blob/"
"master/core/io/resource_loader.cpp>`_"

msgid ""
"`editor/plugins/canvas_item_editor_plugin.cpp <https://github.com/"
"godotengine/godot/blob/master/editor/plugins/canvas_item_editor_plugin."
"cpp>`__: The 2D editor viewport and related functionality (toolbar at the "
"top, editing modes, overlaid helpers/panels, …)."
msgstr ""
"`editor/plugins/canvas_item_editor_plugin.cpp <https://github.com/"
"godotengine/godot/blob/3.x/editor/plugins/canvas_item_editor_plugin.cpp>`__："
"2D 編輯器的視口和相關功能（頂部的工具列、編輯模式、重疊的助手/面板……）。"

msgid ""
"`editor/plugins/node_3d_editor_plugin.cpp <https://github.com/godotengine/"
"godot/blob/master/editor/plugins/node_3d_editor_plugin.cpp>`__: The 3D "
"editor viewport and related functionality (toolbar at the top, editing "
"modes, overlaid panels, …)."
msgstr ""
"`core/io/resource_loader.cpp <https://github.com/godotengine/godot/blob/"
"master/core/io/resource_loader.cpp>`_"

msgid ""
"`editor/plugins/node_3d_editor_gizmos.cpp <https://github.com/godotengine/"
"godot/blob/master/editor/plugins/node_3d_editor_gizmos.cpp>`__: Where the 3D "
"editor gizmos are defined and drawn. This file doesn't have a 2D counterpart "
"as 2D gizmos are drawn by the nodes themselves."
msgstr ""
"`editor/spatial_editor_gizmos.cpp <https://github.com/godotengine/godot/"
"blob/3.x/editor/spatial_editor_gizmos.cpp>`__：定義和繪製 3D 編輯器小工具的地"
"方。這個檔沒有對應的 2D 檔，因為 2D 的小工具是由節點自己繪製的。"

msgid "Editor dependencies in ``scene/`` files"
msgstr "``scene/`` 中檔對編輯器的依賴性"

msgid ""
"When working on an editor feature, you may have to modify files in Godot's "
"GUI nodes, which you can find in the ``scene/`` folder."
msgstr ""
"在處理編輯器功能時，你可能需要修改Godot的GUI節點中的檔，你可以在 ``scene/`` "
"資料夾中找到。"

msgid ""
"One rule to keep in mind is that you must **not** introduce new dependencies "
"to ``editor/`` includes in other folders such as ``scene/``. This applies "
"even if you use ``#ifdef TOOLS_ENABLED``."
msgstr ""
"需要記住的一條規則是，你**不能**給 ``editor/`` 在其他資料夾中引入新的依賴關"
"係，如 ``scene/``。即使你使用 ``#ifdef TOOLS_ENABLED`` 也是如此。"

msgid ""
"To make the codebase easier to follow and more self-contained, the allowed "
"dependency order is:"
msgstr "為了使程式碼庫更容易操作，更自成一體，允許的依賴性順序是:"

msgid "``editor/`` -> ``scene/`` -> ``servers/`` -> ``core/``"
msgstr "``editor/`` -> ``scene/`` -> ``servers/`` -> ``core/``"

msgid ""
"This means that files in ``editor/`` can depend on includes from ``scene/``, "
"``servers/``, and ``core/``. But, for example, while ``scene/`` can depend "
"on includes from ``servers/`` and ``core/``, it cannot depend on includes "
"from ``editor/``."
msgstr ""
"這意味著 ``editor/`` 中的檔可以依賴 ``scene/``, ``servers/``, 和 ``core/`` 中"
"的包含。但是，雖然 ``scene/`` 可以依賴 ``servers/`` 和 ``core/`` 的內容，但它"
"不能依賴 ``editor/`` 的內容。"

msgid ""
"Currently, there are some dependencies to ``editor/`` includes in ``scene/`` "
"files, but `they are in the process of being removed <https://github.com/"
"godotengine/godot/issues/53295>`__."
msgstr ""
"目前，在 ``scene/`` 檔中存在一些對 ``editor/`` 的依賴，但 `它們正在被刪除 "
"<https://github.com/godotengine/godot/issues/29730>`__ 。"

msgid "Development tips"
msgstr "開發"

msgid ""
"To iterate quickly on the editor, we recommend to set up a test project and :"
"ref:`open it from the command line <doc_command_line_tutorial>` after "
"compiling the editor. This way, you don't have to go through the Project "
"Manager every time you start Godot."
msgstr ""
"為了快速反覆運算編輯器，我們建議建立一個測試專案，並在編譯編輯器後:ref:`從命"
"令列打開 <doc_command_line_tutorial>`。這樣，你就不必在每次啟動 Godot 時都要"
"經過專案管理器了。"

msgid "Translation status"
msgstr "翻譯狀態"
