# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using NavigationPaths"
msgstr "顯示導覽"

#, fuzzy
msgid "Obtaining a NavigationPath"
msgstr "獲取導覽路徑"

#, fuzzy
msgid ""
"Navigation paths can be directly queried from the NavigationServer and do "
"not require any additional nodes or objects as long as the navigation map "
"has a navigation mesh to work with."
msgstr ""
"導覽路徑可以直接從導覽伺服器查詢，不需要任何額外的節點或對象，只要導覽地圖有"
"一個導覽網格可以使用。"

msgid ""
"To obtain a 2D path, use ``NavigationServer2D.map_get_path(map, from, to, "
"optimize, navigation_layers)``."
msgstr ""
"要獲取 2D 路徑，請使用 ``NavigationServer2D.map_get_path(地圖, 起點, 終點, 優"
"化, 導覽層)``。"

msgid ""
"To obtain a 3D path, use ``NavigationServer3D.map_get_path(map, from, to, "
"optimize, navigation_layers)``."
msgstr ""
"要獲取 3D 路徑，請使用 ``NavigationServer3D.map_get_path(地圖, 起點, 終點, 優"
"化, 導覽層)``。"

msgid ""
"For more customizable navigation path queries that require additional setup "
"see :ref:`doc_navigation_using_navigationpathqueryobjects`."
msgstr ""
"有關需要額外設定的更多可自訂導覽路徑查詢，請參閱 "
"doc_navigation_using_navigationpathqueryobjects。"

#, fuzzy
msgid ""
"One of the required parameters for the query is the RID of the navigation "
"map. Each game world has a default navigation map automatically created. The "
"default navigation maps can be retrieved with ``get_world_2d()."
"get_navigation_map()`` from any Node2D inheriting node or ``get_world_3d()."
"get_navigation_map()`` from any Node3D inheriting node. The second and third "
"parameters are the starting position and the target position as Vector2 for "
"2D or Vector3 for 3D."
msgstr ""
"查詢所需的參數之一是導覽地圖的 RID。每個遊戲「世界」都會自動建立一個預設導覽"
"地圖。預設導覽地圖可以透過任何 Node2D 繼承節點的 ``get_world_2d()."
"get_navigation_map()`` 或任何 Node3D 繼承節點的 ``get_world_3d()."
"get_navigation_map()`` 來檢索。第二個和第三個參數是起始位置和目標位置，如 2D "
"的 Vector2 或 3D 的 Vector3。"

#, fuzzy
msgid ""
"If the ``optimized`` parameter is ``true``, path positions will be shortened "
"along polygon corners with an additional funnel algorithm pass. This works "
"well for free movement on navigation meshes with unequally sized polygons as "
"the path will hug around corners along the polygon corridor found by the A* "
"algorithm. With small cells the A* algorithm creates a very narrow funnel "
"corridor that can create ugly corner paths when used with grids."
msgstr ""
"如果“optimized”參數為“true”，則透過額外的漏斗演算法傳遞，路徑位置將沿著多邊形"
"角縮短。這對於具有不等大小的多邊形的導覽網格上的自由移動非常有效，因為路徑將"
"沿著 A* 演算法找到的多邊形走廊擁抱拐角。對於小單元格，A* 演算法會建立一個非常"
"狹窄的漏斗走廊，與網格一起使用時可能會建立醜陋的角路徑。"

#, fuzzy
msgid ""
"If the ``optimized`` parameter is ``false``, path positions will be placed "
"at the center of each polygon edge. This works well for pure grid movement "
"on navigation meshes with equally sized polygons as the path will go through "
"the center of the grid cells. Outside of grids due to polygons often "
"covering large open areas with a single, long edge this can create paths "
"with unnecessary long detours."
msgstr ""
"如果“optimized”參數為“false”，則路徑位置將放置在每個多邊形邊的中心。這對於具"
"有相同大小多邊形的導覽網格上的純網格移動非常有效，因為路徑將穿過網格單元的中"
"心。在網格之外，由於多邊形通常用單一長邊覆蓋大片開放區域，這可能會建立具有不"
"必要的長彎路的路徑。"

#, fuzzy
msgid ""
"A returned ``path`` by the NavigationServer will be a ``PackedVector2Array`` "
"for 2D or a ``PackedVector3Array`` for 3D. These are just a memory-optimized "
"``Array`` of vector positions. All position vectors inside the array are "
"guaranteed to be inside a NavigationPolygon or NavigationMesh. The path "
"array, if not empty, has the navigation mesh position closest to the "
"starting position at the first index ``path[0]`` position. The closest "
"available navigation mesh position to the target position is the last index "
"``path[path.size()-1]`` position. All indexes between are the path points "
"that an actor should follow to reach the target without leaving the "
"navigation mesh."
msgstr ""
"導覽伺服器返回的「路徑」將是 2D 的「PackedVector2Array」或 3D 的"
"「PackedVector3Array」。這些只是向量位置的記憶體優化“陣列”。陣列內的所有位置"
"向量都保證位於 NavigationPolygon 或 NavigationMesh 內。路徑陣列（如果不是空）"
"的導覽網格位置最接近第一個索引“path[0]”位置處的起始位置。距離目標位置最近的可"
"用導覽網格位置是最後一個索引「path[path.size()-1]」位置。之間的所有索引都是參"
"與者在不離開導覽網格的情況下到達目標時應遵循的路徑點。"

msgid ""
"If the target position is on a different navigation mesh that is not merged "
"or connected the navigation path will lead to the closest possible position "
"on the starting position navigation mesh."
msgstr ""
"如果目標位置位於未合併或連接的不同導覽網格上，則導覽路徑將通往起始位置導覽網"
"格上最接近的可能位置。"

msgid ""
"The following script moves a Node3D inheriting node along a navigation path "
"using the default navigation map by setting the target position with "
"``set_movement_target()``."
msgstr ""
"以下腳本透過使用「set_movement_target()」設定目標位置，使用預設導覽地圖沿著導"
"覽路徑移動 Node3D 繼承節點。"

msgid "Translation status"
msgstr "翻譯狀態"
