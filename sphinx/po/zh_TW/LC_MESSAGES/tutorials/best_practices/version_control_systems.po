# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Version control systems"
msgstr "版本控制系統"

msgid "Introduction"
msgstr "前言"

msgid ""
"Godot aims to be VCS-friendly and generate mostly readable and mergeable "
"files."
msgstr "Godot 的目標是做到 VCS 友好，生成的檔大多可讀、可合併。"

msgid "Version control plugins"
msgstr "版本控制系統"

msgid ""
"Godot also supports the use of version control systems in the editor itself. "
"However, version control in the editor requires a plugin for the specific "
"VCS you're using."
msgstr ""
"Godot 旨在對 VCS 友善並儘量產生高可讀性與可合併的檔案。Godot 也支援在編輯器中"
"使用版本控制系統。但在編輯器中使用版本控制系統需要安裝對應的外掛。可於 **[專"
"案] > [版本控制]** 中設定或關閉版本控制系統。"

msgid ""
"As of July 2023, there is only a Git plugin available, but the community may "
"create additional VCS plugins."
msgstr ""
"截至 2023 年 7 月，尚且只有一個 Git 外掛程式可用，但社區可能會建立其他的 VCS "
"外掛程式。"

msgid "Official Git plugin"
msgstr "官方 Git 外掛"

msgid ""
"Using Git from inside the editor is supported with an official plugin. You "
"can find the latest releases on `GitHub <https://github.com/godotengine/"
"godot-git-plugin/releases>`__."
msgstr ""
"可以使用官方外掛來在編輯器中使用 Git。可於 `此處 <https://github.com/"
"godotengine/godot-git-plugin/releases>`__ 取得最新版本 (該外掛不在素材庫中)。"
"關於如何使用 Git 外掛的說明文件可參考 `此處 (英文) <https://github.com/"
"godotengine/godot-git-plugin/wiki>`__ 。"

msgid ""
"Documentation on how to use the Git plugin can be found on its `wiki "
"<https://github.com/godotengine/godot-git-plugin/wiki>`__."
msgstr ""
"若想參與貢獻說明文件，則可在 `此處 <https://github.com/godotengine/godot-"
"docs>`_ 找到其儲存庫。"

msgid "Files to exclude from VCS"
msgstr "在版本控制系統中忽略的檔案"

msgid ""
"This lists files and folders that should be ignored from version control in "
"Godot 4.1 and later."
msgstr "這裡列出了 Godot 4.1 及更高版本中應從版本控制中被忽略的檔和資料夾。"

msgid ""
"The list of files of folders that should be ignored from version control in "
"Godot 3.x and Godot 4.0 is **entirely** different. This is important, as "
"Godot 3.x and 4.0 may store sensitive credentials in ``export_presets.cfg`` "
"(unlike Godot 4.1 and later)."
msgstr ""
"Godot 3.x 和 Godot 4.0 中的版本控制應忽略的資料夾檔列表 ** 完全 ** 不同。 這"
"點非常重要，因為 Godot 3.x 和 4.0 可能會將敏感憑據儲存在 ``export_presets."
"cfg`` 中（這與 Godot 4.1 及更高版本不同）。"

msgid ""
"If you are using Godot 3, check the ``3.5`` version of this documentation "
"page instead."
msgstr "如果你正在使用 Godot 3，請查看本頁說明文件的 ``3.5`` 版本。"

msgid ""
"There are some files and folders Godot automatically creates when opening a "
"project in the editor for the first time. To avoid bloating your version "
"control repository with generated data, you should add them to your VCS "
"ignore:"
msgstr ""
"當第一次在編輯器中打開專案時，Godot 會自動建立一些檔和資料夾。 為了避免生成的"
"資料使版本控制倉庫膨脹，你應該將它們新增到 VCS 忽略中："

msgid "``.godot/``: This folder stores various project cache data."
msgstr "``. godot/``：此資料夾儲存各種專案快取資料。"

msgid ""
"``*.translation``: These files are binary imported :ref:`translations "
"<doc_internationalizing_games>` generated from CSV files."
msgstr "``*.translation`` ：依據 CSV 檔產生，二進位匯入的翻譯。"

msgid ""
"You can make the Godot project manager generate version control metadata for "
"you automatically when creating a project. When choosing the **Git** option, "
"this creates ``.gitignore`` and ``.gitattributes`` files in the project root:"
msgstr ""
"你可以選擇在 Godot 專案管理器建立專案時自動生成版本控制中繼資料。當選擇 "
"**Git** 選項時，將在專案根目錄中建立 ``.gitignore`` 和 ``.gitattributes`` 檔"
"案："

msgid ""
"Creating version control metadata in the project manager's New Project dialog"
msgstr "在專案管理器的“新建專案”對話方塊中建立版本控制中繼資料"

msgid ""
"Creating version control metadata in the project manager's **New Project** "
"dialog"
msgstr "在專案管理器的 **新建專案** 對話方塊中建立版本控制中繼資料"

msgid ""
"In existing projects, select the **Project** menu at the top of the editor, "
"then choose **Version Control > Generate Version Control Metadata**. This "
"creates the same files as if the operation was performed in the project "
"manager."
msgstr ""
"在現有的專案中，選擇編輯器頂部的 **專案** 功能表，然後選擇 **版本控制 > 生成"
"版本控制中繼資料**。這將與在專案管理器中執行的操作一樣建立相同的檔。"

msgid "Working with Git on Windows"
msgstr "在 Windows 上使用 Git"

msgid ""
"Most Git for Windows clients are configured with the ``core.autocrlf`` set "
"to ``true``. This can lead to files unnecessarily being marked as modified "
"by Git due to their line endings being converted from LF to CRLF "
"automatically."
msgstr ""
"Windows 上大多數的 Git 使用者端都會將 ``core.autocrlf`` 設為 ``true`` 。這個"
"設定會使檔案被 Git 標記為已修改，因為這些檔案的行結尾會自動被轉換。最好更改這"
"個選項："

msgid "It is better to set this option as:"
msgstr "最好將此選項設定為："

msgid ""
"Creating version control metadata using the project manager or editor will "
"automatically enforce LF line endings using the ``.gitattributes`` file. In "
"this case, you don't need to change your Git configuration."
msgstr ""
"使用專案管理器或編輯器建立版本控制中繼資料時，會使用 ``.gitattributes`` 檔自"
"動強制使用 LF 行尾，因此無需更改 Git 配置。"

msgid "Translation status"
msgstr "翻譯狀態"
