# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using Fonts"
msgstr "建立內容"

msgid "Godot allows you to set specific fonts for different UI nodes."
msgstr "Godot 中能夠為不同的 UI 節點設定指定的字形。"

msgid ""
"There are three different places where you can setup font usage. The first "
"is the theme editor. Choose the node you want to set the font for and select "
"the font tab. The second is in the inspector for control nodes under **Theme "
"Overrides > Fonts**. Lastly, in the inspector settings for themes under "
"**Default Font**."
msgstr ""
"您可以在三個不同的位置設定字形使用。第一個是主題編輯器。選擇要為其設定字形的"
"節點，然後選擇字形標籤。第二個位於 **Theme Overrides > Fonts** 下的控制節點屬"
"性面板。最後，在**預設字形**下的主題屬性面板設定中。"

msgid ""
"If no font override is specified anywhere, `Open Sans <https://fonts.google."
"com/specimen/Open+Sans>`__ SemiBold is used as the default project font."
msgstr ""
"如果在任何地方都沒有指定字形覆蓋，則使用「Open Sans <https://fonts.google."
"com/specimen/Open+Sans>」__ SemiBold 作為預設專案字形。"

msgid ""
"Since Godot 4.0, font sizes are no longer defined in the font itself but are "
"instead defined in the node that uses the font. This is done in the **Theme "
"Overrides > Font Sizes** section of the inspector."
msgstr ""
"從 Godot 4.0 開始，字形大小不再在字形本身中定義，而是在使用該字形的節點中定"
"義。這是在屬性面板的 **主題覆蓋 > 字形大小** 部分完成的。"

msgid ""
"This allows changing the font size without having to duplicate the font "
"resource for every different font size."
msgstr "這允許更改字形大小，而不必為每個不同的字形大小複製字形資源。"

msgid ""
"There are 2 kinds of font files: *dynamic* (TTF/OTF/WOFF/WOFF2 formats) and "
"*bitmap* (BMFont ``.fnt`` format or monospaced image). Dynamic fonts are the "
"most commonly used option, as they can be resized and still look crisp at "
"higher sizes. Thanks to their vector-based nature, they can also contain a "
"lot more glyphs while keeping a reasonable file size compared to bitmap "
"fonts. Dynamic fonts also support some advanced features that bitmap fonts "
"cannot support, such as *ligatures* (several characters transforming into a "
"single different design)."
msgstr ""
"有兩種字型檔案：*動態*（TTF/OTF/WOFF/WOFF2 格式）和*點陣圖*（BMFont ``.fnt`` "
"格式或等寬影像）。動態字形是最常用的選項，因為它們可以調整大小，並且在較大尺"
"寸下仍然看起來清晰。由於其基於向量的性質，與點陣字形相比，它們還可以包含更多"
"的字形，同時保持合理的檔案大小。動態字形也支援點陣字形無法支援的一些進階功"
"能，例如*連字*（多個字元轉換為單一不同的設計）。"

msgid ""
"You can find freely licensed font files on websites such as `Google Fonts "
"<https://fonts.google.com/>`__ and `Font Library <https://fontlibrary.org/"
">`__."
msgstr ""
"您可以在「Google Fonts <https://fonts.google.com/>」和「Font Library "
"<https://fontlibrary.org/>」等網站上找到免費授權的字型檔案。"

msgid ""
"Fonts are covered by copyright. Double-check the license of a font before "
"using it, as not all fonts allow commercial use without purchasing a license."
msgstr ""
"字形受版權保護。使用字形之前請仔細檢查字形的許可證，因為並非所有字形都允許在"
"不購買許可證的情況下進行商業使用。"

msgid ""
"You can see how fonts work in action using the `BiDI and Font Features demo "
"project <https://github.com/godotengine/godot-demo-projects/tree/master/gui/"
"bidi_and_font_features>`__."
msgstr ""
"除了這份說明文件，你可能也會想看看 `Godot Demo 專案 <https://github.com/"
"godotengine/godot-demo-projects>`_ 。"

msgid "Dynamic fonts"
msgstr "動態性"

msgid "Godot supports the following dynamic font formats:"
msgstr "Godot 支援下列 3D **場景檔案格式** ："

msgid "TrueType Font or Collection (``.ttf``, ``.ttc``)"
msgstr "TrueType 字形或合集（``.ttf``、``.ttc``）"

msgid "OpenType Font or Collection (``.otf``, ``.otc``)"
msgstr "OpenType 字形或合集（``.otf``、``.otc``）"

msgid "Web Open Font Format 1 (``.woff``)"
msgstr "Web 開放字形格式 1（``.woff``）"

msgid "Web Open Font Format 2 (``.woff2``, since Godot 3.5)"
msgstr "Web 開放字形格式 2（``.woff2``，從 Godot 3.5 開始支援）"

msgid ""
"While ``.woff`` and especially ``.woff2`` tend to result in smaller file "
"sizes, there is no universally \"better\" font format. In most situations, "
"it's recommended to use the font format that was shipped on the font "
"developer's website."
msgstr ""
"雖然“.woff”，特別是“.woff2”往往會導致較小的檔案大小，但沒有普遍“更好”的字形格"
"式。在大多數情況下，建議使用字形開發人員網站上提供的字形格式。"

msgid "Bitmap fonts"
msgstr "點陣字型"

msgid ""
"Godot supports the BMFont (``.fnt``) bitmap font format. This is a format "
"created by the `BMFont <https://www.angelcode.com/products/bmfont/>`__ "
"program. Many BMFont-compatible programs also exist, like `BMGlyph <https://"
"www.bmglyph.com/>`__."
msgstr ""
"Godot 支援 BMFont (``.fnt``) 點字字形格式。這是由 `BMFont <https://www."
"angelcode.com/products/bmfont/>`__ 程式所建立的格式。也存在許多 BMFont 相容程"
"式，例如「BMGlyph <https://www.bmglyph.com/>」。"

msgid ""
"Alternatively, you can import any image to be used as a bitmap font. This is "
"only supported for **monospaced** fonts (fonts where each character has the "
"same width). To do so, select the image in the FileSystem dock, go to the "
"Import dock, change its import type to **Font Data (Monospace Image Font)** "
"then click **Reimport**:"
msgstr ""
"或者，您可以匯入任何圖像以用作點陣字形。僅支援**等寬**字形（每個字元具有相同"
"寬度的字形）。為此，請在檔案系統擴充座中選擇圖像，請前往匯入擴充塢，將其匯入"
"型別變更為 **字形資料（等寬影像字形）**，然後按一下 **重新匯入**："

msgid "Changing import type to Font Data (Monospace Image Font)"
msgstr "將匯入型別變更為字形資料（等寬圖像字形）"

msgid "Changing import type to **Font Data (Monospace Image Font)**"
msgstr "將匯入型別變更為 **字形資料（等寬圖像字形）**"

msgid ""
"The font's character set layout can be in any order, but orders that match "
"standard Unicode are recommended as they'll require far less configuration "
"to import. For example, the bitmap font below contains `ASCII <https://en."
"wikipedia.org/wiki/ASCII>`__ characters and follows standard ASCII ordering:"
msgstr ""
"字形的字元集佈局可以採用任何順序，但建議使用與標準 Unicode 相符的順序，因為匯"
"入它們所需的配置要少得多。例如，下面的點陣圖字形包含 `ASCII <https://en."
"wikipedia.org/wiki/ASCII>`__ 字元並遵循標準 ASCII 排序："

msgid "Bitmap font example"
msgstr "在下方範例中："

msgid ""
"Credit: `LibreQuake <https://github.com/MissLav/LibreQuake/blob/master/lq1/"
"gfx-wad/CONCHARS.png>`__ (scaled and cropped to exclude extended range)"
msgstr ""
"圖片來源：`LibreQuake <https://github.com/MissLav/LibreQuake/blob/master/lq1/"
"gfx-wad/CONCHARS.png>`__（縮放和裁剪以排除擴充範圍）"

msgid ""
"The following import options can be used to import the above font image "
"successfully:"
msgstr "這個節點有如下屬性可供設定："

msgid "Import options to use for the above example font"
msgstr "用於上述範例字形的匯入選項"

msgid ""
"The **Character Ranges** option is an array that maps each position on the "
"image (in tile coordinates, not pixels). The font atlas is traversed from "
"left to right and top to bottom. Characters can be specified with decimal "
"numbers (``127``), hexadecimal numbers (``0x007f``) or between *single* "
"quotes (``'~'``). Ranges can be specified with a hyphen between characters."
msgstr ""
"**字元範圍**選項是一個對應影像上每個位置的陣列（以圖塊座標，而不是像素為單"
"位）。字形合集是從左到右、從上到下走訪的。字元可以用十進位數字（``127``）、十"
"六進位數字（``0x007f``）或*單*引號（``'~'``）之間指定。可以使用字元之間的連字"
"符指定範圍。"

msgid ""
"For instance, ``0-127`` (or ``0x0000-0x007f``) denotes the full ASCII range. "
"As another example, ``' '-'~'`` is equivalent to ``32-127`` and denotes the "
"range of *printable* (visible) ASCII characters."
msgstr ""
"例如，「0-127」（或「0x0000-0x007f」）表示完整的 ASCII 範圍。另一個例子，"
"``''-'~'`` 等價於``32-127`` 並表示*可列印*（可見）ASCII 字元的範圍。"

msgid ""
"Make sure the **Character Ranges** option doesn't exceed the number of "
"**Columns** × **Rows** defined. Otherwise, the font will fail to import."
msgstr ""
"確保**字元範圍**選項不超過定義的**列** × **行**的數量。否則，字形將無法匯入。"

msgid ""
"If your font image contains margins not used for font glyphs (such as "
"attribution information), try adjusting **Image Margin**. This is a margin "
"applied only once around the whole image."
msgstr ""
"如果您的字形圖像包含未用於字形字形的邊距（例如屬性資訊），請嘗試調整**圖像邊"
"距**。這是在整個影像周圍僅應用一次的邊距。"

msgid ""
"If your font image contains guides (in the form of lines between glyphs) or "
"if spacing between characters appears incorrect, try adjusting **Character "
"Margin**. This margin is applied for every imported glyph."
msgstr ""
"如果您的字形影像包含參考線（以字形之間的線條形式）或字元之間的間距看起來不正"
"確，請嘗試調整**字元邊距**。此邊距適用於每個匯入的字形。"

msgid "Loading a font file"
msgstr "使用檔案"

msgid ""
"To load a font file (dynamic or bitmap), use the resource dropdown's **Quick "
"Load** or **Load** option next to a font property, then navigate to the font "
"file in question:"
msgstr ""
"若要載入字形檔案（動態或點陣圖），請使用字形屬性旁的資源下拉列表的 **快速載入"
"** 或 **載入** 選項，然後導覽至相關字型檔案："

msgid ""
"You can also drag-and-drop a font file from the FileSystem dock to the "
"inspector property that accepts a Font resource."
msgstr "您也可以將字型檔案從檔案系統停靠列拖曳到接受字形資源的屬性面板屬性中。"

msgid ""
"In Godot 4.0 and later, texture filter and repeat properties are defined in "
"the location where the texture is used, rather than on the texture itself. "
"This also applies to fonts (both dynamic fonts and bitmap fonts)."
msgstr ""
"在Godot 4.0及更高版本中，紋理篩選器和重複屬性是在使用紋理的位置定義的，而不是"
"在紋理本身上定義的。這也適用於字形（動態字形和點陣字形）。"

msgid ""
"Fonts that have a pixel art appearance should have bilinear filtering "
"disabled by changing the **Rendering > Textures > Canvas Textures > Default "
"Texture Filter** project setting to **Nearest**."
msgstr ""
"具有像素藝術外觀的字形應透過將**算繪>紋理>畫布紋理>預設紋理篩選器**專案設定更"
"改為**最近**來停用雙線性篩選。"

msgid ""
"The font size must also be an integer multiple of the design size (which "
"varies on a per-font basis), and the Control node using the font must be "
"scaled by an integer multiple as well. Otherwise, the font may look blurry. "
"Font sizes in Godot are specified in pixels (px), not points (pt). Keep this "
"in mind when comparing font sizes across different software."
msgstr ""
"字形大小也必須是設計大小的整數倍（根據每種字形而變化），並且使用該字形的控制"
"節點也必須以整數倍縮放。否則，字形可能看起來模糊。 Godot 中的字形大小以像素 "
"(px) 為單位，而非點 (pt)。在比較不同軟體之間的字形大小時請記住這一點。"

msgid ""
"The texture filter mode can also be set on individual nodes that inherit "
"from CanvasItem by setting :ref:`CanvasItem.texture_filter "
"<class_CanvasItem_property_texture_filter>`."
msgstr ""
"也可以透過設定 :ref:`CanvasItem.texture_filter "
"<class_CanvasItem_property_texture_filter>` 在繼承自 CanvasItem 的各個節點上"
"設定紋理篩選器模式。"

#, fuzzy
msgid "Font outlines and shadows"
msgstr "2D 燈光和陰影"

msgid ""
"Font outlines and shadows can be used to improve readability when the "
"background color isn't known in advance. For instance, this is the case for "
"HUD elements that are drawn over a 2D/3D scene."
msgstr ""

msgid ""
"Font outlines are available in most nodes that derive from Control, in "
"addition to :ref:`class_Label3D`."
msgstr ""

msgid ""
"To enable outline for a font on a given node, configure the theme overrides "
"**Font Outline Color** and **Outline Size** in the inspector. The result "
"should look like this:"
msgstr ""

#, fuzzy
msgid "Font outline example"
msgstr "射擊範例"

msgid ""
"If using a font with MSDF rendering, its **MSDF Pixel Range** import option "
"be set to at least *twice* the value of the outline size for outline "
"rendering to look correct. Otherwise, the outline may appear to be cut off "
"earlier than intended."
msgstr ""

msgid ""
"Support for font shadows is more limited: they are only available in :ref:"
"`class_Label` and :ref:`class_RichTextLabel`. Additionally, font shadows "
"always have a hard edge (but you can reduce their opacity to make them look "
"more subtle). To enable font shadows on a given node, configure the **Font "
"Shadow Color**, **Shadow Offset X**, and **Shadow Offset Y** theme overrides "
"in a Label or RichTextLabel node accordingly:"
msgstr ""

#, fuzzy
msgid "Configuring font shadow in a Label node"
msgstr "設定建置"

#, fuzzy
msgid "The result should look like this:"
msgstr "最終結果應如下所示:"

#, fuzzy
msgid "Font shadow example"
msgstr "Windows 範例："

msgid ""
"You can create local overrides to font display in Label nodes by creating a :"
"ref:`class_LabelSettings` resource that you reuse across Label nodes. This "
"resource takes priority over :ref:`theme properties <doc_gui_skinning>`."
msgstr ""

msgid "Advanced font features"
msgstr "預設功能"

msgid "Antialiasing"
msgstr "抗鋸齒"

msgid ""
"You can adjust how the font should be smoothed out when rendering by "
"adjusting *antialiasing* and *hinting*. These are different properties, with "
"different use cases."
msgstr ""
"您可以透過調整*抗鋸齒*和*提示*來調整算繪時字形的平滑方式。這些是不同的屬性，"
"具有不同的用例。"

msgid ""
"Antialiasing controls how glyph edges should be smoothed out when "
"rasterizing the font. The default antialiasing method (**Grayscale**) works "
"well on every display technology. However, at small sizes, grayscale "
"antialiasing may result in fonts looking blurry."
msgstr ""
"抗鋸齒控制光柵化字形時應如何平滑字形邊緣。預設的抗鋸齒方法（**灰階**）適用於"
"每種顯示技術。然而，在小尺寸下，灰階抗鋸齒可能會導致字形看起來模糊。"

msgid ""
"The antialiasing sharpness can be improved by using LCD subpixel "
"optimization, which exploits the subpixel patterns of most LCD displays by "
"offsetting the font antialiasing on a per-channel basis (red/green/blue). "
"The downside is that this can introduce \"fringing\" on edges, especially on "
"display technologies that don't use standard RGB subpixels (such as OLED "
"displays)."
msgstr ""
"可以透過使用 LCD 子像素優化來提高抗鋸齒清晰度，該優化透過在每個通道（紅/綠/"
"藍）的基礎上偏移字形抗鋸齒來利用大多數 LCD 顯示器的子像素模式。缺點是這可能會"
"在邊緣產生“邊緣”，尤其是在不使用標準 RGB 子像素的顯示技術（例如 OLED 顯示器）"
"上。"

msgid ""
"In most games, it's recommended to stick to the default **Grayscale** "
"antialiasing. For non-game applications, LCD subpixel optimization is worth "
"exploring."
msgstr ""
"在大多數遊戲中，建議堅持使用預設的**灰階**抗鋸齒。對於非遊戲應用，LCD 子像素"
"優化值得探索。"

msgid "Font antialiasing comparison"
msgstr "視覺比較"

msgid "From top to bottom: Disabled, Grayscale, LCD Subpixel (RGB)"
msgstr "由上至下：停用、灰階、LCD 子像素 (RGB)"

msgid ""
"Antialiasing cannot be changed on :ref:`MSDF-rendered fonts "
"<doc_using_fonts_msdf>` – these are always rendered with grayscale "
"antialiasing."
msgstr ""
":ref:`MSDF 算繪字形 <doc_using_fonts_msdf>` 上的抗鋸齒功能無法變更 - 這些字形"
"始終使用灰階抗鋸齒進行算繪。"

msgid "Hinting"
msgstr "微調"

msgid ""
"Hinting controls how aggressively glyph edges should be snapped to pixels "
"when rasterizing the font. **None** results in the smoothest appearance, "
"which can make the font look blurry at small sizes. **Light** (default) is "
"sharper by snapping glyph edges to pixels on the Y axis only, while **Full** "
"is even sharper by snapping glyph edges to pixels on both X and Y axes. "
"Depending on personal preference, you may prefer using one hinting mode over "
"the other."
msgstr ""
"提示控制在光柵化字形時應如何積極地將字形邊緣捕捉到像素。 **無** 會產生最平滑"
"的外觀，這會使字形在小尺寸下看起來模糊。 **淺色**（預設）透過僅將字形邊緣捕捉"
"到Y 軸上的像素來變得更加清晰，而**全** 透過將字形邊緣捕捉到X 軸和Y 軸上的像素"
"來更加清晰。根據個人喜好，您可能更喜歡使用一種提示模式而不是另一種。"

msgid "Font hinting comparison"
msgstr "視覺比較"

msgid "From top to bottom: None, Light, Full hinting"
msgstr "由上至下：無、淺色、完整提示"

msgid ""
"If changing the hinting mode has no visible effect after clicking "
"**Reimport**, it's usually because the font doesn't include hinting "
"instructions. This can be resolved by looking for a version of the font file "
"that includes hinting instructions, or enabling **Force Autohinter** in the "
"Import dock. This will use `FreeType <https://freetype.org/>`__'s autohinter "
"to automatically add hinting instructions to the imported font."
msgstr ""
"如果點選「重新匯入」後變更提示模式沒有明顯效果，通常是因為字型不包含提示指"
"令。可以透過尋找包含提示指令的字型檔案版本或在匯入塢中啟用 **強制自動提示** "
"來解決此問題。這將使用 `FreeType <https://freetype.org/>`__ 的自動提示器自動"
"為匯入的字型新增提示指令。"

msgid "Subpixel positioning"
msgstr "次像素定位"

msgid ""
"Subpixel positioning can be adjusted. This is a `FreeType <https://freetype."
"org/>`__ feature that allows glyphs to be rendered more closely to their "
"intended form. The default setting of **Auto** automatically enables "
"subpixel positioning at small sizes, but disables it at large font sizes to "
"improve rasterization performance."
msgstr ""
"子像素定位可以調整。這是一個 `FreeType <https://freetype.org/>`__ 功能，允許"
"字形算繪得更接近其預期形式。預設設定「自動」會在小尺寸下自動啟用子像素定位，"
"但在大字形尺寸下停用子像素定位，以提高光柵化效能。"

msgid ""
"You can force the subpixel positioning mode to **Disabled**, **One half of a "
"pixel** or **One quarter of a pixel**. **One quarter of a pixel** provides "
"the best quality, at the cost of longer rasterization times."
msgstr ""
"您可以將子像素定位模式強制設定為**停用**、**二分之一像素**或**四分之一像素"
"**。 **四分之一像素**可提供最佳質量，但代價是光柵化時間較長。"

msgid ""
"Changing antialiasing, hinting and subpixel positioning has the most visible "
"effect at smaller font sizes."
msgstr "更改抗鋸齒、提示和子像素定位在較小的字形大小下具有最明顯的效果。"

msgid ""
"Fonts that have a pixel art appearance should have their subpixel "
"positioning mode set to **Disabled**. Otherwise, the font may appear to have "
"uneven pixel sizes."
msgstr ""
"具有像素藝術外觀的字形應將其子像素定位模式設為**禁用**。否則，字形的像素大小"
"可能會顯得不均勻。"

msgid ""
"This step is not required for bitmap fonts, as subpixel positioning is only "
"relevant for dynamic fonts (which are usually made of vector elements)."
msgstr ""
"點陣字形不需要此步驟，因為子像素定位僅與動態字形（通常由向量元素組成）相關。"

msgid "Mipmaps"
msgstr "Mipmap"

msgid ""
"By default, fonts do not have mipmaps generated to reduce memory usage and "
"speed up rasterization. However, this can cause downscaled fonts to become "
"grainy. This can be especially noticeable with :ref:`doc_3d_text` that "
"doesn't have **Fixed Size** enabled. This can also occur when displaying "
"text with a traditional rasterized (non-:ref:`MSDF <doc_using_fonts_msdf>`) "
"font in a Control node that has its scale lower than ``(1, 1)``."
msgstr ""
"預設情況下，字形不會產生 mipmap，以減少記憶體使用並加快光柵化速度。但是，這可"
"能會導致縮小後的字形變得有顆粒感。對於未啟用 **固定大小** 的 :ref:"
"`doc_3d_text`，這一點尤其明顯。當在比例低於「(1, 1)」的控制節點中使用傳統光柵"
"化（非 :ref:`MSDF <doc_using_fonts_msdf>`）字形顯示文字時，也會發生這種情況。"

msgid ""
"After selecting a font in the FileSystem dock, you can enable the "
"**Mipmaps** in the Import dock to improve downscaled font rendering "
"appearance."
msgstr ""
"在檔案系統擴充座中選擇字形後，您可以在匯入擴充座中啟用 **Mipmaps** 以改善縮小"
"字形的算繪外觀。"

#, fuzzy
msgid ""
"Mipmaps can be enabled on MSDF fonts as well. This can improve font "
"rendering quality a little at smaller-than-default sizes, but MSDF fonts are "
"already resistant to graininess out of the box."
msgstr ""
"也可以在 MSDF 字型上啟用 Mipmap。這可以稍微提高小於預設尺寸的字形算繪質量，"
"但 MSDF 字形已經可以抵抗開箱即用的顆粒感。"

msgid "MSDF font rendering"
msgstr "MSDF 字形算繪"

msgid ""
"Multi-channel signed distance field (MSDF) font rendering allows rendering "
"fonts at any size, without having to re-rasterize them when their size "
"changes."
msgstr ""
"多通道帶符號距離場（Multi-channel signed distance field，MSDF）字形算繪能夠將"
"字形算繪為任意大小，無需在大小發生變化時重新柵格化。"

msgid ""
"MSDF font rendering has 2 upsides over traditional font rasterization, which "
"Godot uses by default:"
msgstr "與 Godot 預設使用的傳統字形柵格化相比，MSDF 字形算繪有兩個優點："

msgid "The font will always look crisp, even at huge sizes."
msgstr "即便文字非常巨大，字形看上去也總是清晰的。"

msgid ""
"There is less stuttering when rendering characters *at large font sizes* for "
"the first time, as there is no rasterization performed."
msgstr "首次算繪*大字型大小字形*的字元時卡頓更短，因為無須執行柵格化。"

msgid "The downsides of MSDF font rendering are:"
msgstr "MSDF 字形算繪的缺點有："

msgid ""
"Higher baseline cost for font rendering. This is usually not noticeable on "
"desktop platforms, but it can have an impact on low-end mobile devices."
msgstr ""
"字形算繪的基礎開銷較高。桌面平臺上通常無法察覺，但是會影響低端移動裝置。"

msgid ""
"Fonts at small sizes will not look as clear as rasterized fonts, due to the "
"lack of hinting."
msgstr "由於缺少微調，較小的字形沒有柵格化字形清晰。"

msgid ""
"Rendering new glyphs for the first time *at small font sizes* may be more "
"expensive compared to traditional rasterized fonts. :ref:"
"`doc_using_fonts_font_prerendering` can be used to alleviate this."
msgstr ""
"與傳統的柵格化字形相比，首次為新字形算繪*小字型大小字形*的開銷可能更大。可以"
"使用 :ref:`doc_using_fonts_font_prerendering` 緩解。"

msgid "LCD subpixel optimization cannot be enabled for MSDF fonts."
msgstr "無法為 MSDF 字形啟用 LCD 次像素優化。"

msgid ""
"Fonts with self-intersecting outlines will not render correctly in MSDF "
"mode. If you notice rendering issues on fonts downloaded from websites such "
"as `Google Fonts <https://fonts.google.com>`__, try downloading the font "
"from the font author's official website instead."
msgstr ""
"MSDF 模式下無法正確算繪輪廓自相交的字形。如果使用從 `Google Fonts <https://"
"fonts.google.com>`__ 等處下載到的字形時出現算繪問題，請嘗試改為從作者的官方網"
"站下載。"

msgid "Comparison of font rasterization methods"
msgstr ""

msgid ""
"Comparison of font rasterization methods. From top to bottom: rasterized "
"without oversampling, rasterized with oversampling, MSDF"
msgstr ""

#, fuzzy
msgid ""
"To enable MSDF rendering for a given font, select it in the FileSystem dock, "
"go to the Import dock, enable **Multichannel Signed Distance Field**, then "
"click **Reimport**:"
msgstr ""
"若要使OBJ 檔案為其產生網格LOD，請在檔案系統擴充座中選擇它，請前往匯入擴充塢，"
"將其**匯入為** 選項變更為**場景**，然後按一下**重新匯入**："

msgid "Enabling MSDF in the font's import options"
msgstr ""

msgid "Using emoji"
msgstr "使用空白字元"

msgid "Godot has limited support for emoji fonts:"
msgstr "Godot 對 Emoji 字形的支援有限："

msgid "CBDT/CBLC (embedded PNGs) and SVG emoji fonts are supported."
msgstr "支援 CBDT/CBLC（內嵌 PNG）和 SVG Emoji 字形。"

msgid "COLR/CPAL emoji fonts (custom vector format) are **not** supported."
msgstr "**不支援** COLR/CPAL Emoji 字形（自訂向量格式）。"

msgid ""
"EMJC bitmap image compression (used by iOS' system emoji font) is **not** "
"supported. This means that to support emoji on iOS, you must use a custom "
"font that uses SVG or PNG bitmap compression instead."
msgstr ""
"**不支援** EMJC 點陣圖壓縮（iOS 系統 Emoji 字形需要用到）。這意味著如果要在 "
"iOS 上支援 Emoji，你就必須改用自訂的使用 SVG 或 PNG 點陣圖壓縮的字形。"

msgid ""
"For Godot to be able to display emoji, the font used (or one of its :ref:"
"`fallbacks <doc_using_fonts_font_fallbacks>`) needs to include them. "
"Otherwise, emoji won't be displayed and placeholder \"tofu\" characters will "
"appear instead:"
msgstr ""
"為了讓 Godot 能夠顯示表情符號，所使用的字形（或其:ref:`後備字形之一 "
"<doc_using_fonts_font_fallbacks>`）需要包含它們。否則，表情符號將不會顯示，而"
"是會出現佔位符「豆腐」字元："

msgid "Default appearance when trying to use emoji in a label"
msgstr "嘗試在標籤中使用 Emoji 的預設外觀"

msgid ""
"After adding a font to display emoji such as `Noto Color Emoji <https://"
"fonts.google.com/noto/specimen/Noto+Color+Emoji>`__, you get the expected "
"result:"
msgstr ""
"新增字形來顯示表情符號（例如「Noto Color Emoji <https://fonts.google.com/"
"noto/specimen/Noto+Color+Emoji>`__」）後，您將獲得預期結果："

msgid "Correct appearance after adding an emoji font to the label"
msgstr "為標籤新增 Emoji 字形後的正確外觀"

msgid ""
"To use a regular font alongside emoji, it's recommended to specify a :ref:"
"`fallback font <doc_using_fonts_font_fallbacks>` that points to the emoji "
"font in the regular font's advanced import options. If you wish to use the "
"default project font while displaying emoji, leave the **Base Font** "
"property in FontVariation empty while adding a font fallback pointing to the "
"emoji font:"
msgstr ""
"若要在表情符號旁使用常規字形，建議在常規字形的進階匯入選項中指定指向表情符號"
"字形的:ref:`後備字形 <doc_using_fonts_font_fallbacks>`。如果您希望在顯示表情"
"符號時使用預設專案字形，請將 FontVariation 中的 **Base Font** 屬性保留為空，"
"同時新增指向表情符號字形的後備字形："

msgid ""
"Emoji fonts are quite large in size, so you may want to :ref:`load a system "
"font <doc_using_fonts_system_fonts>` to provide emoji glyphs rather than "
"bundling it with your project. This allows providing full emoji support in "
"your project without increasing the size of its exported PCK. The downside "
"is that emoji will look different depending on the platform, and loading "
"system fonts is not supported on all platforms."
msgstr ""
"表情符號字形非常大，因此您可能需要載入:ref:`系統字形 "
"<doc_using_fonts_system_fonts>` 來提供表情符號字形，而不是將其與您的專案捆綁"
"在一起。這允許在您的專案中提供完整的表情符號支援，而無需增加其匯出的 PCK 的大"
"小。缺點是表情符號會根據平台的不同看起來有所不同，並且並非所有平台都支援載入"
"系統字形。"

msgid "It's possible to use a system font as a fallback font too."
msgstr "也可以使用系統字體作為後備字體。"

msgid "Using icon fonts"
msgstr "2 個檢視區"

msgid ""
"Tools like `Fontello <https://fontello.com/>`__ can be used to generate font "
"files containing vectors imported from SVG files. This can be used to render "
"custom vector elements as part of your text, or to create extruded 3D icons "
"with :ref:`doc_3d_text` and TextMesh."
msgstr ""
"`Fontello <https://fontello.com/>`__ 等工具可用於產生包含從 SVG 檔案匯入的向"
"量的字型檔案。這可用於將自訂向量元素算繪為文字的一部分，或使用 doc_3d_text "
"和 TextMesh 建立擠壓 3D 圖示。"

msgid ""
"Fontello currently does not support creating multicolored fonts (which Godot "
"can render). As of November 2022, support for multicolored fonts in icon "
"font generation tools remains scarce."
msgstr ""
"Fontello 目前不支援建立多色字形（Godot 可以算繪）。截至 2022 年 11 月，圖標字"
"形產生工具對彩色字形的支援仍然很少。"

msgid ""
"Depending on your use cases, this may lead to better results compared to "
"using the ``img`` tag in :ref:`RichTextLabel <doc_bbcode_in_richtextlabel>`. "
"Unlike bitmap images (including SVGs which are rasterized on import by "
"Godot), true vector data can be resized to any size without losing quality."
msgstr ""
"根據您的用例，與在 :ref:`RichTextLabel <doc_bbcode_in_richtextlabel>` 中使用 "
"``img`` 標籤相比，這可能會帶來更好的結果。與點陣圖影像（包括由 Godot 匯入時光"
"柵化的 SVG）不同，真正的向量資料可以調整為任意大小，而不會損失品質。"

msgid ""
"After downloading the generated font file, load it in your Godot project "
"then specify it as a custom font for a Label, RichTextLabel or Label3D node. "
"Switch over to the Fontello web interface, then copy the character by "
"selecting it then pressing :kbd:`Ctrl + C` (:kbd:`Cmd + C` on macOS). Paste "
"the character in the **Text** property of your Label node. The character "
"will appear as a placeholder glyph in the inspector, but it should appear "
"correctly in the 2D/3D viewport."
msgstr ""
"下載生成的字型檔案後，將其載入到 Godot 專案中，然後將其指定為 Label、"
"RichTextLabel 或 Label3D 節點的自訂字形。切換到 Fontello Web 介面，然後透過選"
"擇該字元並按 :kbd:`Ctrl + C`（在 macOS 上:kbd:`Cmd + C`）來複製該字元。將字元"
"貼到標籤節點的 **Text** 屬性中。該字元將在屬性面板中顯示為佔位符字形，但它應"
"該在 2D/3D 視窗中正確顯示。"

msgid ""
"To use an icon font alongside a traditional font in the same Control, you "
"can specify the icon font as a :ref:`fallback "
"<doc_using_fonts_font_fallbacks>`. This works because icon fonts use the "
"Unicode *private use area*, which is reserved for use by custom fonts and "
"doesn't contain standard glyphs by design."
msgstr ""
"若要在同一控制項中將圖示字形與傳統字形一起使用，您可以將圖示字形指定為 :ref:"
"`Fallback <doc_using_fonts_font_fallbacks>`。這是可行的，因為圖示字形使用 "
"Unicode *專用區域*，該區域保留供自訂字形使用，並且在設計上不包含標準字形。"

msgid ""
"Several modern icon fonts such as `Font Awesome 6 <https://fontawesome.com/"
"download>`__ have a desktop variant that uses *ligatures* to specify icons. "
"This allows you to specify icons by entering their name directly in the "
"**Text** property of any node that can display fonts. Once the icon's name "
"is fully entered as text (such as ``house``), it will be replaced by the "
"icon."
msgstr ""
"幾種現代圖示字形，例如“Font Awesome 6 <https://fontawesome.com/download>”，有"
"一個使用*連字*來指定圖示的桌面變體。這允許您透過直接在任何可以顯示字形的節點"
"的 **Text** 屬性中輸入圖示名稱來指定圖示。一旦圖示的名稱以文字形式完整輸入"
"（例如“house”），它將被圖示取代。"

msgid ""
"While easier to use, this approach cannot be used with font fallbacks as the "
"main font's characters will take priority over the fallback font's ligatures."
msgstr ""
"雖然更易於使用，但此方法不能與字形後備一起使用，因為主要字形的字元將優先於後"
"備字形的連字。"

msgid "Font fallbacks"
msgstr "字形退回"

msgid ""
"Godot supports defining one or more fallbacks when the main font lacks a "
"glyph to be displayed. There are 2 main use cases for defining font "
"fallbacks:"
msgstr ""
"當主字形缺少要顯示的字形時，Godot 支援定義一個或多個後備。定義字形後備有 2 個"
"主要用例："

msgid ""
"Use a font that only supports Latin character sets, but use another font to "
"be able to display text another character set such as Cyrillic."
msgstr ""
"使用僅支援拉丁字元集的字形，但使用其他字形可以顯示其他字元集（例如西里爾字"
"母）的文字。"

msgid "Use a font to render text, and another font to render emoji or icons."
msgstr "使用一種字形呈現文字，使用另一種字形呈現表情符號或圖示。"

msgid ""
"Open the Advanced Import Settings dialog by double-clicking the font file in "
"the FileSystem dock. You can also select the font in the FileSystem dock, go "
"to the Import dock then choose **Advanced…** at the bottom:"
msgstr ""
"雙擊檔案系統停靠列中的字型檔案，開啟「進階匯入設定」對話框。您也可以在檔案系"
"統底座中選擇字形，前往匯入底座，然後選擇底部的**進階...**："

msgid "Import dock"
msgstr "匯入流程"

msgid ""
"In the dialog that appears, look for **Fallbacks** section on the sidebar on "
"the right, click the **Array[Font] (size 0)** text to expand the property, "
"then click **Add Element**:"
msgstr ""
"在出現的對話方塊中，在右側邊欄上尋找 **Fallbacks** 部分，按一下 "
"**Array[Font] (size 0)** 文字以展開屬性，然後按一下 **Add Element**："

msgid "Adding font fallback"
msgstr "新增字形退回"

msgid ""
"Click the dropdown arrow on the new element, then choose a font file using "
"the **Quick Load** or **Load** options:"
msgstr ""
"點擊新元素上的下拉箭頭，然後使用 **快速載入** 或 **載入** 選項選擇字形檔案："

msgid "Loading font fallback"
msgstr "載入字形退回"

msgid ""
"It is possible to add fallback fonts while using the default project font. "
"To do so, leave the **Base Font** property empty while adding one or more "
"font fallbacks."
msgstr ""
"使用預設專案字形時可以新增後備字形。為此，請將 **Base Font** 屬性留空，同時新"
"增一種或多種字形後備。"

msgid ""
"Font fallbacks can also be defined on a local basis similar to :ref:"
"`doc_using_fonts_opentype_font_features`, but this is not covered here for "
"brevity reasons."
msgstr ""
"字形後備也可以在本地定義，類似於 :ref:"
"`doc_using_fonts_opentype_font_features`，但出於簡潔原因，這裡不介紹。"

msgid "Variable fonts"
msgstr "變數"

msgid ""
"Godot has full support for `variable fonts <https://variablefonts.io/>`__, "
"which allow you to use a single font file to represent various font weights "
"and styles (regular, bold, italic, …). This must be supported by the font "
"file you're using."
msgstr ""
"Godot 完全支援`可變字形 <https://variablefonts.io/>`__，它允許您使用單一字形"
"檔案來表示各種字形粗細和樣式（常規、粗體、斜體等）。您正在使用的字形檔案必須"
"支援此功能。"

msgid ""
"To use a variable font, create a :ref:`class_FontVariation` resource in the "
"location where you intend to use the font, then load a font file within the "
"FontVariation resource:"
msgstr ""
"若要使用可變字形，請在要使用該字形的位置建立一個 :ref:`class_FontVariation` "
"資源，然後在 FontVariation 資源中載入字形檔案："

msgid "Creating a FontVariation resource"
msgstr "建立自己的資源"

msgid "Loading a font file into the FontVariation resource"
msgstr "為 FontVariation 資源載入字形檔"

msgid ""
"Scroll down to the FontVariation's **Variation** section, then click the "
"**Variation Coordinates** text to expand the list of axes that can be "
"adjusted:"
msgstr ""
"向下捲動至 FontVariation 的 **變化** 部分，然後按一下 **變更座標** 文字以展開"
"可調整的軸列表："

msgid "List of variation axes"
msgstr "功能列表"

msgid ""
"The set of axes you can adjust depends on the font loaded. Some variable "
"fonts only support one axis of adjustment (typically *weight* or *slant*), "
"while others may support multiple axes of adjustment."
msgstr ""
"您可以調整的軸集取決於載入的字形。有些可變字形僅支援一個調整軸（通常為*粗細*"
"或*傾斜*），而其他可變字形可能支援多個調整軸。"

msgid ""
"For example, here's the `Inter V <https://rsms.me/inter/>`__ font with a "
"*weight* of ``900`` and a *slant* of ``-10``:"
msgstr ""
"例如，這裡是`Inter V <https://rsms.me/inter/>`__ 字形，其*粗細*為“900”，*傾斜"
"*為“-10”："

msgid "Variable font example (Inter V)"
msgstr "可變字形範例（Inter V）"

msgid ""
"While variable font axis names and scales aren't standardized, some common "
"conventions are usually followed by font designers. For instance, the "
"*weight* axis typically uses ``400`` as the \"regular\" font weight and "
"``700`` as the \"bold\" font weight."
msgstr ""
"雖然可變字形軸名稱和比例沒有標準化，但字形設計者通常遵循一些常見的約定。例"
"如，*weight* 軸通常使用“400”作為“常規”字形粗細，使用“700”作為“粗體”字形粗細。"

msgid ""
"You can save the FontVariation to a ``.tres`` resource file to reuse it in "
"other places:"
msgstr ""
"您可以將 FontVariation 儲存到「.tres」資源檔案中，以便在其他地方重複使用它："

msgid "Saving FontVariation to an external resource file"
msgstr "將 FontVariation 保存為外部資源檔"

msgid "Faux bold and italic"
msgstr "假粗體和假斜體"

msgid ""
"When writing text in bold or italic, using font variants specifically "
"designed for this looks better. Spacing between glyphs will be more "
"consistent when using a bold font, and certain glyphs' shapes may change "
"entirely in italic variants (compare \"a\" and *\"a\"*)."
msgstr ""
"當以粗體或斜體書寫文字時，使用專門為此設計的字形變體看起來會更好。使用粗體"
"時，字形之間的間距將更加一致，並且某些字形的形狀可能會在斜體變體中完全改變"
"（比較“a”和*“a”*）。"

msgid ""
"However, real bold and italic fonts require shipping more font files, which "
"increases distribution size. A single :ref:`variable font "
"<doc_using_fonts_variable_fonts>` file can also be used, but this file will "
"be larger than a single non-variable font. While file size is usually not an "
"issue for desktop projects, it can be a concern for mobile/web projects that "
"strive to keep distribution size as low as possible."
msgstr ""
"然而，真正的粗體和斜體字形需要傳送更多的字形檔案，這會增加分發大小。也可以使"
"用單一:ref:`可變字形 <doc_using_fonts_variable_fonts>` 檔案，但該檔案將比單一"
"非可變字形大。雖然檔案大小對於桌面專案來說通常不是問題，但對於努力保持分發大"
"小盡可能小的行動/Web 專案來說，這可能是一個問題。"

msgid ""
"To allow bold and italic fonts to be displayed without having to ship "
"additional fonts (or use a variable font that is larger in size), Godot "
"supports *faux* bold and italic."
msgstr ""
"為了允許顯示粗體和斜體字形而無需提供額外的字形（或使用尺寸較大的可變字形），"
"Godot 支援 *faux* 粗體和斜體。"

msgid ""
"Faux bold/italic (top), real bold/italic (bottom). Normal font used: Open "
"Sans SemiBold"
msgstr ""
"仿粗體/斜體（上），真粗體/斜體（下）。使用的普通字形：Open Sans SemiBold"

msgid ""
"Faux bold and italic is automatically used in :ref:`class_RichTextLabel`'s "
"bold and italic tags if no custom fonts are provided for bold and/or italic."
msgstr ""
"如果沒有為粗體和/或斜體提供自訂字形，則會在 :ref:`class_RichTextLabel` 的粗體"
"和斜體標籤中自動使用仿粗體和斜體。"

msgid ""
"To use faux bold, create a FontVariation resource in a property where a Font "
"resource is expected. Set **Variation > Embolden** to a positive value to "
"make a font bolder, or to a negative value to make it less bold. Recommended "
"values are between ``0.5`` and ``1.2`` depending on the font."
msgstr ""
"若要使用仿粗體，請在需要 Font 資源的屬性中建立 FontVariation 資源。將 "
"**Variation > Embolden** 設為正值以使字形更粗，或設為負值以使其不那麼粗體。根"
"據字形，建議值介於「0.5」和「1.2」之間。"

msgid ""
"Faux italic is created by skewing the text, which is done by modifying the "
"per-character transform. This is also provided in FontVariation using the "
"**Variation > Transform** property. Setting the ``yx`` component of the "
"character transform to a positive value will italicize the text. Recommended "
"values are between ``0.2`` and ``0.4`` depending on the font."
msgstr ""
"仿斜體是透過傾斜文字建立的，這是透過修改每個字元的轉換來完成的。這也在 "
"FontVariation 中使用 **Variation > Transform** 屬性提供。將字元轉換的“yx”元件"
"設為正值將使文字變為斜體。根據字形，建議值介於「0.2」和「0.4」之間。"

msgid "Adjusting font spacing"
msgstr "調整字形間距"

msgid ""
"For stylistic purposes or for better readability, you may want to adjust how "
"a font is presented in Godot."
msgstr ""
"出於風格目的或為了更好的可讀性，您可能需要調整字形在 Godot 中的呈現方式。"

msgid ""
"Create a FontVariation resource in a property where a Font resource is "
"expected. There are 4 properties available in the **Variation > Extra "
"Spacing** section, which accept positive and negative values:"
msgstr ""
"在需要 Font 資源的屬性中建立 FontVariation 資源。 **變化 > 額外間距**部分中"
"有 4 個可用屬性，它們接受正值和負值："

msgid "**Glyph:** Additional spacing between every glyph."
msgstr "**字形：** 每個字形之間的額外間距。"

msgid "**Space:** Additional spacing between words."
msgstr "**空格：** 單字之間的額外間距。"

msgid ""
"**Top:** Additional spacing above glyphs. This is used for multiline text, "
"but also to calculate the minimum size of controls such as :ref:"
"`class_Label` and :ref:`class_Button`."
msgstr ""
"**頂部：** 字形上方的額外間距。這用於多行文字，但也用於計算控制項的最小大小，"
"例如 :ref:`class_Label` 和 :ref:`class_Button`。"

msgid ""
"**Top:** Additional spacing below glyphs. This is used for multiline text, "
"but also to calculate the minimum size of controls such as :ref:"
"`class_Label` and :ref:`class_Button`."
msgstr ""
"**頂部：** 字形下方的額外間距。這用於多行文字，但也用於計算控制項的最小大小，"
"例如 :ref:`class_Label` 和 :ref:`class_Button`。"

msgid ""
"The **Variation > Transform** property can also be adjusted to stretch "
"characters horizontally or vertically. This is specifically done by "
"adjusting the ``xx`` (horizontal scale) and ``yy`` (vertical scale) "
"components. Remember to adjust glyph spacing to account for any changes, as "
"glyph transform doesn't affect how much space each glyph takes in the text. "
"Non-uniform scaling of this kind should be used sparingly, as fonts are "
"generally not designed to be displayed with stretching."
msgstr ""
"也可以調整 **變化 > 變換** 屬性以水平或垂直拉伸字元。這是透過調整“xx”（水平比"
"例）和“yy”（垂直比例）組件來具體完成的。請記住調整字形間距以適應任何變化，因"
"為字形轉換不會影響每個字形在文字中佔用的空間。應謹慎使用這種非均勻縮放，因為"
"字形通常不設計為透過拉伸顯示。"

msgid "OpenType font features"
msgstr "預設功能"

msgid ""
"Godot supports enabling OpenType font features, which are a standardized way "
"to define alternate characters that can be toggled without having to swap "
"font files entirely. Despite being named OpenType font features, these are "
"also supported in TrueType (``.ttf``) and WOFF/WOFF2 font files."
msgstr ""
"Godot 支援啟用 OpenType 字形功能，這是一種定義替代字符的標準化方法，可以切換"
"這些字符，而無需完全交換字形檔案。儘管被命名為 OpenType 字型功能，但 "
"TrueType (``.ttf``) 和 WOFF/WOFF2 字型檔案也支援這些功能。"

msgid ""
"Support for OpenType features highly depends on the font used. Some fonts "
"don't support any OpenType features, while other fonts can support dozens of "
"toggleable features."
msgstr ""
"對 OpenType 功能的支援很大程度上取決於所使用的字形。某些字形不支援任何 "
"OpenType 功能，而其他字形可以支援數十種可切換功能。"

#, fuzzy
msgid "There are 2 ways to use OpenType font features:"
msgstr "有兩種方法可以為伺服器匯出專案："

msgid "**Globally on a font file**"
msgstr "**全域字形檔案**"

msgid ""
"In the dialog that appears, look for the **Metadata Overrides > OpenType "
"Features** section on the sidebar on the right, click the **Features (0 of N "
"set)** text to expand the property, then click **Add Feature**:"
msgstr ""
"在出現的對話方塊中，在右側側邊欄上尋找**元資料覆蓋> OpenType 功能**部分，按一"
"下**功能（N 群組中的0 個）** 文字以展開屬性，然後按一下**新增特徵**："

msgid "OpenType feature overrides in Advanced Import Settings"
msgstr "高級匯入設定中的 OpenType 功能覆蓋"

msgid "**In a specific font usage (FontVariation)**"
msgstr "**在特定字形使用（FontVariation）**"

msgid ""
"To use a font feature, create a FontVariation resource like you would do for "
"a :ref:`variable font <doc_using_fonts_variable_fonts>`, then load a font "
"file within the FontVariation resource:"
msgstr ""
"若要使用字型功能，請建立 FontVariation 資源，就像建立可變字型 "
"<doc_using_fonts_variable_fonts>` 一樣，然後在 FontVariation 資源中載入字型檔"
"案："

msgid "Loading a font file into a FontVariation resource"
msgstr "在 FontVariation 資源中載入字形檔"

msgid ""
"Scroll down to the FontVariation's **OpenType Features** section, click the "
"**Features (0 of N set)** text to expand the property, then click **Add "
"Feature** and select the desired feature in the dropdown:"
msgstr ""
"向下捲動至FontVariation 的**OpenType Features** 部分，按一下**Features (0 of "
"N set)** 文字以展開屬性，然後按一下**Add Feature** 並在下拉列表中選擇所需的功"
"能："

msgid "Specifying OpenType features in a FontVariation resource"
msgstr "在 FontVariation 資源中指定 OpenType 功能"

msgid ""
"For example, here's the `Inter <https://rsms.me/inter/>`__ font without the "
"*Slashed Zero* feature (top), then with the *Slashed Zero* OpenType feature "
"enabled (bottom):"
msgstr ""
"例如，這裡是沒有 *Slashed Zero* 功能（頂部）的 Inter <https://rsms.me/inter/"
">`__ 字形，然後啟用了 *Slashed Zero* OpenType 功能（底部）："

msgid "OpenType feature comparison (Inter)"
msgstr "OpenType 功能比較（Inter）"

msgid ""
"You can disable ligatures and/or kerning for a specific font by adding "
"OpenType features, then unchecking them in the inspector:"
msgstr ""
"您可以透過新增 OpenType 功能來停用特定字形的連字和/或字距調整，然後在檢視器中"
"取消選取它們："

msgid "Disabling ligatures and kerning for a font"
msgstr "禁用字形的合字和字偶距"

msgid "System fonts"
msgstr "系統字形"

msgid ""
"Loading system fonts is only supported on Windows, macOS, Linux, Android and "
"iOS."
msgstr "只有 Windows、macOS、Linux、Android、iOS 支援載入系統字形。"

msgid ""
"However, loading system fonts on Android is unreliable as there is no "
"official API for doing so. Godot has to rely on parsing system configuration "
"files, which can be modified by third-party Android vendors. This may result "
"in non-functional system font loading."
msgstr ""

msgid ""
"System fonts are a different type of resource compared to imported fonts. "
"They are never actually imported into the project, but are loaded at run-"
"time. This has 2 benefits:"
msgstr ""
"與匯入的字形相比，系統字形是一種不同型別的資源。它們實際上從未匯入到專案中，"
"而是在運作時加載。這樣做有兩個好處："

msgid ""
"The fonts are not included within the exported PCK file, leading to a "
"smaller file size for the exported project."
msgstr "字形不包含在匯出的 PCK 檔案中，導致匯出專案的檔案大小較小。"

msgid ""
"Since fonts are not included with the exported project, this avoids "
"licensing issues that would occur if proprietary system fonts were "
"distributed alongside the project."
msgstr ""
"由於匯出的專案中不包含字形，因此可以避免在專有系統字形與專案一起分發時可能出"
"現的許可問題。"

msgid ""
"The engine automatically uses system fonts as fallback fonts, which makes it "
"possible to display CJK characters and emoji without having to load a custom "
"font. There are some restrictions that apply though, as mentioned in the :"
"ref:`Using emoji <doc_using_fonts_emoji>` section."
msgstr ""
"引擎會自動使用系統字形作為後備字形，這使得無需加載自訂字形即可顯示 CJK 字元和"
"表情符號。但有一些限制適用，如 :ref:`使用表情符號 <doc_using_fonts_emoji>` 部"
"分所述。"

#, fuzzy
msgid ""
"Create a :ref:`class_SystemFont` resource in the location where you desire "
"to use the system font:"
msgstr "在您想要使用系統字形的位置建立一個 SystemFont 資源："

msgid "Creating a SystemFont resource"
msgstr "建立自己的資源"

msgid "Specifying a font name to use in a SystemFont resource"
msgstr "指定要在 SystemFont 資源中使用的字型名稱"

msgid ""
"You can either specify one or more font names explicitly (such as "
"``Arial``), or specify the name of a font *alias* that maps to a "
"\"standard\" default font for the system:"
msgstr ""
"你可以明確的指定若干字形名稱（例如 ``Arial``），也可以指定字形的*別名*，後者"
"會對應到系統中的“標準”預設字形："

msgid "Font alias"
msgstr "前視圖"

msgid "Windows"
msgstr "Windows"

msgid "macOS/iOS"
msgstr "macOS"

msgid "Linux"
msgstr "Linux"

msgid "Android"
msgstr "Android"

msgid "``sans-serif``"
msgstr "``sans-serif``"

msgid "Arial"
msgstr "Arial"

msgid "Helvetica"
msgstr "Helvetica"

msgid "*Handled by fontconfig*"
msgstr "*由 fontconfig 處理*"

msgid "Roboto / Noto Sans"
msgstr "Roboto / Noto Sans"

msgid "``serif``"
msgstr "``serif``"

msgid "Times New Roman"
msgstr "Times New Roman"

msgid "Times"
msgstr "時間戳"

msgid "Noto Serif"
msgstr "Noto Serif"

msgid "``monospace``"
msgstr "等寬字形"

msgid "Courier New"
msgstr "Courier New"

msgid "Courier"
msgstr "Courier"

msgid "Droid Sans Mono"
msgstr "Droid Sans Mono"

msgid "``cursive``"
msgstr "``cursive``"

msgid "Comic Sans MS"
msgstr "Comic Sans MS"

msgid "Apple Chancery"
msgstr "套用更改。"

msgid "Dancing Script"
msgstr "Main（主要）腳本"

msgid "``fantasy``"
msgstr "``if x else``"

msgid "Gabriola"
msgstr "Gabriola"

msgid "Papyrus"
msgstr "Papyrus"

msgid ""
"On Android, Roboto is used for Latin/Cyrillic text and Noto Sans is used for "
"other languages' glyphs such as CJK. On third-party Android distributions, "
"the exact font selection may differ."
msgstr ""
"在 Android 上，Roboto 用於拉丁文/西里爾文文字，Noto Sans 用於其他語言的字形，"
"例如 CJK。在第三方 Android 發行版上，確切的字形選擇可能有所不同。"

msgid ""
"If specifying more than one font, the first font that is found on the system "
"will be used (from top to bottom). Font names and aliases are case-"
"insensitive on all platforms."
msgstr ""
"如果指定多個字形，則將使用系統上找到的第一個字形（從上到下）。字形名稱和別名"
"在所有平台上都不區分大小寫。"

msgid ""
"Like for font variations, you can save the SystemFont arrangement to a "
"resource file to reuse it in other places."
msgstr ""
"與字形變體一樣，您可以將 SystemFont 排列儲存到資源檔案中，以便在其他地方重複"
"使用它。"

msgid ""
"Remember that different system fonts have different metrics, which means "
"that text that can fit within a rectangle on one platform may not be doing "
"so on another platform. Always reserve some additional space during "
"development so that labels can extend further if needed."
msgstr ""
"請記住，不同的系統字形具有不同的規格，這意味著在一個平台上可以容納在矩形內的"
"文字可能無法在另一個平台上容納。在開發過程中始終保留一些額外的空間，以便標籤"
"可以在需要時進一步延伸。"

msgid ""
"Unlike Windows and macOS/iOS, the set of default fonts shipped on Linux "
"depends on the distribution. This means that on different Linux "
"distributions, different fonts may be displayed for a given system font name "
"or alias."
msgstr ""
"與 Windows 和 macOS/iOS 不同，Linux 上提供的預設字型集取決於發行版。這意味著"
"在不同的 Linux 發行版上，給定的系統字形名稱或別名可能會顯示不同的字形。"

msgid ""
"It is also possible to load fonts at runtime even if they aren't installed "
"on the system. See :ref:`Runtime loading and saving "
"<doc_runtime_file_loading_and_saving_fonts>` for details."
msgstr ""

msgid "Font prerendering"
msgstr "算繪"

msgid ""
"When using traditional rasterized fonts, Godot caches glyphs on a per-font "
"and per-size basis. This reduces stuttering, but it can still occur the "
"first time a glyph is displayed when running the project. This can be "
"especially noticeable at higher font sizes or on mobile devices."
msgstr ""
"當使用傳統的光柵化字形時，Godot 根據每個字形和每個尺寸快取字形。這可以減少卡"
"頓，但在運作專案時第一次顯示字形時，卡頓仍然可能發生。這在較大的字形大小或行"
"動裝置上尤其明顯。"

msgid ""
"When using MSDF fonts, they only need to be rasterized once to a special "
"signed distance field texture. This means caching can be done purely on a "
"per-font basis, without taking the font size into consideration. However, "
"the initial rendering of MSDF fonts is slower compared to a traditional "
"rasterized font at a medium size."
msgstr ""
"使用 MSDF 字形時，只需將它們光柵化為特殊的帶符號距離場紋理一次。這意味著快取"
"可以純粹基於每個字形來完成，而不考慮字形大小。然而，與中等尺寸的傳統光柵化字"
"形相比，MSDF 字形的初始算繪速度較慢。"

msgid ""
"To avoid stuttering issues related to font rendering, it is possible to "
"*prerender* certain glyphs. This can be done for all glyphs you intend to "
"use (for optimal results), or only for common glyphs that are most likely to "
"appear during gameplay (to reduce file size). Glyphs that aren't pre-"
"rendered will be rasterized on-the-fly as usual."
msgstr ""
"為了避免與字形算繪相關的口吃問題，可以「預先算繪」某些字形。可以對您打算使用"
"的所有字形執行此操作（以獲得最佳結果），或者僅對最有可能在遊戲過程中出現的常"
"見字形執行此操作（以減小檔案大小）。未預先算繪的字形將像往常一樣即時光柵化。"

msgid ""
"In both cases (traditional and MSDF), font rasterization is done on the CPU. "
"This means that the GPU performance doesn't affect how long it takes for "
"fonts to be rasterized."
msgstr ""
"在這兩種情況（傳統和 MSDF）中，字形光柵化都是在 CPU 上完成的。這意味著 GPU 效"
"能不會影響字形光柵化所需的時間。"

msgid ""
"Move to the **Pre-render Configurations** tab of the Advanced Import "
"Settings dialog, then add a configuration by clicking the \"plus\" symbol:"
msgstr ""
"移至「進階匯入設定」對話方塊的 **預先算繪配置** 分頁，然後透過點選「加號」符"
"號新增配置："

msgid ""
"Adding a new prerendering configuration in the Advanced Import Settings "
"dialog"
msgstr "在「進階匯入設定」對話方塊中新增新的預算繪配置"

msgid ""
"After adding a configuration, make sure it is selected by clicking its name "
"once. You can also rename the configuration by double-clicking it."
msgstr ""
"新增配置後，請確保透過單擊其名稱一次來選擇它。您也可以透過雙擊配置來重新命名"
"它。"

msgid ""
"There are 2 ways to add glyphs to be prerendered to a given configuration. "
"It is possible to use both approaches in a cumulative manner:"
msgstr ""
"有兩種方法可以將要預先算繪的字形新增到給定配置。可以以累積的方式使用這兩種方"
"法："

msgid "**Using text from translations**"
msgstr "使用 Weblate 來進行翻譯"

msgid ""
"For most projects, this approach is the most convenient to use, as it "
"automatically sources text from your language translations. The downside is "
"that it can only be used if your project supports :ref:`internationalization "
"<doc_internationalizing_games>`. Otherwise, stick to the \"Using custom "
"text\" approach described below."
msgstr ""
"對於大多數專案來說，這種方法使用起來最方便，因為它會自動從您的語言翻譯中取得"
"文字。缺點是它只能在您的專案支援 :ref:`國際化 "
"<doc_internationalizing_games>` 時使用。否則，請堅持使用下面描述的“使用自訂文"
"字”方法。"

msgid ""
"After adding translations to the Project Settings, use the **Glyphs from the "
"Translations** tab to check translations by double-clicking them, then click "
"**Shape All Strings in the Translations and Add Glyphs** at the bottom:"
msgstr ""
"將翻譯新增至專案設定後，使用「翻譯」標籤中的「**字形」透過雙擊來檢查翻譯，然"
"後點擊底部的「**調整翻譯中的所有字串並新增字形**」："

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog with the Glyphs "
"from the Translations tab"
msgstr "在「進階匯入設定」對話方塊中使用「翻譯」標籤中的字形啟用預先算繪"

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog with the "
"**Glyphs from the Translations** tab"
msgstr "使用「翻譯」標籤中的 **Glyphs 在「進階匯入設定」對話方塊中啟用預算繪"

msgid ""
"The list of prerendered glyphs is not automatically updated when "
"translations are updated, so you need to repeat this process if your "
"translations have changed significantly."
msgstr ""
"更新翻譯時，預算繪字形列表不會自動更新，因此如果您的翻譯發生重大更改，您需要"
"重複此過程。"

msgid "**Using custom text**"
msgstr "使用自定節點"

msgid ""
"While it requires manually specifying text that will appear in the game, "
"this is the most efficient approach for games which don't feature user text "
"input. This approach is worth exploring for mobile games to reduce the file "
"size of the distributed app."
msgstr ""
"雖然它需要手動指定遊戲中出現的文字，但對於不支援使用者文字輸入的遊戲來說，這"
"是最有效的方法。對於行動遊戲來說，這種方法值得探索，以減少分散式應用程式的檔"
"案大小。"

msgid ""
"To use existing text as a baseline for prerendering, go to the **Glyphs from "
"the Text** sub-tab of the Advanced Import Settings dialog, enter text in the "
"window on the right, then click **Shape Text and Add Glyphs** at the bottom "
"of the dialog:"
msgstr ""
"若要使用現有文字作為預先算繪的基線，請前往「進階匯入設定」對話方塊的「文字中"
"的字形」子分頁，在右側視窗中輸入文字，然後按一下「塑造文字形狀並新增字形”* * "
"在對話框底部："

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog, Glyphs from "
"the Text tab"
msgstr "在「進階匯入設定」對話方塊、「文字」標籤中的「字形」中啟用預算繪"

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog with the "
"**Glyphs from the Text** tab"
msgstr "使用「文字中的字形」標籤在「進階匯入設定」對話方塊中啟用預先算繪"

msgid ""
"If your project supports :ref:`internationalization "
"<doc_internationalizing_games>`, you can paste the contents of your CSV or "
"PO files in the above box to quickly prerender all possible characters that "
"may be rendered during gameplay (excluding user-provided or non-translatable "
"strings)."
msgstr ""
"如果您的專案支援國際化<doc_internationalizing_games>`，您可以將CSV 或PO 檔案"
"的內容貼到上面的方塊中，以快速預算繪遊戲過程中可能算繪的所有可能的字元（不包"
"括使用者提供的或不可翻譯的字元）字串）。"

msgid "**By enabling character sets**"
msgstr "**通過啟用字元集**"

msgid ""
"The second method requires less configuration and fewer updates if your "
"game's text changes, and is more suited to text-heavy games or multiplayer "
"games with chat. On the other hand, it may cause glyphs that never show up "
"in the game to be prerendered, which is less efficient in terms of file size."
msgstr ""
"如果您的遊戲文字發生變化，第二種方法需要較少的配置和較少的更新，並且更適合文"
"字較多的遊戲或具有聊天功能的多人遊戲。另一方面，它可能會導致遊戲中從未出現的"
"字形被預先算繪，這在檔案大小方面效率較低。"

#, fuzzy
msgid ""
"To use existing text as a baseline for prerendering, go to the **Glyphs from "
"the Character Map** sub-tab of the Advanced Import Settings dialog, then "
"*double-click* character sets to be enabled on the right:"
msgstr ""
"若要使用現有文字作為預先算繪的基線，請前往「進階匯入設定」對話方塊的「**字元"
"對應表中的字形**」子分頁，然後*雙擊*要在右側啟用的字元集："

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog, Glyphs from "
"the Character Map tab"
msgstr ""
"在「進階匯入設定」對話方塊、「字元對應表」標籤中的「字形」中啟用預先算繪"

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog with the "
"**Glyphs from the Character Map** tab"
msgstr "使用「字元對映表中的字形」標籤在「進階匯入設定」對話方塊中啟用預算繪"

msgid ""
"To ensure full prerendering, the character sets you need to enable depend on "
"which languages are supported in your game. For English, only **Basic "
"Latin** needs to be enabled. Enabling **Latin-1 Supplement** as well allows "
"fully covering many more languages, such as French, German and Spanish. For "
"Russian, **Cyrillic** needs to be enabled, and so on."
msgstr ""
"為了確保完全預先算繪，您需要啟用的字元集取決於您的遊戲支援的語言。對於英語，"
"僅需要啟用**基本拉丁語**。啟用 **Latin-1 Supplement** 還可以完全涵蓋更多語"
"言，例如法語、德語和西班牙語。對於俄語，需要啟用**西里爾**，等等。"

msgid "Default project font properties"
msgstr "存取區域變數或屬性："

msgid ""
"In the **GUI > Theme** section of the advanced Project Settings, you can "
"choose how the default font should be rendered:"
msgstr ""
"在高級“專案設定”的 **GUI > 主題**部分中，可以對預設字形的算繪方式進行選擇："

msgid ""
"**Default Font Antialiasing:** Controls the :ref:`antialiasing "
"<doc_using_fonts_antialiasing>` method used for the default project font."
msgstr ""
"**預設字形抗鋸齒：** 控制用於預設專案字形的 :ref:`抗鋸齒 "
"<doc_using_fonts_antialiasing>` 方法。"

msgid ""
"**Default Font Hinting:** Controls the :ref:`hinting "
"<doc_using_fonts_hinting>` method used for the default project font."
msgstr ""
"**預設字形提示：** 控制用於預設專案字形的:ref:`提示 "
"<doc_using_fonts_hinting>` 方法。"

msgid ""
"**Default Font Subpixel Positioning:** Controls the :ref:`subpixel "
"positioning <doc_using_fonts_subpixel_positioning>` method for the default "
"project font."
msgstr ""
"**預設字形子像素定位：** 控制預設專案字形的:ref:`子像素定位 "
"<doc_using_fonts_subpixel_positioning>` 方法。"

msgid ""
"**Default Font Multichannel Signed Distance Field:** If ``true``, makes the "
"default project font use :ref:`MSDF font rendering <doc_using_fonts_msdf>` "
"instead of traditional rasterization."
msgstr ""
"**預設字形多通道有符號距離場：** 如果“true”，則使預設專案字形使用:ref:`MSDF "
"字形算繪 <doc_using_fonts_msdf>` 而不是傳統的光柵化。"

msgid ""
"**Default Font Generate Mipmaps:** If ``true``, enables :ref:`mipmap "
"<doc_using_fonts_mipmaps>` generation and usage for the default project font."
msgstr ""
"**預設字型產生 Mipmap：** 如果為“true”，則啟用:ref:`mipmap "
"<doc_using_fonts_mipmaps>` 產生和使用預設專案字型。"

msgid ""
"These project settings *only* affect the default project font (the one that "
"is hardcoded in the engine binary)."
msgstr "這些專案設定*僅*影響預設專案字形（在引擎二進位檔案中硬編碼的字形）。"

msgid ""
"Custom fonts' properties are governed by their respective import options "
"instead. You can use the **Import Defaults** section of the Project Settings "
"dialog to override default import options for custom fonts."
msgstr ""
"自訂字形的屬性由其各自的匯入選項控制。您可以使用「專案設定」對話方塊的「**匯"
"入預設值**」部分來覆寫自訂字形的預設匯入選項。"

msgid "Translation status"
msgstr "翻譯狀態"
