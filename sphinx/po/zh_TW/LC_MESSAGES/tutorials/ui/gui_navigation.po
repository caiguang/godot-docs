# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Keyboard/Controller Navigation and Focus"
msgstr "鍵盤/控制器導覽和焦點"

msgid ""
"It is a common requirement for a user interface to have full keyboard and "
"controller support for navigation and interaction. There are two main "
"reasons why this is beneficial for projects: improved accessibility (not "
"everyone can use mouse or touch controls for interactions), and getting your "
"project ready for :ref:`consoles <doc_consoles>` (or just for people who "
"prefer to game with a controller on PC)."
msgstr ""
"對於使用者介面來說，支援全鍵盤和控制器進行導覽和互動是常見的。這有利於改善專"
"案可存取性，不是每個人都能使用滑鼠或觸摸控制進行互動，或是讓你的專案準備在:"
"ref:`遊戲主機 <doc_consoles>`上運作，或者只是為了那些喜歡在PC上用控制器玩遊戲"
"的人。"

msgid ""
"Navigating between UI elements with keyboard or controller is done by "
"changing which node is actively selected. This is also called changing UI "
"focus. Every :ref:`Control <class_Control>` node in Godot is capable of "
"having focus. By default, some control nodes have the ability to "
"automatically grab focus reacting to built-in UI actions such as ``ui_up``, "
"``ui_down``, ``ui_focus_next``, etc. These actions can be seen in the "
"project settings in the input map and can be modified."
msgstr ""
"使用鍵盤或控制器在 UI 元素之間導覽是通過更改主動選擇的節點來完成的。這也稱為"
"更改 UI 焦點。 Godot 中的每個 :ref:`Control <class_Control>` 節點都能夠獲得焦"
"點。預設情況下，一些控制項節點有能力自動拾取焦點內建的 UI 動作，並做出反應，"
"例如 ``ui_up``, ``ui_down``, ``ui_focus_next`` 等。這些動作可以在專案的輸入對"
"應中的設定和修改。"

msgid ""
"Because these actions are used for focus they should not be used for any "
"gameplay code."
msgstr "因為這些動作用於焦點，它們不應該被用於遊戲程式碼。"

msgid "Node settings"
msgstr "測試"

msgid ""
"In addition to the built-in logic, you can define what is known as focus "
"neighbors for each individual control node. This allows to finely tune the "
"path the UI focus takes across the user interface of your project. The "
"settings for individual nodes can be found in the Inspector dock, under the "
"\"Focus\" category of the \"Control\" section."
msgstr ""
"除了內建的邏輯之外，你還可以為每個單獨的控制項節點定義所謂的鄰焦點。這允許在"
"你專案的使用者介面上的路徑微調UI焦點。單個節點的設定可以在屬性面板欄的 "
"\"Control\" 部分的 \"Focus \" 類別下找到。"

msgid ""
"Neighbor options are used to define nodes for 4-directional navigation, such "
"as using arrow keys or a D-pad on a controller. For example, the bottom "
"neighbor will be used when navigating down with the down arrow or by pushing "
"down on the D-pad. The \"Next\" and \"Previous\" options are used with the "
"focus shift button, such as :kbd:`Tab` on desktop operating systems."
msgstr ""
"鄰近選項用於定義四向導覽的節點，例如使用方向鍵或控制器上的方向鍵。如，當使用"
"向下箭頭向下導覽或按下方向鍵時，將使用底部鄰近。 “下一個”和“上一個”選項與焦點"
"轉移按鈕一起使用，例如桌面作業系統上的 :kbd:`Tab`。"

msgid "A node can lose focus if it becomes hidden."
msgstr "如果節點被隱藏，它就會失去焦點。"

msgid ""
"The mode setting defines how a node can be focused. **All** means a node can "
"be focused by clicking on it with the mouse, or selecting it with a keyboard "
"or controller. **Click** means it can only be focused on by clicking on it. "
"Finally, **None** means it can't be focused at all. Different control nodes "
"have different default settings for this based on how they are typically "
"used, for example, :ref:`Label <class_Label>` nodes are set to \"None\" by "
"default, while :ref:`buttons <class_Button>` are set to \"All\"."
msgstr ""
"模式設定定義了節點如何被聚焦。**All**意味著節點可以通過用滑鼠點擊，或用鍵盤或"
"控制器選擇而被關注。**Click**意味著只能通過點擊來關注。最後，**None**意味著它"
"根本不能被關注。不同的控制項節點根據它們的典型使用方式有不同的預設設定，如，:"
"ref:`Label <class_Label>` 節點預設設定為“None”，而:ref:`按鈕 <class_Button>`"
"則為“All”。"

msgid ""
"Make sure to properly configure your scenes for focus and navigation. If a "
"node has no focus neighbor configured, the engine will try to guess the next "
"control automatically. This may result in unintended behavior, especially in "
"a complex user interface that doesn't have well-defined vertical or "
"horizontal navigation flow."
msgstr ""
"確保為焦點和導覽正確配置場景。如果節點沒有配置鄰焦點，引擎將嘗試自動猜測下一"
"個控制項。這可能會導致意外行為，尤其是在沒有明確定義垂直或水平導覽操作的複雜"
"使用者介面中。"

msgid "Necessary code"
msgstr "必要的程式碼"

msgid ""
"For keyboard and controller navigation to work correctly, any node must be "
"focused on using code when the scene starts. Without doing this, pressing "
"buttons or keys won't do anything. Here is a basic example of setting "
"initial focus with code:"
msgstr ""
"為了使鍵盤和控制器導覽正常工作，在場景開始時，所有節點都需要使用程式碼進行焦"
"點控制。如果不這樣做，按下按鈕或按鍵時，就不會有任何作用。下面是一個用程式碼"
"設定初始焦點的基本例子："

msgid ""
"Now when the scene starts the \"Start Button\" node will be focused, and the "
"keyboard or a controller can be used to navigate between it and other UI "
"elements."
msgstr ""
"現在，當場景啟動，\"Start Button\" 節點被聚焦，鍵盤或控制器可以用來在它和其他"
"UI元素之間進行導覽。"

msgid "Translation status"
msgstr "翻譯狀態"
