# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom GUI controls"
msgstr "自訂 GUI 控制項"

msgid "So many controls..."
msgstr "控制項真多呀……"

msgid ""
"Yet there are never enough. Creating your own custom controls that act just "
"the way you want them to is an obsession of almost every GUI programmer. "
"Godot provides plenty of them, but they may not work exactly the way you "
"want. Before contacting the developers with a pull-request to support "
"diagonal scrollbars, at least it will be good to know how to create these "
"controls easily from script."
msgstr ""
"不過這是永遠不嫌多的。每個 GUI 程式師幾乎都癡迷於建立自己的自訂控制項，讓這些"
"控制項讓自己的要求工作。Godot 提供了大量的控制項，但它們可能並不完全如您所願"
"的方式工作。在使用支援對角捲軸的拉取請求與開發人員聯繫之前，至少應該瞭解如何"
"從腳本輕鬆地建立這些控制項。"

msgid "Drawing"
msgstr "繪製"

msgid ""
"For drawing, it is recommended to check the :ref:`doc_custom_drawing_in_2d` "
"tutorial. The same applies. Some functions are worth mentioning due to their "
"usefulness when drawing, so they will be detailed next:"
msgstr ""
"談到繪製, 推薦看看這篇 :ref:`doc_custom_drawing_in_2d` 的教學. 同樣的原理適用"
"與控制項繪製. 這裡有些函式值得一提, 因為它們在繪製時有用, 所以接下來將進行詳"
"細說明:"

msgid "Checking control size"
msgstr "檢查控制項的大小"

msgid ""
"Unlike 2D nodes, \"size\" is important with controls, as it helps to "
"organize them in proper layouts. For this, the :ref:`Control.size "
"<class_Control_property_size>` property is provided. Checking it during "
"``_draw()`` is vital to ensure everything is kept in-bounds."
msgstr ""
"與2D節點不同,\"size\" 對控制項很重要, 因為它有助於在適當的佈局中組織它們. 為"
"此, 我們提供了 :ref:`Control.rect_size <class_Control_property_rect_size>` 屬"
"性. 在 ``_draw()`` 中檢查它以確保所有東西都在範圍之內."

msgid "Checking focus"
msgstr "檢查輸入焦點"

msgid ""
"Some controls (such as buttons or text editors) might provide input focus "
"for keyboard or joypad input. Examples of this are entering text or pressing "
"a button. This is controlled with the :ref:`Control.focus_mode "
"<class_Control_property_focus_mode>` property. When drawing, and if the "
"control supports input focus, it is always desired to show some sort of "
"indicator (highlight, box, etc.) to indicate that this is the currently "
"focused control. To check for this status, the :ref:`Control.has_focus() "
"<class_Control_method_has_focus>` method exists. Example"
msgstr ""
"一些控制項(如按鈕或文字編輯器)可為鍵盤或手柄輸入提供輸入焦點. 這方面的例子是"
"輸入文字或按下一個按鈕. 這可以通過 :ref:`Control.focus_mode "
"<class_Control_property_focus_mode>` 屬性來控制. 繪製時, 如果控制項支援輸入焦"
"點, 總是希望顯示某種指示來表明(高亮, 方框等), 目前這是焦點控制項. 為了檢查這"
"個狀態, 存在一個 :ref:`Control.has_focus() <class_Control_method_has_focus>` "
"的方法. 例子"

msgid "Sizing"
msgstr "調整大小"

msgid ""
"As mentioned before, size is important to controls. This allows them to lay "
"out properly, when set into grids, containers, or anchored. Controls, most "
"of the time, provide a *minimum size* to help properly lay them out. For "
"example, if controls are placed vertically on top of each other using a :ref:"
"`VBoxContainer <class_VBoxContainer>`, the minimum size will make sure your "
"custom control is not squished by the other controls in the container."
msgstr ""
"如前所述, 尺寸對控制項是很重要的. 這可以讓它們在設定網格, 容器或錨定時以正確"
"佈局. 控制項, 在大多數情況下, 提供了一個 *minimum size* , 以幫助它們正確佈"
"局. 例如, 如果控制項被垂直放置在彼此的頂部, 使用 :ref:`VBoxContainer "
"<class_VBoxContainer>` , 最小尺寸將確保你的自訂控制項不會被容器中的其他控制項"
"擠壓."

#, fuzzy
msgid ""
"To provide this callback, just override :ref:`Control._get_minimum_size() "
"<class_Control_private_method__get_minimum_size>`, for example:"
msgstr ""
"要提供此回呼函式, 只需重寫 :ref:`Control.get_minimum_size() "
"<class_Control_method_get_minimum_size>` , 例如:"

msgid "Alternatively, set it using a function:"
msgstr "或者, 使用函式進行設定:"

msgid "Input"
msgstr "輸入"

msgid ""
"Controls provide a few helpers to make managing input events much easier "
"than regular nodes."
msgstr "控制項為輸入事件的管理提供了一些輔助工具，比普通節點要方便一點。"

msgid "Input events"
msgstr "輸入事件"

msgid ""
"There are a few tutorials about input before this one, but it's worth "
"mentioning that controls have a special input method that only works when:"
msgstr ""
"在此之前有幾個關於輸入的教學, 但值得一提的是, 控制項有一個特殊的輸入方法, 只"
"有在以下情況下才起作用:"

msgid "The mouse pointer is over the control."
msgstr "滑鼠指標懸停在控制項上."

msgid ""
"The button was pressed over this control (control always captures input "
"until button is released)"
msgstr "滑鼠按鍵在此控制項上被按下 (控制項始終捕獲輸入, 直到按鈕被釋放)"

msgid ""
"Control provides keyboard/joypad focus via :ref:`Control.focus_mode "
"<class_Control_property_focus_mode>`."
msgstr ""
"控制項通過以下方式提供鍵盤和手柄焦點 :ref:`Control.focus_mode "
"<class_Control_property_focus_mode>`."

#, fuzzy
msgid ""
"This function is :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>`. Simply override it in your "
"control. No processing needs to be set."
msgstr ""
"這個函式 :ref:`Control._gui_input() <class_Control_method__gui_input>` . 只需"
"在你的控制項中重寫它. 不需要設定處理."

msgid ""
"For more information about events themselves, check the :ref:"
"`doc_inputevent` tutorial."
msgstr "有關事件本身的詳細資訊，請查看 :ref:`doc_inputevent` 教學。"

msgid "Notifications"
msgstr "通知"

msgid ""
"Controls also have many useful notifications for which no dedicated callback "
"exists, but which can be checked with the _notification callback:"
msgstr ""
"控制項也有許多有用的通知, 這些通知不存在專門的回呼函式, 但可以用_notification"
"回呼函式來檢查:"

msgid "Translation status"
msgstr "翻譯狀態"
