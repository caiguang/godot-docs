# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "3D antialiasing"
msgstr "**抗鋸齒：**"

msgid ""
"Godot also supports antialiasing in 2D rendering. This is covered on the :"
"ref:`doc_2d_antialiasing` page."
msgstr ""
"Godot 也支援 2D 算繪中的抗鋸齒。 doc_2d_antialiasing 頁面對此進行了介紹。"

msgid "Introduction"
msgstr "前言"

msgid ""
"Due to their limited resolution, scenes rendered in 3D can exhibit aliasing "
"artifacts. These artifacts commonly manifest as a \"staircase\" effect on "
"surface edges (edge aliasing) and as flickering and/or sparkles on "
"reflective surfaces (specular aliasing)."
msgstr ""
"由於解析度有限，以 3D 算繪的場景可能會出現鋸齒現象。這些偽影通常表現為表面邊"
"緣上的「階梯」效應（邊緣鋸齒）以及反射表面上的閃爍和/或閃爍（鏡面鋸齒）。"

msgid ""
"In the example below, you can notice how edges have a blocky appearance. The "
"vegetation is also flickering in and out, and thin lines on top of the box "
"have almost disappeared:"
msgstr ""
"在下面的範例中，您可以注意到邊緣如何具有塊狀外觀。植被也在閃爍，盒子頂部的細"
"線幾乎消失了："

msgid ""
"Image is scaled by 2× with nearest-neighbor filtering to make aliasing more "
"noticeable."
msgstr "圖像縮放 2 倍並進行近鄰濾波，使混疊現象更加明顯。"

msgid ""
"To combat this, various antialiasing techniques can be used in Godot. These "
"are detailed below."
msgstr ""
"為了解決這個問題，Godot 中可以使用各種抗鋸齒技術。以下詳細介紹這些內容。"

msgid ""
"You can compare antialiasing algorithms in action using the `3D Antialiasing "
"demo project <https://github.com/godotengine/godot-demo-projects/tree/"
"master/3d/antialiasing>`__."
msgstr ""
"除了這份說明文件，你可能也會想看看 `Godot Demo 專案 <https://github.com/"
"godotengine/godot-demo-projects>`_ 。"

msgid "Multisample antialiasing (MSAA)"
msgstr "多取樣抗鋸齒 (MSAA)。"

msgid ""
"This technique is the \"historical\" way of dealing with aliasing. MSAA is "
"very effective on geometry edges (especially at higher levels). MSAA does "
"not introduce any blurriness whatsoever."
msgstr ""
"這種技術是處理鋸齒的「歷史」方法。 MSAA 對幾何邊緣非常有效（尤其是在較高等"
"級）。 MSAA 不會造成任何模糊。"

msgid ""
"MSAA is available in 3 levels: 2×, 4×, 8×. Higher levels are more effective "
"at antialiasing edges, but are significantly more demanding. In games with "
"modern visuals, sticking to 2× or 4× MSAA is highly recommended as 8× MSAA "
"is usually too demanding."
msgstr ""
"MSAA 有 3 個等級：2×、4×、8×。較高的等級在抗鋸齒邊緣方面更有效，但要求也更"
"高。在具有現代視覺效果的遊戲中，強烈建議堅持使用 2× 或 4× MSAA，因為 8× MSAA "
"通常要求過高。"

msgid ""
"The downside of MSAA is that it only operates on edges. This is because MSAA "
"increases the number of *coverage* samples, but not the number of *color* "
"samples. However, since the number of color samples did not increase, "
"fragment shaders are still run for each pixel only once. Therefore, MSAA "
"does not reduce transparency aliasing for materials using the **Alpha "
"Scissor** transparency mode (1-bit transparency). MSAA is also ineffective "
"on specular aliasing."
msgstr ""
"MSAA 的缺點是它僅在邊緣上運作。這是因為 MSAA 增加了「覆蓋率」樣本的數量，但沒"
"有增加「顏色」樣本的數量。然而，由於顏色樣本的數量沒有增加，片段著色器仍然只"
"為每個像素運作一次。因此，MSAA 不會減少使用 **Alpha Scissor** 透明度模式（1 "
"位元透明度）的材質的透明度鋸齒。 MSAA 對鏡面反射鋸齒也無效。"

#, fuzzy
msgid ""
"To mitigate aliasing on alpha scissor materials, :ref:`alpha antialiasing "
"<doc_standard_material_3d_alpha_antialiasing>` (also called *alpha to "
"coverage*) can be enabled on specific materials in the StandardMaterial3D or "
"ORMMaterial3D properties. Alpha to coverage has a moderate performance cost, "
"but it's effective at reducing aliasing on transparent materials without "
"introducing any blurriness."
msgstr ""
"為了減輕 alpha 剪刀材質上的鋸齒，可以在 StandardMaterial3D 或 ORMMaterial3D "
"屬性中的特定材質上啟用 alpha 抗鋸齒（也稱為 *alpha 覆蓋範圍*）。這僅在使用 "
"MSAA（任何級別）時才有效。 Alpha 覆蓋範圍具有適中的性能成本，但它在減少透明材"
"質上的鋸齒而不引入任何模糊方面非常有效。"

msgid ""
"MSAA can be enabled in the Project Settings by changing the value of the "
"**Rendering > Anti Aliasing > Quality > MSAA 3D** setting. It's important to "
"change the value of the **MSAA 3D** setting and not **MSAA 2D**, as these "
"are entirely separate settings."
msgstr ""
"透過更改 **算繪 > 抗鋸齒 > 品質 > MSAA 3D** 設定的值，可以在專案設定中啟用 "
"MSAA。更改 **MSAA 3D** 設定的值而不是 **MSAA 2D** 非常重要，因為這些是完全獨"
"立的設定。"

msgid ""
"Comparison between no antialiasing (left) and various MSAA levels (right). "
"Note that alpha antialiasing is not used here:"
msgstr ""
"無抗鋸齒（左）與不同 MSAA 等級（右）之間的比較。請注意，此處未使用 alpha 抗鋸"
"齒："

msgid "Temporal antialiasing (TAA)"
msgstr "多取樣抗鋸齒 (MSAA)。"

msgid ""
"*This is only available in the Clustered Forward backend, not the Forward "
"Mobile or Compatibility backends.*"
msgstr "*這僅適用於群集轉送後端，不適用於轉送行動或相容性後端。*"

msgid ""
"Temporal antialiasing works by *converging* the result of previously "
"rendered frames into a single, high-quality frame. This is a continuous "
"process that works by jittering the position of all vertices in the scene "
"every frame. This jittering is done to capture sub-pixel detail and should "
"be unnoticeable except in extreme situations."
msgstr ""
"時間抗鋸齒的工作原理是將先前算繪影格的結果「聚合」成單一高品質影格。這是一個"
"連續的過程，透過每個畫面抖動場景中所有頂點的位置來運作。這種抖動是為了捕捉子"
"像素細節，除非在極端情況下，否則應該是不明顯的。"

msgid ""
"This technique is commonly used in modern games, as it provides the most "
"effective form of antialiasing against specular aliasing and other shader-"
"induced artifacts. TAA also provides full support for transparency "
"antialiasing."
msgstr ""
"此技術在現代遊戲中常用，因為它提供了針對鏡面反射鋸齒和其他著色器引起的偽影的"
"最有效的抗鋸齒形式。 TAA 也全面支援透明度抗鋸齒。"

msgid ""
"TAA introduces a small amount of blur when enabled in still scenes, but this "
"blurring effect becomes more pronounced when the camera is moving. Another "
"downside of TAA is that it can exhibit *ghosting* artifacts behind moving "
"objects. Rendering at a higher framerate will allow TAA to converge faster, "
"therefore making those ghosting artifacts less visible."
msgstr ""
"在靜止場景中啟用 TAA 會產生少量模糊，但當相機移動時，這種模糊效果會變得更加明"
"顯。 TAA 的另一個缺點是它可能會在移動物體後面呈現「重影」偽影。以更高的影格速"
"率進行算繪將使 TAA 收斂得更快，從而使這些重影偽影變得不那麼明顯。"

#, fuzzy
msgid ""
"Temporal antialiasing can be enabled in the Project Settings by changing the "
"value of the **Rendering > Anti Aliasing > Quality > Use TAA** setting."
msgstr ""
"透過更改 **算繪 > 抗鋸齒 > 品質 > 使用 Taa** 設定的值，可以在專案設定中啟用時"
"間抗鋸齒。"

msgid "Comparison between no antialiasing (left) and TAA (right):"
msgstr "無抗鋸齒（左）和 TAA（右）之間的比較："

#, fuzzy
msgid "AMD FidelityFX Super Resolution 2.2 (FSR2)"
msgstr ""
"解析度縮放使用了雙線性篩選或 AMD FidelityFX Super Resolution 1.0 （FSR）。"

msgid ""
"Since Godot 4.2, there is built-in support for `AMD FidelityFX Super "
"Resolution <https://www.amd.com/en/technologies/fidelityfx-super-"
"resolution>`__ 2.2. This is an :ref:`upscaling method "
"<doc_resolution_scaling>` compatible with all recent GPUs from any vendor. "
"FSR2 is normally designed to improve performance by lowering the internal 3D "
"rendering resolution, then upscaling to the output resolution."
msgstr ""

msgid ""
"However, unlike FSR1, FSR2 also provides temporal antialiasing. This means "
"FSR2 can be used at native resolution for high-quality antialiasing, with "
"the input resolution being equal to the output resolution. In this "
"situation, enabling FSR2 will actually *decrease* performance, but it will "
"significantly improve rendering quality."
msgstr ""

msgid ""
"Using FSR2 at native resolution is more demanding than using TAA at native "
"resolution, so its use is only recommended if you have significant GPU "
"headroom. On the bright side, FSR2 provides better antialiasing coverage "
"with less blurriness compared to TAA, especially in motion."
msgstr ""

#, fuzzy
msgid ""
"Comparison between no antialiasing (left) and FSR2 at native resolution "
"(right):"
msgstr "無抗鋸齒（左）和 FXAA（右）之間的比較："

msgid ""
"By default, the **FSR Sharpness** project setting is set to ``0.2`` (higher "
"values result in less sharpening). For the purposes of comparison, FSR "
"sharpening has been disabled by setting it to ``2.0`` on the above "
"screenshot."
msgstr ""

msgid "Fast approximate antialiasing (FXAA)"
msgstr "多取樣抗鋸齒 (MSAA)。"

msgid ""
"*This is only available in the Clustered Forward and Forward Mobile "
"backends, not the Compatibility backend.*"
msgstr ""
"*這僅適用於 Clustered Forward 和 Forward Mobile 後端，不適用於相容性後端。*"

msgid ""
"Fast approximate antialiasing is a post-processing antialiasing solution. It "
"is faster to run than any other antialiasing technique and also supports "
"antialiasing transparency. However, since it lacks temporal information, it "
"will not do much against specular aliasing."
msgstr ""
"快速近似抗鋸齒是一種後製抗鋸齒解決方案。它的運作速度比任何其他抗鋸齒技術都要"
"快，並且還支援抗鋸齒透明度。然而，由於它缺乏時間訊息，因此它對於防止鏡面反射"
"鋸齒沒有多大作用。"

msgid ""
"This technique is still sometimes used in mobile games. However, on desktop "
"platforms, FXAA generally fell out of fashion in favor of temporal "
"antialiasing, which is much more effective against specular aliasing. "
"Nonetheless, exposing FXAA as an in-game option may still be worthwhile for "
"players with low-end GPUs."
msgstr ""
"這種技術有時仍會在手機遊戲中使用。然而，在桌面平台上，FXAA 通常已經過時，取而"
"代之的是時間抗鋸齒，後者對於對抗鏡面鋸齒更為有效。儘管如此，對於擁有低階 GPU "
"的玩家來說，將 FXAA 作為遊戲內選項可能仍然值得。"

msgid ""
"FXAA introduces a moderate amount of blur when enabled (more than TAA when "
"still, but less than TAA when the camera is moving)."
msgstr ""
"FXAA 啟用後會產生適度的模糊（靜止時比 TAA 多，但相機移動時比 TAA 少）。"

msgid ""
"FXAA can be enabled in the Project Settings by changing the value of the "
"**Rendering > Anti Aliasing > Quality > Screen Space AA** setting to "
"**FXAA**."
msgstr ""
"可以在專案設定中啟用 FXAA，方法是將 **算繪 > 抗鋸齒 > 品質 > 螢幕空間 AA** 設"
"定的值變更為 **FXAA**。"

msgid "Comparison between no antialiasing (left) and FXAA (right):"
msgstr "無抗鋸齒（左）和 FXAA（右）之間的比較："

msgid "Supersample antialiasing (SSAA)"
msgstr "多取樣抗鋸齒 (MSAA)。"

msgid ""
"Supersampling provides the highest quality of antialiasing possible, but "
"it's also the most expensive. It works by shading every pixel in the scene "
"multiple times. This allows SSAA to antialias edges, transparency *and* "
"specular aliasing at the same time, without introducing potential ghosting "
"artifacts."
msgstr ""
"超級取樣可以提供最高品質的抗鋸齒效果，但它也是最昂貴的。它的工作原理是多次對"
"場景中的每個像素進行著色。這允許 SSAA 同時抗鋸齒邊緣、透明度*和*鏡面鋸齒，而"
"不會引入潛在的重影偽影。"

msgid ""
"The downside of SSAA is its *extremely* high cost. This cost generally makes "
"SSAA difficult to use for game purposes, but you may still find "
"supersampling useful for :ref:`offline rendering <doc_creating_movies>`."
msgstr ""
"SSAA 的缺點是其「極高」的成本。這種成本通常會使 SSAA 難以用於遊戲目的，但您可"
"能仍然會發現超級取樣對於離線算繪 <doc_creating_movies>` 很有用。"

#, fuzzy
msgid ""
"Supersample antialiasing is performed by increasing the **Rendering > "
"Scaling 3D > Scale** advanced project setting above ``1.0`` while ensuring "
"**Rendering > Scaling 3D > Mode** is set to **Bilinear** (the default). "
"Since the scale factor is defined per-axis, a scale factor of ``1.5`` will "
"result in 2.25× SSAA while a scale factor of ``2.0`` will result in 4× SSAA. "
"Since Godot uses the hardware's own bilinear filtering to perform the "
"downsampling, the result will look crisper at integer scale factors (namely, "
"``2.0``)."
msgstr ""
"超級取樣抗鋸齒是透過將**算繪> 縮放3D > 縮放** 高級專案設定增加到“1.0” 以上來"
"執行的，同時確保**算繪> 縮放3D > 模式** 設定為**雙線性* *（預設） 。由於比例"
"因子是按軸定義的，比例因子「1.5」將導致 2.25× SSAA，而比例因子「2.0」將導致 "
"4× SSAA。"

msgid ""
"Comparison between no antialiasing (left) and various SSAA levels (right):"
msgstr "無抗鋸齒（左）與不同 SSAA 等級（右）之間的比較："

msgid ""
"Supersampling also has high video RAM requirements, since it needs to render "
"in the target resolution then *downscale* to the window size. For example, "
"displaying a project in 3840×2160 (4K resolution) with 4× SSAA will require "
"rendering the scene in 7680×4320 (8K resolution), which is 4 times more "
"pixels."
msgstr ""
"超級取樣還具有很高的視訊 RAM 要求，因為它需要以目標解析度算繪，然後「縮小」到"
"視窗大小。例如，使用 4× SSAA 顯示 3840×2160（4K 解析度）的專案需要以 "
"7680×4320（8K 解析度）算繪場景，這是像素的 4 倍。"

msgid ""
"If you are using a high window size such as 4K, you may find that increasing "
"the resolution scale past a certain value will cause a heavy slowdown (or "
"even a crash) due to running out of VRAM."
msgstr ""
"如果您使用高視窗大小（例如 4K），您可能會發現將解析度比例增加到超過特定值將導"
"致由於 VRAM 耗盡而導致速度嚴重減慢（甚至當機）。"

msgid "Screen-space roughness limiter"
msgstr "螢幕空間粗糙度限制器"

msgid ""
"This is not an edge antialiasing method, but it is a way of reducing "
"specular aliasing in 3D."
msgstr "這不是邊緣抗鋸齒方法，而是減少 3D 鏡面反射鋸齒的一種方法。"

msgid ""
"The screen-space roughness limiter works best on detailed geometry. While it "
"has an effect on roughness map rendering itself, its impact is limited there."
msgstr ""
"螢幕空間粗糙度限制器最適合詳細的幾何形狀。雖然它對粗糙度圖算繪本身有影響，但"
"其影響有限。"

msgid ""
"The screen-space roughness limiter is enabled by default; it doesn't require "
"any manual setup. It has a small performance impact, so consider disabling "
"it if your project isn't affected by specular aliasing much."
msgstr ""
"螢幕空間粗糙度限制器預設為啟用；它不需要任何手動設定。它對性能影響很小，因此"
"如果您的專案不受鏡面鋸齒影響不大，請考慮停用它。"

msgid "Texture roughness limiter on import"
msgstr "匯入時的紋理粗糙度限制器"

msgid ""
"Like the screen-space roughness limiter, this is not an edge antialiasing "
"method, but it is a way of reducing specular aliasing in 3D."
msgstr ""
"與螢幕空間粗糙度限制器一樣，這不是邊緣抗鋸齒方法，而是減少 3D 鏡面反射鋸齒的"
"一種方法。"

msgid ""
"Roughness limiting on import works by specifying a normal map to use as a "
"guide for limiting roughness. This is done by selecting the roughness map in "
"the FileSystem dock, then going to the Import dock and setting **Roughness > "
"Mode** to the color channel the roughness map is stored in (typically "
"**Green**), then setting the path to the material's normal map. Remember to "
"click **Reimport** at the bottom of the Import dock after setting the path "
"to the normal map."
msgstr ""
"透過指定法線貼圖來限制匯入的粗糙度，以用作限制粗糙度的指南。這是透過在檔案系"
"統塢中選擇粗糙度圖來完成的，然後轉到匯入塢並將**粗糙度>模式**設定為儲存粗糙度"
"圖的顏色通道（通常為**綠色**），然後設定材質法線貼圖的路徑。設定法線貼圖的路"
"徑後，請記住點擊匯入底座底部的「重新匯入」。"

msgid ""
"Since this processing occurs purely on import, it has no performance cost "
"whatsoever. However, its visual impact is limited. Limiting roughness on "
"import only helps reduce specular aliasing within textures, not the aliasing "
"that occurs on geometry edges on detailed meshes."
msgstr ""
"由於此處理純粹在匯入時發生，因此沒有任何效能成本。但其視覺衝擊力有限。限制匯"
"入時的粗糙度僅有助於減少紋理內的鏡面鋸齒，而無助於減少詳細網格上的幾何邊緣上"
"發生的鋸齒。"

msgid "Which antialiasing technique should I use?"
msgstr "GDScript是什麼？為什麼我要用它？"

msgid ""
"**There is no \"one size fits all\" antialiasing technique.** Since "
"antialiasing is often demanding on the GPU or can introduce unwanted "
"blurriness, you'll want to add a setting to allow players to disable "
"antialiasing."
msgstr ""
"**不存在「一刀切」的抗鋸齒技術。** 由於抗鋸齒通常對 GPU 要求很高，或者可能會"
"導致不必要的模糊，因此您需要新增一個設定以允許玩家禁用抗鋸齒。"

#, fuzzy
msgid ""
"For projects with a photorealistic art direction, TAA is generally the most "
"suitable option. While TAA can introduce ghosting artifacts, there is no "
"other technique that combats specular aliasing as well as TAA does. The "
"screen-space roughness limiter helps a little, but is far less effective "
"against specular aliasing overall. If you have spare GPU power, you can use "
"FSR2 at native resolution for a better-looking form of temporal antialiasing "
"compared to standard TAA."
msgstr ""
"對於具有真實感藝術指導的專案，TAA 通常是最合適的選擇。雖然 TAA 可能會引入重影"
"偽像，但沒有其他技術可以像 TAA 一樣對抗鏡面反射鋸齒。螢幕空間粗糙度限制器有一"
"點幫助，但整體來說對於鏡面反射鋸齒的效果要差得多。"

msgid ""
"For projects with a low amount of reflective surfaces (such as a cartoon "
"artstyle), MSAA can work well. MSAA is also a good option if avoiding "
"blurriness and temporal artifacts is important, such as in competitive games."
msgstr ""
"對於反射面較少的專案（例如卡通藝術風格），MSAA 可以很好地發揮作用。如果避免模"
"糊和時間偽影很重要（例如在競技遊戲中），MSAA 也是一個不錯的選擇。"

msgid ""
"When targeting low-end platforms such as mobile or integrated graphics, FXAA "
"is usually the only viable option. 2× MSAA may be usable in some "
"circumstances, but higher MSAA levels are unlikely to run smoothly on mobile "
"GPUs."
msgstr ""
"在針對移動或集成顯卡等低端平臺時，FXAA 通常是唯一可行的選擇。2× MSAA 在某些情"
"況下可能可用，但更高的 MSAA 級別不太可能在移動 GPU 上流暢運作。"

msgid ""
"Godot allows using multiple antialiasing techniques at the same time. This "
"is usually unnecessary, but it can provide better visuals on high-end GPUs "
"or for :ref:`non-real-time rendering <doc_creating_movies>`. For example, to "
"make moving edges look better when TAA is enabled, you can also enable MSAA "
"at the same time."
msgstr ""
"Godot 允許同時使用多種抗鋸齒技術。這通常是不必要的，但在高端 GPU 上或在 :ref:"
"`非即時算繪 <doc_creating_movies>` 中可以提供更好的視覺效果。例如，為了在啟"
"用 TAA 時讓移動邊緣看起來更好，還可以同時啟用 MSAA。"

msgid "Translation status"
msgstr "翻譯狀態"
