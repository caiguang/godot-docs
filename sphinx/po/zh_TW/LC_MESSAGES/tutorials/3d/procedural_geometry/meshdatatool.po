# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the MeshDataTool"
msgstr "使用 MeshDataTool"

msgid ""
"The :ref:`MeshDataTool <class_meshdatatool>` is not used to generate "
"geometry. But it is helpful for dynamically altering geometry, for example "
"if you want to write a script to tessellate, simplify, or deform meshes."
msgstr ""
":ref:`MeshDataTool <class_meshdatatool>` 不是用來生成幾何體的, 但它對動態改變"
"幾何體很有説明, 例如, 如果你想寫一個腳本來分割, 簡化或變形網格."

msgid ""
"The MeshDataTool is not as fast as altering arrays directly using ArrayMesh. "
"However, it provides more information and tools to work with meshes than the "
"ArrayMesh does. When the MeshDataTool is used, it calculates mesh data that "
"is not available in ArrayMeshes such as faces and edges, which are necessary "
"for certain mesh algorithms. If you do not need this extra information then "
"it may be better to use an ArrayMesh."
msgstr ""
"MeshDataTool不像直接使用ArrayMesh改變陣列那麼快. 但是, 它提供了比ArrayMesh更"
"多的資訊和工具來處理網格. 當使用MeshDataTool時, 它會計算ArrayMeshes中沒有的網"
"格資料, 如面和邊, 這些資料對於某些網格演算法來說是必要的. 如果您不需要這些額"
"外的資訊, 那麼使用 ArrayMesh 可能會更好."

msgid ""
"MeshDataTool can only be used on Meshes that use the PrimitiveType ``Mesh."
"PRIMITIVE_TRIANGLES``."
msgstr ""
"MeshDataTool 只能用於使用 ``Mesh.PRIMITIVE_TRIANGLES`` PrimitiveType 的網格。"

msgid ""
"We initialize the MeshDataTool from an ArrayMesh by calling "
"``create_from_surface()``. If there is already data initialized in the "
"MeshDataTool, calling ``create_from_surface()`` will clear it for you. "
"Alternatively, you can call ``clear()`` yourself before re-using the "
"MeshDataTool."
msgstr ""
"我們通過呼叫 ``create_from_surface()`` 來使用 ArrayMesh 初始化 MeshDataTool。"
"如果該 MeshDataTool 中已經有初始化的資料了，呼叫 ``create_from_surface()`` 會"
"為你將其清除。或者你可以在重用 MeshDataTool 之前自己呼叫 ``clear()``。"

msgid ""
"In the examples below, assume an ArrayMesh called ``mesh`` has already been "
"created. See :ref:`ArrayMesh tutorial <doc_arraymesh>` for an example of "
"mesh generation."
msgstr ""
"下面的例子中，假定已經建立了一個名叫 ``mesh`` 的 ArrayMesh。網格生成的範例"
"見 :ref:`ArrayMesh 教學 <doc_arraymesh>`。"

msgid ""
"``create_from_surface()`` uses the vertex arrays from the ArrayMesh to "
"calculate two additional arrays, one for edges and one for faces, for a "
"total of three arrays."
msgstr ""
"``create_from_surface()`` 使用 ArrayMesh 中的頂點陣列來計算另外兩個陣列，一個"
"是邊、一個是面，總計三個陣列。"

msgid ""
"An edge is a connection between any two vertices. Each edge in the edge "
"array contains a reference to the two vertices it is composed of, and up to "
"two faces that it is contained within."
msgstr ""
"邊緣是任意兩個頂點之間的連接. 邊緣陣列中的每一條邊緣都包含了對它所組成的兩個"
"頂點的引用, 以及它所包含的最多的兩個面."

msgid ""
"A face is a triangle made up of three vertices and three corresponding "
"edges. Each face in the face array contains a reference to the three "
"vertices and three edges it is composed of."
msgstr ""
"面是由三個頂點和三條對應的邊組成的三角形. 面陣列中的每個面都包含了它所組成的"
"三個三角形和三條邊的參考."

msgid ""
"The vertex array contains edge, face, normal, color, tangent, uv, uv2, bone, "
"and weight information connected with each vertex."
msgstr ""
"頂點陣列包含與每個頂點相連的邊、面、法線、顏色、切線、uv、uv2、骨骼和權重信"
"息。"

msgid ""
"To access information from these arrays you use a function of the form "
"``get_****()``:"
msgstr "為了從這些陣列中獲取資訊, 你可以使用 ``get_ **** ()`` 的函式："

msgid ""
"What you choose to do with these functions is up to you. A common use case "
"is to iterate over all vertices and transform them in some way:"
msgstr ""
"你選擇用這些函式做什麼取決於你。一個常見的用例是對所有頂點進行反覆運算，並以"
"某種方式對它們進行轉換："

msgid ""
"These modifications are not done in place on the ArrayMesh. If you are "
"dynamically updating an existing ArrayMesh, first delete the existing "
"surface before adding a new one using :ref:`commit_to_surface() "
"<class_meshdatatool_method_commit_to_surface>`:"
msgstr ""
"這些修改不是在 ArrayMesh 上直接進行的。如果你要動態更新現有的 ArrayMesh，請在"
"新增新表面前使用 :ref:`commit_to_surface() "
"<class_meshdatatool_method_commit_to_surface>` 來刪除已有表面："

msgid ""
"Below is a complete example that turns a spherical mesh called ``mesh`` into "
"a randomly deformed blob complete with updated normals and vertex colors. "
"See :ref:`ArrayMesh tutorial <doc_arraymesh>` for how to generate the base "
"mesh."
msgstr ""
"下面是一個完整的範例，將一個叫做 ``mesh`` 的球體網格變成隨機變形的塊狀，法線"
"和頂點顏色也進行了更新。如何生成基礎網格見 :ref:`ArrayMesh 教學 "
"<doc_arraymesh>`。"

msgid "Translation status"
msgstr "翻譯狀態"
