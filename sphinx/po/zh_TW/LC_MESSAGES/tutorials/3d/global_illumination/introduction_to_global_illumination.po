# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to global illumination"
msgstr "序言"

msgid "What is global illumination?"
msgstr "怎麼樣算是好的說明文件？"

msgid ""
"*Global illumination* is a catch-all term used to describe a system of "
"lighting that uses both direct light (light that comes directly from a light "
"source) and indirect light (light that bounces from a surface). In a 3D "
"rendering engine, global illumination is one of the most important elements "
"to achieving realistic lighting. Global illumination aims to mimic how light "
"behaves in real life, such as light bouncing on surfaces and light being "
"emitted from emissive materials."
msgstr ""
"*全域照明*是一個包羅萬象的術語，用於描述同時使用直接光（直接來自光源的光）和"
"間接光（從表面反射的光）的照明系統。在 3D 算繪引擎中，全域照明是實作逼真照明"
"的最重要元素之一。全局照明旨在模仿現實生活中光的行為方式，例如光在表面上反射"
"以及光從發光材料發出。"

msgid ""
"In the example below, the entire scene is illuminated by an emissive "
"material (the white square at the top). The white wall and ceiling on the "
"back is tinted red and green close to the walls, as the light bouncing on "
"the colored walls is being reflected back onto the rest of the scene."
msgstr ""
"在下面的範例中，整個場景由發光材質（頂部的白色方塊）照亮。背面的白色牆壁和天"
"花板在靠近牆壁的地方被染成紅色和綠色，因為彩色牆壁上反射的光線被反射回場景的"
"其餘部分。"

msgid "Global illumination is composed of several key concepts:"
msgstr "全局照明由幾個關鍵概念組成："

msgid "Indirect diffuse lighting"
msgstr "間接漫射照明"

msgid ""
"This is the lighting that does not change depending on the camera's angle. "
"There are two main sources of indirect diffuse lighting:"
msgstr "這是不隨相機角度而改變的照明。間接漫射照明有兩個主要來源："

msgid ""
"Light *bouncing* on surfaces. This bounced lighting is multiplied with the "
"material's albedo color. The bounced lighting can then be reflected by other "
"surfaces, with decreasing impact due to light attenuation. In real life, "
"light bounces an infinite number of times. However, for performance reasons, "
"this can't be simulated in a game engine. Instead, the number of bounces is "
"typically limited to 1 or 2 (or up to 16 when baking lightmaps). A greater "
"number of bounces will lead to more realistic light falloff in shaded areas, "
"at the cost of lower performance or greater bake times."
msgstr ""
"光在表面上「反彈」。這種反射光會與材質的反照率顏色相乘。然後，反射的照明可以"
"被其他表面反射，由於光衰減而減少影響。在現實生活中，光會反射無數次。然而，出"
"於性能原因，這無法在遊戲引擎中模擬。相反，反彈次數通常限制為 1 或 2（或在烘焙"
"光貼圖時最多為 16）。反射次數越多，陰影區域的光線衰減就越真實，但代價是效能降"
"低或烘烤時間更長。"

msgid ""
"Emissive materials can also emit light that can be bounced on surfaces. This "
"acts as a form of *area lighting*. Instead of having an infinitely small "
"point emit light using an OmniLight3D or SpotLight3D node, an area of a "
"determined size will emit light using its own surface."
msgstr ""
"發光材料還可以發射可在表面反射的光。這相當於“區域照明”的一種形式。確定大小的"
"區域將使用自己的表面發光，而不是使用 OmniLight3D 或 SpotLight3D 節點讓無限小"
"的點發光。"

msgid ""
"Direct diffuse lighting is already handled by the light nodes themselves, "
"which means that global illumination algorithms only try to represent "
"indirect lighting."
msgstr ""
"直接漫射照明已經由光節點本身處理，這意味著全局照明演算法僅嘗試表示間接照明。"

msgid ""
"Different global illumination techniques offer varying levels of accuracy to "
"represent indirect diffuse lighting. See the comparison table at the bottom "
"of this page for more information."
msgstr ""
"不同的全域照明技術提供不同等級的精確度來表示間接漫射照明。有關更多信息，請參"
"閱本頁底部的比較表。"

msgid ""
"To provide more accurate ambient occlusion for small objects, screen-space "
"ambient occlusion (SSAO) can be enabled in the :ref:`environment "
"<doc_environment_and_post_processing>` settings. SSAO has a significant "
"performance cost, so make sure to disable it when targeting low-end hardware."
msgstr ""
"為了提供小物件更準確的環境光遮擋，可以在環境 "
"<doc_environment_and_post_processing> 設定中啟用螢幕空間環境光遮擋 (SSAO)。 "
"SSAO 具有顯著的效能成本，因此在針對低階硬體時請確保已停用它。"

msgid ""
"Indirect diffuse lighting may be a source of color banding in scenes with no "
"detailed textures. This results in light gradients not being smooth, but "
"having a visible \"stepping\" effect instead. See the :ref:"
"`doc_3d_rendering_limitations_color_banding` section in the 3D rendering "
"limitations documentation for ways to reduce this effect."
msgstr ""
"間接漫射照明可能是沒有詳細紋理的場景中色帶的來源。這會導致光線漸進不平滑，而"
"是具有可見的“步進”效果。請參閱 3D 算繪限製檔案中的 "
"doc_3d_rendering_limitations_color_banding 部分，以了解減少這種影響的方法。"

msgid "Specular lighting"
msgstr "\\|regular\\| 稍微"

msgid ""
"Specular lighting is also referred to as *reflections*. This is the lighting "
"that changes in intensity depending on the camera's angle. This specular "
"lighting can be *direct* or *indirect*."
msgstr ""
"鏡面照明也稱為“反射”。這是根據相機角度改變強度的照明。這種鏡面照明可以是「直"
"接」或「間接」。"

msgid ""
"Most global illumination techniques offer a way to render specular lighting. "
"However, the degree of accuracy at which specular lighting is rendered "
"varies greatly from technique to technique. See the comparison table at the "
"bottom of this page for more information."
msgstr ""
"大多數全局照明技術都提供了算繪鏡面照明的方法。然而，不同技術算繪鏡面光照的精"
"確度差異很大。有關更多信息，請參閱本頁底部的比較表。"

msgid ""
"To provide more accurate reflections for small objects, screen-space "
"reflections (SSR) can be enabled in the :ref:`environment "
"<doc_environment_and_post_processing>` settings. SSR has a significant "
"performance cost (even more so than SSAO), so make sure to disable it when "
"targeting low-end hardware."
msgstr ""
"為了提供小物件更準確的反射，可以在環境 <doc_environment_and_post_processing> "
"設定中啟用螢幕空間反射 (SSR)。 SSR 具有顯著的效能成本（甚至比 SSAO 更高），因"
"此在針對低階硬體時請確保已停用它。"

msgid "Which global illumination technique should I use?"
msgstr "GDScript是什麼？為什麼我要用它？"

msgid ""
"When determining a global illumination (GI) technique to use, there are "
"several criteria to keep in mind:"
msgstr "在確定要使用的全域照明 (GI) 技術時，需要牢記幾個標準："

msgid ""
"**Performance.** Real-time GI techniques are usually more expensive compared "
"to semi-real-time or baked techniques. Note that most of the cost in GI "
"rendering is spent on the GPU, rather than the CPU."
msgstr ""
"**性能。** 與半實時或烘焙技術相比，實時 GI 技術通常更昂貴。請注意，GI 算繪的"
"大部分成本都花在 GPU 上，而不是 CPU 上。"

msgid ""
"**Visuals.** On top of not performing the best, real-time GI techniques "
"generally don't provide the best visual output. This is especially the case "
"in a mostly static scene where the dynamic nature of real-time GI is not "
"easily noticeable. If maximizing visual quality is your goal, baked "
"techniques will often look better and will result in fewer light leaks."
msgstr ""
"**視覺效果。** 除了表現不佳之外，即時 GI 技術通常無法提供最佳的視覺輸出。在大"
"多數靜態場景中尤其如此，即時 GI 的動態功能不容易被注意到。如果最大化視覺品質"
"是您的目標，烘焙技術通常會看起來更好，並且會減少漏光。"

msgid ""
"**Real-time ability.** Some GI techniques are fully real-time, whereas "
"others are only semi-real-time or aren't real-time at all. Semi-real-time "
"techniques have restrictions that fully real-time techniques don't. For "
"instance, dynamic objects may not contribute emissive lighting to the scene. "
"Non-real-time techniques do not support *any* form of dynamic GI, so it must "
"be faked using other techniques if needed (such as placing positional lights "
"near emissive surfaces). Real-time ability also affects the GI technique's "
"viability in procedurally generated levels."
msgstr ""
"**實時能力。** 一些 GI 技術是完全實時的，而另一些則只是半實時或根本不是實時"
"的。半實時技術具有全實時技術沒有的限制。例如，動態物件可能不會向場景提供發射"
"照明。非即時技術不支援「任何」形式的動態 GI，因此如果需要，必須使用其他技術來"
"偽造它（例如將位置光放置在發光錶面附近）。即時能力也會影響 GI 技術在程式產生"
"關卡中的可行性。"

msgid ""
"**User work needed.** Some GI techniques are fully automatic, whereas others "
"require careful planning and manual work on the user's side. Depending on "
"your time budget, some GI techniques may be preferable to others."
msgstr ""
"**需要使用者工作。** 有些 GI 技術是全自動的，而其他技術則需要使用者仔細規劃和"
"手動工作。根據您的時間預算，某些 GI 技術可能比其他技術更好。"

msgid ""
"Here's a comparison of all the global illumination techniques available in "
"Godot:"
msgstr "以下是 Godot 中可用的所有全域照明技術的比較："

msgid "Performance"
msgstr "效能"

msgid "In order of performance from fastest to slowest:"
msgstr "按照效能從最快到最慢的順序："

msgid "**ReflectionProbe:**"
msgstr "**反射：**"

msgid ""
"ReflectionProbes with their update mode set to **Always** are much more "
"expensive than probes with their update mode set to **Once** (the default). "
"Suited for integrated graphics when using the **Once** update mode. "
"*Available when using the Forward Mobile backend. Will be available in the "
"Compatibility backend in later releases.*"
msgstr ""
"更新模式設定為 **Always** 的 ReflectionProbes 比更新模式設定為 **Once** （預"
"設）的探查昂貴得多。適用於使用 **Once** 更新模式時的整合式顯示卡。 *使用 "
"Forward Mobile 後端時可用。將在以後版本的兼容性後端中提供。*"

msgid "**LightmapGI:**"
msgstr "**字面值**"

msgid ""
"Lights can be baked with indirect lighting only, or fully baked on a per-"
"light basis to further improve performance. Hybrid setups can be used (such "
"as having a real-time directional light and fully baked positional lights). "
"Directional information can be enabled before baking to improve visuals at a "
"small performance cost (and at the cost of larger file sizes). Suited for "
"integrated graphics. *Available when using the Forward Mobile backend. Will "
"be available in the Compatibility backend in later releases.*"
msgstr ""
"燈光可以僅使用間接照明進行烘焙，也可以基於每個燈光進行完全烘焙，以進一步提高"
"性能。可以使用混合設定（例如具有即時定向光和完全烘焙的位置光）。可以在烘焙之"
"前啟用方向訊息，以較小的性能成本（並以較大的檔案大小為代價）改善視覺效果。適"
"合整合顯示卡。 *使用 Forward Mobile 後端時可用。將在以後版本的兼容性後端中提"
"供。*"

msgid "**VoxelGI:**"
msgstr "**VoxelGI:**"

msgid ""
"The bake's number of subdivisions can be adjusted to balance between "
"performance and quality. The VoxelGI rendering quality can be adjusted in "
"the Project Settings. The rendering can optionally be performed at half "
"resolution (and then linearly scaled) to improve performance significantly. "
"**Not available** *when using the Forward Mobile or Compatibility backends.*"
msgstr ""
"可以調整烘焙的細分數量以平衡性能和品質。 VoxelGI 算繪品質可以在專案設定中調"
"整。算繪可以選擇以半解析度執行（然後線性縮放）以顯著提高效能。 **不可用** *使"
"用 Forward Mobile 或相容性後端時。*"

msgid "**Screen-space indirect lighting (SSIL):**"
msgstr "**GLES3:** 螢幕空間週遭遮擋。"

msgid ""
"The SSIL quality and number of blur passes can be adjusted in the Project "
"Settings. By default, SSIL rendering is performed at half resolution (and "
"then linearly scaled) to ensure a reasonable performance level. **Not "
"available** *when using the Forward Mobile or Compatibility backends.*"
msgstr ""
"可以在「專案設定」中調整 SSIL 品質和模糊頻道數量。預設情況下，SSIL 算繪以一半"
"解析度執行（然後線性縮放）以確保合理的效能等級。 **不可用** *使用 Forward "
"Mobile 或相容性後端時。*"

msgid "**SDFGI:**"
msgstr "**SDFGI:**"

msgid ""
"The number of cascades can be adjusted to balance performance and quality. "
"The number of rays thrown per frame can be adjusted in the Project Settings. "
"The rendering can optionally be performed at half resolution (and then "
"linearly scaled) to improve performance significantly. **Not available** "
"*when using the Forward Mobile or Compatibility backends.*"
msgstr ""
"可以調整級聯的數量以平衡性能和品質。每影格投射的光線數量可以在「專案設定」中"
"調整。算繪可以選擇以半解析度執行（然後線性縮放）以顯著提高效能。 **不可用** *"
"使用 Forward Mobile 或相容性後端時。*"

msgid "Visuals"
msgstr "視覺腳本 (VisualScript)"

msgid ""
"For comparison, here's a 3D scene with no global illumination options used:"
msgstr "為了進行比較，這裡有一個未使用全域照明選項的 3D 場景："

msgid ""
"A 3D scene without any form of global illumination (only constant "
"environment lighting). The box and sphere near the camera are both dynamic "
"objects."
msgstr ""
"沒有任何形式的全局照明的 3D 場景（只有恆定的環境照明）。相機附近的盒子和球體"
"都是動態物體。"

msgid "Here's how Godot's various global illumination techniques compare:"
msgstr "以下是 Godot 的各種全域照明技術的比較："

msgid ""
"**VoxelGI:** |average| Good reflections and indirect lighting, but beware of "
"leaks."
msgstr "**VoxelGI：** |平均|良好的反射和間接照明，但要小心洩漏。"

msgid "average"
msgstr "走訪"

msgid ""
"Due to its voxel-based nature, VoxelGI will exhibit light leaks if walls and "
"floors are too thin. It's recommended to make sure all solid surfaces are at "
"least as thick as one voxel."
msgstr ""
"由於其基於體素的性質，如果牆壁和地板太薄，VoxelGI 將出現漏光。建議確保所有實"
"體表面至少與一個體素一樣厚。"

msgid ""
"Streaking artifacts may also be visible on sloped surfaces. In this case, "
"tweaking the bias properties or rotating the VoxelGI node can help combat "
"this."
msgstr ""
"在傾斜的表面上也可能會看到條紋偽影。在這種情況下，調整偏移屬性或旋轉 VoxelGI "
"節點可以幫助解決這個問題。"

msgid "VoxelGI in action."
msgstr "VoxelGI 的實際應用。"

msgid ""
"**SDFGI:** |average| Good reflections and indirect lighting, but beware of "
"leaks and visible cascade shifts."
msgstr "**SDFGI：** |平均|良好的反射和間接照明，但要注意洩漏和可見的級聯偏移。"

msgid ""
"GI level of detail varies depending on the distance between the camera and "
"surface."
msgstr "GI 細節等級會根據相機與表面之間的距離而變化。"

msgid ""
"Leaks can be reduced significantly by enabling the **Use Occlusion** "
"property. This has a small performance cost, but it often results in fewer "
"leaks compared to VoxelGI."
msgstr ""
"透過啟用 **使用遮蔽** 屬性可以顯著減少洩漏。這具有較小的性能成本，但與 "
"VoxelGI 相比，它通常會導致更少的洩漏。"

msgid ""
"Cascade shifts may be visible when the camera moves fast. This can be made "
"less noticeable by adjusting the cascade sizes or using fog."
msgstr ""
"當相機快速移動時，可能會看到級聯移位。透過調整級聯大小或使用霧氣可以使這種情"
"況變得不那麼明顯。"

msgid "SDFGI in action."
msgstr "定義一個函式。"

msgid ""
"**Screen-space indirect lighting (SSIL):** |average| Good *secondary* source "
"of indirect lighting, but no reflections."
msgstr ""
"**螢幕空間間接照明 (SSIL)：** |平均|良好的“次要”間接照明源，但沒有反射。"

msgid ""
"SSIL is designed to be used as a complement to another GI technique such as "
"VoxelGI, SDFGI or LightmapGI. SSIL works best for small-scale details, as it "
"cannot provide accurate indirect lighting for large structures on its own. "
"SSIL can provide real-time indirect lighting in situations where other GI "
"techniques fail to capture small-scale details or dynamic objects. Its "
"screen-space nature will result in some artifacts, especially when objects "
"enter and leave the screen. SSIL works using the last frame's color (before "
"post-processing) which means that emissive decals and custom shaders are "
"included (as long as they're present on screen)."
msgstr ""
"SSIL 旨在用作另一種 GI 技術（例如 VoxelGI、SDFGI 或 LightmapGI）的補充。 "
"SSIL 最適合小規模細節，因為它本身無法為大型結構提供準確的間接照明。在其他 GI "
"技術無法捕捉小尺度細節或動態物件的情況下，SSIL 可以提供即時間接照明。其螢幕空"
"間性質會導致一些偽影，尤其是當物件進入和離開螢幕時。 SSIL 使用最後一影格的顏"
"色（在後處理之前）工作，這意味著包含自發光裝飾和自訂著色器（只要它們出現在螢"
"幕上）。"

msgid ""
"SSIL in action (without any other GI technique). Notice the emissive "
"lighting around the yellow box."
msgstr "SSIL 的實際應用（沒有其他 GI 技術）。注意黃色框周圍的發射光。"

msgid ""
"**LightmapGI:** |good| Excellent indirect lighting, decent reflections "
"(optional)."
msgstr "**LightmapGI：** |好|出色的間接照明，良好的反射（可選）。"

msgid "good"
msgstr "good"

msgid ""
"This is the only technique where the number of light bounces can be pushed "
"above 2 (up to 16). When directional information is enabled, spherical "
"harmonics (SH) are used to provide blurry reflections."
msgstr ""
"這是唯一可以將光反射次數提高到 2 以上（最多 16 個）的技術。啟用方向資訊後，球"
"諧函式 (SH) 用於提供模糊反射。"

msgid ""
"LightmapGI in action. Only indirect lighting is baked here, but direct light "
"can also be baked."
msgstr "LightmapGI 的實際應用。這裡只烘焙間接光照，但也可以烘焙直接光照。"

msgid ""
"**ReflectionProbe:** |average| Good reflections, but poor indirect lighting."
msgstr "**ReflectionProbe：** |平均|反射良好，但間接照明較差。"

msgid ""
"Indirect lighting can be disabled, set to a constant color spread throughout "
"the probe, or automatically read from the probe's environment (and applied "
"as a cubemap). This essentially acts as local ambient lighting. Reflections "
"and indirect lighting are blended with other nearby probes."
msgstr ""
"可以停用間接照明，將其設定為整個探查的恆定顏色分佈，或自動從探查的環境中讀取"
"（並作為立方體貼圖應用）。這本質上充當局部環境照明。反射和間接照明與其他附近"
"的探頭混合。"

msgid ""
"ReflectionProbe in action (without any other GI technique). Notice the "
"reflective sphere."
msgstr "ReflectionProbe 的實際應用（沒有任何其他 GI 技術）。注意反射球體。"

msgid "Real-time ability"
msgstr "**即時光照：**"

msgid "**VoxelGI:** |good| Fully real-time."
msgstr "**VoxelGI：** |good| 完全即時。"

msgid ""
"Indirect lighting and reflections are fully real-time. Dynamic objects can "
"receive GI *and* contribute to it with their emissive surfaces. Custom "
"shaders can also emit their own light, which will be emitted accurately."
msgstr ""
"間接關照和反射是完全即時的。動態物體可以接收 GI， *並* 通過其發射表面對 GI 做"
"出貢獻。自訂著色器也可以準確地發射自己的光線。"

msgid ""
"Viable for procedurally generated levels *if they are generated in advance* "
"(and not during gameplay). Baking requires several seconds or more to "
"complete, but it can be done from both the editor and an exported project."
msgstr ""
"適用於程式生成的關卡*如果它們是提前生成的*（而不是在遊戲過程中）。烘焙需要幾"
"秒鐘或更長時間才能完成，但可以從編輯器和匯出的專案中完成。"

msgid "**SDFGI:** |average| Semi-real-time."
msgstr "**SDFGI：**|average| 半即時。"

msgid ""
"Cascades are generated in real-time, making SDFGI viable for procedurally "
"generated levels (including when structures are generated during gameplay)."
msgstr ""
"級聯是即時生成的，使得 SDFGI 適用於程式生成的關卡（包括在遊戲過程中生成結構"
"時）。"

msgid ""
"Dynamic objects can *receive* GI, but not *contribute* to it. Emissive "
"lighting will only update when an object enters a cascade, so it may still "
"work for slow-moving objects."
msgstr ""
"動態物件可以「接收」GI，但不能「貢獻」它。發射照明僅在物件進入級聯時才會更"
"新，因此它可能仍然適用於緩慢移動的物件。"

msgid "**Screen-space indirect lighting (SSIL):** |good| Fully real-time."
msgstr "**螢幕空間間接光照（SSIL）：**|good| 完全即時。"

msgid ""
"SSIL works with both static and dynamic lights. It also works with both "
"static and dynamic occluders (including emissive materials)."
msgstr ""
"SSIL 適用於靜態和動態燈光。它也適用於靜態和動態遮擋器（包括發射材料）。"

msgid "**LightmapGI:** |bad| Baked, and therefore not real-time."
msgstr "**LightmapGI：**|bad| 進行了烘焙，因此非即時。"

msgid "bad"
msgstr "與"

msgid ""
"Both indirect lighting and SH reflections are baked and can't be changed at "
"run-time. Real-time GI must be :ref:`simulated via other means "
"<doc_faking_global_illumination>`, such as real-time positional lights. "
"Dynamic objects receive indirect lighting via light probes, which can be "
"placed automatically or manually by the user (LightmapProbe node). Not "
"viable for procedurally generated levels, as baking lightmaps is only "
"possible from the editor."
msgstr ""
"間接光照和 SH 反射都是烘焙的，無法在運作時更改。即時 GI 必須以其他方式模擬，"
"例如即時位置燈。動態物件透過光探查接收間接光照，光探查可以自動或由使用者手動"
"放置（LightmapProbe 節點）。對於程式產生的關卡不可行，因為只能從編輯器中烘焙"
"光照貼圖。"

msgid "**ReflectionProbe:** |average| Optionally real-time."
msgstr "**ReflectionProbe：**|average| 可選即時。"

msgid ""
"By default, reflections update when the probe is moved. They update as often "
"as possible if the update mode is set to **Always** (which is expensive)."
msgstr ""
"預設情況下，移動探查時反射會更新。如果更新模式設定為**始終**（這很昂貴），它"
"們會盡可能頻繁地更新。"

msgid ""
"Indirect lighting must be configured manually by the user, but can be "
"changed at run-time without causing an expensive computation to happen "
"behind the scenes. This makes ReflectionProbes viable for procedurally "
"generated levels."
msgstr ""
"間接照明必須由使用者手動配置，但可以在運作時更改，而不會導致在幕後發生昂貴的"
"計算。這使得 ReflectionProbes 對於程式產生的關卡是可行的。"

msgid "User work needed"
msgstr "使用者干預"

msgid "**VoxelGI:** One or more VoxelGI nodes need to be created and baked."
msgstr "**VoxelGI：**需要建立若干 VoxelGI 節點並烘焙。"

msgid ""
"Adjusting extents correctly is required to get good results. Additionally "
"rotating the node and baking again can help combat leaks or streaking "
"artifacts in certain situations. Bake times are fast – usually below 10 "
"seconds for a scene of medium complexity."
msgstr ""
"需要正確調整範圍才能獲得良好的結果。此外，旋轉節點並再次烘烤可以幫助消除某些"
"情況下的洩漏或條紋偽影。烘焙時間很快 - 對於中等複雜度的場景，通常低於 10 秒。"

msgid "**SDFGI:** Very little."
msgstr "**SDFGI：**非常少。"

msgid ""
"SDFGI is fully automatic; it only needs to be enabled in the Environment "
"resource. The only manual work required is to set MeshInstances' bake mode "
"property correctly. No node needs to be created, and no baking is required."
msgstr ""
"SDFGI是全自動的；它只需要在環境資源中啟用。唯一需要的手動工作是正確設定 "
"MeshInstances 的烘焙模式屬性。不需要建立節點，也不需要烘焙。"

msgid "**Screen-space indirect lighting (SSIL):** Very little."
msgstr "**螢幕空間間接光照（SSIL）：**非常少。"

msgid ""
"SSIL is fully automatic; it only needs to be enabled in the Environment "
"resource. No node needs to be created, and no baking is required."
msgstr ""
"SSIL 是全自動的；它只需要在環境資源中啟用。不需要建立節點，也不需要烘焙。"

msgid "**LightmapGI:** Requires UV2 setup and baking."
msgstr "**LightmapGI：**需要設定 UV2 並烘焙。"

msgid ""
"Static meshes must be reimported with UV2 and lightmap generation enabled. "
"On a dedicated GPU, bake times are relatively fast thanks to the GPU-based "
"lightmap baking – usually below 1 minute for a scene of medium complexity."
msgstr ""
"必須在啟用 UV2 和光照貼圖產生的情況下重新匯入靜態網格物件。在專用 GPU 上，由"
"於基於 GPU 的光照貼圖烘焙，烘焙時間相對較快 – 對於中等複雜度的場景，烘焙時間"
"通常低於 1 分鐘。"

msgid "**ReflectionProbe:** Placed manually by the user."
msgstr "**ReflectionProbe：**使用者手動放置。"

msgid "Summary"
msgstr "總結"

msgid "If you are unsure about which GI technique to use:"
msgstr "如果您不確定要使用哪種 GI 技術："

msgid ""
"For desktop games, it's a good idea to start with :ref:`SDFGI "
"<doc_using_sdfgi>` first as it requires the least amount of setup. Move to "
"other GI techniques later if needed. To improve performance on low-end GPUs "
"and integrated graphics, consider adding an option to disable SDFGI or :ref:"
"`VoxelGI <doc_using_voxel_gi>` in your game's settings. SDFGI can be "
"disabled in the Environment resource, and VoxelGI can be disabled by hiding "
"the VoxelGI node(s). To further improve visuals on high-end setups, add an "
"option to enable SSIL in your game's settings."
msgstr ""
"對於桌上遊戲，最好先從 SDFGI <doc_using_sdfgi>` 開始，因為它需要最少的設定。"
"如果需要的話，稍後再轉向其他 GI 技術。若要提高低階 GPU 和整合顯示卡的效能，請"
"考慮在遊戲設定中新增一個選項來停用 SDFGI 或 VoxelGI <doc_using_voxel_gi>`。可"
"以在環境資源中停用 SDFGI，並且可以透過隱藏 VoxelGI 節點來停用 VoxelGI。為了進"
"一步改善高階設定的視覺效果，請在遊戲設定中新增一個啟用 SSIL 的選項。"

msgid ""
"For mobile games, :ref:`LightmapGI <doc_using_lightmap_gi>` and :ref:"
"`ReflectionProbes <doc_reflection_probes>` are the only supported options. "
"See also :ref:`doc_introduction_to_global_illumination_alternatives`."
msgstr ""
"對於行動遊戲，LightmapGI <doc_using_lightmap_gi>` 和 ReflectionProbes "
"<doc_reflection_probes>` 是唯一支援的選項。另請參閱:ref:"
"`doc_introduction_to_global_Illumination_alternatives`。"

msgid ""
"You can compare global illumination techniques in action using the `Global "
"Illumination demo project <https://github.com/godotengine/godot-demo-"
"projects/tree/master/3d/global_illumination>`__."
msgstr ""
"除了這份說明文件，你可能也會想看看 `Godot Demo 專案 <https://github.com/"
"godotengine/godot-demo-projects>`_ 。"

msgid "Which global illumination mode should I use on meshes and lights?"
msgstr "我應該在網格和燈光上使用哪種全域照明模式？"

msgid ""
"Regardless of which global illumination technique you use, there is no "
"universally \"better\" global illumination mode. Still, here are some "
"recommendations for meshes:"
msgstr ""
"無論您使用哪種全域照明技術，都不存在普遍「更好」的全域照明模式。儘管如此，這"
"裡還是一些關於網格的建議："

msgid ""
"For static level geometry, use the **Static** global illumination mode "
"*(default)*."
msgstr "對於靜態關卡幾何體，請使用**靜態**全域照明模式*（預設）*。"

msgid ""
"For small dynamic geometry and players/enemies, use the **Disabled** global "
"illumination mode. Small dynamic geometry will not be able to contribute a "
"significant amount of indirect lighting, due to the geometry being smaller "
"than a voxel. If you need indirect lighting for small dynamic objects, it "
"can be simulated using an OmniLight3D or SpotLight3D node parented to the "
"object."
msgstr ""
"對於小型動態幾何體和玩家/敵人，請使用**停用**全域照明模式。由於幾何體小於體"
"素，小型動態幾何體將無法貢獻大量間接照明。如果您需要小型動態物件的間接照明，"
"可以使用該物件的父級 OmniLight3D 或 SpotLight3D 節點進行模擬。"

msgid ""
"For *large* dynamic level geometry (such as a moving train), use the "
"**Dynamic** global illumination mode. Note that this only has an effect with "
"VoxelGI, as SDFGI and LightmapGI do not support global illumination with "
"dynamic objects."
msgstr ""
"對於*大型*動態關卡幾何體（例如移動中的火車），請使用**動態**全域照明模式。請"
"注意，這僅對 VoxelGI 有效，因為 SDFGI 和 LightmapGI 不支援動態物件的全域照"
"明。"

msgid "Here are some recommendations for light bake modes:"
msgstr "以下是一些關於光烘焙模式的建議："

msgid ""
"For static level lighting, use the **Static** bake mode. The **Static** mode "
"is also suitable for dynamic lights that don't change much during gameplay, "
"such as a flickering torch."
msgstr ""
"對於靜態水平照明，請使用**靜態**烘焙模式。 **靜態**模式也適用於遊戲過程中變化"
"不大的動態燈光，例如閃爍的火炬。"

msgid ""
"For short-lived dynamic effects (such as a weapon), use the **Disabled** "
"bake mode to improve performance."
msgstr "對於短暫的動態效果（例如武器），請使用**禁用**烘焙模式來提高性能。"

msgid ""
"For long-lived dynamic effects (such as a rotating alarm light), use the "
"**Dynamic** bake mode to improve quality *(default)*. Note that this only "
"has an effect with VoxelGI and SDFGI, as LightmapGI does not support global "
"illumination with dynamic lights."
msgstr ""
"對於長期動態效果（例如旋轉警報燈），請使用**動態**烘焙模式來提高品質*（預設）"
"*。請注意，這僅對 VoxelGI 和 SDFGI 有效，因為 LightmapGI 不支援動態燈光的全域"
"照明。"

msgid "Alternatives to GI techniques"
msgstr "另外，也可以執行"

msgid ""
"If none of the GI techniques mentioned above fits, it's still possible to :"
"ref:`simulate GI by placing additional lights manually "
"<doc_faking_global_illumination>`. This requires more manual work, but it "
"can offer good performance *and* good visuals if done right. This approach "
"is still used in many modern games to this day."
msgstr ""
"如果上述的 GI 技術都不適合，仍然可以透過手動放置額外的燈光來模擬 GI "
"<doc_faking_global_Illumination>`。這需要更多的手動工作，但如果做得正確，它可"
"以提供良好的性能*和*良好的視覺效果。時至今日，這種方法仍在許多現代遊戲中使"
"用。"

msgid ""
"When targeting low-end hardware in situations where using LightmapGI is not "
"viable (such as procedurally generated levels), relying on environment "
"lighting alone or a constant ambient light factor may be a necessity. This "
"may result in flatter visuals, but adjusting the ambient light color and sky "
"contribution still makes it possible to achieve acceptable results in most "
"cases."
msgstr ""
"當在使用 LightmapGI 不可行的情況下（例如程式產生的等級）針對低端硬體時，可能"
"需要單獨依賴環境照明或恆定的環境光係數。這可能會導致更平坦的視覺效果，但調整"
"環境光顏色和天空貢獻仍然可以在大多數情況下獲得可接受的結果。"

msgid "Translation status"
msgstr "翻譯狀態"
