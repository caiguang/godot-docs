# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Pseudolocalization"
msgstr "偽在地化"

msgid "Introduction"
msgstr "前言"

msgid ""
"When creating a game, the process of localization usually starts when "
"development has finished. This means that translations aren't available "
"during development for testing whether the project is internationalized "
"properly."
msgstr ""
"建立遊戲時，本地化過程通常在開發完成後開始。這意味著在開發過程中無法使用翻譯"
"來測試專案是否正確國際化。"

msgid ""
"Godot offers pseudolocalization as a way to test how robust the project is "
"when it comes to locale changes. Pseudolocalization simulates changes that "
"might take place during localization. This way, any issues regarding "
"internationalization can be recognized early on during development."
msgstr ""
"Godot 提供偽本地化作為測試專案在區域設定變更時的穩健性的一種方法。偽本地化模"
"擬本地化期間可能發生的變化。這樣，任何有關國際化的問題都可以在開發過程的早期"
"就被辨識出來。"

msgid ""
"You can see how pseudolocalization works in action using the "
"`Pseudolocalizaton demo project <https://github.com/godotengine/godot-demo-"
"projects/tree/master/gui/pseudolocalization>`__."
msgstr ""
"除了這份說明文件，你可能也會想看看 `Godot Demo 專案 <https://github.com/"
"godotengine/godot-demo-projects>`_ 。"

msgid "Enabling and configuring pseudolocalization"
msgstr "偽當地語系化的啟用和配置"

msgid ""
"Enabling pseudolocalization and the configurations related to it is as "
"simple as toggling a checkbox in the project settings. These settings can be "
"found in **Project → Project Settings → General → Internationalization → "
"Pseudolocalization** after enabling the **Advanced** toggle in the project "
"settings dialog:"
msgstr ""
"啟用偽本地化及其相關配置就像在專案設定中切換複選框一樣簡單。在專案設定對話方"
"塊中啟用 **進階** 切換後，可以在 **專案 → 專案設定 → 常規 → 國際化 → 偽本地化"
"** 中找到這些設定："

msgid ""
"Pseudolocalization can also be :ref:`toggled at runtime from a script "
"<doc_pseudolocalization_runtime>`."
msgstr "偽本地化也可以在執行時從腳本 <doc_pseudolocalization_runtime> 切換。"

msgid "Pseudolocalization configurations"
msgstr "組織專案"

msgid ""
"Pseudolocalization in Godot can be set up according to the specific use case "
"of the project. Here are the pseudolocalization properties that can be "
"configured through project settings:"
msgstr ""
"Godot 中的偽本地化可以根據專案的具體用例進行設定。以下是可以透過專案設定進行"
"配置的偽本地化屬性："

msgid ""
"``replace_with_accents``: Replaces all characters in the string with their "
"accented variants. *\"The quick brown fox jumped over the lazy dog\"* will "
"be converted to *\"Ŧh̀é q́üíćḱ ḅŕôŵή f́ôx́ ǰüm̀ṕéd́ ôṽéŕ ŧh̀é łáźý d́ôǵ\"* when this "
"setting is enabled. This can be used to spot untranslated strings that won't "
"have accents, but is also useful to check for missing glyphs in the font(s) "
"used by the project."
msgstr ""
"``replace_with_accents``：將字串中的所有字元替換為其重音變體。 *啟用此設定"
"後， *「敏捷的棕色狐狸跳過了懶狗」*將轉換為*「Ŧh̀é q́üíćḱ ḅŕôŵή f́ôx́ ǰüm̀ṕéd́ "
"ôṽéŕ ŧh̀é ô這可用於發現沒有重音的未翻譯字串，但對於檢查專案使用的字形中是否缺"
"少字形也很有用。"

msgid ""
"``double_vowels``: Doubles all the vowels in the string. It is a good "
"approximation to simulate expansion of text during localization. This can be "
"used to check for text that would overflow its container (such as buttons)."
msgstr ""
"``double_vowels``：將字串中的所有元音加倍。這是在本地化過程中模擬文字擴充的一"
"個很好的近似方法。這可用於檢查會溢出其容器的文字（例如按鈕）。"

msgid ""
"``fake_bidi``: Fake bidirectional text (simulates right-to-left text). This "
"is useful to simulate right-to-left writing systems to check for potential "
"layout issues that would occur in languages using right-to-left scripts."
msgstr ""
"``fake_bidi``：假雙向文字（模擬從右到左的文字）。這對於模擬從右到左的書寫系統"
"非常有用，以檢查使用從右到左腳本的語言中可能出現的潛在佈局問題。"

msgid ""
"``override``: Replaces all the characters in the string with an asterisk "
"(``*``). This is useful for quickly finding text that isn't being localized."
msgstr ""
"``override``：用星號（``*``）取代字串中的所有字元。這對於快速尋找未本地化的文"
"字很有用。"

msgid ""
"``expansion_ratio``: Can be used in cases where doubling the vowels isn't a "
"sufficient approximation. This setting pads the string with underscores "
"(``_``) and expands it by the given ratio. An expansion ratio of ``0.3`` is "
"sufficient for most practical cases; it will increase the length of the "
"string by 30%."
msgstr ""
"“expansion_ratio”：可用來雙元音不足以近似的情況。此設定用下劃線（``_``）填充"
"字串並按給定的比例擴充它。對於大多數實際情況，「0.3」的膨脹比就足夠了；它會使"
"字串的長度增加 30%。"

msgid ""
"``prefix`` and ``suffix``: These properties can be used to specify a prefix "
"and suffix to wrap the text in."
msgstr "``prefix`` 和 ``suffix``：這些屬性可用來指定包裝文字的前綴和後綴。"

msgid ""
"``skip_placeholders``: Skips placeholders for string formatting like ``%s`` "
"and ``%f``. This is useful to identify places where more arguments are "
"required for the formatted string to display correctly."
msgstr ""
"“skip_placeholders”：跳過字串格式的佔位符，如“%s”和“%f”。這對於識別需要更多參"
"數才能正確顯示格式化字串的位置很有用。"

msgid ""
"All of these properties can be toggled as needed according to the project's "
"use case."
msgstr "可以通過程式碼配置這些屬性，也可以在“屬性面板”中對其進行編輯。"

msgid "Configuring pseudolocalization at runtime"
msgstr "運作時配置偽當地語系化"

msgid ""
"Pseudolocalization can be toggled at runtime using the :ref:"
"`pseudolocalization_enabled<class_TranslationServer_property_pseudolocalization_enabled>` "
"property in TranslationServer. However, if runtime configuration of "
"pseudolocalization properties is required, they can be directly configured "
"using :ref:`ProjectSettings.set_setting(property, value) "
"<class_ProjectSettings_method_set_setting>` and then calling :ref:"
"`TranslationServer.reload_pseudolocalization() "
"<class_TranslationServer_method_reload_pseudolocalization>` which reparses "
"the pseudolocalization properties and reloads the pseudolocalization. The "
"following code snippet shall turn on ``replace_with_accents`` and "
"``double_vowels`` properties and then call ``reload_pseudolocalization()`` "
"for the changes to get reflected::"
msgstr ""
"可以使用 TranslationServer 中的 "
"pseudolocalization_enabled<class_TranslationServer_property_pseudolocalization_enabled> "
"屬性在執行時切換偽本地化。但是，如果需要執行時間配置偽本地化屬性，可以使用 "
"ProjectSettings.set_setting(property, value) "
"<class_ProjectSettings_method_set_setting>` 直接配置，然後呼叫 "
"TranslationServer.reload_pseudolocalization() "
"<class_TranslationServer_method_reloadse_pseudolocalization() "
"<class_TranslationServer_method_reloadse_pseudoloation() "
"<class_TranslationServer_method_recal_pseseconjcalation() "
"<class_TranslationServer_method_reloadse_pseodation 並重新定位偽。以下程式碼"
"片段應開啟「replace_with_accents」和「double_vowels」屬性，然後呼叫"
"「reload_pseudolocalization()」以使變更反映出來："

msgid "Translation status"
msgstr "翻譯狀態"
