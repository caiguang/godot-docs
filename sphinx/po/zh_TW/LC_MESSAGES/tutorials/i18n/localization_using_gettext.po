# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Localization using gettext"
msgstr "使用 gettext 進行當地語系化"

msgid ""
"In addition to :ref:`doc_importing_translations` in CSV format, Godot also "
"supports loading translation files written in the GNU gettext format (text-"
"based ``.po`` and compiled ``.mo`` since Godot 4.0)."
msgstr ""
"除了 CSV 格式的 :ref:`doc_importing_translations` 外，Godot 還支援載入 GNU "
"gettext 格式的翻譯檔（基於文字的 ``.po``，Godot 3.5 起還支援編譯後的 ``."
"mo``）。"

msgid ""
"For an introduction to gettext, check out `A Quick Gettext Tutorial <https://"
"www.labri.fr/perso/fleury/posts/programming/a-quick-gettext-tutorial."
"html>`_. It's written with C projects in mind, but much of the advice also "
"applies to Godot (with the exception of ``xgettext``)."
msgstr ""
"有關 gettext 的介紹，請查看 `A Quick Gettext Tutorial <https://www.labri.fr/"
"perso/fleury/posts/programming/a-quick-gettext-tutorial.html>`_。它是針對 C "
"專案編寫的，但是很多建議也適用於 Godot（除了 ``xgettext``）。"

msgid "Advantages"
msgstr "優勢"

msgid ""
"gettext is a standard format, which can be edited using any text editor or "
"GUI editors such as `Poedit <https://poedit.net/>`_."
msgstr ""
"gettext 是一種標準格式，可以使用任何文字編輯器或圖形化使用者介面編輯器（如 "
"`Poedit <https://poedit.net/>`_）進行編輯。"

msgid ""
"gettext is supported by translation platforms such as `Transifex <https://"
"www.transifex.com/>`_ and `Weblate <https://weblate.org/>`_, which makes it "
"easier for people to collaborate to localization."
msgstr ""
"`Transifex <https://www.transifex.com/>`_ 和 `Weblate <https://weblate.org/"
">`_ 等翻譯平臺也支援 gettext，讓人們可以更方便地進行當地語系化協作。"

msgid ""
"Compared to CSV, gettext works better with version control systems like Git, "
"as each locale has its own messages file."
msgstr ""
"與 CSV 相比，gettext 更適合 Git 這樣的版本控制系統，因為每個語言環境都有自己"
"的消息檔。"

msgid ""
"Multiline strings are more convenient to edit in gettext files compared to "
"CSV files."
msgstr "與 CSV 檔相比，在 gettext 檔中編輯多行字串更方便。"

msgid "Disadvantages"
msgstr "缺點"

msgid ""
"gettext is a more complex format than CSV and can be harder to grasp for "
"people new to software localization."
msgstr ""
"gettext 是一種比 CSV 更複雜的格式，對於剛接觸軟體當地語系化的人來說可能更難理"
"解。"

msgid ""
"People who maintain localization files will have to install gettext tools on "
"their system. However, as Godot supports using text-based message files (``."
"po``), translators can test their work without having to install gettext "
"tools."
msgstr ""
"維護當地語系化檔的人員必須在其系統上安裝 gettext 工具。但是，由於 Godot 支援"
"使用基於文字的消息檔（``.po``），翻譯人員無需安裝 gettext 工具即可測試他們的"
"工作。"

msgid "Installing gettext tools"
msgstr "安裝 gettext 工具"

msgid ""
"The command line gettext tools are required to perform maintenance "
"operations, such as updating message files. Therefore, it's strongly "
"recommended to install them."
msgstr ""
"需要命令列 gettext 工具來執行維護操作，如更新消息檔。因此，強烈建議您安裝它"
"們。"

msgid ""
"**Windows:** Download an installer from `this page <https://mlocati.github."
"io/articles/gettext-iconv-windows.html>`_. Any architecture and binary type "
"(shared or static) works; if in doubt, choose the 64-bit static installer."
msgstr ""
"**Windows：**從`該頁面 <https://mlocati.github.io/articles/gettext-iconv-"
"windows.html>`_下載安裝程式。任何體系結構和二進位型別（共用或靜態）都可以；如"
"果不確定，請選擇 64 位元靜態安裝程式。"

msgid ""
"**macOS:** Install gettext either using `Homebrew <https://brew.sh/>`_ with "
"the ``brew install gettext`` command, or using `MacPorts <https://www."
"macports.org/>`_ with the ``sudo port install gettext`` command."
msgstr ""
"**macOS：**使用 `Homebrew <https://brew.sh/>`_ 的 ``brew install gettext`` 命"
"令來安裝 gettext，或使用 `MacPorts <https://www.macports.org/>`_ 的 ``sudo "
"port install gettext`` 命令來安裝。"

msgid ""
"**Linux:** On most distributions, install the ``gettext`` package from your "
"distribution's package manager."
msgstr ""
"**Linux：**在大多數發行版本上，請使用發行版本的包管理器安裝 ``gettext`` 包。"

msgid "Creating the PO template"
msgstr "放置樣板"

msgid "Automatic generation using the editor"
msgstr "執行編輯器"

#, fuzzy
msgid ""
"Since Godot 4.0, the editor can generate a PO template automatically from "
"specified scene and GDScript files. This POT generation also supports "
"translation contexts and pluralization if used in a script, with the "
"optional second argument of ``tr()`` and the ``tr_n()`` method."
msgstr ""
"從Godot 4.0開始，編輯器可以根據指定的場景和腳本檔案自動產生PO模板。如果在腳本"
"中使用，此 POT 產生還支援翻譯本文和複數，並帶有可選的第二個參數 tr() 和 "
"tr_n() 方法。"

msgid ""
"Open the Project Settings' **Localization > POT Generation** tab, then use "
"the **Add…** button to specify the path to your project's scenes and scripts "
"that contain localizable strings:"
msgstr ""
"打開專案設定的**當地語系化 > POT 生成**分頁，然後使用**新增...** 按鈕指定專案"
"中包含可當地語系化字串的場景和腳本的路徑："

msgid ""
"Creating a PO template in the Localization > POT Generation tab of the "
"Project Settings"
msgstr "在專案設定的“當地語系化 > POT 生成”分頁中建立 PO 範本"

msgid ""
"Creating a PO template in the **Localization > POT Generation** tab of the "
"Project Settings"
msgstr "在專案設定的**當地語系化 > POT 生成**分頁中建立 PO 範本"

msgid ""
"After adding at least one scene or script, click **Generate POT** in the top-"
"right corner, then specify the path to the output file. This file can be "
"placed anywhere in the project directory, but it's recommended to keep it in "
"a subdirectory such as ``locale``, as each locale will be defined in its own "
"file."
msgstr ""
"Godot目前不支援使用 ``xgettext`` 提取源字串, 因此必須手動建立 ``.pot`` 檔案. "
"該檔可以放在專案目錄中的任何位置, 但建議將其放在子目錄中, 因為每個語言環境都"
"將在其自己的檔中定義."

msgid ""
"You can then move over to :ref:`creating a messages file from a PO template "
"<doc_localization_using_gettext_messages_file>`."
msgstr ""
"然後，您可以繼續從 PO 範本 <doc_localization_using_gettext_messages_file> 建"
"立訊息檔案。"

msgid ""
"Remember to regenerate the PO template after making any changes to "
"localizable strings, or after adding new scenes or scripts. Otherwise, newly "
"added strings will not be localizable and translators won't be able to "
"update translations for outdated strings."
msgstr ""
"請記住在對可本地化字串進行任何更改或新增新場景或腳本後重新生成 PO 模板。否"
"則，新新增的字串將無法在地化，且翻譯人員將無法更新過時字串的翻譯。"

msgid "Manual creation"
msgstr "手動使用"

msgid ""
"If the automatic generation approach doesn't work out for your needs, you "
"can create a PO template by hand in a text editor. This file can be placed "
"anywhere in the project directory, but it's recommended to keep it in a "
"subdirectory, as each locale will be defined in its own file."
msgstr ""
"Godot目前不支援使用 ``xgettext`` 提取源字串, 因此必須手動建立 ``.pot`` 檔案. "
"該檔可以放在專案目錄中的任何位置, 但建議將其放在子目錄中, 因為每個語言環境都"
"將在其自己的檔中定義."

msgid ""
"Create a directory named ``locale`` in the project directory. In this "
"directory, save a file named ``messages.pot`` with the following contents:"
msgstr ""
"在工程目錄下建立名為 `locale` 的目錄. 在該目錄下, 保存一個名為 ``messages."
"pot`` 的檔, 內容如下:"

msgid ""
"Messages in gettext are made of ``msgid`` and ``msgstr`` pairs. ``msgid`` is "
"the source string (usually in English), ``msgstr`` will be the translated "
"string."
msgstr ""
"gettext 中的消息由 ``msgid`` 和 ``msgstr`` 對組成。``msgid`` 為源字串（一般為"
"英文），``msgstr`` 為翻譯後的字串。"

msgid ""
"The ``msgstr`` value in PO template files (``.pot``) should **always** be "
"empty. Localization will be done in the generated ``.po`` files instead."
msgstr ""
"PO 範本檔（``.pot``）中的 ``msgstr`` 值應**始終**為空。當地語系化會在生成的 "
"``.po`` 檔中進行。"

msgid "Creating a messages file from a PO template"
msgstr "從 PO 範本建立消息檔"

msgid ""
"The ``msginit`` command is used to turn a PO template into a messages file. "
"For instance, to create a French localization file, use the following "
"command while in the ``locale`` directory:"
msgstr ""
"``msginit`` 命令用於將 PO 範本轉換為消息檔。例如，要建立法語當地語系化檔，請"
"在 ``locale`` 目錄中使用以下命令："

msgid ""
"The command above will create a file named ``fr.po`` in the same directory "
"as the PO template."
msgstr "上面的命令會在 PO 範本所在的目錄下建立一個名為 ``fr.po`` 的檔案。"

msgid ""
"Alternatively, you can do that graphically using Poedit, or by uploading the "
"POT file to your web platform of choice."
msgstr ""
"或者，您可以使用 Poedit 以圖形方式完成此操作，或者通過將 POT 檔上傳到您選擇"
"的 Web 平臺。"

msgid "Loading a messages file in Godot"
msgstr "在 Godot 中載入消息檔"

msgid ""
"To register a messages file as a translation in a project, open the "
"**Project Settings**, then go to the **Localization** tab. In "
"**Translations**, click **Add…** then choose the ``.po`` or ``.mo`` file in "
"the file dialog. The locale will be inferred from the ``\"Language: "
"<code>\\n\"`` property in the messages file."
msgstr ""
"如果要將消息檔註冊為專案的翻譯，請打開\\ **項目設置**\\ ，然後進入\\ **本地化"
"**\\ 選項卡。在\\ **翻譯**\\ 中按下\\ **添加...**\\ ，然後在文件對話框中選擇"
"該 ''.po'' 或者 ''.mo'' 檔。區域設置將從消息檔的 ''“Language： <code>\\n”'' "
"屬性中推算出來。"

msgid ""
"See :ref:`doc_internationalizing_games` for more information on importing "
"and testing translations in Godot."
msgstr ""
"關於在 Godot 中匯入和測試翻譯的更多資訊，請參閱 :ref:"
"`doc_internationalizing_games`。"

msgid "Updating message files to follow the PO template"
msgstr "按照 PO 範本更新消息檔"

msgid ""
"After updating the PO template, you will have to update message files so "
"that they contain new strings, while removing strings that are no longer "
"present in the PO template. This can be done automatically using the "
"``msgmerge`` tool:"
msgstr ""
"更新 PO 範本後，您必須更新消息檔以使其包含新字串，同時刪除已經在 PO 範本中不"
"復存在的字串。這可以使用 ``msgmerge`` 工具自動完成："

msgid ""
"If you want to keep a backup of the original message file (which would be "
"saved as ``fr.po~`` in this example), remove the ``--backup=none`` argument."
msgstr ""
"如果你想保留原始消息檔的備份，在本例中會保存為 ``fr.po~`` ，請刪除 ``--"
"backup=none`` 參數。"

msgid ""
"After running ``msgmerge``, strings which were modified in the source "
"language will have a \"fuzzy\" comment added before them in the ``.po`` "
"file. This comment denotes that the translation should be updated to match "
"the new source string, as the translation will most likely be inaccurate "
"until it's updated."
msgstr ""
"運作 ``msgmerge`` 後，如果來源語言修改了某個字串，那麼在 ``.po`` 檔中就會在這"
"個字串之前加入“fuzzy”注釋。這個注釋表示的是翻譯應當針對新字串進行更新，因為現"
"有翻譯非常可能是不精確的。"

msgid ""
"Strings with \"fuzzy\" comments will **not** be read by Godot until the "
"translation is updated and the \"fuzzy\" comment is removed."
msgstr ""
"Godot **不會**讀取帶有“fuzzy”注釋的字串，需要更新翻譯並移除“fuzzy”注釋才行。"

msgid "Checking the validity of a PO file or template"
msgstr "檢查 PO 檔或範本的有效性"

msgid ""
"It is possible to check whether a gettext file's syntax is valid by running "
"the command below:"
msgstr "可以通過運作以下命令來檢查 gettext 檔的語法是否有效："

msgid ""
"If there are syntax errors or warnings, they will be displayed in the "
"console. Otherwise, ``msgfmt`` won't output anything."
msgstr ""
"如果有語法錯誤或警告，他們將顯示在控制台。否則，``msgfmt`` 不會輸出任何東西。"

msgid "Using binary MO files (useful for large projects only)"
msgstr "使用二進位 MO 檔（僅適用於大型專案）"

msgid ""
"For large projects with several thousands of strings to translate or more, "
"it can be worth it to use binary (compiled) MO message files instead of text-"
"based PO files. Binary MO files are smaller and faster to read than the "
"equivalent PO files."
msgstr ""
"大型專案會有成千上萬的字串要翻譯，相比於基於文字的 PO 檔，使用（編譯為）二進"
"位的 MO 消息檔可能更加划算。二進位 MO 檔比對應的 PO 檔更小、讀起來更快。"

msgid "You can generate a MO file with the command below:"
msgstr "你可以使用下面的命令生成 MO 檔："

msgid ""
"If the PO file is valid, this command will create a ``fr.mo`` file besides "
"the PO file. This MO file can then be loaded in Godot as described above."
msgstr ""
"如果這個 PO 檔是有效的，這個命令就會在 PO 檔的旁邊建立一個 ``fr.mo`` 檔案。這"
"個 MO 檔可以按照下文的方法載入進 Godot。"

msgid ""
"The original PO file should be kept in version control so you can update "
"your translation in the future. In case you lose the original PO file and "
"wish to decompile a MO file into a text-based PO file, you can do so with:"
msgstr ""
"應該在版本控制中保留原始 PO 檔，這樣以後就可以更新翻譯。如果你丟失了原始的 "
"PO 檔，希望將 MO 檔反編譯為基於文字的 PO 檔，你可以這樣做："

msgid ""
"The decompiled file will not include comments or fuzzy strings, as these are "
"never compiled in the MO file in the first place."
msgstr "反編譯出的檔不包含注釋和模糊字串，因為它們一開始就沒有編譯進 MO 檔裡。"

msgid "Translation status"
msgstr "翻譯狀態"
