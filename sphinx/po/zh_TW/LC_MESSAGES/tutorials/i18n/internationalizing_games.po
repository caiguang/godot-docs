# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Internationalizing games"
msgstr "將遊戲國際化"

msgid "Introduction"
msgstr "前言"

msgid ""
"Sería excelente que el mundo hablara solo un idioma (It would be great if "
"the world spoke only one language). Unfortunately for us developers, that is "
"not the case. While indie or niche games usually do not need localization, "
"games targeting a more massive market often require localization. Godot "
"offers many tools to make this process more straightforward, so this "
"tutorial is more like a collection of tips and tricks."
msgstr ""
"Sería excelente que el mundo hablara solo un idioma（如果全世界都講同一種語言"
"就太好了）。不幸的是對於我們的開發人員來說，情況並非如此。雖然獨立或投機遊戲"
"通常不需要當地語系化，但瞄準更大市場的遊戲通常需要當地語系化。Godot 提供了許"
"多工具來使這個過程更加簡單，因此本教學更像一個妙招和技巧的合集。"

msgid ""
"Localization is usually done by specific studios hired for the job. Despite "
"the huge amount of software and file formats available for this, the most "
"common way to do localization to this day is still with spreadsheets. The "
"process of creating the spreadsheets and importing them is already covered "
"in the :ref:`doc_importing_translations` tutorial. If you haven't read the "
"Importing translations page before, we recommend you give it a read before "
"reading this page."
msgstr ""
"當地語系化通常是通過雇傭特定的工作室來完成的，儘管有大量的軟體和檔案格式可供"
"使用，但迄今為止進行當地語系化最常見的方式仍然是使用試算表。建立試算表並匯入"
"試算表的過程已經在 :ref:`doc_importing_translations` 教學中介紹過了，所以這個"
"教學更像是對那個教學的後續。"

msgid ""
"We will be using the official demo as an example; you can `download it from "
"the Asset Library <https://godotengine.org/asset-library/asset/134>`_."
msgstr ""
"我們將使用官方演示作為範例，您可以`從素材庫下載 <https://godotengine.org/"
"asset-library/asset/134>`_。"

msgid "Configuring the imported translation"
msgstr "配置匯入的譯文"

msgid ""
"Translations can get updated and re-imported when they change, but they "
"still have to be added to the project. This is done in **Project → Project "
"Settings → Localization**:"
msgstr ""
"翻譯可以在更改時得到更新和重新匯入，但仍必須新增到專案中。可通過**專案 → 專案"
"設定 → 當地語系化**來完成："

msgid "The above dialog is used to add or remove translations project-wide."
msgstr "上述對話方塊用於新增或刪除專案範圍內的翻譯。"

msgid "Localizing resources"
msgstr "資源的當地語系化"

msgid ""
"It is also possible to instruct Godot to use alternate versions of assets "
"(resources) depending on the current language. This can be used for "
"localized images such as in-game billboards or localized voices."
msgstr ""
"根據目前語言，還可以指示 Godot 使用替代版本的素材（資源）。**重定向**分頁可用"
"於此。"

msgid "The **Remaps** tab can be used for this:"
msgstr "**重新對應**分頁可用於此目的："

msgid ""
"Select the resource to be remapped then add some alternatives for each "
"locale."
msgstr "選擇需要重定向的資源，並指定它在其他語言地區的替代方案。"

msgid ""
"The resource remapping system isn't supported for DynamicFonts. To use "
"different fonts depending on the language's script, use the DynamicFont "
"fallback system instead, which lets you define as many fallback fonts as you "
"want."
msgstr ""
"DynamicFonts 不支援資源重新對應系統。若要根據語言的腳本使用不同的字形，請改"
"用 DynamicFont 後備系統，它允許您定義任意數量的後備字形。"

msgid ""
"The upside of the DynamicFont fallback system is that it works regardless of "
"the current language, making it ideal for things like multiplayer chat where "
"the text language may not match the client's language."
msgstr ""
"DynamicFont 後備系統的優點是，無論目前語言如何，它都可以工作，這使其非常適合"
"文字語言可能與客戶端語言不配對的多人聊天等情況。"

msgid "Converting keys to text"
msgstr "將鍵轉換為文字"

msgid ""
"Some controls, such as :ref:`Button <class_Button>` and :ref:`Label "
"<class_Label>`, will automatically fetch a translation if their text matches "
"a translation key. For example, if a label's text is "
"\"MAIN_SCREEN_GREETING1\" and that key exists in the current translation, "
"then the text will automatically be translated."
msgstr ""
"一些控制項，例如 :ref:`Button <class_Button>` 和 :ref:`Label <class_Label>`，"
"如果它們的文字與一個翻譯鍵值相配對，將自動獲取翻譯內容。例如，如果一個標籤的"
"文字是“MAIN_SCREEN_GREETING1”並且該鍵值存在於目前的翻譯中，那麼該文字將被自動"
"翻譯。"

msgid ""
"This automatic translation behavior may be undesirable in certain cases. For "
"instance, when using a Label to display a player's name, you most likely "
"don't want the player's name to be translated if it matches a translation "
"key. To disable automatic translation on a specific node, disable "
"**Localization > Auto Translate** in the inspector."
msgstr ""
"這種自動翻譯行為在某些情況下可能是不可取的。例如，當使用 Label 來顯示玩家的名"
"字時，如果玩家的名字與翻譯鍵相配對，你很可能不希望進行翻譯。要禁用某個節點的"
"自動翻譯，請在屬性面板中禁用**Localization > Auto Translate**（當地語系化 > "
"自動翻譯）。"

msgid ""
"In code, the :ref:`Object.tr() <class_Object_method_tr>` function can be "
"used. This will just look up the text in the translations and convert it if "
"found:"
msgstr ""
"在程式碼中, 可以使用 :ref:`Object.tr() <class_Object_method_tr>` 函式. 這將只"
"是在翻譯中搜尋文字, 如果找到的話就進行轉換:"

msgid ""
"If no text is displayed after changing the language, try to use a different "
"font. The default project font only supports a subset of the Latin-1 "
"character set, which cannot be used to display languages like Russian or "
"Chinese."
msgstr ""
"如果更改語言後不顯示任何文字，請嘗試換一個字形。預設專案字形僅支援 Latin-1 字"
"元集的子集，無法用於顯示俄語、漢語等文字。"

msgid ""
"A good resource for multilingual fonts is `Noto Fonts <https://www.google."
"com/get/noto/>`__. Make sure to download the correct variation if you're "
"using a less common language."
msgstr ""
"多語言字形的一個很好的資源是「Noto Fonts <https://www.google.com/get/noto/"
">」。如果您使用的是不太常見的語言，請確保下載正確的變體。"

msgid ""
"Once you've downloaded the font, load the TTF file into a DynamicFont "
"resource and use it as a custom font of your Control node. For better "
"reusability, associate a new a Theme resource to your root Control node and "
"define the DynamicFont as the Default Font in the theme."
msgstr ""
"下載字形後，將 TTF 檔案載入到 DynamicFont 資源中，並將其用作控制節點的自訂字"
"形。為了獲得更好的可重複使用性，請將新的主題資源關聯到根控制節點，並將 "
"DynamicFont 定義為主題中的預設字形。"

msgid "Placeholders"
msgstr "預留位置"

msgid ""
"To feature placeholders in your translated strings, use :ref:"
"`doc_gdscript_printf` or the equivalent feature in C#. This lets translators "
"move the location of the placeholder in the string freely, which allows "
"translations to sound more natural. Named placeholders with the ``String."
"format()`` function should be used whenever possible, as they also allow "
"translators to choose the *order* in which placeholders appear:"
msgstr ""
"若要在翻譯的字串中使用佔位符，請使用 doc_gdscript_printf 或 C# 中的等效功能。"
"這使翻譯人員可以自由移動字串中佔位符的位置，從而使翻譯聽起來更自然。應盡可能"
"使用具有“String.format()”函式的命名佔位符，因為它們還允許翻譯人員選擇佔位符出"
"現的*順序*："

msgid "Translation contexts"
msgstr "翻譯狀態"

msgid ""
"If you're using plain English as source strings (rather than message codes "
"``LIKE_THIS``), you may run into ambiguities when you have to translate the "
"same English string to different strings in certain target languages. You "
"can optionally specify a *translation context* to resolve this ambiguity and "
"allow target languages to use different strings, even though the source "
"string is identical:"
msgstr ""
"如果你使用普通的英文所謂來源字串（而不是類似於 ``LIKE_THIS`` 的消息程式碼），"
"那麼就有可能會遇到歧義的情況，同一個英文字串可能需要在某些目的語言中翻譯為不"
"同的字串。你可以通過指定可選的*翻譯本文*來消除歧義，即便原始字串是相同的，也"
"能夠讓目的語言能夠使用不同的字串："

msgid "Pluralization"
msgstr "組織"

msgid ""
"Most languages require different strings depending on whether an object is "
"in singular or plural form. However, hardcoding the \"is plural\" condition "
"depending on whether there is more than 1 object is not valid in all "
"languages."
msgstr ""
"很多語言會根據物件的單複數使用不同的字串。但是把“是否為複數”的條件硬編碼為“物"
"件數量是否大於 1 ”並不是對所有語言都有效。"

msgid ""
"Some languages have more than two plural forms, and the rules on the number "
"of objects required for each plural form vary. Godot offers support for "
"*pluralization* so that the target locales can handle this automatically."
msgstr ""
"有些語言有兩種以上的複數形式，不同的複數需要的物件數量也各不相同。Godot 提供"
"了對*複數*的支援，目標地區可以自動進行處理。"

msgid ""
"Pluralization is meant to be used with positive (or zero) integer numbers "
"only. Negative and floating-point values usually represent physical entities "
"for which singular and plural don't clearly apply."
msgstr ""
"複數應該只用於正整數（或零）的情況。負數和浮點數所代表的物理實體數量是單數還"
"是複數一般無法明確區分。"

msgid "This can be combined with a context if needed:"
msgstr "填寫下列設定："

msgid ""
"Providing pluralized translations is only supported with :ref:"
"`doc_localization_using_gettext`, not CSV."
msgstr "提供複數翻譯僅支援 :ref:`doc_localization_using_gettext`，不支援 CSV。"

msgid "Making controls resizable"
msgstr "使控制項的大小可調"

msgid ""
"The same text in different languages can vary greatly in length. For this, "
"make sure to read the tutorial on :ref:`doc_size_and_anchors`, as "
"dynamically adjusting control sizes may help. :ref:`Container "
"<class_Container>` can be useful, as well as the text wrapping options "
"available in :ref:`Label <class_Label>`."
msgstr ""
"不同語言的相同文字的長度差異很大。為此，請務必閱讀教學 :ref:"
"`doc_size_and_anchors`，因為動態調整控制項大小可能有所説明。:ref:`Container "
"<class_Container>` 可能很有用，:ref:`Label <class_Label>` 的文字換行選項應該"
"也能幫上忙。"

msgid ""
"To check whether your UI can accommodate translations with longer strings "
"than the original, you can enable *pseudolocalization* in the advanced "
"Project Settings. This will replace all your localizable strings with longer "
"versions of themselves, while also replacing some characters in the original "
"strings with accented versions (while still being readable). Placeholders "
"are kept as-is, so that they keep working when pseudolocalization is enabled."
msgstr ""
"若要檢查您的 UI 是否可以容納比原始字串更長的翻譯，您可以在進階專案設定中啟用*"
"偽本地化*。這將用更長的版本替換所有可本地化的字串，同時用帶有重音的版本替換原"
"始字串中的一些字元（同時仍然可讀）。佔位符保持原樣，以便在啟用偽本地化時它們"
"繼續工作。"

msgid ""
"For example, the string ``Hello world, this is %s!`` becomes ``[Ĥéłłô ŵôŕłd́, "
"ŧh̀íš íš %s!]`` when pseudolocalization is enabled."
msgstr ""
"例如，當啟用偽本地化時，字串「Hello world, this is %s!」將變為「[Ĥéłłô "
"ŵôŕłd́, ŧh̀íš íš %s!]」。"

msgid ""
"While looking strange at first, pseudolocalization has several benefits:"
msgstr "雖然第一眼看上去很奇怪，但是偽當地語系化的好處有很多："

msgid ""
"It lets you spot non-localizable strings quickly, so you can go over them "
"and make them localizable (if it makes sense to do so)."
msgstr ""
"它可以讓您快速發現不可本地化的字串，這樣您就可以檢查它們並使它們可本地化（如"
"果這樣做有意義的話）。"

msgid ""
"It lets you check UI elements that can't fit long strings. Many languages "
"will feature much longer translations than the source text, so it's "
"important to ensure your UI can accommodate longer-than-usual strings."
msgstr ""
"它可以讓您檢查無法容納長字串的 UI 元素。許多語言的翻譯都會比原始文字長得多，"
"因此確保您的 UI 能夠容納比平常更長的字串非常重要。"

msgid ""
"It lets you check whether your font contains all the characters required to "
"support various languages. However, since the goal of pseudolocalization is "
"to keep the original strings readable, it's not an effective test for "
"checking whether a font can support :abbr:`CJK (Chinese, Japanese, Korean)` "
"or right-to-left languages."
msgstr ""
"它可以讓您檢查您的字形是否包含支援各種語言所需的所有字元。然而，由於偽本地化"
"的目標是保持原始字串的可讀性，因此它並不是檢查字形是否支援 CJK（中文、日文、"
"韓文）或從右到左語言的有效測試。"

msgid ""
"The project settings allow you to tune pseudolocalization behavior, so that "
"you can disable parts of it if desired."
msgstr "專案設定可讓您調整偽本地化行為，以便您可以根據需要停用其部分內容。"

msgid "TranslationServer"
msgstr "TranslationServer"

msgid ""
"Godot has a server handling low-level translation management called the :ref:"
"`TranslationServer <class_TranslationServer>`. Translations can be added or "
"removed during run-time; the current language can also be changed at run-"
"time."
msgstr ""
"Godot 有一個進行底層翻譯管理的伺服器，名為 :ref:`TranslationServer "
"<class_TranslationServer>`。可以在運作時新增或刪除翻譯；目前語言也可以在運作"
"時更改。"

msgid "Bidirectional text and UI Mirroring"
msgstr "雙向文字和 UI 鏡像"

msgid ""
"Arabic and Hebrew are written from right to left (except for the numbers and "
"Latin words mixed in), and the user interface for these languages should be "
"mirrored as well. In some languages the shape of a glyph changes depending "
"on the surrounding characters."
msgstr ""
"阿拉伯語和希伯來語是從右到左書寫的（除了混合的數字和拉丁單字），這些語言的使"
"用者介面也應該是鏡像的。在某些語言中，字形的形狀會根據周圍的字元而變化。"

msgid ""
"Support for bidirectional writing systems and UI mirroring is transparent, "
"you don't usually need to change anything or have any knowledge of the "
"specific writing system."
msgstr ""
"對雙向書寫系統和 UI 鏡像的支援是透明的，您通常不需要更改任何內容或了解特定書"
"寫系統。"

msgid ""
"For RTL languages, Godot will automatically do the following changes to the "
"UI:"
msgstr "對於 RTL（從右至左）語言，Godot 會自動對 UI 進行以下調整："

msgid "Mirrors left/right anchors and margins."
msgstr "鏡像左右錨點和邊距。"

msgid "Swaps left and right text alignment."
msgstr "交換文字的左對齊和右對齊。"

msgid ""
"Mirrors horizontal order of the child controls in the containers, and items "
"in Tree/ItemList controls."
msgstr ""
"鏡像容器中子控制項的水平順序以及 Tree/ItemList 控制項中專案的水平順序。"

msgid ""
"Uses mirrored order of the internal control elements (e.g. OptionButton "
"dropdown button, checkbox alignment, List column order, Tree item icons and "
"connecting line alignment, e.t.c.), in some cases mirrored controls use "
"separate theme styles."
msgstr ""
"控制項內部元素使用鏡像順序（例如 OptionButton 的下拉按鈕、單選框的位置、列表"
"方塊列的順序、Tree 專案的圖示和連接線的位置等），某些鏡像的控制項會使用單獨的"
"主題樣式。"

msgid ""
"Coordinate system is not mirrored, and non-UI nodes (sprites, e.t.c) are not "
"affected."
msgstr "坐標系不會鏡像，非 UI 節點（精靈等）不受影響。"

msgid ""
"It is possible to override text and control layout direction by using the "
"following control properties:"
msgstr "可以使用下列控制項屬性來覆寫文字和控制項佈局方向："

msgid ""
"``text_direction``, sets the base text direction. When set to \"auto\", "
"direction depends on the first strong directional character in the text "
"according to the Unicode Bidirectional Algorithm,"
msgstr ""
"``text_direction``，設定基本文字方向。當設定為“auto”時，方向取決於根據 "
"Unicode 雙向演算法的文字中的第一個強方向字符，"

msgid "``language``, overrides current project locale."
msgstr "“語言”，覆蓋目前專案區域設定。"

#, fuzzy
msgid ""
"``structured_text_bidi_override`` property and ``_structured_text_parser`` "
"callback, enables special handling for structured text."
msgstr ""
"“structural_text_bidi_override 屬性”和“_structed_text_parser 回調”，啟用對結"
"構化文字的特殊處理。"

msgid "``layout_direction``, overrides control mirroring."
msgstr "“layout_direction”，覆蓋控制鏡像。"

msgid ""
"You can see how right-to-left typesetting works in action using the `BiDI "
"and Font Features demo project <https://github.com/godotengine/godot-demo-"
"projects/tree/master/gui/bidi_and_font_features>`__."
msgstr ""
"除了這份說明文件，你可能也會想看看 `Godot Demo 專案 <https://github.com/"
"godotengine/godot-demo-projects>`_ 。"

msgid "Adding break iterator data to exported project"
msgstr "新增檔案至專案"

msgid ""
"Some languages are written without spaces, and word and line breaking "
"requires more than rules over character sequences. Godot includes ICU rule "
"and dictionary based, break iterator data, but this data is not included "
"into exported projects by default. To include it go to **Project → Project "
"Settings → Localization → Text Server Data** and click **Install support "
"data...**. Break iterator data is about 4 MB large."
msgstr ""
"有些語言的書寫沒有空格，單字和換行需要的不僅僅是字元序列的規則。 Godot 包括 "
"ICU 規則和基於字典的中斷迭代器資料，但預設情況下此資料不包含在匯出的專案中。"
"要包含它，請前往 **專案 → 專案設定 → 本地化 → 文字伺服器資料**，然後按一下 **"
"安裝支援資料...**。中斷迭代器資料大約有 4 MB 大。"

msgid "Structured text BiDi override"
msgstr "結構化文字 BiDi 覆蓋"

msgid ""
"Unicode BiDi algorithm is designed to work with natural text and it's "
"incapable of handling text with the higher level order, like file names, "
"URIs, email addresses, regular expressions or source code."
msgstr ""
"Unicode BiDi 演算法設計用於處理自然文字，它無法處理具有更高層級順序的文字，例"
"如檔案名稱、URI、電子郵件地址、正規表示式或原始程式碼。"

msgid ""
"For example, the path for this shown directory structure will be displayed "
"incorrectly (top \"LineEdit\" control). \"File\" type structured text "
"override splits text into segments, then BiDi algorithm is applied to each "
"of them individually to correctly display directory names in any language "
"and preserve correct order of the folders (bottom \"LineEdit\" control)."
msgstr ""
"例如，所顯示的目錄結構的路徑將顯示不正確（頂部「LineEdit」控制項）。 「檔案」"
"型別結構化文字會覆寫將文字分割成段，然後將 BiDi 演算法單獨套用到每個段，以正"
"確顯示任何語言的目錄名稱並保留資料夾的正確順序（底部「LineEdit」控制項）。"

msgid ""
"Custom callbacks provide a way to override BiDi for the other types of "
"structured text."
msgstr "自訂回調提供了一種覆蓋其他型別結構化文字的 BiDi 的方法。"

msgid "Localizing numbers"
msgstr "載入場景"

msgid ""
"Controls specifically designed for number input or output (e.g. ProgressBar, "
"SpinBox) will use localized numbering system automatically, for the other "
"control :ref:`TextServer.format_number(string, language) "
"<class_TextServer_method_format_number>` can be used to convert Western "
"Arabic numbers (0..9) to the localized numbering system and :ref:`TextServer."
"parse_number(string, language) <class_TextServer_method_parse_number>` to "
"convert it back."
msgstr ""
"專為數位輸入或輸出設計的控制項（例如 ProgressBar、SpinBox）將自動使用本地化編"
"號系統，對於其他控制項 :ref:`TextServer.format_number(string, language) "
"<class_TextServer_method_format_number>` 可用於轉換西阿拉伯數字（ 0 ..9) 到本"
"地化編號系統並:ref:`TextServer.parse_number(string, language) "
"<class_TextServer_method_parse_number>` 將其轉換回來。"

msgid "Localizing icons and images"
msgstr "本地化說明文件圖片"

msgid ""
"Icons with left and right pointing arrows which may need to be reversed for "
"Arabic and Hebrew locales, in case they indicate movement or direction (e.g. "
"back/forward buttons). Otherwise, they can remain the same."
msgstr ""
"帶有左右指向箭頭的圖示可能需要在阿拉伯語和希伯來語語言環境中顛倒過來，以防它"
"們指示移動或方向（例如後退/前進按鈕）。否則，它們可以保持不變。"

msgid "Testing translations"
msgstr "匯入翻譯"

msgid ""
"You may want to test a project's translation before releasing it. Godot "
"provides two ways to do this."
msgstr "你可能會想要在發行前測試專案的翻譯。Godot 為此提供了兩種方法。"

#, fuzzy
msgid ""
"First, in the Project Settings, under **Internationalization > Locale** "
"(with advanced settings enabled), there is a **Test** property. Set this "
"property to the locale code of the language you want to test. Godot will run "
"the project with that locale when the project is run (either from the editor "
"or when exported)."
msgstr ""
"首先，在“專案設定”的**輸入裝置 > 區域**中有一個**測試**屬性。將這個屬性設為想"
"要測試的語言的區功能變數程式碼即可。運作專案時，Godot 就會使用這個區域設定"
"（無論是從編輯器運作還是匯出後運作均如此）。"

msgid ""
"Keep in mind that since this is a project setting, it will show up in "
"version control when it is set to a non-empty value. Therefore, it should be "
"set back to an empty value before committing changes to version control."
msgstr ""
"請記住，因為這是一個專案設定，設為非空時會在版本控制中顯示。因此，將修改提交"
"到版本控制之前，應該將其設回空值。"

msgid ""
"Translations can also be tested when :ref:`running Godot from the command "
"line <doc_command_line_tutorial>`. For example, to test a game in French, "
"the following argument can be supplied:"
msgstr ""
"還可以在從命令列運作 Godot 時測試語言。例如，要使用法語測試遊戲，可以提供以下"
"參數："

msgid "Translating the project name"
msgstr "翻譯專案名稱"

msgid ""
"The project name becomes the app name when exporting to different operating "
"systems and platforms. To specify the project name in more than one "
"language, create a new setting ``application/name`` in the **Project "
"Settings** and append the locale identifier to it. For instance, for "
"Spanish, this would be ``application/name_es``:"
msgstr ""
"匯出到不同的作業系統和平臺時，專案名稱將成為應用程式名稱。要以多種語言指定專"
"案名稱，請在**專案設定**中建立一個新設定 ``application/name``，並將區域識別字"
"附加到其中。例如，對於西班牙語，這將是 ``application/name_es``："

msgid ""
"If you are unsure about the language code to use, refer to the :ref:`list of "
"locale codes <doc_locales>`."
msgstr ""
"如果您不確定要使用的語言程式碼，請參閱:ref:`區功能變數程式碼列表 "
"<doc_locales>`。"

msgid "Translation status"
msgstr "翻譯狀態"
