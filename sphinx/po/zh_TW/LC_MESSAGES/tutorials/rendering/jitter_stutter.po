# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Fixing jitter, stutter and input lag"
msgstr "修復抖動、卡頓和輸入延遲"

msgid "What is jitter, stutter and input lag?"
msgstr "什麼是抖動、卡頓和輸入延遲？"

msgid ""
"*Jitter* and *stutter* are two different alterations to visible motion of "
"objects on screen that may affect a game, even when running at full speed. "
"These effects are mostly visible in games where the world moves at a "
"constant speed in a fixed direction, like runners or platformers."
msgstr ""
"*抖動*（Jitter）和*卡頓*（stutter）是即使遊戲在全速運作時，也可能出現在螢幕上"
"物體可見運動中的兩種不同變化，可能會影響遊戲體驗。這些問題在世界以恒定速度朝"
"著固定方向運動的遊戲中影響最明顯, 比如跑酷或平臺類遊戲."

msgid ""
"*Input lag* is unrelated to jitter and stutter, but is sometimes discussed "
"alongside. Input lag refers to visible on-screen delay when performing "
"actions with the mouse, keyboard, controller or touchscreen. It can be "
"related to game code, engine code or external factors (such as hardware). "
"Input lag is most noticeable in games that use the mouse to aim, such as "
"first-person games. Input lag can't be completely eliminated, but it can be "
"reduced in several ways."
msgstr ""
"*輸入延遲*與抖動和卡頓無關，但有時會同時討論。輸入延遲是指使用滑鼠、鍵盤、控"
"制器或觸控螢幕執行操作時可見的螢幕延遲。它可以與遊戲程式碼、引擎程式碼或外部"
"因素（例如硬體）有關。輸入延遲在使用滑鼠瞄準的遊戲（例如第一人稱遊戲）中最為"
"明顯。輸入延遲無法完全消除，但可以透過多種方式減少。"

msgid "Distinguishing between jitter and stutter"
msgstr "抖動和卡頓的區分"

msgid ""
"A game running at a normal framerate without exhibiting any effect will "
"appear smooth:"
msgstr "一款在正常影格下運作, 而不顯示任何效果的遊戲將顯得平滑:"

msgid "A game exhibiting *jitter* will shake constantly in a very subtle way:"
msgstr "遊戲展示了*抖動*將以非常細微的方式持續抖動："

msgid ""
"Finally, a game exhibiting *stutter* will appear smooth, but appear to "
"*stop* or *roll back a frame* every few seconds:"
msgstr ""
"最後，存在“卡頓”的遊戲看上去是流暢的，但似乎每隔幾秒鐘就會*停頓*或*回滾一影格"
"*："

msgid "Jitter"
msgstr "抖動"

msgid ""
"There can be many causes of jitter, the most typical one happens when the "
"game *physics frequency* (usually 60 Hz) runs at a different resolution than "
"the monitor refresh rate. Check whether your monitor refresh rate is "
"different from 60 Hz."
msgstr ""
"產生抖動的原因有很多，最典型的情況發生在運作遊戲時的*物理頻率*（通常為 60 "
"Hz）以與顯示器更新率不同。檢查您的顯示器更新率是否為 60 Hz。"

msgid ""
"This is generally not a problem, given that most monitors are 60 Hz, and "
"starting with Godot 3.1, a frame timer was introduced that tries to "
"synchronize with refresh as well as possible."
msgstr ""
"這通常不是一個問題, 因為大多數顯示器都是60赫茲, 而且從Godot 3.1開始, 引入了一"
"個影格計時器, 儘量與更新同步."

msgid ""
"Sometimes only some objects appear to jitter (character or background). This "
"happens when they are processed in different time sources (one is processed "
"in the physics step while another is processed in the idle step). Godot 3.1 "
"does some improvements to this, from allowing kinematic bodies to be "
"animated in the regular ``_process()`` loop, to further fixes in the frame "
"timer."
msgstr ""
"有時只有一些物件會出現抖動（角色或背景）。當它們在不同的時間源中處理時，就會"
"發生這種情況（一個在物理步驟中處理，另一個在空閒步驟中處理）。Godot 3.1 版本"
"對此做了一些改進，從允許運動體在規則的 _process 迴圈中被動畫化，進一步修正影"
"格計時器。"

msgid ""
"You can use physics interpolation to mitigate physics-related jittering. See "
"`lawnjelly's smoothing-addon <https://github.com/lawnjelly/smoothing-"
"addon>`__ for an add-on that can be dropped into any project to enable "
"physics interpolation."
msgstr ""
"你可以使用物理插值來緩解物理相關的抖動。請參閱 `lawnjelly 的平滑外掛程式 "
"<https://github.com/lawnjelly/smoothing-addon>`__，可以將其新增到任何專案中以"
"啟用物理插值。"

msgid "Stutter"
msgstr "卡頓"

msgid ""
"Stutter may happen due to two different reasons. The first, and most obvious "
"one, is the game not being able to keep full framerate performance. Solving "
"this is game specific and will require optimization."
msgstr ""
"產生卡頓有兩個不同原因。第一個，也是最明顯的一個，就是遊戲無法保持完整的影格"
"率性能。解決方法是因遊戲而異的，需要進行優化。"

msgid ""
"The second is more complicated, because it is often not associated to the "
"engine or game but the underlying operating system. Here is some information "
"regarding stutter on different OSs."
msgstr ""
"第二個原因更複雜，因為它通常與引擎或遊戲無關，而與底層作業系統有關。下面是不"
"同作業系統上，關於卡頓的一些資訊。"

msgid ""
"On platforms that support disabling V-Sync, stuttering can be made less "
"noticeable by disabling V-Sync in the project settings. This will however "
"cause tearing to appear, especially on monitors with low refresh rates. If "
"your monitor supports it, consider enabling variable refresh rate (G-Sync/"
"FreeSync) while leaving V-Sync enabled. This avoids mitigating some forms of "
"stuttering without introducing tearing."
msgstr ""
"在支援禁用垂直同步的平台上，透過在專案設定中停用垂直同步可以使卡頓現象變得不"
"那麼明顯。然而，這會導致出現撕裂現象，尤其是在更新率較低的顯示器上。如果您的"
"顯示器支援，請考慮啟用可變更新率（G-Sync/FreeSync），同時啟用垂直同步。這避免"
"了減輕某些形式的口吃而不引起撕裂。"

msgid ""
"Forcing your graphics card to use the maximum performance profile can also "
"help reduce stuttering, at the cost of increased GPU power draw."
msgstr "強制顯示卡使用最大效能設定檔也有助於減少卡頓，但代價是增加 GPU 功耗。"

msgid "Windows"
msgstr "Windows"

msgid ""
"Windows is known to cause stutter in windowed games. This mostly depends on "
"the hardware installed, drivers version and processes running in parallel (e."
"g. having many browser tabs open may cause stutter in a running game). To "
"avoid this, starting with 3.1, Godot raises the game priority to \"Above "
"Normal\". This helps considerably but may not completely eliminate stutter."
msgstr ""
"眾所周知，Windows 作業系統在視窗化遊戲時會產生卡頓。這主要取決於您所安裝的硬"
"體，驅動程式版本和並行運作的程序（例如，打開多個瀏覽器標籤頁可能導致遊戲在運"
"作時出現卡頓）。為了避免這種情況，從 3.1 版本開始，Godot 將遊戲的優先順序提升"
"到了“高於標準”。這樣能夠相當程度緩解問題，但可能無法完全消除卡頓現象。"

msgid ""
"Eliminating this completely requires giving your game full privileges to "
"become \"time critical\", which is not advised. Some games may do it, but it "
"is advised to learn to live with this problem, as it is common for Windows "
"games and most users won't play games windowed (games that are played in a "
"window, e.g. puzzle games, will usually not exhibit this problem anyway)."
msgstr ""
"完全消除這種情況需要給你的遊戲以充分的許可權, 使之成為 \"time critical\" , 這"
"是不建議的. 有些遊戲可能會這樣做, 但建議學會忍受這個問題, 因為這對Windows遊戲"
"來說很常見, 而且大多數使用者不會在視窗中玩遊戲(反正在視窗中玩的遊戲, 如益智遊"
"戲, 通常不會出現這個問題)."

msgid ""
"For fullscreen, Windows gives special priority to the game so stutter is no "
"longer visible and very rare. This is how most games are played."
msgstr ""
"對於全屏來說，Windows 系統對遊戲給予了特殊的優先順序，所以卡頓現象不再可見，"
"也非常罕見。大多數遊戲都是這樣玩的。"

msgid ""
"Games should use the **Exclusive Fullscreen** window mode, as opposed to "
"**Fullscreen** which is designed to prevent Windows from automatically "
"treating the window as if it was exclusive fullscreen."
msgstr ""

msgid ""
"**Fullscreen** is meant to be used by GUI applications that want to use per-"
"pixel transparency without a risk of having it disabled by the OS. It "
"achieves this by leaving a 1-pixel line at the bottom of the screen. By "
"contrast, **Exclusive Fullscreen** uses the actual screen size and allows "
"Windows to reduce jitter and input lag for fullscreen games."
msgstr ""

msgid "Linux"
msgstr "Linux"

msgid ""
"Stutter may be visible on desktop Linux, but this is usually associated with "
"different video drivers and compositors. Some compositors may also trigger "
"this problem (e.g. KWin), so it is advised to try using a different one to "
"rule it out as the cause. Some window managers such as KWin and Xfwm allow "
"you to manually disable compositing, which can improve performance (at the "
"cost of tearing)."
msgstr ""
"在 Linux 桌面系統上可以看到卡頓現象，這通常與不同的影片驅動程式和合成程式相"
"關。Nouveau 驅動程式經常表現出這一點，而使用 AMD 和英偉達的驅動程式卻不會出"
"現。一些合成器程式也可能引發這個問題（例如 KWin），因此我們建議用另一種方法來"
"排除其原因。"

#, fuzzy
msgid ""
"There is no workaround for driver or compositor stuttering, other than "
"reporting it as an issue to the driver or compositor developers. Stutter may "
"be more present when playing in windowed mode as opposed to fullscreen, even "
"with compositing disabled."
msgstr ""
"對於驅動程式或組合程式出現的卡頓現象，除了將其作為問題報告給驅動程式或組合程"
"式開發人員外，沒有其他解決辦法。"

msgid ""
"`Feral GameMode <https://github.com/FeralInteractive/gamemode>`__ can be "
"used to automatically apply optimizations (such as forcing the GPU "
"performance profile) when running specific processes."
msgstr ""
"`Feral GameMode <https://github.com/FeralInteractive/gamemode>`__ 可用於在執"
"行特定程序時自動套用最佳化（例如強制 GPU 效能設定檔）。"

msgid "macOS"
msgstr "macOS"

msgid ""
"Generally, macOS is stutter-free, although recently some bugs were reported "
"when running on fullscreen (this is a macOS bug). If you have a machine "
"exhibiting this behavior, please let us know."
msgstr ""
"通常情況下，macOS 不會出現卡頓現象，儘管最近在全屏運作時報告了一些 bug（這是 "
"macOS 的 bug）。如果你的機器表現出這種行為，請將這問題提交給我們。"

msgid "Android"
msgstr "Android"

msgid ""
"Generally, Android is stutter and jitter-free because the running activity "
"gets all the priority. That said, there may be problematic devices (older "
"Kindle Fire is known to be one). If you see this problem on Android, please "
"let us know."
msgstr ""
"通常情況下，Android 平臺不會出現卡頓和抖動現象，因為運作活動擁有所有的優先順"
"序。也就是說，可能會出現問題的裝置（較舊的 Kindle Fire 就是其中之一）。如果你"
"在 Android 平臺上看到這些問題，請將問題提交給我們。"

msgid "iOS"
msgstr "iOS"

msgid ""
"iOS devices are generally stutter-free, but older devices running newer "
"versions of the operating system may exhibit problems. This is generally "
"unavoidable."
msgstr ""
"iOS裝置通常沒有卡頓現象，但運作新版作業系統的舊式裝置可能會出現問題。這通常是"
"不可避免的。"

msgid "Input lag"
msgstr "輸入"

msgid "Project configuration"
msgstr "組織專案"

msgid ""
"On platforms that support disabling V-Sync, input lag can be made less "
"noticeable by disabling V-Sync in the project settings. This will however "
"cause tearing to appear, especially on monitors with low refresh rates."
msgstr ""
"在支援停用垂直同步的平台上，透過在專案設定中停用垂直同步可以使輸入延遲變得不"
"那麼明顯。然而，這會導致出現撕裂現象，尤其是在更新率較低的顯示器上。"

msgid ""
"Increasing the number of physics iterations per second can also reduce "
"physics-induced input latency. This is especially noticeable when using "
"physics interpolation (which improves smoothness but increases latency). To "
"do so, set **Physics > Common > Physics Ticks Per Second** to a value higher "
"than the default ``60``, or set ``Engine.physics_ticks_per_second`` at run-"
"time in a script. Values that are a multiple of the monitor refresh rate "
"(typically ``60``) work best when physics interpolation is disabled, as they "
"will avoid jitter. This means values such as ``120``, ``180`` and ``240`` "
"are good starting points. As a bonus, higher physics FPSes make tunneling "
"and physics unstability issues less likely to occur."
msgstr ""
"增加每秒物理迭代的數量也可以減少物理引起的輸入延遲。當使用物理插值（提高平滑"
"度但增加延遲）時，這一點尤其明顯。為此，請將**Physics > Common >Physics "
"Ticks Per Second** 設定為高於預設「60」的值，或在腳本執行時設定「Engine."
"physical_ticks_per_second」。當停用物理內插時，顯示器更新率的倍數（通常為"
"「60」）的值效果最佳，因為它們可以避免抖動。這意味著「120」、「180」和「240」"
"等值是很好的起點。作為獎勵，更高的物理 FPS 使得隧道效應和物理不穩定問題不太可"
"能發生。"

msgid ""
"The downside of increasing physics FPS is that CPU usage will increase, "
"which can lead to performance bottlenecks in games that have heavy physics "
"simulation code. This can be alleviated by increasing physics FPS only in "
"situations where low latency is critical, or by letting players adjust "
"physics FPS to match their hardware. However, different physics FPS will "
"lead to different outcomes in physics simulation, even when ``delta`` is "
"consistently used in your game logic. This can give certain players an "
"advantage over others. Therefore, allowing the player to change the physics "
"FPS themselves should be avoided for competitive multiplayer games."
msgstr ""
"提高實體 FPS 的缺點是 CPU 使用率會增加，這可能會導致具有大量實體模擬程式碼的"
"遊戲出現效能瓶頸。僅在低延遲至關重要的情況下增加物理 FPS，或者讓玩家調整物理 "
"FPS 以配對他們的硬件，可以緩解這一問題。然而，不同的物理 FPS 會導致物理模擬中"
"不同的結果，即使在遊戲邏輯中一致使用「delta」時也是如此。這可以讓某些玩家比其"
"他玩家更有優勢。因此，對於競技性多人遊戲，應避免允許玩家自行更改實體 FPS 。"

msgid ""
"Lastly, you can disable input buffering on a per-rendered frame basis by "
"calling ``Input.set_use_accumulated_input(false)`` in a script. This will "
"make it so the ``_input()`` and ``_unhandled_input()`` functions in your "
"scripts are called on every input, rather than accumulating inputs and "
"waiting for a frame to be rendered. Disabling input accumulation will "
"increase CPU usage, so it should be done with caution."
msgstr ""
"最後，您可以透過在腳本中呼叫「Input.set_use_accumulated_input(false)」來在每"
"個算繪影格的基礎上停用輸入緩衝。這將使腳本中的 _input() 和 "
"_unhandled_input() 函式在每個輸入上被呼叫，而不是累積輸入並等待算繪影格。停用"
"輸入累積會增加 CPU 使用率，因此應謹慎操作。"

msgid "Hardware/OS-specific"
msgstr "針對硬體/作業系統"

msgid ""
"If your monitor supports it, consider enabling variable refresh rate (G-Sync/"
"FreeSync) while leaving V-Sync enabled, then cap the framerate in the "
"project settings to a slightly lower value than your monitor's maximum "
"refresh rate as per `this page <https://blurbusters.com/howto-low-lag-vsync-"
"on/>`__. For example, on a 144 Hz monitor, you can set the project's "
"framerate cap to ``141``. This may be counterintuitive at first, but capping "
"the FPS below the maximum refresh rate range ensures that the OS never has "
"to wait for vertical blanking to finish. This leads to *similar* input lag "
"as V-Sync disabled with the same framerate cap (usually less than 1 ms "
"greater), but without any tearing."
msgstr ""
"如果您的顯示器支援，請考慮啟用可變更新率（G-Sync/FreeSync），同時啟用垂直同"
"步，然後將專案設定中的影格速率限制為略低於顯示器最大更新率的值，如下所示： "
"https://blurbusters.com/howto-low-lag-vsync-on/>`__。例如，在 144 Hz 顯示器"
"上，您可以將專案的影格速率上限設定為「141」。起初這可能違反直覺，但將 FPS 限"
"制在最大更新率範圍以下可確保作業系統永遠不必等待垂直消隱完成。這會導致與停用"
"垂直同步相同的影格速率上限（通常大不到 1 毫秒）的「類似」輸入延遲，但不會出現"
"任何撕裂。"

msgid ""
"This can be done by changing the **Application > Run > Max FPS** project "
"setting or assigning ``Engine.max_fps`` at run-time in a script."
msgstr ""
"這可以透過變更 **Application > Run > Max FPS** 專案設定或在執行時間在腳本中指"
"派「Engine.max_fps」來完成。"

msgid ""
"On some platforms, you can also opt into a low-latency mode in the graphics "
"driver options (such as the NVIDIA Control Panel on Windows). The **Ultra** "
"setting will give you the lowest possible latency, at the cost of slightly "
"lower average framerates. Forcing the GPU to use the maximum performance "
"profile can also further reduce input lag, at the cost of higher power "
"consumption (and resulting heat/fan noise)."
msgstr ""
"在某些平台上，您也可以在圖形驅動程式選項中選擇低延遲模式（例如 Windows 上的 "
"NVIDIA 控制台）。 **Ultra** 設定將為您提供盡可能低的延遲，但代價是平均影格速"
"率略低。強制 GPU 使用最大效能設定檔還可以進一步減少輸入延遲，但代價是更高的功"
"耗（以及由此產生的熱量/風扇噪音）。"

msgid ""
"Finally, make sure your monitor is running at its highest possible refresh "
"rate in the OS' display settings."
msgstr "最後，確保您的顯示器在作業系統的顯示設定中以盡可能高的更新率運作。"

msgid ""
"Also, ensure that your mouse is configured to use its highest polling rate "
"(typically 1,000 Hz for gaming mice, sometimes more). High USB polling rates "
"can however result in high CPU usage, so 500 Hz may be a safer bet on low-"
"end CPUs. If your mouse offers multiple :abbr:`DPI (Dots Per Inch)` "
"settings, consider also `using the highest possible setting and reducing in-"
"game sensitivity to reduce mouse latency <https://www.youtube.com/watch?"
"v=6AoRfv9W110>`__."
msgstr ""
"另外，請確保您的滑鼠配置為使用最高輪詢率（遊戲滑鼠通常為 1,000 Hz，有時更"
"高）。然而，高 USB 輪詢率可能會導致 CPU 使用率高，因此對於低階 CPU，500 Hz 可"
"能是更安全的選擇。如果您的滑鼠提供多種 DPI（每英吋點數）設定，也請考慮「使用"
"盡可能高的設定並降低遊戲中的靈敏度以減少滑鼠延遲 <https://www.youtube.com/"
"watch?v = 6AoRfv9W110>`__。"

msgid ""
"On Linux, disabling compositing in window managers that allow it (such as "
"KWin or Xfwm) can reduce input lag significantly."
msgstr ""
"在 Linux 上，在允許合成的視窗管理器（例如 KWin 或 Xfwm）中停用合成可以顯著減"
"少輸入延遲。"

msgid "Reporting jitter, stutter or input lag problems"
msgstr "報告卡頓、抖動或輸入延遲問題"

msgid ""
"If you are reporting a stutter or jitter problem (opening an issue) not "
"caused by any of the above reasons, please specify very clearly all the "
"information possible about device, operating system, driver versions, etc. "
"This may help to better troubleshoot it."
msgstr ""
"如果您報告的卡頓或抖動問題（提交 Issue）不是由上述原因引起的，請盡可能詳細說"
"明關於您的裝置配置、作業系統、驅動程式版本等資訊。這有助於我們更好地排除故"
"障。"

msgid ""
"If you are reporting input lag problems, please include a capture made with "
"a high speed camera (such as your phone's slow motion video mode). The "
"capture **must** have both the screen and the input device visible so that "
"the number of frames between an input and the on-screen result can be "
"counted. Also, make sure to mention your monitor's refresh rate and your "
"input device's polling rate (especially for mice)."
msgstr ""
"如果您回報輸入延遲問題，請附上使用高速相機（例如手機的慢動作影片模式）拍攝的"
"影像。擷取**必須**使螢幕和輸入裝置都可見，以便可以計算輸入和螢幕結果之間的影"
"格數。另外，請務必提及顯示器的更新率和輸入裝置的輪詢率（尤其是滑鼠）。"

msgid ""
"Also, make sure to use the correct term (jitter, stutter, input lag) based "
"on the exhibited behavior. This will help understand your issue much faster. "
"Provide a project that can be used to reproduce the issue, and if possible, "
"include a screen capture demonstrating the bug."
msgstr ""
"還要確保根據所展示的行為使用正確的術語（抖動或卡頓）。這有助於更快地理解您的"
"問題。請提供可用來複現問題的專案，如果可能的話，還需要您提供一張螢幕截圖來闡"
"述這個 bug。"

msgid "Translation status"
msgstr "翻譯狀態"
