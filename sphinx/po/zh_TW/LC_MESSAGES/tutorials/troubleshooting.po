# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Troubleshooting"
msgstr "疑難排解"

msgid ""
"This page lists common issues encountered when using Godot and possible "
"solutions."
msgstr "本頁列出了在使用 Godot 時會遇到的場景問題與可行的解決方案。"

msgid ""
"See :ref:`doc_using_the_web_editor` for caveats specific to the Web version "
"of the Godot editor."
msgstr ""
"關於 Godot 編輯器 HTML5 版本的特定注意事項，請參考 :ref:"
"`doc_using_the_web_editor`。"

msgid ""
"The editor runs slowly and uses all my CPU and GPU resources, making my "
"computer noisy"
msgstr "編輯器運作緩慢，佔用了我所有的 CPU 和 GPU 資源，使我的電腦變得嘈雜"

msgid ""
"This is a known issue, especially on macOS since most Macs have Retina "
"displays. Due to Retina displays' higher pixel density, everything has to be "
"rendered at a higher resolution. This increases the load on the GPU and "
"decreases perceived performance."
msgstr ""
"這是一個已知問題，尤其是在 macOS 上，因為大多數 Mac 都有 Retina 顯示幕。由於 "
"Retina 顯示器的像素密度更高，因此所有內容都必須以更高的解析度算繪。這會增加 "
"GPU 上的負載並降低感知性能。"

msgid "There are several ways to improve performance and battery life:"
msgstr "有幾種衡量性能和電池續航的方法, 包括:"

msgid ""
"In 3D, click the **Perspective** button in the top left corner and enable "
"**Half Resolution**. The 3D viewport will now be rendered at half "
"resolution, which can be up to 4 times faster."
msgstr ""
"在 3D 模式下，按一下左上角的 **透視** 按鈕並啟用 **半解析度** 。現在 3D 視口"
"就會以半解析度算繪，速度最多可以提高到原來的 4 倍。"

msgid ""
"Open the Editor Settings and increase the value of **Low Processor Mode "
"Sleep (µsec)** to ``33000`` (30 FPS). This value determines the amount of "
"*microseconds* between frames to render. Higher values will make the editor "
"feel less reactive but will help decrease CPU and GPU usage significantly."
msgstr ""
"打開編輯器設定並將 **節能處理器模式睡眠（微秒）** 的值增加到 ``33000`` （30 "
"FPS）。 該值確定要算繪的影格之間的 *微秒* 量。 較高的值將降低編輯器反應性，但"
"可顯著降低 CPU 和 GPU 使用率。"

msgid ""
"If you have a node that causes the editor to redraw continuously (such as "
"particles), hide it and show it using a script in the ``_ready()`` method. "
"This way, it will be hidden in the editor but will still be visible in the "
"running project."
msgstr ""
"如果您有某個節點導致編輯器連續重新繪製（例如粒子），請將其隱藏並使用 "
"``_ready()`` 方法在腳本中顯示它。這樣，它將隱藏在編輯器中，但仍在正在運作的專"
"案中可見。"

msgid ""
"The editor stutters and flickers on my variable refresh rate monitor (G-Sync/"
"FreeSync)"
msgstr "編輯器在我的可變更新率顯示器（G-Sync/FreeSync）上出現卡頓和閃爍的情況"

msgid ""
"This is a `known issue <https://github.com/godotengine/godot/"
"issues/38219>`__. Variable refresh rate monitors need to adjust their gamma "
"curves continuously to emit a consistent amount of light over time. This can "
"cause flicker to appear in dark areas of the image when the refresh rate "
"varies a lot, which occurs as the Godot editor only redraws when necessary."
msgstr ""
"這是一個 `已知問題 <https://github.com/godotengine/godot/issues/38219>`__ 。 "
"可變更新率顯示器需要不斷調整其伽瑪曲線，以便隨著時間的推移發出一致的光量。 當"
"更新率變化很大時，這可能會導致圖像的黑暗區域出現閃爍，這是因為 Godot 編輯器僅"
"在必要時重繪。"

msgid "There are several workarounds for this:"
msgstr "這有幾種解決辦法："

msgid ""
"Enable **Interface > Editor > Update Continuously** in the Editor Settings. "
"Keep in mind this will increase power usage and heat/noise emissions since "
"the editor will now be rendering constantly, even if nothing has changed on "
"screen. To alleviate this, you can increase **Low Processor Mode Sleep "
"(µsec)** to ``33000`` (30 FPS) in the Editor Settings. This value determines "
"the amount of *microseconds* between frames to render. Higher values will "
"make the editor feel less reactive but will help decrease CPU and GPU usage "
"significantly."
msgstr ""
"在編輯器設定中啟用 **介面 > 編輯器 > 持續更新** 。 現在即使螢幕沒有變化，編輯"
"器也將不斷算繪，這會增加功耗、造成熱量和噪音的更大排放。 為了緩解這種情況，你"
"可以在編輯器設定中將 **節能處理器模式睡眠（微秒）** 增加到 ``33000`` （30 "
"FPS）。 該值確定要算繪的影格之間的 *微秒* 量。 較高的值將降低編輯器反應性，但"
"可顯著降低 CPU 和 GPU 使用率。"

msgid ""
"Alternatively, disable variable refresh rate on your monitor or in the "
"graphics driver."
msgstr "或者，在顯示器或圖形驅動程式中禁用可變更新率。"

msgid ""
"VRR flicker can be reduced on some displays using the **VRR Control** or "
"**Fine Tune Dark Areas** options in your monitor's OSD. These options may "
"increase input lag or result in crushed blacks."
msgstr ""
"VRR閃爍這個問題在某些顯示器上，可以通過你的顯示器的OSD中的**VRR控制**或**微調"
"暗區**選項來減少。這些選項可能會增加輸入延遲或導致黑色失真。"

msgid ""
"If using an OLED display, use the **Black (OLED)** editor theme preset in "
"the Editor Settings. This hides VRR flicker thanks to OLED's perfect black "
"levels."
msgstr ""
"如果使用一台OLED顯示器，可以在編輯器設定中使用**黑色（OLED）**預設。因為OLED"
"顯示器的出色的黑階表現，這個預設將會有助於減弱VRR閃爍。"

msgid "The editor or project takes a very long time to start"
msgstr "編輯器或專案花了很多時間才打開"

msgid ""
"When using one of the Vulkan-based renderers (Forward+ or Forward Mobile), "
"the first startup is expected to be relatively long. This is because shaders "
"need to be compiled before they can be cached. Shaders also need to be "
"cached again after updating Godot, after updating graphics drivers or after "
"switching graphics cards."
msgstr ""
"當使用基於Vulkan的算繪器（Forward+ 或 Forward Mobile）時，第一次啟動將會話費"
"比較長的時間。這是因為著色器需要在快取之前進行編譯。更新Godot、更新顯卡驅動或"
"切換顯卡後，著色器也需要重新快取。"

msgid ""
"If the issue persists after the first startup, this is a `known bug <https://"
"github.com/godotengine/godot/issues/20566>`__ on Windows when you have "
"specific USB peripherals connected. In particular, Corsair's iCUE software "
"seems to cause this bug. Try updating your USB peripherals' drivers to their "
"latest version. If the bug persists, you need to disconnect the specific "
"peripheral before opening the editor. You can then connect the peripheral "
"again."
msgstr ""
"這是在 Windows 上的一個 `已知 Bug <https://github.com/godotengine/godot/"
"issues/20566>`__ ，會發生在有連接到特定 USB 週邊裝置時。特別是 Corsair 的 "
"iCUE 軟體似乎會導致這個問題。請試著更新這些 USB 週邊裝置的驅動程式至最新版"
"本。若仍然遇到此 Bug，則必須在開啟編輯器時先斷開有問題的週邊裝置。開啟後即可"
"重新接上。"

msgid ""
"Firewall software such as Portmaster may also cause the debug port to be "
"blocked. This causes the project to take a long time to start, while being "
"unable to use debugging features in the editor (such as viewing ``print()`` "
"output). You can work this around by changing the debug port used by the "
"project in the Editor Settings (**Network > Debug > Remote Port**). The "
"default is ``6007``; try another value that is greater than ``1024``, such "
"as ``7007``."
msgstr ""

msgid "The Godot editor appears frozen after clicking the system console"
msgstr "點擊系統主控台後，Godot 編輯器沒有回應"

msgid ""
"When running Godot on Windows with the system console enabled, you can "
"accidentally enable *selection mode* by clicking inside the command window. "
"This Windows-specific behavior pauses the application to let you select text "
"inside the system console. Godot cannot override this system-specific "
"behavior."
msgstr ""
"在 Windows 上啟用系統主控台時執行 Godot，可能會不小心在命令視窗內因點擊而啟用"
"了 **選擇模式** 。這個行為只會發生在 Windows 上，會暫停應用程式來讓使用者可選"
"擇系統主控台內的文字。Godot 無法複寫此一系統特定的行為。"

msgid ""
"To solve this, select the system console window and press Enter to leave "
"selection mode."
msgstr "要解決此問題，請選擇系統主控台視窗，並按一下 Enter 鍵來離開選擇模式。"

msgid ""
"The Godot editor's macOS dock icon gets duplicated every time it is manually "
"moved"
msgstr "手動移動Godot編輯器的macOS dock 圖示之後，會出現多餘的編輯器圖示"

msgid ""
"If you open the Godot editor and manually change the position of the dock "
"icon, then restart the editor, you will get a duplicate dock icon all the "
"way to the right of the dock."
msgstr ""
"如果你打開 Godot 編輯器並手動改變 dock 圖示的位置，然後重啟編輯器，你會在 "
"dock 的最右邊看到一個重複的 dock 圖示。"

msgid ""
"This is due to a design limitation of the macOS dock. The only known way to "
"resolve this would be to merge the project manager and editor into a single "
"process, which means the project manager would no longer spawn a separate "
"process when starting the editor. While using a single process instance "
"would bring several benefits, it isn't planned to be done in the near future "
"due to the complexity of the task."
msgstr ""
"這是由於 macOS dock 的設計限制造成的。解決這個問題的唯一已知方法是將專案管理"
"器和編輯器合併為一個程序，這意味著專案管理器在啟動編輯器時不再產生一個單獨的"
"程序。雖然使用單一程序實例會帶來一些好處，但由於工作的複雜性，完成這個功能沒"
"有列入我們近期的工作計畫。"

msgid ""
"To avoid this issue, keep the Godot editor's dock icon at its default "
"location as created by macOS."
msgstr ""
"為了避免這個問題，保持 Godot 編輯器的 dock 圖示在 macOS 建立的預設位置。"

msgid ""
"Some text such as \"NO DC\" appears in the top-left corner of the Project "
"Manager and editor window"
msgstr "在專案管理員與編輯器視窗左上角出現\"NO DC\"之類的文字"

msgid ""
"This is caused by the NVIDIA graphics driver injecting an overlay to display "
"information."
msgstr "這是由於NVIDIA顯卡驅動程式注入了覆蓋顯示資訊造成的。"

msgid ""
"To disable this overlay on Windows, restore your graphics driver settings to "
"the default values in the NVIDIA Control Panel."
msgstr ""
"要在Windows上禁用此覆蓋，請在NVIDIA控制台中將圖形驅動程式設定恢復為預設值。"

msgid ""
"To disable this overlay on Linux, open ``nvidia-settings``, go to **X Screen "
"0 > OpenGL Settings** then uncheck **Enable Graphics API Visual Indicator**."
msgstr ""
"要在Linux上禁用此覆蓋，請打開``nvidia-settings``，轉到**X Screen 0 > OpenGL "
"Settings**，然後取消選中**Enable Graphics API Visual Indicator**。"

msgid "The editor or project appears overly sharp or blurry"
msgstr "編輯器或專案顯示看起來過於銳利或模糊"

msgid ""
"Correct appearance (left), oversharpened appearance due to graphics driver "
"sharpening (right)"
msgstr "正確的外觀（左），由於顯卡驅動的銳化而導致的過度銳化的外觀（右）"

msgid ""
"If the editor or project appears overly sharp, this is likely due to image "
"sharpening being forced on all Vulkan or OpenGL applications by your "
"graphics driver. You can disable this behavior in the graphics driver's "
"control panel:"
msgstr ""
"如果編輯器或專案看起來過於銳利，這可能是由於你的圖形驅動程式強制對所有 "
"Vulkan 或 OpenGL 應用程式進行圖像銳化。你可以在圖形驅動程式的控制台中禁用此行"
"為："

msgid ""
"**NVIDIA (Windows):** Open the start menu and choose **NVIDIA Control "
"Panel**. Open the **Manage 3D settings** tab on the left. In the list in the "
"middle, scroll to **Image Sharpening** and set it to **Sharpening Off**."
msgstr ""
"**NVIDIA（Windows）：** 打開\"開始\"功能表，選擇“NVIDIA 控制台”。打開左側的**"
"管理 3D 設定**分頁。在中間的列表中，滾動到**圖像銳化**，並將其設定為**關閉銳"
"化**。"

msgid ""
"**AMD (Windows):** Open the start menu and choose **AMD Software**. Click "
"the settings \"cog\" icon in the top-right corner. Go to the **Graphics** "
"tab then disable **Radeon Image Sharpening**."
msgstr ""
"**AMD（Windows）：**打開開始功能表，選擇**AMD 軟體**。點擊右上角的設定 \"齒"
"輪 \"圖示。轉到“**圖形**”分頁，然後禁用“**Radeon 圖像銳化**”。"

msgid ""
"If the editor or project appears overly blurry, this is likely due to :abbr:"
"`FXAA (Fast Approximate AntiAliasing)` being forced on all Vulkan or OpenGL "
"applications by your graphics driver."
msgstr ""
"如果編輯器或者專案看起來過於模糊，這可能是由於 :abbr:`FXAA (Fast Approximate "
"AntiAliasing)` 被你的顯卡驅動強制應用到所有的 Vulkan 或者 OpenGL 應用程式上。"

msgid ""
"**NVIDIA (Windows):** Open the start menu and choose **NVIDIA Control "
"Panel**. Open the **Manage 3D settings** tab on the left. In the list in the "
"middle, scroll to **Fast Approximate Antialiasing** and set it to "
"**Application Controlled**."
msgstr ""
"**NVIDIA（Windows）：** 打開開始功能表並選擇 **NVIDIA 控制台** 。打開左側的 "
"**管理 3D 設定** 分頁。在中間的列表中， 滾動到 **平滑設定 - FXAA** 並將其設定"
"為 **應用程式控制的** 。"

msgid ""
"**NVIDIA (Linux):** Open the applications menu and choose **NVIDIA X Server "
"Settings**. Select to **Antialiasing Settings** on the left, then uncheck "
"**Enable FXAA**."
msgstr ""
"**NVIDIA（Linux）：** 打開應用程式功能表，選擇 **NVIDIA X 伺服器設定** 。在左"
"側選擇 **Antialiasing Settings** ，取消對 **Enable FXAA** 的勾選。"

msgid ""
"**AMD (Windows):** Open the start menu and choose **AMD Software**. Click "
"the settings \"cog\" icon in the top-right corner. Go to the **Graphics** "
"tab, scroll to the bottom and click **Advanced** to unfold its settings. "
"Disable **Morphological Anti-Aliasing**."
msgstr ""
"**AMD (Windows):** 打開開始功能表並選擇**AMD 軟體**。按一下 設定右上角的“齒"
"輪”圖示。轉到**圖形**分頁， 滾動到底部並按一下**高級**以展開其設定。禁用**形"
"態抗鋸齒**。"

msgid ""
"Third-party vendor-independent utilities such as vkBasalt may also force "
"sharpening or FXAA on all Vulkan applications. You may want to check their "
"configuration as well."
msgstr ""
"像是 vkBasalt 這種協力廠商開發的供應的工具可能會強迫所有的 Vulkan 應用程式開"
"啟銳化或者 FXAA。你可能也需要檢查他們的設定。"

msgid ""
"After changing options in the graphics driver or third-party utilities, "
"restart Godot to make the changes effective."
msgstr ""
"當你變更過了顯卡驅動和協力廠商工具中的設定後，重啟 Godot 去應用這些設定。"

msgid ""
"If you still wish to force sharpening or FXAA on other applications, it's "
"recommended to do so on a per-application basis using the application "
"profiles system provided by graphics drivers' control panels."
msgstr ""
"如果您仍然希望在其他應用程式上強制銳化或 FXAA，建議你使用顯卡驅動控制台提供的"
"應用程式配置系統，針對每個應用程式的進行設定。"

msgid "The editor or project appears to have washed out colors"
msgstr "此編輯器或專案看起來顏色很淡"

msgid ""
"On Windows, this is usually caused by incorrect OS or monitor settings, as "
"Godot currently does not support :abbr:`HDR (High Dynamic Range)` *output* "
"(even though it may internally render in HDR)."
msgstr ""
"在 Windows 上，這通常是由不正確的作業系統或顯示器設定引起的，因為 Godot 目前"
"不支援 :abbr:`HDR (High Dynamic Range)` *輸出* （即使它可能在內部以 HDR 算"
"繪）。"

msgid ""
"As `most displays are not designed to display SDR content in HDR mode "
"<https://tftcentral.co.uk/articles/heres-why-you-should-only-enable-hdr-mode-"
"on-your-pc-when-you-are-viewing-hdr-content>`__, it is recommended to "
"disable HDR in the Windows settings when not running applications that use "
"HDR output. On Windows 11, this can be done by pressing :kbd:`Windows + Alt "
"+ B` (this shortcut is part of the Xbox Game Bar app). To toggle HDR "
"automatically based on applications currently running, you can use "
"`AutoActions <https://github.com/Codectory/AutoActions>`__."
msgstr ""
"由於`大多數顯示器並非被設計為在 HDR 模式下顯示 SDR 內容<https://tftcentral."
"co.uk/articles/heres-why-you-should-only-enable-hdr-mode-on-your-pc-when-you-"
"are-viewing-hdr-content>`，建議在未運作應用程式時在Windows設定中禁用HDR 使用 "
"HDR 輸出。在 Windows11 上，可以通過按下 :kbd:`Windows + Alt + B` （此快捷方式"
"是 Xbox Game Bar 應用程式的一部分）。如果要自動開關HDR模式的話，你可以使用 "
"`AutoActions <https://github.com/Codectory/AutoActions>` 。"

msgid ""
"If you insist on leaving HDR enabled, it is possible to somewhat improve the "
"result by ensuring the display is configured to use :abbr:`HGIG (HDR Gaming "
"Interest Group)` tonemapping (as opposed to :abbr:`DTM (Dynamic Tone "
"Mapping)`), then `using the Windows HDR calibration app <https://support."
"microsoft.com/en-us/windows/calibrate-your-hdr-display-using-the-windows-hdr-"
"calibration-app-f30f4809-3369-43e4-9b02-9eabebd23f19>`__. It is also "
"strongly recommended to use Windows 11 instead of Windows 10 when using HDR. "
"The end result will still likely be inferior to disabling HDR on the "
"display, though."
msgstr ""
"如果你堅持要啟用 HDR 模式， 也有一些方法可以改善顯示效果，確保顯示器被設定為"
"啟用 :abbr:`HGIG (HDR Gaming Interest Group)` 色調對應(而不是 :abbr:`DTM "
"(Dynamic Tone Mapping)` 色調對應)， 之後 `使用 Windows HDR 校準應用<https://"
"support.microsoft.com/en-us/windows/calibrate-your-hdr-display-using-the-"
"windows-hdr-calibration-app-f30f4809-3369-43e4-9b02-9eabebd23f19>` 。在使用"
"HDR時，強烈建議使用Windows 11而不是Windows 10。 不過，最終結果仍然可能不如在"
"顯示器上禁用HDR。"

msgid "Support for HDR *output* is planned in a future release."
msgstr "計畫在未來版本中支援 HDR *匯出*。"

msgid ""
"The editor/project freezes or displays glitched visuals after resuming the "
"PC from suspend"
msgstr "從掛起狀態恢復 PC 後，編輯器/專案凍結或顯示出現故障"

msgid ""
"This is a known issue on Linux with NVIDIA graphics when using the "
"proprietary driver. There is no definitive fix yet, as suspend on Linux + "
"NVIDIA is often buggy when OpenGL or Vulkan is involved. The Compatibility "
"rendering method (which uses OpenGL) is generally less prone to suspend-"
"related issues compared to the Forward+ and Forward Mobile rendering methods "
"(which use Vulkan)."
msgstr ""
"當您在 Linux 上使用 NVIDIA 的專用圖形驅動程式時便會出現這個已知的問題。目前還"
"沒有明確的解決方案，因為當涉及 OpenGL 或 Vulkan 時，Linux+NVIDIA 上的掛起通常"
"會出現問題。與 Forward+ 和 ForwardMobile 算繪方法（使用 Vulkan ）相比，相容性"
"算繪方法（採用 OpenGL ）通常不太容易出現掛起相關問題。"

msgid ""
"The NVIDIA driver offers an *experimental* `option to preserve video memory "
"after suspend <https://wiki.archlinux.org/title/NVIDIA/"
"Tips_and_tricks#Preserve_video_memory_after_suspend>`__ which may resolve "
"this issue. This option has been reported to work better with more recent "
"NVIDIA driver versions."
msgstr ""
"NVIDIA驅動程式提供了一個 *實驗性* `選項可在掛起後保護影片記憶體 <https://"
"wiki.archlinux.org/title/NVIDIA/"
"Tips_and_tricks#Preserve_video_memory_after_suspend>`__ 用以解決這個問題。據"
"報導，此選項與較新的 NVIDIA 驅動程式版本配合使用效果更好。"

msgid ""
"To avoid losing work, save scenes in the editor before putting the PC to "
"sleep."
msgstr "為了避免丟失工作內容，請在使電腦進入睡眠狀態之前將場景保存在編輯器中。"

msgid ""
"The project works when run from the editor, but fails to load some files "
"when running from an exported copy"
msgstr "專案可以從編輯器裡執行，但是從匯出的版本執行時無法載入某些檔案"

msgid ""
"This is usually caused by forgetting to specify a filter for non-resource "
"files in the Export dialog. By default, Godot will only include actual "
"*resources* into the PCK file. Some files commonly used, such as JSON files, "
"are not considered resources. For example, if you load ``test.json`` in the "
"exported project, you need to specify ``*.json`` in the non-resource export "
"filter. See :ref:`doc_exporting_projects_export_mode` for more information."
msgstr ""
"這個問題通常時因為忘記在 [匯出] 對話框中為非資源檔案指定篩選器導致的。預設情"
"況下，Godot 只會將真正的 **資源 (Resource)** 打包進 PCK 檔案內。有些常用的檔"
"案，如 JSON 檔，並不屬於資源。舉例來說，若在匯出的專案中載入 ``test.json`` ，"
"則需要在非資源匯出篩選器內指定 ``*.json`` 。更多資訊請參考 :ref:"
"`doc_exporting_projects_export_mode` 。"

msgid ""
"Also, note that files and folders whose names begin with a period will never "
"be included in the exported project. This is done to prevent version control "
"folders like ``.git`` from being included in the exported PCK file."
msgstr ""
"另外，請注意，匯出的專案永遠不會包含名字以點開頭的檔和資料夾。這是為了防止將 "
"``.git`` 等版本控制資料夾包含在匯出的 PCK 檔中。"

msgid ""
"On Windows, this can also be due to :ref:`case sensitivity "
"<doc_project_organization_case_sensitivity>` issues. If you reference a "
"resource in your script with a different case than on the filesystem, "
"loading will fail once you export the project. This is because the virtual "
"PCK filesystem is case-sensitive, while Windows's filesystem is case-"
"insensitive by default."
msgstr ""
"而在 Windows 上，這個問題還可能是因為 :ref:`大小寫區分 "
"<doc_project_organization_case_sensitivity>` 問題導致的。若在腳本中以與檔案系"
"統不同的大小寫來參照資源，則匯出專案之後就會載入失敗。這是因為虛擬 PCK 檔案系"
"統是有區分大小寫的，而 Windows 的檔案系統則預設不區分大小寫。"

msgid "Translation status"
msgstr "翻譯狀態"
