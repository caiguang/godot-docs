# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Background loading"
msgstr "後臺載入"

msgid ""
"Commonly, games need to load resources asynchronously. When switching the "
"main scene of your game (e.g. going to a new level), you might want to show "
"a loading screen with some indication that progress is being made, or you "
"may want to load additional resources during gameplay."
msgstr ""
"通常，遊戲需要非同步載入資源。當切換遊戲的主場景時（例如，進入新的關卡），您"
"可能想要顯示一個載入畫面，其中包含一些正在進行的指示，或者您可能希望在遊戲過"
"程中載入其他資源。"

msgid ""
"The standard load method (:ref:`ResourceLoader.load "
"<class_ResourceLoader_method_load>` or GDScript's simpler :ref:`load "
"<class_@GDScript_method_load>`) blocks your thread, making your game appear "
"unresponsive while the resource is being loaded."
msgstr ""
"標準載入方法（:ref:`ResourceLoader.load <class_ResourceLoader_method_load>` "
"或 GDScript 更簡單的:ref:`load <class_@GDScript_method_load>`）會阻塞您的線"
"程，讓您的遊戲在載入資源時顯得無回應。"

msgid ""
"One way around this is using ``ResourceLoader`` to load resources "
"asynchronously in background threads."
msgstr ""
"解決這個問題的一種方法是使用「ResourceLoader」在後台執行緒中非同步載入資源。"

msgid "Using ResourceLoader"
msgstr "建立 ResourceFormatLoader"

msgid ""
"Generally, you queue requests to load resources for a path using :ref:"
"`ResourceLoader.load_threaded_request "
"<class_ResourceLoader_method_load_threaded_request>`, which will then be "
"loaded in threads in the background."
msgstr ""
"通常，您使用 ResourceLoader.load_threaded_request "
"<class_ResourceLoader_method_load_threaded_request> 對載入路徑資源的請求進行"
"排隊，然後將在背景的執行緒中載入。"

msgid ""
"You can check the status with :ref:`ResourceLoader.load_threaded_get_status "
"<class_ResourceLoader_method_load_threaded_get_status>`. Progress can be "
"obtained by passing an array variable via progress which will return a one "
"element array containing the percentage."
msgstr ""
"您可以使用 ResourceLoader.load_threaded_get_status "
"<class_ResourceLoader_method_load_threaded_get_status>` 檢查狀態。可以透過 "
"Progress 傳遞一個陣列變數來取得進度，該變數將傳回一個包含百分比的單元素陣列。"

#, fuzzy
msgid ""
"Finally, you retrieve loaded resources by calling :ref:`ResourceLoader."
"load_threaded_get <class_ResourceLoader_method_load_threaded_get>`."
msgstr ""
"最後，您透過呼叫 ResourceLoader.load_threaded_get "
"<class_ResourceLoader_method_load_threaded_get>` 來檢索已載入的資源。"

msgid ""
"Once you call ``load_threaded_get()``, either the resource finished loading "
"in the background and will be returned instantly or the load will block at "
"this point like ``load()`` would. If you want to guarantee this does not "
"block, you either need to ensure there is enough time between requesting the "
"load and retrieving the resource or you need to check the status manually."
msgstr ""
"一旦你呼叫“load_threaded_get()”，資源要么在後台完成加載並立即返回，要么加載將"
"像“load()”一樣在此時阻塞。如果您想保證這不會阻塞，您要么需要確保請求加載和檢"
"索資源之間有足夠的時間，要么需要手動檢查狀態。"

msgid "Example"
msgstr "範例"

msgid ""
"This example demonstrates how to load a scene in the background. We will "
"have a button spawn a enemy when pressed. The enemy will be ``Enemy.tscn`` "
"which we will load on ``_ready`` and instantiate when pressed. The path will "
"be ``\"Enemy.tscn\"`` which is located at ``res://Enemy.tscn``."
msgstr ""
"此範例示範如何在背景載入場景。我們將有一個按鈕，按下時會生成一個敵人。敵人將"
"是“Enemy.tscn”，我們將在“_ready”上載入它並在按下時實例化。路徑為“Enemy."
"tscn”，位於“res://Enemy.tscn”。"

msgid ""
"First, we will start a request to load the resource and connect the button:"
msgstr "首先，我們將啟動一個請求來載入資源並連接按鈕："

msgid ""
"Now ``_on_button_pressed`` will be called when the button is pressed. This "
"method will be used to spawn an enemy."
msgstr "現在按下按鈕時將呼叫“_on_button_pressed”。此方法將用於生成敵人。"

msgid "Translation status"
msgstr "翻譯狀態"
