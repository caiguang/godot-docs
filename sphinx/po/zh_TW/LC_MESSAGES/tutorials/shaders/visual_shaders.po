# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using VisualShaders"
msgstr "使用視覺化著色器"

msgid "VisualShaders are the visual alternative for creating shaders."
msgstr "VisualShaders 是建立著色器的視覺化替代方案。"

msgid ""
"As shaders are inherently linked to visuals, the graph-based approach with "
"previews of textures, materials, etc. offers a lot of additional convenience "
"compared to purely script-based shaders. On the other hand, VisualShaders do "
"not expose all features of the shader script and using both in parallel "
"might be necessary for specific effects."
msgstr ""
"由於著色器本質上與視覺效果有聯繫, 與純粹基於腳本的著色器相比, 基於圖的方式, "
"有紋理, 材質等的預覽, 提供了很多額外的便利. 另一方面,VisualShaders並沒有暴露"
"出著色器腳本的所有功能, 對於特定的效果, 並行使用兩者可能是必要的."

msgid ""
"If you are not familiar with shaders, start by reading :ref:"
"`doc_introduction_to_shaders`."
msgstr ""
"如果你對著色器不熟悉，可以從閱讀 :ref:`doc_introduction_to_shaders` 開始。"

msgid "Creating a VisualShader"
msgstr "建立內容"

msgid ""
"VisualShaders can be created in any :ref:`class_ShaderMaterial`. To begin "
"using VisualShaders, create a new ``ShaderMaterial`` in an object of your "
"choice."
msgstr ""
"VisualShader 可以在任何 :ref:`class_ShaderMaterial` 中建立。要開始使用 "
"VisualShader，請在你選擇的物件中建立一個新的 ``ShaderMaterial``。"

msgid ""
"Then assign a :ref:`class_VisualShader` resource to the ``Shader`` property."
msgstr "然後將一個 :ref:`class_VisualShader` 資源配置給 ``Shader`` 屬性。"

msgid ""
"Click on the new ``Shader`` resource and the Create Shader dialog will open "
"automatically. Change the Type option to VisualShader in the dropdown."
msgstr ""
"點擊新的 ``VisualShader`` 資源，Visual Shader 編輯器就會自動打開。Visual "
"Shader 編輯器的佈局包括兩部分：上層工具列和圖表本身。"

msgid ""
"The layout of the Visual Shader Editor comprises two parts: the upper "
"toolbar and the graph itself."
msgstr ""
"點擊新的 ``VisualShader`` 資源，Visual Shader 編輯器就會自動打開。Visual "
"Shader 編輯器的佈局包括兩部分：上層工具列和圖表本身。"

msgid "From left to right in the toolbar:"
msgstr "在工具列中從左到右："

msgid ""
"The ``Add Node`` button displays a popup menu to let you add nodes to the "
"shader graph."
msgstr "``新增節點`` 按鈕會顯示一個彈出式功能表，讓你為著色器圖新增節點。"

msgid ""
"The drop-down menu is the shader type: Vertex, Fragment and Light. Like for "
"script shaders, it defines what built-in nodes will be available."
msgstr ""
"下拉式功能表是著色器型別. 頂點, 碎片和光線和腳本著色器一樣, 它定義了哪些內建"
"節點將是可用的."

msgid ""
"The following buttons and number input control the zooming level, grid "
"snapping and distance between grid lines (in pixels)."
msgstr ""
"下面的按鈕和數位輸入控制縮放級別, 網格捕捉和格線之間的距離(單位為像素)."

msgid ""
"The last icon shows the generated shader code corresponding to your graph."
msgstr "最後一個圖示顯示了與你的圖形對應生成的著色器程式碼."

msgid ""
"Although VisualShaders do not require coding, they share the same logic with "
"script shaders. It is advised to learn the basics of both to have a good "
"understanding of the shading pipeline."
msgstr ""
"雖然 VisualShader 不需要編碼，但它們與腳本著色器有著相同的邏輯。建議學習這兩"
"者的基礎知識，以便對著色管道有一個很好的理解。"

msgid ""
"The visual shader graph is converted to a script shader behind the scene, "
"and you can see this code by pressing the last button in the toolbar. This "
"can be convenient to understand what a given node does and how to reproduce "
"it in scripts."
msgstr ""
"視覺化的著色器圖形在場景後臺轉換為腳本著色器, 按下工具列上的最後一個按鈕就可"
"以看到程式碼. 這可以方便理解特定節點的作用, 以及如何在腳本中呈現."

msgid "Using the Visual Shader Editor"
msgstr "使用 Visual Shader 編輯器"

msgid ""
"By default, every new ``VisualShader`` will have an output node. Every node "
"connection ends at one of the output node's sockets. A node is the basic "
"unit to create your shader. To add a new node, click on the ``Add Node`` "
"button on the upper left corner or right click on any empty location in the "
"graph, and a menu will pop up."
msgstr ""
"預設情況下, 每個新的 ``VisualShader`` 都會有一個輸出節點. 每個節點的連接都在"
"輸出節點的一個套接處結束. 節點是建立著色器的基本單元. 要新增一個新的節點, 點"
"擊左上角的 ``新增節點`` 按鈕, 或者在圖形中的任何一個空的位置上右擊, 就會彈出"
"一個功能表."

msgid "This popup has the following properties:"
msgstr "此快顯視窗具有以下屬性:"

msgid ""
"If you right-click on the graph, this menu will be called at the cursor "
"position and the created node, in that case, will also be placed under that "
"position; otherwise, it will be created at the graph's center."
msgstr ""
"如果你在圖形上按一下右鍵, 這個功能表將在游標位置被調出, 建立的節點, 在這種情"
"況下, 也將被放在該位置, 否則, 將在圖形的中心位置建立."

msgid ""
"It can be resized horizontally and vertically allowing more content to be "
"shown. Size transform and tree content position are saved between the calls, "
"so if you suddenly closed the popup you can easily restore its previous "
"state."
msgstr ""
"它可以在水平和垂直方向上調整大小, 以允許顯示更多的內容. 尺寸變換和樹的內容位"
"置在呼叫當中被保存, 所以如果突然關閉了快顯視窗, 可以很容易地恢復它以前的狀態."

msgid ""
"The ``Expand All`` and ``Collapse All`` options in the drop-down option menu "
"can be used to easily list the available nodes."
msgstr ""
"下拉選項功能表中的 ``展開全部`` 和 ``折疊全部`` 選項可用於輕鬆列出可用節點."

msgid "You can also drag and drop nodes from the popup onto the graph."
msgstr "你也可以從彈出式功能表中拖放節點到圖形上."

msgid ""
"While the popup has nodes sorted in categories, it can seem overwhelming at "
"first. Try to add some of the nodes, plug them in the output socket and "
"observe what happens."
msgstr ""
"雖然彈出的節點是按類別分類的, 但一開始會不知所以. 試著新增一些節點, 將它們插"
"入輸出套接處, 觀察會發生什麼."

msgid ""
"When connecting any ``scalar`` output to a ``vector`` input, all components "
"of the vector will take the value of the scalar."
msgstr ""
"當把任何 ``scalar`` 輸出連接到 ``vector`` 輸入時, 向量的所有分量將取標量的值."

msgid ""
"When connecting any ``vector`` output to a ``scalar`` input, the value of "
"the scalar will be the average of the vector's components."
msgstr ""
"當把任何 ``vector`` 輸出連接到 ``scalar`` 輸入時, 標量的值將是向量分量的平均"
"值."

#, fuzzy
msgid "Visual Shader node interface"
msgstr "可視化著色器節點"

msgid ""
"Visual shader nodes have input and output ports. The input ports are located "
"on the left side of the node, and output ports are located on the right side "
"of the node."
msgstr ""

msgid "These ports are colored to differentiate type of port:"
msgstr ""

msgid "scalar"
msgstr ""

#, fuzzy
msgid "vector"
msgstr "vector2"

msgid "boolean"
msgstr "boolean"

#, fuzzy
msgid "transform"
msgstr "transform2d"

#, fuzzy
msgid "sampler"
msgstr "simple"

#, fuzzy
msgid "Port types"
msgstr "Core 型別"

msgid "Type"
msgstr "型別"

msgid "Color"
msgstr "顏色"

msgid "Description"
msgstr "說明"

msgid "Example"
msgstr "範例"

#, fuzzy
msgid "Scalar"
msgstr "縮放"

msgid "Cyan"
msgstr ""

msgid "Scalar is a single value."
msgstr ""

msgid "|scalar|"
msgstr ""

msgid "Vector"
msgstr "向量 Vector"

msgid "Purple"
msgstr ""

msgid "Vector is a set of values."
msgstr ""

#, fuzzy
msgid "|vector|"
msgstr "vector2"

#, fuzzy
msgid "Boolean"
msgstr "boolean"

msgid "Blue"
msgstr ""

msgid "On or off, true or false."
msgstr ""

#, fuzzy
msgid "|boolean|"
msgstr "boolean"

msgid "Transform"
msgstr "變換"

#, fuzzy
msgid "Orange"
msgstr "range"

#, fuzzy
msgid "A matrix, usually used to transform vertices."
msgstr "用於 2D 幾何變換的 3×2 矩陣。"

#, fuzzy
msgid "|transform|"
msgstr "transform2d"

#, fuzzy
msgid "Sampler"
msgstr "Sampler2D"

msgid "Yellow"
msgstr ""

msgid "A texture sampler. It can be used to sample textures."
msgstr ""

#, fuzzy
msgid "|sampler|"
msgstr "Sampler2D"

msgid ""
"All of the types are used in the calculations of vertices, fragments, and "
"lights in the shader. For example: matrix multiplication, vector addition, "
"or scalar division."
msgstr ""

#, fuzzy
msgid "There are other types but these are the main ones."
msgstr "有兩個地方可以管理樣板。"

msgid "Visual Shader nodes"
msgstr "可視化著色器節點"

msgid ""
"Below are some special nodes that are worth knowing about. The list is not "
"exhaustive and might be expanded with more nodes and examples."
msgstr ""
"以下是一些值得瞭解的特殊節點. 該列表並非詳盡無遺, 可能會增加更多的節點和範例."

msgid "Expression node"
msgstr "Expression 節點"

msgid ""
"The ``Expression`` node allows you to write Godot Shading Language (GLSL-"
"like) expressions inside your visual shaders. The node has buttons to add "
"any amount of required input and output ports and can be resized. You can "
"also set up the name and type of each port. The expression you have entered "
"will apply immediately to the material (once the focus leaves the expression "
"text box). Any parsing or compilation errors will be printed to the Output "
"tab. The outputs are initialized to their zero value by default. The node is "
"located under the Special tab and can be used in all shader modes."
msgstr ""
"``Expression`` 節點允許你在視覺著色器中編寫 Godot 著色語言(GLSL-like)運算式. "
"該節點具有新增任意數量的所需輸入和輸出埠的按鈕, 並且可以調整其大小. 你還可以"
"設定每個埠的名稱和型別. 輸入的運算式將立即應用於材質(焦點離開運算式文字方塊"
"後). 任何解析或編譯錯誤都將列印到 \"輸出\" 分頁. 預設情況下, 輸出初始化為零"
"值. 該節點位於 \"特殊\" 分頁下, 可用於所有著色器模式."

msgid ""
"The possibilities of this node are almost limitless – you can write complex "
"procedures, and use all the power of text-based shaders, such as loops, the "
"``discard`` keyword, extended types, etc. For example:"
msgstr ""
"這個節點的可能性幾乎無窮無盡 —— 你可以編寫複雜的過程, 並使用基於文字的著色器"
"的全部力量, 例如迴圈, 關鍵字 ``discard`` , 擴充型別, 等等. 例如:"

msgid "Fresnel node"
msgstr "Fresnel 結點"

msgid ""
"The ``Fresnel`` node is designed to accept normal and view vectors and "
"produces a scalar which is the saturated dot product between them. "
"Additionally, you can setup the inversion and the power of equation. The "
"``Fresnel`` node is great for adding a rim-like lighting effect to objects."
msgstr ""
"``Fresnel`` 節點用於接受法線向量和視圖向量, 並生成一個標量, 即它們之間的飽和"
"點積. 此外, 你可以設定反轉和方程的冪. ``Fresnel`` 節點非常適合為對象新增類似"
"邊緣的照明效果."

msgid "Boolean node"
msgstr "Boolean 節點"

msgid ""
"The ``Boolean`` node can be converted to ``Scalar`` or ``Vector`` to "
"represent ``0`` or ``1`` and ``(0, 0, 0)`` or ``(1, 1, 1)`` respectively. "
"This property can be used to enable or disable some effect parts with one "
"click."
msgstr ""
"``Boolean`` 節點可以轉換為或 ``Scalar`` 或 ``Vector`` , 分別表示 ``0`` 或 "
"``1`` 和 ``(0, 0, 0)`` 或 ``(1, 1, 1)`` . 該屬性可用於一鍵啟用或禁用某些效果"
"元件."

msgid "If node"
msgstr "If 節點"

msgid ""
"The ``If`` node allows you to setup a vector which will be returned the "
"result of the comparison between ``a`` and ``b``. There are three vectors "
"which can be returned: ``a == b`` (in that case the tolerance parameter is "
"provided as a comparison threshold – by default it is equal to the minimal "
"value, i.e. ``0.00001``), ``a > b`` and ``a < b``."
msgstr ""
"``If`` 節點允許你設定一個向量, 它將返回 ``a`` 和 ``b`` 之間的比較結果. 有三個"
"向量可以返回: ``a == b`` (在這種情況下, 容差參數是作為比較閾值提供的--預設情"
"況下它等於最小值, 即 ``0.00001`` ), ``a > b`` 和 ``a < b`` ."

msgid "Switch node"
msgstr "Switch 節點"

msgid ""
"The ``Switch`` node returns a vector if the boolean condition is ``true`` or "
"``false``. ``Boolean`` was introduced above. If you convert a vector to a "
"true boolean, all components of the vector should be above zero."
msgstr ""
"如果布林條件是 ``true`` 或 ``false`` , ``Switch`` 節點返回一個向量. "
"``Boolean`` 在上面介紹過. 如果你把一個向量轉換為真布林值, 那麼向量的所有分量"
"都應該高於零."

msgid "Translation status"
msgstr "翻譯狀態"
