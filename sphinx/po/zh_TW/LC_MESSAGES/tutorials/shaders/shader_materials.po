# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Shader materials"
msgstr "著色器材質"

msgid "Introduction"
msgstr "前言"

msgid ""
"For the most common cases, Godot provides ready to use materials for most "
"types of shaders, such as :ref:`StandardMaterial3D "
"<class_StandardMaterial3D>`, :ref:`CanvasItemMaterial "
"<class_CanvasItemMaterial>` and :ref:`ParticleProcessMaterial "
"<class_ParticleProcessMaterial>`. They are flexible implementations that "
"cover most use cases."
msgstr ""
"對於最常見的情況,Godot為大多數型別的著色器提供了隨時可用的材質, 例如 :ref:"
"`SpatialMaterial <class_SpatialMaterial>` , :ref:`CanvasItemMaterial "
"<class_CanvasItemMaterial>` 和 :ref:`ParticlesMaterial "
"<class_ParticlesMaterial>` . 它們是涵蓋了大多數用例的靈活實作."

msgid ""
"Shader materials allow writing a custom shader directly, for maximum "
"flexibility. Examples of this are:"
msgstr "著色器材質允許直接編寫自訂著色器, 以獲得最大的靈活性. 這方面的範例是:"

msgid "Create procedural textures."
msgstr "建立程式式紋理。"

msgid "Create complex texture blending effects."
msgstr "建立複雜的紋理混合效果."

msgid "Create animated materials, or materials that change over time."
msgstr "建立動畫材質, 或隨時間變化的材質."

msgid "Create refractive effects or other advanced effects."
msgstr "建立折射效果或其他高級效果."

msgid "Create special lighting shaders for more exotic materials."
msgstr "為更具異國情調的材質建立特殊照明著色器."

msgid "Animate vertices, like tree leaves or grass."
msgstr "動畫頂點, 如樹葉或草."

msgid "Create custom particle code."
msgstr "建立自訂粒子程式碼."

msgid "And much more!"
msgstr "以及更多！"

msgid ""
"Godot provides built in functionality to make frequent operations easier. "
"Additionally, Godot's shader editor will detect errors as you type, so you "
"can see your edited shaders in real-time. It is also possible to edit "
"shaders using a visual, node-based graph editor."
msgstr ""
"Godot提供了內建的功能, 使頻繁的操作更容易. 此外,Godot的著色器編輯器會在你輸入"
"時偵測錯誤, 所以你可以即時看到編輯的著色器. 也可以使用視覺化的, 基於節點的圖"
"形編輯器來編輯著色器."

msgid "Creating a ShaderMaterial"
msgstr "建立 ShaderMaterial"

msgid ""
"Create a new ShaderMaterial in some object of your choice. Go to the "
"\"Material\" property and create a ShaderMaterial."
msgstr ""
"在您選擇的某個物件中建立一個新的 ShaderMaterial。轉到 ``Material`` 屬性並建"
"立 ShaderMaterial。"

msgid ""
"Next, click on the shader material to see its properties. From here you can "
"create a shader or visual shader. Regular shaders use code to set their "
"properties while a visual shader uses a node based workflow."
msgstr ""
"接下來, 點擊著色器材質, 查看其屬性. 從這裡你可以建立一個著色器或視覺著色器. "
"常規著色器使用程式碼來設定它們的屬性, 而視覺著色器則使用基於節點的工作流程."

msgid ""
"If you need to you can convert a visual shader to a text shader. However you "
"can't convert a text shader to a visual shader."
msgstr ""
"如果你需要, 你可以將視覺著色器轉換為文字著色器. 但是你不能將文字著色器轉換為"
"視覺著色器."

msgid "Choose one of them and you can start editing your shader."
msgstr "選擇其中一個, 你就可以開始編輯你的著色器."

msgid ""
"If you create a regular shader click on it and the shader editor will open."
msgstr "編輯新建立的著色器, 著色器編輯器將打開."

msgid ""
"If you create a visual shader the visual shader editor will open "
"automatically."
msgstr "編輯新建立的著色器, 著色器編輯器將打開."

msgid ""
"In the visual shader editor you can click a button and see what your visual "
"shader looks like as shader code. This can be useful if you're trying to "
"replicate a text shader as nodes, or it can be used as a preview for "
"converting your visual shader to a text shader."
msgstr ""
"在視覺著色器編輯器中, 你可以點擊一個按鈕, 看看你的視覺著色器作為著色器程式碼"
"的樣子. 如果你想複製一個文字著色器作為節點, 這可能是有用的, 或者它可以作為將"
"你的視覺著色器轉換為文字著色器的預覽."

msgid "To learn more about visual shaders, read :ref:`doc_visual_shaders`."
msgstr "要瞭解更多關於視覺化著色器的資訊, 請閱讀 :ref:`doc_visual_shaders` ."

msgid "Converting to ShaderMaterial"
msgstr "轉換為 ShaderMaterial"

msgid ""
"It is possible to convert from StandardMaterial3D, CanvasItemMaterial and "
"ParticleProcessMaterial to ShaderMaterial. To do so, go to the material "
"properties and select the convert option."
msgstr ""
"可以將 SpatialMaterial、CanvasItemMaterial 和 ParticlesMaterial 轉換為 "
"ShaderMaterial。要做到這一點，請進入材質屬性並選擇轉換選項。"

msgid ""
"Using the convert option will turn the StandardMaterial3D into a "
"ShaderMaterial with a text shader, not a visual shader."
msgstr ""
"使用convert選項將把SpatialMaterial變成一個帶有文字著色器的ShaderMaterial, 而"
"不是視覺著色器."

msgid "Translation status"
msgstr "翻譯狀態"
