# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Converting GLSL to Godot shaders"
msgstr "建立 Godot 伺服器"

msgid ""
"This document explains the differences between Godot's shading language and "
"GLSL and gives practical advice on how to migrate shaders from other "
"sources, such as Shadertoy and The Book of Shaders, into Godot shaders."
msgstr ""
"本文件解釋了Godot的著色語言和GLSL之間的區別, 並提供了有關如何將著色器從其他來"
"源(如Shadertoy和The Book of Shaders)遷移到Godot著色器的實用建議."

msgid ""
"For detailed information on Godot's shading language, please refer to the :"
"ref:`Shading Language <doc_shading_language>` reference."
msgstr ""
"關於Godot的著色語言的詳細資訊, 請參考 :ref:`Shading Language "
"<doc_shading_language>` ."

msgid "GLSL"
msgstr "GLSL"

msgid ""
"Godot uses a shading language based on GLSL with the addition of a few "
"quality-of-life features. Accordingly, most features available in GLSL are "
"available in Godot's shading language."
msgstr ""
"Godot使用基於GLSL的著色語言, 增加了一些生活品質特徵. 因此,GLSL中提供的大多數"
"功能都可以使用Godot的著色語言."

msgid "Shader programs"
msgstr "著色器程式"

msgid ""
"In GLSL, each shader uses a separate program. You have one program for the "
"vertex shader and one for the fragment shader. In Godot, you have a single "
"shader that contains a ``vertex`` and/or a ``fragment`` function. If you "
"only choose to write one, Godot will supply the other."
msgstr ""
"在GLSL中, 每個著色器使用一個單獨的程式. 你有一個用於頂點著色器的程式和一個用"
"於片段著色器的程式. 在Godot中, 你有一個包含 ``vertex`` 和/或 ``fragment`` 函"
"式的單一著色器. 如果你只選擇寫一個,Godot會提供另一個."

msgid ""
"Godot allows uniform variables and functions to be shared by defining the "
"fragment and vertex shaders in one file. In GLSL, the vertex and fragment "
"programs cannot share variables except when varyings are used."
msgstr ""
"Godot允許通過在一個檔中定義片段和頂點著色器來共用uniform的變數和函式. 在GLSL"
"中, 頂點和片段程式不能共用變數, 除非是使用varyings的時候."

msgid "Vertex attributes"
msgstr "頂點屬性"

msgid ""
"In GLSL, you can pass in per-vertex information using attributes and have "
"the flexibility to pass in as much or as little as you want. In Godot, you "
"have a set number of input attributes, including ``VERTEX`` (position), "
"``COLOR``, ``UV``, ``UV2``, ``NORMAL``. Each shaders' page in the shader "
"reference section of the documentation comes with a complete list of its "
"vertex attributes."
msgstr ""
"在GLSL中, 你可以使用屬性來傳遞每個頂點的資訊, 並且可以靈活地傳遞你想要的資"
"訊, 或多或少. 在Godot中, 你有一系列的輸入屬性, 包括 ``VERTEX`` (座標), "
"``COLOR`` , ``UV`` , ``UV2`` , ``NORMAL`` . 完整的列表, 請參見 :ref:`Shading "
"language reference <doc_shading_language>` ."

msgid "gl_Position"
msgstr "gl_Position"

msgid ""
"``gl_Position`` receives the final position of a vertex specified in the "
"vertex shader. It is specified by the user in clip space. Typically, in "
"GLSL, the model space vertex position is passed in using a vertex attribute "
"called ``position`` and you handle the conversion from model space to clip "
"space manually."
msgstr ""
"``gl_Position`` 接收在頂點著色器中指定的頂點的最終座標. 它是由使用者在裁剪空"
"間中指定的. 通常, 在GLSL中, 模型空間的頂點位置是通過一個名為 ``position`` 的"
"頂點屬性來傳遞的, 你可以手動處理從模型空間到裁剪空間的轉換."

msgid ""
"In Godot, ``VERTEX`` specifies the vertex position in model space at the "
"beginning of the ``vertex`` function. Godot also handles the final "
"conversion to clip space after the user-defined ``vertex`` function is run. "
"If you want to skip the conversion from model to view space, you can set the "
"``render_mode`` to ``skip_vertex_transform``. If you want to skip all "
"transforms, set ``render_mode`` to ``skip_vertex_transform`` and set the "
"``PROJECTION_MATRIX`` to ``mat4(1.0)`` in order to nullify the final "
"transform from view space to clip space."
msgstr ""
"在Godot中, ``VERTEX`` 指定了 ``vertex`` 函式開始時在模型空間的頂點位置. 在使"
"用者定義的 ``vertex`` 函式運作後,Godot也會處理最終轉換到裁剪空間的過程. 如果"
"你想跳過從模型空間到視圖空間的轉換, 你可以將 ``render_mode`` 設定為 "
"``skip_vertex_transform`` . 如果你想跳過所有的轉換, 將 ``render_mode`` 設定"
"為 ``skip_vertex_transform`` 並將 ``PROJECTION_MATRIX`` 設定為 "
"``mat4(1.0)`` , 以便使從視圖空間到裁剪空間的最終轉換失效."

msgid "Varyings"
msgstr "Varying"

msgid ""
"Varyings are a type of variable that can be passed from the vertex shader to "
"the fragment shader. In modern GLSL (3.0 and up), varyings are defined with "
"the ``in`` and ``out`` keywords. A variable going out of the vertex shader "
"is defined with ``out`` in the vertex shader and ``in`` inside the fragment "
"shader."
msgstr ""
"varyings是一種變數, 可以從頂點著色器傳遞到片段著色器. 在現代GLSL(3.0及以上版"
"本)中, 變數是通過 ``in`` 和 ``out`` 關鍵字來定義的. 一個從頂點著色器出來的變"
"數在頂點著色器中用 ``out`` 定義, 在片段著色器中用 ``in`` 定義."

msgid "Main"
msgstr "主要"

msgid ""
"In GLSL, each shader program looks like a self-contained C-style program. "
"Accordingly, the main entry point is ``main``. If you are copying a vertex "
"shader, rename ``main`` to ``vertex`` and if you are copying a fragment "
"shader, rename ``main`` to ``fragment``."
msgstr ""
"在GLSL中, 每個著色器程式看起來都像是一個獨立的C風格程式. 因此, 主要入口點是 "
"``main`` . 如果要複製頂點著色器, 請將 ``main`` 重命名為 ``vertex`` , 如果要複"
"製片段著色器, 請將 ``main`` 重命名為 ``fragment`` ."

msgid "Macros"
msgstr "宏"

msgid ""
"The :ref:`Godot shader preprocessor<doc_shader_preprocessor>` supports the "
"following macros:"
msgstr ""

msgid "``#define`` / ``#undef``"
msgstr ""

#, fuzzy
msgid ""
"``#if``, ``#elif``, ``#else``, ``#endif``, ``defined()``, ``#ifdef``, "
"``#ifndef``"
msgstr ""
"``default``、``uri``、``file``、``email``、``list``、``none``、``custom``"

msgid ""
"``#include`` (only ``.gdshaderinc`` files and with a maximum depth of 25)"
msgstr ""

msgid ""
"``#pragma disable_preprocessor``, which disables preprocessing for the rest "
"of the file"
msgstr ""

msgid "Variables"
msgstr "變數"

msgid ""
"GLSL has many built-in variables that are hard-coded. These variables are "
"not uniforms, so they are not editable from the main program."
msgstr ""
"GLSL 有許多內建的硬編碼變數。這些變數不是 uniform，因此它們不能從主程式中編"
"輯。"

msgid "Variable"
msgstr "變數"

msgid "Type"
msgstr "型別"

msgid "Equivalent"
msgstr "等價物"

msgid "Description"
msgstr "說明"

msgid "gl_FragColor"
msgstr "gl_FragColor"

msgid "out vec4"
msgstr "out vec4"

msgid "COLOR"
msgstr "COLOR"

msgid "Output color for each pixel."
msgstr "每個像素的輸出顏色."

msgid "gl_FragCoord"
msgstr "gl_FragCoord"

msgid "vec4"
msgstr "vec4"

msgid "FRAGCOORD"
msgstr "FRAGCOORD"

msgid "For full screen quads. For smaller quads, use UV."
msgstr "用於全屏四邊形. 對於較小的四邊形, 使用UV."

msgid "VERTEX"
msgstr "VERTEX"

msgid "Position of Vertex, output from Vertex Shader."
msgstr "頂點的位置, 從頂點著色器輸出."

msgid "gl_PointSize"
msgstr "gl_PointSize"

msgid "float"
msgstr "浮點數"

msgid "POINT_SIZE"
msgstr "POINT_SIZE"

msgid "Size of Point primitive."
msgstr "Point原語的大小."

msgid "gl_PointCoord"
msgstr "gl_PointCoord"

msgid "vec2"
msgstr "vec2"

msgid "POINT_COORD"
msgstr "POINT_COORD"

msgid "Position on point when drawing Point primitives."
msgstr "繪製Point基元時在點上的位置."

msgid "gl_FrontFacing"
msgstr "gl_FrontFacing"

msgid "bool"
msgstr "bool"

msgid "FRONT_FACING"
msgstr "FRONT_FACING"

msgid "True if front face of primitive."
msgstr "如果原始的正面, 則為真."

msgid "Coordinates"
msgstr "座標"

msgid ""
"``gl_FragCoord`` in GLSL and ``FRAGCOORD`` in the Godot shading language use "
"the same coordinate system. If using UV in Godot, the y-coordinate will be "
"flipped upside down."
msgstr ""
"GLSL中的 ``gl_FragCoord`` 和Godot著色語言中的 ``FRAGCOORD`` 使用相同的坐標"
"系. 如果在Godot中使用UV, 則y座標將顛倒翻轉."

msgid "Precision"
msgstr "精度"

msgid ""
"In GLSL, you can define the precision of a given type (float or int) at the "
"top of the shader with the ``precision`` keyword. In Godot, you can set the "
"precision of individual variables as you need by placing precision "
"qualifiers ``lowp``, ``mediump``, and ``highp`` before the type when "
"defining the variable. For more information, see the :ref:`Shading Language "
"<doc_shading_language>` reference."
msgstr ""
"在GLSL中，你可以用 ``precision`` 關鍵字在著色器的頂部定義一個給定型別的精度"
"（float 或 int）。在 Godot 中，你可以在定義變數時將精度限定詞 ``lowp``、"
"``mediump``、``highp`` 放在型別前，根據需要設定單個變數的精度。更多資訊請參"
"見:ref:`著色器語言 <doc_shading_language>`參考。"

msgid "Shadertoy"
msgstr "Shadertoy"

msgid ""
"`Shadertoy <https://www.shadertoy.com/results?"
"query=&sort=popular&from=10&num=4>`_ is a website that makes it easy to "
"write fragment shaders and create `pure magic <https://www.shadertoy.com/"
"view/4tjGRh>`_."
msgstr ""
"`Shadertoy <https://www.shadertoy.com/results?"
"query=&sort=popular&from=10&num=4>`_ 是一個網站, 它使編寫片段著色器和建立 `純"
"正的魔法 <https://www.shadertoy.com/view/4tjGRh>`_ 變得容易."

msgid ""
"Shadertoy does not give the user full control over the shader. It handles "
"all the input and uniforms and only lets the user write the fragment shader."
msgstr ""
"Shadertoy 並沒有讓使用者完全控制著色器。它處理所有的輸入和 uniform，只讓使用"
"者編寫片段著色器。"

msgid "Types"
msgstr "型別"

msgid ""
"Shadertoy uses the webgl spec, so it runs a slightly different version of "
"GLSL. However, it still has the regular types, including constants and "
"macros."
msgstr ""
"Shadertoy使用的是webgl規範, 所以它運作的GLSL版本略有不同. 然而, 它仍然有常規"
"的型別, 包括常數和宏."

msgid "mainImage"
msgstr "mainImage"

msgid ""
"The main point of entry to a Shadertoy shader is the ``mainImage`` function. "
"``mainImage`` has two parameters, ``fragColor`` and ``fragCoord``, which "
"correspond to ``COLOR`` and ``FRAGCOORD`` in Godot, respectively. These "
"parameters are handled automatically in Godot, so you do not need to include "
"them as parameters yourself. Anything in the ``mainImage`` function should "
"be copied into the ``fragment`` function when porting to Godot."
msgstr ""
"Shadertoy著色器的主要入口點是 ``mainImage`` 函式. ``mainImage`` 有兩個參數, "
"``fragColor`` 和 ``fragCoord``, 分別對應Godot中的 ``COLOR`` 和 "
"``FRAGCOORD`` . 這些參數在Godot中是自動處理的, 所以你不需要自己把它們作為參"
"數. 移植到Godot時, ``mainImage`` 函式中的任何內容都應複製到 ``fragment`` 函式"
"中."

msgid ""
"In order to make writing fragment shaders straightforward and easy, "
"Shadertoy handles passing a lot of helpful information from the main program "
"into the fragment shader for you. A few of these have no equivalents in "
"Godot because Godot has chosen not to make them available by default. This "
"is okay because Godot gives you the ability to make your own uniforms. For "
"variables whose equivalents are listed as \"Provide with Uniform\", users "
"are responsible for creating that uniform themselves. The description gives "
"the reader a hint about what they can pass in as a substitute."
msgstr ""
"為了讓編寫片段著色器變得簡單明瞭,Shadertoy為你處理了從主程式傳遞到片段著色器"
"中的許多有用資訊. 其中有一些在Godot中沒有對應的資訊, 因為Godot選擇不在預設情"
"況下提供這些資訊. 這沒關係, 因為Godot讓你有能力製作自己的 uniform。對於那些等"
"價物被列為 \"Provide with Uniform\" 的變數, 使用者有責任自己建立該uniform . "
"該描述給了讀者一個提示, 告訴他們可以傳入什麼作為替代物."

msgid "fragColor"
msgstr "fragColor"

msgid "fragCoord"
msgstr "fragCoord"

msgid "FRAGCOORD.xy"
msgstr "FRAGCOORD.xy"

msgid "iResolution"
msgstr "iResolution"

msgid "vec3"
msgstr "vec3"

msgid "1.0 / SCREEN_PIXEL_SIZE"
msgstr "1.0 / SCREEN_PIXEL_SIZE"

msgid "Can also pass in manually."
msgstr "也可以手動傳遞."

msgid "iTime"
msgstr "iTime"

msgid "TIME"
msgstr "TIME"

msgid "Time since shader started."
msgstr "著色器啟動後的時間."

msgid "iTimeDelta"
msgstr "iTimeDelta"

msgid "Provide with Uniform"
msgstr "提供Uniform"

msgid "Time to render previous frame."
msgstr "算繪前一影格的時間."

msgid "iFrame"
msgstr "iFrame"

msgid "Frame number."
msgstr "影格號."

msgid "iChannelTime[4]"
msgstr "iChannelTime[4]"

msgid "Time since that particular texture started."
msgstr "自該特定紋理開始的時間。"

msgid "iMouse"
msgstr "iMouse"

msgid "Mouse position in pixel coordinates."
msgstr "滑鼠在像素座標中的位置."

msgid "iDate"
msgstr "iDate"

msgid "Current date, expressed in seconds."
msgstr "目前日期, 以秒為單位表示."

msgid "iChannelResolution[4]"
msgstr "iChannelResolution[4]"

msgid "1.0 / TEXTURE_PIXEL_SIZE"
msgstr "1.0 / TEXTURE_PIXEL_SIZE"

msgid "Resolution of particular texture."
msgstr "特殊紋理的解析度."

msgid "iChanneli"
msgstr "iChanneli"

msgid "Sampler2D"
msgstr "Sampler2D"

msgid "TEXTURE"
msgstr "TEXTURE"

msgid "Godot provides only one built-in; user can make more."
msgstr "Godot只提供一個內建；使用者可以製作更多."

msgid ""
"``fragCoord`` behaves the same as ``gl_FragCoord`` in :ref:`GLSL "
"<glsl_coordinates>` and ``FRAGCOORD`` in Godot."
msgstr ""
"``fragCoord`` 的行為與 ``gl_FragCoord`` 相同 :ref:`GLSL <glsl_coordinates>` "
"和Godot中的 ``FRAGCOORD`` ."

msgid "The Book of Shaders"
msgstr "著色之書"

msgid ""
"Similar to Shadertoy, `The Book of Shaders <https://thebookofshaders.com>`_ "
"provides access to a fragment shader in the web browser, with which the user "
"may interact. The user is restricted to writing fragment shader code with a "
"set list of uniforms passed in and with no ability to add additional "
"uniforms."
msgstr ""
"與 Shadertoy 類似，`The Book of Shaders <https://thebookofshaders.com>`_ 提供"
"了在網路瀏覽器中存取片段著色器的機會，使用者可以與之互動，但只限於編寫片段著"
"色器程式碼，其中有一組傳入的 uniform 列表，不能新增額外的 uniform。"

msgid ""
"For further help on porting shaders to various frameworks generally, The "
"Book of Shaders provides a `page <https://thebookofshaders.com/04>`_ on "
"running shaders in various frameworks."
msgstr ""
"有關將著色器移植到各種框架的進一步幫助,The Book of Shaders在各種框架中運作著"
"色器時提供了一個 `page <https://thebookofshaders.com/04>`_ ."

msgid ""
"The Book of Shaders uses the webgl spec, so it runs a slightly different "
"version of GLSL. However, it still has the regular types, including "
"constants and macros."
msgstr ""
"The Book of Shaders使用webgl規範, 因此它運作的GLSL略有不同. 但是, 它仍然具有"
"常規型別, 包括常數和宏."

msgid ""
"The entry point for a Book of Shaders fragment shader is ``main``, just like "
"in GLSL. Everything written in a Book of Shaders ``main`` function should be "
"copied into Godot's ``fragment`` function."
msgstr ""
"Book of Shaders片段著色器的入口點是 ``main`` , 就像在GLSL中一樣. 使用著色器 "
"``main`` 函式編寫的所有內容都應該複製到Godot的 ``fragment`` 函式中."

msgid ""
"The Book of Shaders sticks closer to plain GLSL than Shadertoy does. It also "
"implements fewer uniforms than Shadertoy."
msgstr "著色書比Shadertoy更接近普通GLSL. 它也比Shadertoy實施更少的制服."

msgid "u_resolution"
msgstr "u_resolution"

msgid "u_time"
msgstr "u_time"

msgid "u_mouse"
msgstr "u_mouse"

msgid ""
"The Book of Shaders uses the same coordinate system as :ref:`GLSL "
"<glsl_coordinates>`."
msgstr "Shaders使用相同的坐標系 :ref:`GLSL <glsl_coordinates>`."

msgid "Translation status"
msgstr "翻譯狀態"
