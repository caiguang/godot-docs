# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Running code in the editor"
msgstr "在編輯器中運作程式碼"

msgid "What is ``@tool``?"
msgstr "不能做什麼？"

msgid ""
"``@tool`` is a powerful line of code that, when added at the top of your "
"script, makes it execute in the editor. You can also decide which parts of "
"the script execute in the editor, which in game, and which in both."
msgstr ""
"``@tool`` 是一行強大的程式碼，新增到腳本的頂部後，腳本就會在編輯器中執行。你"
"還可以決定腳本的哪些部分在編輯器中執行、哪些部分在遊戲中執行、哪部分在兩者中"
"均執行。"

msgid ""
"You can use it for doing many things, but it is mostly useful in level "
"design for visually presenting things that are hard to predict ourselves. "
"Here are some use cases:"
msgstr ""
"您可以使用它來做很多事情, 它在層次設計中非常有用, 可以直觀地呈現難以預測的事"
"物. 以下是一些用例:"

msgid ""
"If you have a cannon that shoots cannonballs affected by physics (gravity), "
"you can draw the cannonball's trajectory in the editor, making level design "
"a lot easier."
msgstr ""
"如果你有一門發射受物理學(重力)影響的炮彈的大炮, 你可以在編輯器中畫出炮彈的軌"
"跡, 使關卡設計容易得多."

msgid ""
"If you have jumppads with varying jump heights, you can draw the maximum "
"jump height a player would reach if it jumped on one, also making level "
"design easier."
msgstr ""
"如果您有不同跳躍高度的跳線, 您可以繪製遊戲角色能跳過的最大跳躍高度, 也可以讓"
"關卡設計變得更容易."

msgid ""
"If your player doesn't use a sprite, but draws itself using code, you can "
"make that drawing code execute in the editor to see your player."
msgstr ""
"如果您的遊戲角色不使用精靈, 卻使用程式碼來繪製, 您可以在編輯器中執行該繪圖程"
"式碼以查看您的遊戲角色."

msgid ""
"``@tool`` scripts run inside the editor, and let you access the scene tree "
"of the currently edited scene. This is a powerful feature which also comes "
"with caveats, as the editor does not include protections for potential "
"misuse of ``@tool`` scripts. Be **extremely** cautious when manipulating the "
"scene tree, especially via :ref:`Node."
"queue_free<class_Node_method_queue_free>`, as it can cause crashes if you "
"free a node while the editor runs logic involving it."
msgstr ""
"``tool`` 腳本在編輯器內運作, 讓你存取目前編輯的場景樹. 這是一個強大的功能, 但"
"也有一些注意事項, 因為編輯器不包括對 ``@tool`` 腳本潛在濫用的保護. 在操作場景"
"樹時, 尤其是通過 :ref:`Node.queue_free<class_Node_method_queue_free>` 時, 要 "
"**極其** 謹慎, 因為如果你在編輯器運作涉及到節點的邏輯時釋放該節點, 可能會導致"
"當機."

#, fuzzy
msgid "How to use ``@tool``"
msgstr "如何使用它"

msgid ""
"To turn a script into a tool, add the ``@tool`` annotation at the top of "
"your code."
msgstr "要把一個腳本變成一個工具, 在你的程式碼頂部新增關鍵字 ``@tool`` ."

msgid ""
"To check if you are currently in the editor, use: ``Engine."
"is_editor_hint()``."
msgstr "要檢查您目前是否在編輯器中, 請使用 : ``Engine.editor_hint``."

msgid "For example, if you want to execute some code only in the editor, use:"
msgstr "例如，可以依據平台來更改程式碼："

msgid ""
"On the other hand, if you want to execute code only in game, simply negate "
"the same statement:"
msgstr "另一方面, 如果你想只在遊戲中執行程式碼, 只需否定相同的敘述:"

#, fuzzy
msgid ""
"Pieces of code that do not have either of the 2 conditions above will run "
"both in-editor and in-game."
msgstr "不具備上述兩個條件之一的程式碼片斷將在編輯器和遊戲中運作."

msgid "Here is how a ``_process()`` function might look for you:"
msgstr "以下是 ``_process()`` 函式的範例:"

msgid ""
"Modifications in the editor are permanent. For example, in the following "
"case, when we remove the script, the node will keep its rotation. Be careful "
"to avoid making unwanted modifications."
msgstr ""
"編輯器中的修改是永久性的. 例如, 在下面的情況下, 當我們刪除腳本時, 節點將保持"
"其旋轉. 要注意避免做不需要的修改."

msgid ""
"Extending a ``@tool`` script does not automatically make the extending "
"script a ``@tool``. Omitting ``@tool`` from the extending script will "
"disable tool behavior from the super class. Therefore the extending script "
"should also specify the ``@tool`` annotation."
msgstr ""

#, fuzzy
msgid "Try ``@tool`` out"
msgstr "試試看"

msgid ""
"Add a ``Sprite2D`` node to your scene and set the texture to Godot icon. "
"Attach and open a script, and change it to this:"
msgstr ""
"在場景中新增一個 ``Sprite`` 節點, 並將紋理設定為Godot圖示. 新增並打開腳本, 並"
"將其更改為:"

msgid ""
"Save the script and return to the editor. You should now see your object "
"rotate. If you run the game, it will also rotate."
msgstr ""
"保存腳本並返回編輯器. 現在您應該看到您的物件在旋轉. 如果您運作遊戲, 它也會旋"
"轉."

msgid ""
"If you don't see the changes, reload the scene (close it and open it again)."
msgstr "如果您沒有看到變化, 請重新載入場景(關閉它並再次打開)."

msgid ""
"Now let's choose which code runs when. Modify your ``_process()`` function "
"to look like this:"
msgstr "現在讓我們選擇何時運作程式碼. 將 ``_process()`` 函式修改為:"

msgid ""
"Save the script. Now the object will spin clockwise in the editor, but if "
"you run the game, it will spin counter-clockwise."
msgstr ""
"保存腳本. 現在, 物件將在編輯器中順時針旋轉, 但如果您運作遊戲, 它將逆時針旋轉."

msgid "Editing variables"
msgstr "本地坐標"

msgid ""
"Add and export a variable speed to the script. To update the speed and also "
"reset the rotation angle add a setter ``set(new_speed)`` which is executed "
"with the input from the inspector. Modify ``_process()`` to include the "
"rotation speed."
msgstr ""
"在腳本中新增並匯出一個變數速度. 在 \"setget\" 之後的函式set_speed與你的輸入一"
"起執行, 以改變這個變數. 修改 ``_process()`` 以包含旋轉速度."

msgid ""
"Code from other nodes doesn't run in the editor. Your access to other nodes "
"is limited. You can access the tree and nodes, and their default properties, "
"but you can't access user variables. If you want to do so, other nodes have "
"to run in the editor too. Autoload nodes cannot be accessed in the editor at "
"all."
msgstr ""
"其他節點的程式碼不會在編輯器中運作. 您對其他節點的存取權限被限制了. 您可以存"
"取樹和節點及其預設屬性, 但無法存取使用者變數. 如果要這樣做, 其他節點也必須在"
"編輯器中運作. AutoLoad節點時無法在編輯器中存取的."

msgid "Reporting node configuration warnings"
msgstr "程式碼樣式設定"

msgid ""
"Godot uses a *node configuration warning* system to warn users about "
"incorrectly configured nodes. When a node isn't configured correctly, a "
"yellow warning sign appears next to the node's name in the Scene dock. When "
"you hover or click on the icon, a warning message pops up. You can use this "
"feature in your scripts to help you and your team avoid mistakes when "
"setting up scenes."
msgstr ""
"Godot 使用*節點設定警告*系統來警告使用者有關錯誤配置的節點。當節點配置不正確"
"時，場景停靠欄中該節點名稱旁邊會出現一個黃色警告旗標。當您將滑鼠懸停或點擊該"
"圖示時，會彈出警告訊息。您可以在腳本中使用此功能來幫助您和您的團隊在設定場景"
"時避免錯誤。"

msgid ""
"When using node configuration warnings, when any value that should affect or "
"remove the warning changes, you need to call :ref:"
"`update_configuration_warnings<class_Node_method_update_configuration_warnings>` . "
"By default, the warning only updates when closing and reopening the scene."
msgstr ""
"使用節點配置警告時，當影響或刪除警告的任何值發生變更時，您需要呼叫 "
"update_configuration_warnings<class_Node_method_update_configuration_warnings>` 。"
"預設情況下，警告僅在關閉並重新開啟場景時更新。"

msgid "Running one-off scripts using EditorScript"
msgstr ""

msgid ""
"Sometimes, you need to run code just one time to automate a certain task "
"that is not available in the editor out of the box. Some examples might be:"
msgstr ""

msgid ""
"Use as a playground for GDScript or C# scripting without having to run a "
"project. ``print()`` output is displayed in the editor Output panel."
msgstr ""

msgid ""
"Scale all light nodes in the currently edited scene, as you noticed your "
"level ends up looking too dark or too bright after placing lights where "
"desired."
msgstr ""

msgid ""
"Replace nodes that were copy-pasted with scene instances to make them easier "
"to modify later."
msgstr ""

msgid ""
"This is available in Godot by extending :ref:`class_EditorScript` in a "
"script. This provides a way to run individual scripts in the editor without "
"having to create an editor plugin."
msgstr ""

msgid ""
"To create an EditorScript, right-click a folder or empty space in the "
"FileSystem dock then choose **New > Script...**. In the script creation "
"dialog, click the tree icon to choose an object to extend from (or enter "
"``EditorScript`` directly in the field on the left, though note this is case-"
"sensitive):"
msgstr ""

#, fuzzy
msgid "Creating an editor script in the script editor creation dialog"
msgstr "產生金鑰儲存區"

msgid ""
"This will automatically select a script template that is suited for "
"EditorScripts, with a ``_run()`` method already inserted:"
msgstr ""

msgid ""
"This ``_run()`` method is executed when you use **File > Run** or the "
"keyboard shortcut :kbd:`Ctrl + Shift + X` while the EditorScript is the "
"currently open script in the script editor. This keyboard shortcut is only "
"effective when currently focused on the script editor."
msgstr ""

msgid "Scripts that extend EditorScript must be ``@tool`` scripts to function."
msgstr ""

msgid ""
"EditorScripts have no undo/redo functionality, so **make sure to save your "
"scene before running one** if the script is designed to modify any data."
msgstr ""

msgid ""
"To access nodes in the currently edited scene, use the :ref:`EditorScript."
"get_scene <class_EditorScript_method_get_scene>` method which returns the "
"root Node of the currently edited scene. Here's an example that recursively "
"gets all nodes in the currently edited scene and doubles the range of all "
"OmniLight3D nodes:"
msgstr ""

msgid ""
"You can change the currently edited scene at the top of the editor even "
"while the Script view is open. This will affect the return value of :ref:"
"`EditorScript.get_scene <class_EditorScript_method_get_scene>`, so make sure "
"you've selected the scene you intend to iterate upon before running the "
"script."
msgstr ""

msgid "Instancing scenes"
msgstr "實體化場景"

msgid ""
"You can instantiate packed scenes normally and add them to the scene "
"currently opened in the editor. By default, nodes or scenes added with :ref:"
"`Node.add_child(node) <class_Node_method_add_child>` are **not** visible in "
"the Scene tree dock and are **not** persisted to disk. If you wish the node "
"or scene to be visible in the scene tree dock and persisted to disk when "
"saving the scene, you need to set the child node's :ref:`owner "
"<class_Node_property_owner>` property to the currently edited scene root."
msgstr ""
"在編輯器中，你可以正常產生實體打包場景，並將它們新增到目前打開的場景中。預設"
"情況下，使用 :ref:`Node.add_child(node) <class_Node_method_add_child>` 新增的"
"節點或場景在“場景”樹面板中是**不可見**的，也**不會**持久化到磁片上。如果你希"
"望節點和場景在場景樹面板中可見，並在保存場景時持久化到磁片上，則需要將這些子"
"節點的 :ref:`owner <class_Node_property_owner>` 屬性設為目前編輯場景的根節"
"點。"

msgid "If you are using ``@tool``:"
msgstr "如果你使用的是 ``@tool`` :"

msgid "If you are using :ref:`EditorScript<class_EditorScript>`:"
msgstr "如果你使用 :ref:`EditorScript<class_EditorScript>` :"

msgid ""
"Using ``@tool`` improperly can yield many errors. It is advised to first "
"write the code how you want it, and only then add the ``@tool`` annotation "
"to the top. Also, make sure to separate code that runs in-editor from code "
"that runs in-game. This way, you can find bugs more easily."
msgstr ""
"不適當地使用 ``@tool`` 會產生許多錯誤. 建議首先按照你想要的方式寫程式碼, 然後"
"才在上面新增 ``@tool`` 關鍵字. 另外, 要確保把在編輯器中運作的程式碼和在遊戲中"
"運作的程式碼分開. 這樣, 你可以更容易地發現錯誤."

msgid "Translation status"
msgstr "翻譯狀態"
