# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Inspector plugins"
msgstr "屬性面板外掛程式"

msgid ""
"The inspector dock allows you to create custom widgets to edit properties "
"through plugins. This can be beneficial when working with custom datatypes "
"and resources, although you can use the feature to change the inspector "
"widgets for built-in types. You can design custom controls for specific "
"properties, entire objects, and even separate controls associated with "
"particular datatypes."
msgstr ""
"屬性面板面板支援以外掛程式的形式來建立自訂小工具編輯屬性。儘管可以用它來修改"
"內建型別的屬性面板小工具，但它在需要處理自訂資料型別和資源時尤其有用。你不但"
"可以為特定的屬性或者整個物件設計自訂控制項，還可以為特定資料型別設計單獨的控"
"制項。"

msgid ""
"This guide explains how to use the :ref:`class_EditorInspectorPlugin` and :"
"ref:`class_EditorProperty` classes to create a custom interface for "
"integers, replacing the default behavior with a button that generates random "
"values between 0 and 99."
msgstr ""
"這份指南會介紹如何使用 :ref:`class_EditorInspectorPlugin` 和 :ref:"
"`class_EditorProperty` 類來為整數型別建立自訂的介面，將預設的行為替換為一個按"
"了以後就會生成 0 到 99 之間亂數的按鈕。"

msgid "The default behavior on the left and the end result on the right."
msgstr "左圖為預設行為，右圖為最終結果。"

msgid "Setting up your plugin"
msgstr "設定 Python"

msgid "Create a new empty plugin to get started."
msgstr "從建立新的空外掛程式開始。"

msgid "See :ref:`doc_making_plugins` guide to set up your new plugin."
msgstr "如何建立新外掛程式請參閱 :ref:`doc_making_plugins`。"

msgid ""
"Let's assume you've called your plugin folder ``my_inspector_plugin``. If "
"so, you should end up with a new ``addons/my_inspector_plugin`` folder that "
"contains two files: ``plugin.cfg`` and ``plugin.gd``."
msgstr ""
"讓我們假設你的外掛程式資料夾叫做 ``my_inspector_plugin``。那麼此時你新建的 "
"``addons/my_inspector_plugin`` 資料夾中就有兩個檔案：``plugin.cfg`` 和 "
"``plugin.gd``。"

msgid ""
"As before, ``plugin.gd`` is a script extending :ref:`class_EditorPlugin` and "
"you need to introduce new code for its ``_enter_tree`` and ``_exit_tree`` "
"methods. To set up your inspector plugin, you must load its script, then "
"create and add the instance by calling ``add_inspector_plugin()``. If the "
"plugin is disabled, you should remove the instance you have added by calling "
"``remove_inspector_plugin()``."
msgstr ""
"和之前一樣，``plugin.gd`` 是一個擴充了 :ref:`class_EditorPlugin` 的腳本，你需"
"要在 ``_enter_tree`` 和 ``_exit_tree`` 方法中加入新的程式碼。要建立自己的屬性"
"面板外掛程式，你必須載入對應的腳本，然後建立並呼叫 "
"``add_inspector_plugin()`` 來新增實例。禁用外掛程式時，你應該呼叫 "
"``remove_inspector_plugin()`` 將該實例移除。"

msgid ""
"Here, you are loading a script and not a packed scene. Therefore you should "
"use ``new()`` instead of ``instance()``."
msgstr ""
"因為你在這裡讀取的是腳本而不是場景包，所以應該使用 ``new()`` 而不是 "
"``instance()``。"

msgid "Interacting with the inspector"
msgstr "產生金鑰儲存區"

msgid ""
"To interact with the inspector dock, your ``my_inspector_plugin.gd`` script "
"must extend the :ref:`class_EditorInspectorPlugin` class. This class "
"provides several virtual methods that affect how the inspector handles "
"properties."
msgstr ""
"要和屬性面板面板互動，你的 ``my_inspector_plugin.gd`` 腳本必須繼承自 :ref:"
"`class_EditorInspectorPlugin` 類。這個類提供了不少虛方法，可以用來控制屬性面"
"板對屬性的處理。"

msgid ""
"To have any effect at all, the script must implement the ``_can_handle()`` "
"method. This function is called for each edited :ref:`class_Object` and must "
"return ``true`` if this plugin should handle the object or its properties."
msgstr ""
"腳本必須實作 ``can_handle()`` 方法才能生效。這個函式會針對每個被編輯的 :ref:"
"`class_Object` 物件呼叫，外掛程式想要處理該物件或其屬性的話，就必須返回 "
"``true``。"

msgid "This includes any :ref:`class_Resource` attached to the object."
msgstr "要處理附加在該物件上的 :ref:`class_Resource` 也同樣如此。"

msgid ""
"You can implement four other methods to add controls to the inspector at "
"specific positions. The ``parse_begin()`` and ``parse_end()`` methods are "
"called only once at the beginning and the end of parsing for each object, "
"respectively. They can add controls at the top or bottom of the inspector "
"layout by calling ``add_custom_control()``."
msgstr ""
"另外還有四個方法可以實作，用來往屬性面板的特定位置新增空間。"
"``parse_begin()`` 和 ``parse_end()`` 方法顧名思義，只會在每個物件開始解析和結"
"束解析的時候呼叫一次。在其中呼叫 ``add_custom_control()`` 就可以在屬性面板佈"
"局的頂部或底部新增控制項。"

msgid ""
"As the editor parses the object, it calls the ``parse_category()`` and "
"``_parse_property()`` methods. There, in addition to "
"``add_custom_control()``, you can call both ``add_property_editor()`` and "
"``add_property_editor_for_multiple_properties()``. Use these last two "
"methods to specifically add :ref:`class_EditorProperty`-based controls."
msgstr ""
"編輯器解析物件時，會呼叫 ``parse_category()`` 和 ``_parse_property()`` 方法。"
"在這兩個函式中，除了 ``add_custom_control()`` 以外，你還可以呼叫 "
"``add_property_editor()`` 和 "
"``add_property_editor_for_multiple_properties()``，這兩個函式是專門用來新增基"
"於 :ref:`class_EditorProperty` 的控制項的。"

msgid "Adding an interface to edit properties"
msgstr "新增檔案至專案"

msgid ""
"The :ref:`class_EditorProperty` class is a special type of :ref:"
"`class_Control` that can interact with the inspector dock's edited objects. "
"It doesn't display anything but can house any other control nodes, including "
"complex scenes."
msgstr ""
":ref:`class_EditorProperty` 是一種特殊的 :ref:`class_Control`，可以與屬性面板"
"面板所編輯的物件進行互動。它本身不顯示任何內容，但可以放入其他控制項節點，甚"
"至是複雜的場景。"

msgid ""
"There are three essential parts to the script extending :ref:"
"`class_EditorProperty`:"
msgstr "擴充 :ref:`class_EditorProperty` 的腳本有三個必不可少的部分："

msgid ""
"You must define the ``_init()`` method to set up the control nodes' "
"structure."
msgstr "必須定義 ``_init()`` 方法，設定控制項節點的結構。"

msgid ""
"You should implement the ``_update_property()`` to handle changes to the "
"data from the outside."
msgstr "應該實作 ``_update_property()``，處理外部對資料的更改。"

msgid ""
"A signal must be emitted at some point to inform the inspector that the "
"control has changed the property using ``emit_changed``."
msgstr ""
"必須在某處使用 ``emit_changed`` 觸發訊號，告知屬性面板本控制項對屬性進行了修"
"改。"

msgid ""
"You can display your custom widget in two ways. Use just the default "
"``add_child()`` method to display it to the right of the property name, and "
"use ``add_child()`` followed by ``set_bottom_editor()`` to position it below "
"the name."
msgstr ""
"顯示自訂小工具的方法有兩種。可以只用預設的 ``add_child()`` 方法可以把它顯示到"
"屬性名稱的右邊，在 ``add_child()`` 之後再呼叫 ``set_bottom_editor()`` 就可以"
"把它顯示到名稱的下邊。"

msgid ""
"Using the example code above you should be able to make a custom widget that "
"replaces the default :ref:`class_SpinBox` control for integers with a :ref:"
"`class_Button` that generates random values."
msgstr ""
"使用上面的範例程式碼，可以實作用自訂的小工具替代整數預設的 :ref:"
"`class_SpinBox` 控制項，點擊 :ref:`class_Button` 後生成隨機值。"

msgid "Translation status"
msgstr "翻譯狀態"
