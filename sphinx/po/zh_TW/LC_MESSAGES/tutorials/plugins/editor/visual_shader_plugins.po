# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Visual Shader plugins"
msgstr "視覺化著色器外掛程式"

msgid ""
"Visual Shader plugins are used to create custom :ref:`class_VisualShader` "
"nodes in GDScript."
msgstr ""
"Visual Shader外掛程式用於在GDScript中建立自訂的 :ref:`class_VisualShader` 節"
"點."

msgid ""
"The creation process is different from usual editor plugins. You do not need "
"to create a ``plugin.cfg`` file to register it; instead, create and save a "
"script file and it will be ready to use, provided the custom node is "
"registered with ``class_name``."
msgstr ""
"建立過程與一般的編輯器外掛程式不同. 你不需要建立一個 ``plugin.cfg`` 檔來註"
"冊, 而是建立並保存一個指令檔, 只要用 ``class_name`` 註冊了自訂節點, 就可以使"
"用了."

msgid ""
"This short tutorial will explain how to make a Perlin-3D noise node "
"(original code from this `GPU noise shaders plugin <https://github.com/curly-"
"brace/Godot-3.0-Noise-Shaders/blob/master/assets/gpu_noise_shaders/"
"classic_perlin3d.tres>`_."
msgstr ""
"本篇短教學將講解如何製作 Perlin-3D 雜訊節點（原程式碼來自這個 `GPU 雜訊著色器"
"外掛程式 <https://github.com/curly-brace/Godot-3.0-Noise-Shaders/blob/master/"
"assets/gpu_noise_shaders/classic_perlin3d.tres>`_。"

msgid ""
"Create a Sprite2D and assign a :ref:`class_ShaderMaterial` to its material "
"slot:"
msgstr "建立一個 Sprite2D 並為其材質插槽分配一個 :ref:`class_ShaderMaterial`："

msgid "Assign :ref:`class_VisualShader` to the shader slot of the material:"
msgstr "將 :ref:`class_VisualShader` 給著色器材質的插槽："

msgid ""
"Don't forget to change its mode to \"CanvasItem\" (if you are using a "
"Sprite2D):"
msgstr "不要忘記將其模式改為“CanvasItem”（如果你使用的是 Sprite2D）："

msgid ""
"Create a script which derives from :ref:`class_VisualShaderNodeCustom`. This "
"is all you need to initialize your plugin."
msgstr ""
"建立一個從 :ref:`class_VisualShaderNodeCustom` 衍生的腳本. 這是你初始化你的外"
"掛程式所需要的全部內容."

msgid ""
"Save it and open the Visual Shader. You should see your new node type within "
"the member's dialog under the Addons category (if you can't see your new "
"node, try restarting the editor):"
msgstr ""
"保存它並打開Visual Shader. 你應該可以在成員對話方塊中看到你的新節點型別(如果"
"你看不到你的新節點, 請嘗試重新啟動編輯器):"

msgid "Place it on a graph and connect the required ports:"
msgstr "放到一個圖並連接所需的埠:"

msgid ""
"That is everything you need to do, as you can see it is easy to create your "
"own custom VisualShader nodes!"
msgstr ""
"這就是你需要做的所有事情, 正如你所看到的那樣, 建立你自己的自訂VisualShader節"
"點很容易!"

msgid "Translation status"
msgstr "翻譯狀態"
