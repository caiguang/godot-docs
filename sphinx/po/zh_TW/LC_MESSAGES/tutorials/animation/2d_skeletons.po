# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D skeletons"
msgstr "2D 骨架"

msgid "Introduction"
msgstr "前言"

#, fuzzy
msgid ""
"When working with 3D, skeletal deforms are common for characters and "
"creatures and most 3D modeling applications support it. For 2D, as this "
"function is not used as often, it's difficult to find mainstream software "
"aimed for this."
msgstr ""
"使用 3D 時，骨架變形在角色和生物中很常見，大多數 3D 建模軟體都支援這種變形。"
"這種功能在 2D 中沒有那麼常用，很難找到以它為賣點的主流軟體。"

msgid ""
"One option is to create animations in third-party software such as Spine or "
"Dragonbones. From Godot 3.1 onwards, though, this functionality is supported "
"built-in."
msgstr ""
"你可以在 Spine、Dragonbones 等協力廠商軟體中建立動畫。不過，Godot 從 3.1 版本"
"開始就已經內建了這個功能。"

msgid ""
"Why would you want to do skeletal animations directly in Godot? The answer "
"is that there are many advantages to it:"
msgstr "為什麼要在 Godot 中直接處理骨骼動畫？答案是這樣做有很多好處："

msgid ""
"Better integration with the engine, so less hassle importing and editing "
"from an external tool."
msgstr "能更好地與引擎集成, 從而減少使用外部工具匯入和編輯的麻煩."

msgid ""
"Ability to control particle systems, shaders, sounds, call scripts, colors, "
"transparency, etc. in animations."
msgstr "能夠控制粒子系統, 著色器, 聲音, 呼叫腳本, 顏色, 透明度等動畫."

msgid ""
"The built-in skeletal system in Godot is very efficient and designed for "
"performance."
msgstr "Godot內建的骨骼系統非常高效, 並且是為性能而設計的."

msgid "The following tutorial will, then, explain 2D skeletal deformations."
msgstr "接下來的教學將講解 2D 骨架變形。"

msgid "Setup"
msgstr "設定"

msgid ""
"Before starting, we recommend you to go through the :ref:"
"`doc_cutout_animation` tutorial to gain a general understanding of animating "
"within Godot."
msgstr ""
"在開始之前, 我們建議您先瀏覽一下 :ref:`doc_cutout_animation` 教學, 以便對"
"Godot中的動畫製作有一個大致的瞭解."

msgid ""
"For this tutorial, we will be using a single image to construct our "
"character. Download it from :download:`gBot_pieces.png <img/gBot_pieces."
"png>` or save the image below."
msgstr ""
"在本教學中, 我們將使用單張圖片來建構我們的角色. 從這裡下載 :download:"
"`gBot_pieces.png <img/gBot_pieces.png>` 或保存下圖."

msgid ""
"It is also advised to download the final character image :download:"
"`gBot_complete.png <img/gBot_complete.png>` to have a good reference for "
"putting the different pieces together."
msgstr ""
"並且建議下載最終的角色圖片 :download:`gBot_complete.png <img/gBot_complete."
"png>` 將不同部分放在一起，以便進行參考。"

msgid "Creating the polygons"
msgstr "建立內容"

msgid ""
"Create a new scene for your model (if it's going to be an animated "
"character, you may want to use a ``CharacterBody2D``). For ease of use, an "
"empty 2D node is created as a root for the polygons."
msgstr ""
"為您的模型建立一個新場景（如果它是一個動畫角色，您可能需要使用 "
"``KinematicBody2D``）。為便於使用，建立一個空的 2D 節點作為多邊形的根節點。"

msgid ""
"Begin with a ``Polygon2D`` node. There is no need to place it anywhere in "
"the scene for now, so simply create it like this:"
msgstr ""
"從 ``Polygon2D`` 節點開始。現在不需要把它放在場景何處，所以簡單建立如下："

msgid ""
"Select it and assign the texture with the character pieces you have "
"downloaded before:"
msgstr "為您之前下載的角色元件選擇並指定紋理："

msgid ""
"Drawing a polygon directly is not advised. Instead, open the \"UV\" dialog "
"for the polygon:"
msgstr "不建議直接繪製多邊形。請打開該多邊形的“UV”對話方塊："

msgid ""
"Head over to the *Points* mode, select the pencil and draw a polygon around "
"the desired piece:"
msgstr "轉到 *點* 模式, 選擇鉛筆, 在需要的區域繪製一個多邊形:"

msgid ""
"Duplicate the polygon node and give it a proper name. Then, enter the \"UV\" "
"dialog again and replace the old polygon with another one in the new desired "
"piece."
msgstr ""
"複製多邊形節點, 並給它一個合適的名字. 然後, 再次進入 \"UV\" 對話方塊, 在新的"
"所需設計中用另一個多邊形替換舊的多邊形."

msgid ""
"When you duplicate nodes and the next piece has a similar shape, you can "
"edit the previous polygon instead of drawing a new one."
msgstr ""
"當複製節點且下一塊具有相似形狀時, 可以編輯上一個多邊形, 而不是繪製新多邊形."

msgid ""
"After moving the polygon, remember to update the UV by selecting **Edit > "
"Copy Polygon to UV** in the Polygon 2D UV Editor."
msgstr ""
"移動多邊形後, 請記住通過在多邊形2D UV編輯器中選擇編輯->\"多邊形->UV\" 來更新"
"UV."

msgid "Keep doing this until you mapped all pieces."
msgstr "繼續這樣做, 直到你對應所有的元件."

msgid ""
"You will notice that pieces for nodes appear in the same layout as they do "
"in the original texture. This is because by default, when you draw a "
"polygon, the UV and points are the same."
msgstr ""
"你會注意到, 節點的部分與它們在原始紋理中的佈局是一樣的. 這是因為預設情況下, "
"當你繪製一個多邊形時,UV和點是一樣的."

msgid ""
"Rearrange the pieces and build the character. This should be pretty quick. "
"There is no need to change pivots, so don't bother making sure rotation "
"pivots for each piece are right; you can leave them be for now."
msgstr ""
"重新排列元件, 建立角色. 這個過程應該很快. 沒必要改變軸心, 因此, 不必費心確保"
"每個元件的旋轉軸心都正確；你可以暫時不用理會它們."

msgid ""
"Ah, the visual order of the pieces is not correct yet, as some are covering "
"wrong pieces. Rearrange the order of the nodes to fix this:"
msgstr ""
"啊, 這些作品的視覺順序還不正確, 因為有些覆蓋到錯誤的部分. 重新排列節點的順序"
"來解決這個問題:"

msgid ""
"And there you go! It was definitely much easier than in the cutout tutorial."
msgstr "恭喜你完成本節教學!它肯定比剪紙動畫教學簡單得多."

msgid "Creating the skeleton"
msgstr "建立內容"

msgid ""
"Create a ``Skeleton2D`` node as a child of the root node. This will be the "
"base of our skeleton:"
msgstr "建立一個 ``Skeleton2D`` 節點作為根節點的子項。我們將其作為骨架的基礎："

msgid ""
"Create a ``Bone2D`` node as a child of the skeleton. Put it on the hip "
"(usually skeletons start here). The bone will be pointing to the right, but "
"you can ignore this for now."
msgstr ""
"建立一個 ``Bone2D`` 節點作為骨架的子項。把它放在臀部（通常從這裡開始建立骨"
"架）。骨骼會指向右邊，但是現在你可以忽略這個。"

msgid "Keep creating bones in hierarchy and naming them accordingly."
msgstr "在層級結構中繼續建立骨骼並依次命名它們."

msgid ""
"At the end of this chain, there will be a *jaw* node. It is, again, very "
"short and pointing to the right. This is normal for bones without children. "
"The length of *tip* bones can be changed with a property in the inspector:"
msgstr ""
"在這根鏈條的末端，會有一個*下巴*節點。它很短小，也指向右邊。這根單根骨正常情"
"況下沒有子骨骼。*提示*單根骨的長度屬性可以通過屬性面板來改變："

msgid ""
"In this case, we don't need to rotate the bone (coincidentally the jaw "
"points right in the sprite), but in case you need to, feel free to do it. "
"Again, this is only really needed for tip bones as nodes with children don't "
"usually need a length or a specific rotation."
msgstr ""
"在這種情況下, 我們不需要旋轉骨頭, 巧合的是, 精靈中的下巴指向右邊, 但萬一需"
"要, 可以隨意旋轉. 同樣, 這只是對尖端骨骼的真正需要, 因為帶有子節點通常不需要"
"長度或特定的旋轉."

msgid "Keep going and build the whole skeleton:"
msgstr "繼續建構整個骨架："

msgid ""
"You will notice that all bones raise an annoying warning about a missing "
"rest pose. This means that it's time to set one. Go to the *skeleton* node "
"and create a rest pose. This pose is the default one, you can come back to "
"it anytime you want (which is very handy for animating):"
msgstr ""
"你會注意到，所有骨骼節點旁都有一個煩人的警告，提示你缺少放鬆姿勢。這意味著是"
"時候設定一個了。轉到*骨架*節點並建立一個放鬆姿勢。這個姿勢是預設的，你可以隨"
"時回來修改（對於製作動畫來說非常方便）："

msgid ""
"The warnings will go away. If you modify the skeleton (add/remove bones) you "
"will need to set the rest pose again."
msgstr "警告消失了。如果你修改骨架（新增/移除骨骼）你需要重新設定放鬆姿勢。"

msgid "Deforming the polygons"
msgstr "多邊形的變形"

msgid ""
"Select the previously created polygons and assign the skeleton node to their "
"``Skeleton`` property. This will ensure that they can eventually be deformed "
"by it."
msgstr ""
"選擇之前建立的多邊形，並將骨架節點分配給它們的 ``Skeleton`` 屬性。這將確保它"
"們最終能被變形。"

msgid "Click the property highlighted above and select the skeleton node:"
msgstr "按一下上面突出顯示的屬性並選擇骨架節點："

msgid ""
"Again, open the UV editor for the polygon and go to the *Bones* section."
msgstr "再次打開多邊形的 UV 編輯器，進入 *Bones* 部分。"

msgid ""
"You will not be able to paint weights yet. For this you need to synchronize "
"the list of bones from the skeleton with the polygon. This step is done only "
"once and manually (unless you modify the skeleton by adding/removing/"
"renaming bones). It ensures that your rigging information is kept in the "
"polygon, even if a skeleton node is accidentally lost or the skeleton "
"modified. Push the \"Sync Bones to Polygon\" button to sync the list."
msgstr ""
"現在您還不能繪製權重。為此，您首先需要將骨架中的骨骼列表與多邊形同步。此步驟"
"僅需手動執行一次（除非您通過新增/刪除/重命名骨骼來修改骨架）。它確保您的綁定"
"資訊保存在多邊形中，即使骨架節點意外丟失或被修改。按“同步骨骼到多邊形”按鈕來"
"同步列表。"

msgid ""
"The list of bones will automatically appear. By default, your polygon has no "
"weight assigned to any of them. Select the bones you want to assign weight "
"to and paint them:"
msgstr ""
"骨骼列表將自動顯示。預設情況下，您的多邊形沒有被分配任何權重資訊。選擇您想要"
"分配權重的骨骼，並在它們上面繪製："

msgid ""
"Points in white have a full weight assigned, while points in black are not "
"influenced by the bone. If the same point is painted white for multiple "
"bones, the influence will be distributed amongst them (so usually there is "
"not that much need to use shades in-between unless you want to polish the "
"bending effect)."
msgstr ""
"白色點完全受到權重影響，而黑色點完全不受影響。如果在多根骨骼上，繪製了相同的"
"白色點，那麼權重的影響將平均分配在這些骨骼之間。（所以通常不需要過多使用中間"
"色調，除非你想仔細打磨彎曲效果）。"

msgid ""
"After painting the weights, animating the bones (NOT the polygons!) will "
"have the desired effect of modifying and bending the polygons accordingly. "
"As you only need to animate bones in this approach, work becomes much easier!"
msgstr ""
"繪製完權重後，製作骨骼的動畫（不是多邊形的動畫！）會具有修改和彎曲多邊形的預"
"期效果。因為你只需用這種方法驅動骨骼，工作就變得容易得多！"

msgid ""
"But it's not all roses. Trying to animate bones that bend the polygon will "
"often yield unexpected results:"
msgstr ""
"但這並不完美。嘗試調調骨骼的動畫，彎曲的多邊形往往會產生意想不到的結果："

msgid ""
"This happens because Godot generates internal triangles that connect the "
"points when drawing the polygon. They don't always bend the way you would "
"expect. To solve this, you need to set hints in the geometry to clarify how "
"you expect it to deform."
msgstr ""
"這是因為Godot在繪製多邊形時, 產生了內部三角形來連接這些點. 它們並不總是按你所"
"期望的方式彎曲. 如果要解決這個問題, 你需要在幾何圖形中設定提示, 以明確希望它"
"如何變形."

msgid "Internal vertices"
msgstr "內部頂點"

msgid ""
"Open the UV menu for each bone again and go to the *Points* section. Add "
"some internal vertices in the regions where you expect the geometry to bend:"
msgstr ""
"再次打開每根骨骼的 UV 功能表，進入 *Points* 部分。在你期望幾何體彎曲的地方新"
"增一些內部頂點："

msgid ""
"Now, go to the *Polygon* section and redraw your own polygons with more "
"detail. Imagine that, as your polygons bend, you need to make sure they "
"deform the least possible, so experiment a bit to find the right setup."
msgstr ""
"現在轉到 *多邊形* 部分, 重新繪製細節更豐富的多邊形. 這樣, 當多邊形彎曲時, 你"
"需要確保它們變形的可能性最小, 慢慢嘗試找出正確的設定."

msgid ""
"Once you start drawing, the original polygon will disappear and you will be "
"free to create your own:"
msgstr "一旦你開始繪製, 原來的多邊形會消失, 你可以自由建立自己的多邊形:"

msgid ""
"This amount of detail is usually fine, though you may want to have more fine-"
"grained control over where triangles go. Experiment by yourself until you "
"get the results you like."
msgstr ""
"通常這個數量的細節沒有問題, 儘管你想更精細地控制三角形. 請多多嘗試, 直到獲得"
"你滿意的結果."

msgid ""
"**Note:** Don't forget that your newly added internal vertices also need "
"weight painting! Go to the *Bones* section again to assign them to the right "
"bones."
msgstr ""
"**注意:** 不要忘記你新新增的內部頂點也需要繪製權重!再次轉到 *骨骼* 部分, 將它"
"們分配到正確的骨骼."

msgid "Once you are all set, you will get much better results:"
msgstr "一旦你設定好了, 你會得到更好的結果:"

msgid "Translation status"
msgstr "翻譯狀態"
