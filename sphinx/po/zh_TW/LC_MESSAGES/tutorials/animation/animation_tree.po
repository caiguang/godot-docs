# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using AnimationTree"
msgstr "使用 AnimationTree"

msgid "Introduction"
msgstr "前言"

msgid ""
"With :ref:`AnimationPlayer <class_AnimationPlayer>`, Godot has one of the "
"most flexible animation systems that you can find in any game engine. The "
"ability to animate almost any property in any node or resource, as well as "
"having dedicated transform, bezier, function calling, audio and sub-"
"animation tracks, is pretty much unique."
msgstr ""
"通過 :ref:`AnimationPlayer <class_AnimationPlayer>`，Godot 擁有你在所有遊戲引"
"擎中能找到的最靈活的動畫系統之一。幾乎可以在任何節點或資源中對任何屬性進行動"
"畫處理，以及專門的變換、貝塞爾、函式呼叫、音訊和子動畫軌道，這樣的能力相當獨"
"特。"

msgid ""
"However, the support for blending those animations via ``AnimationPlayer`` "
"is relatively limited, as only a fixed cross-fade transition time can be set."
msgstr ""
"然而, 通過 ``AnimationPlayer`` 混合這些動畫的支援相對有限, 只能設定固定的交叉"
"漸變過渡時間."

msgid ""
":ref:`AnimationTree <class_AnimationTree>` is a new node introduced in Godot "
"3.1 to deal with advanced transitions. It supersedes the ancient "
"``AnimationTreePlayer``, while adding a huge amount of features and "
"flexibility."
msgstr ""
":ref:`AnimationTree <class_AnimationTree>` 是Godot 3.1中引入的一個新節點, 用"
"於處理更高級的變換, 它取代了舊的 ``AnimationTreePlayer`` , 同時增加了大量的功"
"能和靈活性."

msgid "Creating an AnimationTree"
msgstr "建立內容"

msgid ""
"Before starting, it must be made clear that an ``AnimationTree`` node does "
"not contain its own animations. Instead, it uses animations contained in an "
"``AnimationPlayer`` node. This way, you can edit your animations (or import "
"them from a 3D scene) as usual and then use this extra node to control the "
"playback."
msgstr ""
"首先, 必須明確 ``AnimationTree`` 節點不包含它自己的動畫. 相反, 它使用包含在 "
"``AnimationPlayer`` 節點中的動畫. 通過這種形式, 您可以像往常一樣編輯動畫(或從"
"3D場景匯入動畫), 然後使用這個額外節點來控制播放."

msgid ""
"The most common way to use ``AnimationTree`` is in a 3D scene. When "
"importing your scenes from a 3D exchange format, they will usually come with "
"animations built-in (either multiple ones or split from a large one on "
"import). At the end, the imported Godot scene will contain the animations in "
"a ``AnimationPlayer`` node."
msgstr ""
"在3D場景中經常使用 ``AnimationTree`` . 當從3D交換格式匯入場景時, 它們通常自帶"
"動畫(要麼是多個, 要麼是在匯入時從一個大的動畫中拆分出來). 最後, 匯入的Godot場"
"景在 ``AnimationPlayer`` 節點中包含動畫."

msgid ""
"As you rarely use imported scenes directly in Godot (they are either "
"instantiated or inherited from), you can place the ``AnimationTree`` node in "
"your new scene which contains the imported one. Afterwards, point the "
"``AnimationTree`` node to the ``AnimationPlayer`` that was created in the "
"imported scene."
msgstr ""
"很少在Godot中直接使用匯入的場景(它們要麼產生實體, 要麼來自繼承), 您可以將 "
"``AnimationTree`` 節點放置在包含匯入的新場景中. 然後, 將 ``AnimationTree`` 節"
"點指嚮匯入場景內建立的 ``AnimationPlayer`` 節點."

msgid ""
"This is how it's done in the `Third Person Shooter demo <https://github.com/"
"godotengine/tps-demo>`_, for reference:"
msgstr ""
"這是在 `第三人稱射擊遊戲演示 <https://github.com/godotengine/tps-demo>`_, 中"
"的設定, 參考下圖:"

msgid ""
"A new scene was created for the player with a ``CharacterBody3D`` as root. "
"Inside this scene, the original ``.dae`` (Collada) file was instantiated and "
"an ``AnimationTree`` node was created."
msgstr ""
"為玩家建立了一個以 ``KinematicBody`` 為根節點的新場景. 在這個場景中, 已產生實"
"體原來的 ``.dae`` (Collada)檔案, 並建立 ``AnimationTree`` 節點."

msgid "Creating a tree"
msgstr "建立內容"

msgid ""
"There are three main types of nodes that can be used in ``AnimationTree``:"
msgstr "可以在 ``AnimationTree`` 中使用三種主要節點型別:"

msgid ""
"Animation nodes, which reference an animation from the linked "
"``AnimationPlayer``."
msgstr "動畫節點, 從連結的 ``AnimationTree`` 中引用動畫."

msgid "Animation Root nodes, which are used to blend sub-nodes."
msgstr "動畫根節點, 用於混合子節點."

msgid ""
"Animation Blend nodes, which are used within ``AnimationNodeBlendTree`` as "
"single-graph blending via multiple input ports."
msgstr ""
"動畫混合節點，在 ``AnimationNodeBlendTree`` 中使用，通過多個輸入埠進行單圖混"
"合。"

msgid "To set a root node in ``AnimationTree``, a few types are available:"
msgstr "在 ``AnimationTree`` 中設定根節點, 如下幾種型別可供選擇:"

msgid ""
"``AnimationNodeAnimation``: Selects an animation from the list and plays it. "
"This is the simplest root node, and generally not used directly as root."
msgstr ""
"``AnimationNodeAnimation``：從列表中選擇一個動畫並播放它. 這是最簡單的根節"
"點, 一般不直接用作根節點."

msgid ""
"``AnimationNodeBlendTree``: Contains many *blend* type nodes, such as mix, "
"blend2, blend3, one shot, etc. This is one of the most commonly used roots."
msgstr ""
"``AnimationNodeBlendTree``：包含許多*混合*型別的節點，如調配, 混合2, 混合3, "
"一對一等. 這是最常用的根節點之一."

msgid ""
"``AnimationNodeStateMachine``: Contains multiple root nodes as children in a "
"graph. Each node is used as a *state*, and provides multiple functions to "
"alternate between states."
msgstr ""
"``AnimationNodeStateMachine``：將多個根節點作為圖中的子節點. 每個節點作為一"
"個 *狀態* 使用, 並提供多個函式在狀態之間進行切換."

msgid ""
"``AnimationNodeBlendSpace2D``: Allows placing root nodes in a 2D blend "
"space. Control the blend position in 2D to mix between multiple animations."
msgstr ""
"``AnimationNodeBlendSpace2D``：允許在二維混合空間中放置根節點. 在二維中控制混"
"合位置以混合多個動畫."

msgid "``AnimationNodeBlendSpace1D``: Simplified version of the above (1D)."
msgstr "``AnimationNodeBlendSpace1D``：以上的簡化版本（一維）。"

msgid "Blend tree"
msgstr "混合樹"

msgid ""
"An ``AnimationNodeBlendTree`` can contain both root and regular nodes used "
"for blending. Nodes are added to the graph from a menu:"
msgstr ""
"``AnimationNodeBlendTree`` 可包含用於混合的根節點和常規節點。節點從選單新增到"
"圖中："

msgid ""
"All blend trees contain an ``Output`` node by default, and something has to "
"be connected to it in order for animations to play."
msgstr ""
"所有混合樹預設都包含一個 ``Output``（輸出）節點，為了讓動畫播放，必須有個東西"
"與其相連。"

msgid ""
"The easiest way to test this functionality is to connect an ``Animation`` "
"node to it directly:"
msgstr "測試此功能最簡單的方法是直接連接一個 ``Animation``（動畫）節點："

msgid ""
"This will simply play back the animation. Make sure that the "
"``AnimationTree`` is active for something to actually happen."
msgstr ""
"這會簡單地重播動畫. 確保 ``AnimationTree`` 節點對實際發生的事情是啟動的."

msgid "Following is a short description of available nodes:"
msgstr "以下是可用節點的簡短描述:"

msgid "Blend2 / Blend3"
msgstr "混合2/混合3"

msgid ""
"These nodes will blend between two or three inputs by a user-specified blend "
"value:"
msgstr "這些節點將通過使用者指定輸入的兩個或三個混合值之間進行混合:"

msgid "For more complex blending, it is advised to use blend spaces instead."
msgstr "對於更複雜的混合, 建議使用混合空間."

msgid ""
"Blending can also use filters, i.e. you can control individually which "
"tracks go through the blend function. This is very useful for layering "
"animations on top of each other."
msgstr ""
"混合也可以使用篩檢程式, 也就是說, 您可以單獨控制通過混合功能的軌道. 這對於動"
"畫的層疊非常有用."

msgid "OneShot"
msgstr "OneShot"

msgid ""
"This node will execute a sub-animation and return once it finishes. Blend "
"times for fading in and out can be customized, as well as filters."
msgstr ""
"此節點將執行子動畫, 並在完成後返回. 可以用於定制淡入淡出時間, 以及篩檢程式."

msgid ""
"After setting the request and changing the animation playback, the one-shot "
"node automatically clears the request on the next process frame by setting "
"its ``request`` value to ``AnimationNodeOneShot.ONE_SHOT_REQUEST_NONE``."
msgstr ""
"在設定時間和改變動畫播放後，尋找節點通過設定其 ``seek_position`` 值為 "
"``-1.0``，在下一個程序影格自動進入睡眠模式。"

msgid "TimeSeek"
msgstr "時間縮放"

msgid ""
"This node can be used to cause a seek command to happen to any sub-children "
"of the animation graph. Use this node type to play an ``Animation`` from the "
"start or a certain playback position inside the ``AnimationNodeBlendTree``."
msgstr ""
"這個節點可以用來使尋找命令發生在動畫圖像的任何子代上。使用這個節點型別可以從 "
"``AnimationNodeBlendTree`` 中的開始或某個位置播放 ``Animation``。"

msgid ""
"After setting the time and changing the animation playback, the seek node "
"automatically goes into sleep mode on the next process frame by setting its "
"``seek_request`` value to ``-1.0``."
msgstr ""
"在設定時間和改變動畫播放後，尋找節點通過設定其 ``seek_position`` 值為 "
"``-1.0``，在下一個程序影格自動進入睡眠模式。"

msgid "TimeScale"
msgstr "時間縮放"

msgid ""
"Allows scaling the speed of the animation (or reverse it) connected to the "
"`in` input via the `scale` parameter. Setting the `scale` to 0 will pause "
"the animation."
msgstr "允許縮放任何子節點的動畫速度(或將其反轉). 設定為0會暫停動畫."

msgid "Transition"
msgstr "轉場效果"

msgid ""
"Very simple state machine (when you don't want to cope with a "
"``StateMachine`` node). Animations can be connected to the outputs and "
"transition times can be specified. After setting the request and changing "
"the animation playback, the transition node automatically clears the request "
"on the next process frame by setting its ``transition_request`` value to an "
"empty string (``\"\"``)."
msgstr ""
"非常簡單的狀態機（當您不想使用 ``StateMachine`` 節點時）。動畫可以連接到輸"
"出，並且可以指定過渡時間。"

msgid "BlendSpace2D"
msgstr "二維混合空間"

msgid ""
"``BlendSpace2D`` is a node to do advanced blending in two dimensions. Points "
"are added to a two-dimensional space and then a position can be controlled "
"to determine blending:"
msgstr ""
"``BlendSpace2D`` 是一個在二維空間進行高級混合的節點. 將點新增到一個二維空間, "
"然後可以控制位置來確定混合:"

msgid ""
"The ranges in X and Y can be controlled (and labeled for convenience). By "
"default, points can be placed anywhere (right-click on the coordinate system "
"or use the *add point* button) and triangles will be generated automatically "
"using Delaunay."
msgstr ""
"可以控制X和Y的範圍(為方便起見, 還可以標記它們). 預設情況下, 可以在任何位置放"
"置點(只需按右鍵坐標系統或使用 *新增點* 按鈕)將自動生成德洛內三角形."

msgid ""
"It is also possible to draw the triangles manually by disabling the *auto "
"triangle* option, though this is rarely necessary:"
msgstr ""
"也可以通過禁用 *自動三角形* 選項來手動繪製三角形, 雖然基本上沒必要這麼做:"

msgid ""
"Finally, it is possible to change the blend mode. By default, blending "
"happens by interpolating points inside the closest triangle. When dealing "
"with 2D animations (frame by frame), you may want to switch to *Discrete* "
"mode. Alternatively, if you want to keep the current play position when "
"switching between discrete animations, there is a *Carry* mode. This mode "
"can be changed in the *Blend* menu:"
msgstr ""
"最後, 可能會更改混合模式. 預設情況下, 混合是通過在最近的三角形內插點來實作"
"的. 當處理二維動畫(逐影格)時, 您可能希望切換到 *離散* 模式. 此外, 如果您想在"
"離散動畫之間切換時保持目前播放位置, 請使用 *進位元* 模式. 此模式可在 *混合* "
"功能表中更改:"

msgid "BlendSpace1D"
msgstr "一維混合空間"

msgid ""
"This is similar to 2D blend spaces, but in one dimension (so triangles are "
"not needed)."
msgstr "這類似於二維混合空間, 但在一維空間中(所以不需要三角形)."

msgid "StateMachine"
msgstr "狀態機"

msgid ""
"This node acts as a state machine with root nodes as states. Root nodes can "
"be created and connected via lines. States are connected via *Transitions*, "
"which are connections with special properties. Transitions are uni-"
"directional, but two can be used to connect in both directions."
msgstr ""
"這個節點是一個狀態機，根節點都是狀態。根節點可以建立並通過線路連接。狀態通過*"
"轉換*連接，它們是具有特殊性質的連接。轉換是單向的，但是可以用兩個來達到雙向連"
"接。"

msgid "There are many types of transition:"
msgstr "Godot 沒有使用限制"

msgid ""
"*Immediate*: Will switch to the next state immediately. The current state "
"will end and blend into the beginning of the new one."
msgstr ""
"*Immediate*（立即）：將立即切換到下一個狀態。目前狀態將結束，並與新狀態的開頭"
"相混合。"

msgid ""
"*Sync*: Will switch to the next state immediately, but will seek the new "
"state to the playback position of the old state."
msgstr ""
"*Sync*（同步）：立即切換到下一個狀態，但會將新狀態快進並到舊狀態的播放位置。"

msgid ""
"*At End*: Will wait for the current state playback to end, then switch to "
"the beginning of the next state animation."
msgstr ""
"*At End*（末尾）：將等待目前狀態播放結束，然後切換到下一個狀態動畫的開頭。"

msgid ""
"Transitions also have a few properties. Click any transition and it will be "
"displayed in the inspector dock:"
msgstr "過渡也有一些屬性。按一下任何過渡，它就會顯示在“屬性面板”面板中："

msgid ""
"*Switch Mode* is the transition type (see above), it can be modified after "
"creation here."
msgstr "*Switch Mode*（切換模式）為過渡型別（見上文），可以在此處建立後修改。"

msgid ""
"*Auto Advance* will turn on the transition automatically when this state is "
"reached. This works best with the *At End* switch mode."
msgstr ""
"*Auto Advance*（自動前進）當達到此狀態時將自動開啟轉換。最適合 *At End* 切換"
"模式。"

msgid ""
"*Advance Condition* will turn on auto advance when this condition is set. "
"This is a custom text field that can be filled with a variable name. The "
"variable can be modified from code (more on this later)."
msgstr ""
"*Advance Condition*（前進條件）會在條件成立時打開自動前進。這是一個可以用變數"
"名填充的自訂文字欄位。可以從程式碼中修改變數（稍後將對此進行詳細介紹）。"

msgid "*Xfade Time* is the time to cross-fade between this state and the next."
msgstr "*Xfade Time*（疊化時間）是在這個狀態和下一個狀態之間交叉漸變的時間。"

msgid ""
"*Priority* is used together with the ``travel()`` function from code (more "
"on this later). Lower priority transitions are preferred when travelling "
"through the tree."
msgstr ""
"*Priority*（優先順序）與程式碼中的 ``travel()`` 函式一起使用（後述）。當從一"
"個狀態到另一個狀態時，會優先使用優先順序較低的過渡。"

msgid ""
"*Disabled* toggles disabling this transition (when disabled, it will not be "
"used during travel or auto advance)."
msgstr "*Disabled*（禁用）允許禁用此轉換（它不會在行程或自動前進期間使用）。"

msgid "For better blending"
msgstr "為了更好的混合"

msgid ""
"In Godot 4.0+, in order for the blending results to be deterministic "
"(reproducible and always consistent), the blended property values must have "
"a specific initial value. For example, in the case of two animations to be "
"blended, if one animation has a property track and the other does not, the "
"blended animation is calculated as if the latter animation had a property "
"track with the initial value."
msgstr ""
"在 Godot 4.0+ 中，為了使混合結果具有確定性（可重現且始終一致），混合屬性值必"
"須具有特定的初始值。例如，在要混合兩個動畫的情況下，如果一個動畫具有屬性軌跡"
"而另一個動畫沒有，則計算混合動畫時就好像後一個動畫具有具有初始值的屬性軌跡一"
"樣。"

msgid ""
"When using Position/Rotation/Scale 3D tracks for Skeleton3D bones, the "
"initial value is Bone Rest. For other properties, the initial value is ``0`` "
"and if the track is present in the ``RESET`` animation, the value of its "
"first keyframe is used instead."
msgstr ""
"當對 Skeleton3D 骨骼使用位置/旋轉/縮放 3D 軌跡時，初始值為 Bone Rest。對於其"
"他屬性，初始值為“0”，如果軌道存在於“RESET”動畫中，則使用其第一個關鍵影格的"
"值。"

msgid ""
"For example, the following AnimationPlayer has two animations, but one of "
"them lacks a Property track for Position."
msgstr ""
"例如，下面的AnimationPlayer有兩個動畫，但其中一個缺少Position的Property軌道。"

msgid ""
"This means that the animation lacking that will treat those Positions as "
"``Vector2(0, 0)``."
msgstr "這意味著缺少的動畫會將這些位置視為「Vector2(0, 0)」。"

msgid ""
"This problem can be solved by adding a Property track for Position as an "
"initial value to the ``RESET`` animation."
msgstr "這個問題可以透過加入一個位置屬性軌跡作為「RESET」動畫的初始值來解決。"

msgid ""
"Be aware that the ``RESET`` animation exists to define the default pose when "
"loading an object originally. It is assumed to have only one frame and is "
"not expected to be played back using the timeline."
msgstr ""
"請注意，「RESET」動畫的存在是為了定義最初載入物件時的預設姿勢。假設它只有一影"
"格，並且預計不會使用時間軸進行播放。"

msgid ""
"Also keep in mind that the Rotation 3D tracks and the Property tracks for 2D "
"rotation with Interpolation Type set to Linear Angle or Cubic Angle will "
"prevent rotation of more than 180 degrees from the initial value as blended "
"animation."
msgstr ""
"另請記住，插值型別設定為線性角度或立方角的旋轉 3D 軌道和 2D 旋轉的屬性軌道將"
"防止混合動畫從初始值旋轉超過 180 度。"

msgid ""
"This can be useful for Skeleton3Ds to prevent the bones penetrating the body "
"when blending animations. Therefore, Skeleton3D's Bone Rest values should be "
"as close to the midpoint of the movable range as possible. **This means that "
"for humanoid models, it is preferable to import them in a T-pose**."
msgstr ""
"這對於 Skeleton3D 很有用，可以在混合動畫時防止骨頭穿透身體。因此，Skeleton3D "
"的 Bone Rest 值應盡可能接近可移動範圍的中點。 **這意味著對於人形模型，最好以 "
"T 形姿勢匯入它們**。"

msgid ""
"You can see that the shortest rotation path from Bone Rests is prioritized "
"rather than the shortest rotation path between animations."
msgstr ""
"您可以看到，優先考慮骨骼休息的最短旋轉路徑，而不是動畫之間的最短旋轉路徑。"

msgid ""
"If you need to rotate Skeleton3D itself more than 180 degrees by blend "
"animations for movement, you can use Root Motion."
msgstr ""
"如果您需要透過混合動畫進行運動來將 Skeleton3D 本身旋轉超過 180 度，則可以使"
"用 Root Motion。"

msgid "Root motion"
msgstr "根骨骼運動"

msgid ""
"When working with 3D animations, a popular technique is for animators to use "
"the root skeleton bone to give motion to the rest of the skeleton. This "
"allows animating characters in a way where steps actually match the floor "
"below. It also allows precise interaction with objects during cinematics."
msgstr ""
"處理 3D 動畫時，一種流行的技術是動畫師利用根骨骼為其餘部分骨骼製作運動動畫。"
"這使得動畫角色的腳步與下面的地板相配對。並且允許在電影拍攝期間與物體進行精確"
"的互動。"

msgid ""
"When playing back the animation in Godot, it is possible to select this bone "
"as the *root motion track*. Doing so will cancel the bone transformation "
"visually (the animation will stay in place)."
msgstr ""
"在 Godot 中重播動畫時，可以選擇這根骨骼作為*根運動軌跡*。這會在視覺上取消這根"
"骨骼的變換（動畫將保持原狀）。"

msgid ""
"Afterwards, the actual motion can be retrieved via the :ref:`AnimationTree "
"<class_AnimationTree>` API as a transform:"
msgstr ""
"然後, 實際運動可以通過 :ref:`AnimationTree <class_AnimationTree>` API 作為轉"
"換:"

msgid ""
"This can be fed to functions such as :ref:`CharacterBody3D.move_and_slide "
"<class_CharacterBody3D_method_move_and_slide>` to control the character "
"movement."
msgstr ""
"可以提供給 :ref:`KinematicBody.move_and_slide "
"<class_KinematicBody_method_move_and_slide>` 等函式，用來控制角色移動。"

msgid ""
"There is also a tool node, ``RootMotionView``, that can be placed in a scene "
"and will act as a custom floor for your character and animations (this node "
"is disabled by default during the game)."
msgstr ""
"還有一個名為 ``RootMotionView`` 的工具節點，可以放置在場景中，作為你的角色和"
"動畫的自訂地板（這個節點預設在遊戲期間禁用）。"

msgid "Controlling from code"
msgstr "使用程式碼控制"

msgid ""
"After building the tree and previewing it, the only question remaining is "
"\"How is all this controlled from code?\"."
msgstr "建立樹和預覽之後，只剩下一個問題：“如何使用程式碼控制所有的節點？”。"

msgid ""
"Keep in mind that the animation nodes are just resources and, as such, they "
"are shared between all instances using them. Setting values in the nodes "
"directly will affect all instances of the scene that uses this "
"``AnimationTree``. This is generally undesirable, but does have some cool "
"use cases, e.g. you can copy and paste parts of your animation tree, or "
"reuse nodes with a complex layout (such as a state machine or blend space) "
"in different animation trees."
msgstr ""
"要注意動畫節點就是資源，因此他們會在所有使用他們的實例之間共用。直接修改節點"
"中的值，將會影響到場景中所有使用這個 ``AnimationTree`` 的實例。通常是不希望這"
"樣的，不過也有一些不錯的用法，比如你可以複製貼上你的動畫樹的一部分，或者在不"
"同的動畫樹中複用具有複雜佈局的節點（例如狀態機和混合樹）。"

msgid ""
"The actual animation data is contained in the ``AnimationTree`` node and is "
"accessed via properties. Check the \"Parameters\" section of the "
"``AnimationTree`` node to see all the parameters that can be modified in "
"real-time:"
msgstr ""
"實際的動畫封包含在 ``AnimationTree`` 節點中, 並通過屬性存取. 檢查 "
"``AnimationTree`` 節點的 \"參數\" 部分, 查看所有可以即時修改的參數:"

msgid ""
"This is handy because it makes it possible to animate them from an "
"``AnimationPlayer``, or even the ``AnimationTree`` itself, allowing the "
"realization of very complex animation logic."
msgstr ""
"這很方便, 因為它可以通過 ``AnimationPlayer`` 獲得動畫效果, 甚至是 "
"``AnimationTree`` 本身, 允許實作非常複雜的動畫邏輯."

msgid ""
"To modify these values from code, the property path must be obtained. This "
"is done easily by hovering the mouse over any of the parameters:"
msgstr ""
"想要通過程式碼修改這些值, 必須獲得該屬性的路徑. 這是很容易做到的, 把滑鼠懸停"
"在任何參數:"

msgid "Which allows setting them or reading them:"
msgstr "允許設定或讀取它們:"

msgid "State machine travel"
msgstr "狀態機行程"

msgid ""
"One of the nice features in Godot's ``StateMachine`` implementation is the "
"ability to travel. The graph can be instructed to go from the current state "
"to another one, while visiting all the intermediate ones. This is done via "
"the A\\* algorithm. If there is no path of transitions starting at the "
"current state and finishing at the destination state, the graph teleports to "
"the destination state."
msgstr ""
"Godot的“StateMachine”實現中一個不錯的功能是旅行的能力。可以指示圖形從當前狀態"
"轉到另一個狀態，同時訪問所有中間狀態。這是通過 A\\* 演算法完成的。如果沒有從"
"當前狀態開始到目標狀態結束的轉換路徑，則圖形將傳送到目標狀態。"

msgid ""
"To use the travel ability, you should first retrieve the :ref:"
"`AnimationNodeStateMachinePlayback "
"<class_AnimationNodeStateMachinePlayback>` object from the ``AnimationTree`` "
"node (it is exported as a property)."
msgstr ""
"要使用行程能力, 您應該首先從 ``AnimationTree`` 節點中檢索 :ref:"
"`AnimationNodeStateMachinePlayback "
"<class_AnimationNodeStateMachinePlayback>` 物件(其被匯出為一個屬性)."

msgid ""
"Once retrieved, it can be used by calling one of the many functions it "
"offers:"
msgstr "一旦檢索到, 可以呼叫它提供的許多函式之一:"

msgid ""
"The state machine must be running before you can travel. Make sure to either "
"call ``start()`` or choose a node to **Autoplay on Load**."
msgstr ""
"狀態機必須正在運作才能使用行程能力。確保呼叫 ``start()`` 或選擇一個節點以**在"
"載入時自動播放**。"

msgid "Translation status"
msgstr "翻譯狀態"
