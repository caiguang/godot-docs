# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Scene Unique Nodes"
msgstr "Scene Node 場景節點"

msgid "Introduction"
msgstr "前言"

msgid ""
"Using ``get_node()`` to reference nodes from a script can sometimes be "
"fragile. If you move a button in a UI scene from one panel to another, the "
"button's node path changes, and if a script uses ``get_node()`` with a hard-"
"coded node path, the script will not be able to find the button anymore."
msgstr ""
"使用“get_node()”從腳本引用節點有時可能很脆弱。如果將 UI 場景中的按鈕從一個面"
"板移動到另一個面板，按鈕的節點路徑會發生變化，並且如果腳本使用具有硬編碼節點"
"路徑的“get_node()”，則腳本將無法找到按鈕不再。"

msgid ""
"In situations like this, the node can be turned into a scene unique node to "
"avoid having to update the script every time the node's path is changed."
msgstr ""
"在類似這樣的情況下，可以將節點設為場景唯一節點，這樣修改路徑後就不必去修改腳"
"本了。"

msgid "Creation and usage"
msgstr "建立內容"

msgid ""
"In the Scene tree dock, right-click on a node and select **Access as Unique "
"Name** in the context menu."
msgstr ""
"在場景樹面板中，按右鍵節點並在本文功能表中選擇**作為場景唯一名稱存取**。"

msgid ""
"After selecting the option, the node will now have a percent symbol (**%**) "
"next to its name in the scene tree:"
msgstr "勾選後，該節點在場景樹中會在名稱旁邊顯示一個百分號（**%**）："

msgid ""
"You can now use the node in your script. For example, you can reference it "
"with a ``get_node()`` method call by typing the % symbol, followed by the "
"node's name:"
msgstr ""
"現在您可以在腳本中使用該節點。例如，您可以透過鍵入 % 符號，後面跟著節點名稱，"
"透過「get_node()」方法呼叫來引用它："

msgid "Same-scene limitation"
msgstr "著色器語言限制"

msgid ""
"A scene unique node can only be retrieved by a node inside the same scene. "
"To demonstrate this limitation, consider this example **Player** scene that "
"instances a **Sword** scene:"
msgstr ""
"場景唯一節點只能由同一場景內的節點檢索。為了示範此限制，請考慮以下範例 "
"**Player** 場景，該場景實例化 **Sword** 場景："

msgid ""
"Here are the results of ``get_node()`` calls inside the **Player** script:"
msgstr "以下是 **Player** 腳本內的 ``get_node()`` 呼叫的結果："

msgid "``get_node(\"%Eyes\")`` returns the **Eyes** node."
msgstr "``get_node(\"%Eyes\")`` 傳回 **Eyes** 節點。"

msgid "``get_node(\"%Hilt\")`` returns ``null``."
msgstr "``get_node(\"%Hilt\")`` 回傳``null``。"

#, fuzzy
msgid ""
"These are the results of ``get_node()`` calls inside the **Sword** script:"
msgstr "這些是 **Blade** 腳本內的 ``get_node()`` 呼叫的結果："

msgid "``get_node(\"%Eyes\")`` returns ``null``."
msgstr "``get_node(\"%Eyes\")`` 回傳``null``。"

msgid "``get_node(\"%Hilt\")`` returns the **Hilt** node."
msgstr "``get_node(\"%Hilt\")`` 回傳 **Hilt** 節點。"

msgid ""
"If a script has access to a node in another scene, it can call "
"``get_node()`` on that node to get scene unique nodes from that node's "
"scene. This also works in a node path, which avoids multiple ``get_node()`` "
"calls. Here are two ways to get the **Hilt** node from the **Player** script "
"using scene unique nodes:"
msgstr ""
"如果腳本可以存取另一個場景中的節點，它可以在該節點上呼叫「get_node()」以從該"
"節點的場景中取得場景唯一節點。這也適用於節點路徑，避免多次呼叫“get_node()”。"
"以下是使用場景唯一節點從 **Player** 腳本取得 **Hilt** 節點的兩種方法："

msgid ""
"``get_node(\"Hand/Sword\").get_node(\"%Hilt\")`` returns the **Hilt** node."
msgstr "``get_node(\"Hand/Sword\").get_node(\"%Hilt\")`` 傳回 **Hilt** 節點。"

msgid "``get_node(\"Hand/Sword/%Hilt\")`` also returns the **Hilt** node."
msgstr "``get_node(\"Hand/Sword/%Hilt\")`` 也回傳 **Hilt** 節點。"

msgid ""
"Scene unique names don't only work at the end of a node path. They can be "
"used in the middle to navigate from one node to another. For example, the "
"**Sword** node is marked as a scene unique node in the **Player** scene, so "
"this is possible:"
msgstr ""
"場景唯一名稱不僅適用於節點路徑的末端。它們可以在中間使用，從一個節點導覽到另"
"一個節點。例如，**Sword** 節點被標記為 **Player** 場景中的場景唯一節點，因此"
"這是可能的："

msgid "``get_node(\"%Sword/%Hilt\")`` returns the **Hilt** node."
msgstr "``get_node(\"%Sword/%Hilt\")`` 回傳 **Hilt** 節點。"

msgid "Alternatives"
msgstr "額外檔案"

msgid ""
"Scene unique nodes are a useful tool to navigate a scene. However, there are "
"some situations where other techniques may be better."
msgstr ""
"場景唯一節點是導覽場景的有用工具。然而，在某些情況下，其他技術可能會更好。"

msgid ""
"A :ref:`Group <doc_groups>` allows locating a node (or a group of many "
"nodes) from any other node, no matter what scene the two nodes are located "
"in."
msgstr ""
"群組 <doc_groups>` 允許從任何其他節點定位一個節點（或一組許多節點），無論這兩"
"個節點位於哪個場景。"

msgid ""
"A :ref:`Singleton (Autoload) <doc_singletons_autoload>` is an always loaded "
"node that can be accessed directly by any node regardless of the scene. "
"These are useful when some data or functionality is shared globally."
msgstr ""
"Singleton (Autoload) <doc_singletons_autoload>` 是一個始終載入的節點，無論場"
"景如何，任何節點都可以直接存取它。當某些資料或功能在全球範圍內共享時，這些功"
"能非常有用。"

msgid ""
":ref:`Node.find_child() <class_Node_method_find_child>` finds a node by name "
"without knowing its full path. This seems similar to a scene unique node, "
"but this method is able to find nodes in nested scenes, and doesn't require "
"marking the node in the scene editor in any way. However, this method is "
"slow. Scene unique nodes are cached by Godot and are fast to retrieve, but "
"each time the method is called, ``find_child()`` needs to check every "
"descendant (every child, grandchild, and so on)."
msgstr ""
":ref:`Node.find_child() <class_Node_method_find_child>` 透過名稱尋找節點，而"
"不知道其完整路徑。這看起來類似於場景唯一節點，但這種方法能夠在巢狀場景中尋找"
"節點，並且不需要以任何方式在場景編輯器中標記節點。然而，這種方法很慢。場景唯"
"一節點由 Godot 快取，並且可以快速檢索，但每次呼叫該方法時，``find_child()`` "
"都需要檢查每個後代（每個孩子、孫子等）。"

msgid "Translation status"
msgstr "翻譯狀態"
