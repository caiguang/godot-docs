# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom performance monitors"
msgstr "屬性目標中的效能提示"

msgid "Introduction"
msgstr "前言"

#, fuzzy
msgid ""
"As explained in the :ref:`doc_debugger_panel` documentation, Godot features "
"a **Debugger > Monitors** bottom panel that allows tracking various values "
"with graphs showing their evolution over time. The data for those graphs is "
"sourced from the engine's :ref:`class_Performance` singleton."
msgstr ""
"正如 doc_debugger_panel 檔案中所解釋的，Godot 具有 **偵錯器 > 監視器** 底部面"
"板，允許追蹤各種值，並以圖表顯示它們隨時間的演變。這些圖表的資料源自引擎的 "
"class_Performance 單例。"

#, fuzzy
msgid ""
"Since Godot 4.0, you can declare custom values to be displayed in the "
"Monitors tab. Example use cases for custom performance monitors include:"
msgstr ""
"從 Godot 4.0 開始，您可以宣告要在此「監視器」標籤中顯示的自訂值。自訂效能監視"
"器的範例用例包括："

msgid ""
"Displaying performance metrics that are specific to your project. For "
"instance, in a voxel game, you could create a performance monitor to track "
"the number of chunks that are loaded every second."
msgstr ""
"顯示特定於您的專案的績效指標。例如，在體素遊戲中，您可以建立一個效能監視器來"
"追蹤每秒載入的區塊數。"

msgid ""
"Displaying in-game metrics that are not strictly related to performance, but "
"are still useful to graph for debugging purposes. For instance, you could "
"track the number of enemies present in the game to make sure your spawning "
"mechanic works as intended."
msgstr ""
"顯示與效能不嚴格相關的遊戲內指標，但對於出於除錯目的繪製圖表仍然有用。例如，"
"您可以追蹤遊戲中存在的敵人數量，以確保您的生成機制能如預期運作。"

msgid "Creating a custom performance monitor"
msgstr "建立自定節點"

msgid ""
"In this example, we'll create a custom performance monitor to track how many "
"enemies are present in the currently running project."
msgstr ""
"在此範例中，我們將建立一個自訂效能監視器來追蹤目前正在運作的專案中存在多少敵"
"人。"

msgid ""
"The main scene features a :ref:`class_Timer` node with the following script "
"attached:"
msgstr "主場景有一個 class_Timer 節點，並附有以下腳本："

#, fuzzy
msgid ""
"The second parameter of :ref:`Performance."
"add_custom_monitor<class_Performance_method_add_custom_monitor>` is a :ref:"
"`class_Callable`."
msgstr ""
"ref:`Performance."
"add_custom_monitor<class_Performance_method_add_custom_monitor>` 的第二個參數"
"是 class_Callable`。"

msgid ""
"``enemy.tscn`` is a scene with a Node2D root node and Timer child node. The "
"Node2D has the following script attached:"
msgstr ""
"``enemy.tscn`` 是一個具有 Node2D 根節點和 Timer 子節點的場景。 Node2D 附加了"
"以下腳本："

msgid ""
"In this example, since we spawn 20 enemies per second, and each enemy "
"despawns 2.5 seconds after they spawn, we expect the number of enemies "
"present in the scene to stabilize to 50. We can make sure about this by "
"looking at the graph."
msgstr ""
"在此範例中，由於我們每秒生成 20 個敵人，並且每個敵人在生成後 2.5 秒後消失，因"
"此我們預計場景中存在的敵人數量將穩定為 50 個。我們可以透過查看圖表來確定這一"
"點。"

msgid ""
"To visualize the graph created from this custom performance monitor, run the "
"project, switch to the editor while the project is running and open "
"**Debugger > Monitors** at the bottom of the editor window. Scroll down to "
"the newly available **Game** section and check **Enemies**. You should see a "
"graph appearing as follows:"
msgstr ""
"若要視覺化從此自訂效能監視器建立的圖形，請執行專案，在專案執行時切換到編輯"
"器，然後開啟編輯器視窗底部的 **偵錯器 > 監視器**。向下捲動到新推出的**遊戲**"
"部分並選中**敵人**。您應該會看到如下所示的圖表："

#, fuzzy
msgid "Example editor graph from a custom performance monitor"
msgstr "建立自定節點"

msgid ""
"The performance monitor handling code doesn't have to live in the same "
"script as the nodes themselves. You may choose to move the performance "
"monitor registration and getter function to an :ref:`autoload "
"<doc_singletons_autoload>` instead."
msgstr ""
"效能監視器處理程式碼不必與節點本身位於同一腳本中。您可以選擇將效能監視器註冊"
"和 getter 函式移至 autoload <doc_singletons_autoload>`。"

msgid "Querying a performance monitor in a project"
msgstr "效能偵測工具。"

msgid ""
"If you wish to display the value of the performance monitor in the running "
"project's window (rather than the editor), use ``Performance."
"get_custom_monitor(\"category/name\")`` to fetch the value of the custom "
"monitor. You can display the value using a :ref:`class_Label`, :ref:"
"`class_RichTextLabel`, :ref:`doc_custom_drawing_in_2d`, :ref:`doc_3d_text`, "
"etc."
msgstr ""
"如果您希望在正在執行的專案的視窗（而不是編輯器）中顯示效能監視器的值，請使用 "
"Performance.get_custom_monitor(\"category/name\")`` 來取得自訂監視器的值。您"
"可以使用 class_Label、class_RichTextLabel、doc_custom_drawing_in_2d、doc_3 "
"d_text 等顯示值。"

msgid ""
"This method can be used in exported projects as well (debug and release "
"mode), which allows you to create visualizations outside the editor."
msgstr ""
"此方法也可用於匯出的專案（偵錯和發布模式），它允許您在編輯器外部建立視覺化效"
"果。"

msgid "Translation status"
msgstr "翻譯狀態"
