# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Troubleshooting physics issues"
msgstr "測試與回報問題"

msgid ""
"When working with a physics engine, you may encounter unexpected results."
msgstr "使用實體引擎時，您可能會遇到意想不到的結果。"

msgid ""
"While many of these issues can be resolved through configuration, some of "
"them are the result of engine bugs. For known issues related to the physics "
"engine, see `open physics-related issues on GitHub <https://github.com/"
"godotengine/godot/issues?q=is%3Aopen+is%3Aissue+label%3Atopic%3Aphysics>`__. "
"Looking through `closed issues <https://github.com/godotengine/godot/issues?"
"q=+is%3Aclosed+is%3Aissue+label%3Atopic%3Aphysics>`__ can also help answer "
"questions related to physics engine behavior."
msgstr ""
"雖然其中許多問題可以透過配置解決，但其中一些問題是引擎錯誤造成的。有關與實體"
"引擎相關的已知問題，請參閱「GitHub 上開放的物理相關問題<https://github.com/"
"godotengine/godot/issues?q=is%3Aopen+is%3Aissue+label%3Atopic%3Aphysicals >” "
"__。查看「已關閉的問題<https://github.com/godotengine/godot/issues?"
"q=+is%3Alined+is%3Aissue+label%3Atopic%3Aphysicals>」__ 還可以幫助回答與物理"
"引擎行為相關的問題。"

msgid "Objects are passing through each other at high speeds"
msgstr "高速運動的物件會互相穿透"

msgid ""
"This is known as *tunneling*. Enabling **Continuous CD** in the RigidBody "
"properties can sometimes resolve this issue. If this does not help, there "
"are other solutions you can try:"
msgstr ""
"這稱為*隧道*。在 RigidBody 屬性中啟用**連續 CD** 有時可以解決此問題。如果這沒"
"有幫助，您可以嘗試其他解決方案："

msgid ""
"Make your static collision shapes thicker. For example, if you have a thin "
"floor that the player can't get below in some way, you can make the collider "
"thicker than the floor's visual representation."
msgstr ""
"讓你的靜態碰撞形狀更厚。例如，如果您的地板很薄，玩家無法以某種方式到達下方，"
"則可以使對撞機比地板的視覺表示更厚。"

msgid ""
"Modify your fast-moving object's collision shape depending on its movement "
"speed. The faster the object moves, the larger the collision shape should "
"extend outside of the object to ensure it can collide with thin walls more "
"reliably."
msgstr ""
"根據快速移動物體的移動速度修改其碰撞形狀。物體移動得越快，碰撞形狀應該延伸到"
"物體外部越大，以確保它能夠更可靠地與薄壁碰撞。"

msgid ""
"Increase **Physics Ticks Per Second** in the advanced Project Settings. "
"While this has other benefits (such as more stable simulation and reduced "
"input lag), this increases CPU utilization and may not be viable for mobile/"
"web platforms. Multipliers of the default value of ``60`` (such as ``120``, "
"``180`` or ``240``) should be preferred for a smooth appearance on most "
"displays."
msgstr ""
"在進階專案設定中增加**每秒物理滴答數**。雖然這還有其他好處（例如更穩定的模擬"
"和減少輸入延遲），但這會增加 CPU 使用率，並且可能不適用於行動/網路平台。為了"
"在大多數顯示器上獲得平滑的外觀，應首選預設值「60」（例如「120」、「180」或"
"「240」）的乘數。"

msgid "Stacked objects are unstable and wobbly"
msgstr "堆疊的對象搖擺不定"

msgid ""
"Despite seeming like a simple problem, stable RigidBody simulation with "
"stacked objects is difficult to implement in a physics engine. This is "
"caused by integrating forces going against each other. The more stacked "
"objects are present, the stronger the forces will be against each other. "
"This eventually causes the simulation to become wobbly, making the objects "
"unable to rest on top of each other without moving."
msgstr ""
"儘管看起來是一個簡單的問題，但在物理引擎中很難實作具有堆疊物件的穩定剛體模"
"擬。這是由相互對抗的力量整合所造成的。堆疊的物體越多，彼此之間的作用力就越"
"強。這最終會導致模擬變得不穩定，使物體無法在不移動的情況下相互堆疊。"

msgid ""
"Increasing the physics simulation rate can help alleviate this issue. To do "
"so, increase **Physics Ticks Per Second** in the advanced Project Settings. "
"Note that increases CPU utilization and may not be viable for mobile/web "
"platforms. Multipliers of the default value of ``60`` (such as ``120``, "
"``180`` or ``240``) should be preferred for a smooth appearance on most "
"displays."
msgstr ""
"提高物理模擬速率可以幫助緩解這個問題。為此，請在進階專案設定中增加**每秒物理"
"滴答數**。請注意，這會增加 CPU 使用率，並且可能不適用於行動/網路平台。為了在"
"大多數顯示器上獲得平滑的外觀，應首選預設值「60」（例如「120」、「180」或"
"「240」）的乘數。"

msgid "Scaled physics bodies or collision shapes do not collide correctly"
msgstr "縮放後的物理體或碰撞形狀無法正確碰撞"

msgid ""
"Godot does not currently support scaling of physics bodies or collision "
"shapes. As a workaround, change the collision shape's extents instead of "
"changing its scale. If you want the visual representation's scale to change "
"as well, change the scale of the underlying visual representation (Sprite2D, "
"MeshInstance3D, …) and change the collision shape's extents separately. Make "
"sure the collision shape is not a child of the visual representation in this "
"case."
msgstr ""
"Godot 目前不支援物理體或碰撞形狀的縮放。作為解決方法，更改碰撞形狀的範圍而不"
"是更改其比例。如果您希望視覺表示的比例也會發生變化，請變更基礎視覺表示的比例"
"（Sprite2D、MeshInstance3D...）並分別變更碰撞形狀的範圍。在這種情況下，請確保"
"碰撞形狀不是視覺表示的子代。"

msgid ""
"Since resources are shared by default, you'll have to make the collision "
"shape resource unique if you don't want the change to be applied to all "
"nodes using the same collision shape resource in the scene. This can be done "
"by calling ``duplicate()`` in a script on the collision shape resource "
"*before* changing its size."
msgstr ""
"由於預設資源是共享的，因此如果您不希望將變更套用至場景中使用相同碰撞形狀資源"
"的所有節點，則必須使碰撞形狀資源唯一。這可以透過在碰撞形狀資源*更改其大小之前"
"*在腳本中呼叫「duplicate()」來完成。"

msgid "Thin objects are wobbly when resting on the floor"
msgstr "薄的物體放在地板上時會搖晃"

msgid "This can be due to one of two causes:"
msgstr "填寫下列設定："

msgid "The floor's collision shape is too thin."
msgstr "地板的碰撞形狀太薄。"

msgid "The RigidBody's collision shape is too thin."
msgstr "RigidBody 的碰撞形狀太薄。"

msgid ""
"In the first case, this can be alleviated by making the floor's collision "
"shape thicker. For example, if you have a thin floor that the player can't "
"get below in some way, you can make the collider thicker than the floor's "
"visual representation."
msgstr ""
"在第一種情況下，可以透過使地板的碰撞形狀更厚來緩解這種情況。例如，如果您的地"
"板很薄，玩家無法以某種方式到達下方，則可以使對撞機比地板的視覺表示更厚。"

msgid ""
"In the second case, this can usually only be resolved by increasing the "
"physics simulation rate (as making the shape thicker would cause a "
"disconnect between the RigidBody's visual representation and its collision)."
msgstr ""
"在第二種情況下，這通常只能透過增加物理模擬速率來解決（因為使形狀更厚會導致 "
"RigidBody 的視覺表示與其碰撞之間脫節）。"

msgid ""
"In both cases, increasing the physics simulation rate can also help "
"alleviate this issue. To do so, increase **Physics Ticks Per Second** in the "
"advanced Project Settings. Note that this increases CPU utilization and may "
"not be viable for mobile/web platforms. Multipliers of the default value of "
"``60`` (such as ``120``, ``180`` or ``240``) should be preferred for a "
"smooth appearance on most displays."
msgstr ""
"在這兩種情況下，提高物理模擬速率也可以幫助緩解這個問題。為此，請在進階專案設"
"定中增加**每秒物理滴答數**。請注意，這會增加 CPU 使用率，並且可能不適用於行"
"動/網路平台。為了在大多數顯示器上獲得平滑的外觀，應首選預設值「60」（例如"
"「120」、「180」或「240」）的乘數。"

msgid "Cylinder collision shapes are unstable"
msgstr "碰撞形體"

msgid ""
"During the transition from Bullet to GodotPhysics in Godot 4, cylinder "
"collision shapes had to be reimplemented from scratch. However, cylinder "
"collision shapes are one of the most difficult shapes to support, which is "
"why many other physics engines don't provide any support for them. There are "
"several known bugs with cylinder collision shapes currently."
msgstr ""
"在 Godot 4 中從 Bullet 到 GodotPhysics 的過渡過程中，必須從頭開始重新實作圓柱"
"體碰撞形狀。然而，圓柱體碰撞形狀是最難支援的形狀之一，這就是為什麼許多其他物"
"理引擎不為它們提供任何支援的原因。目前有幾個已知的圓柱體碰撞形狀錯誤。"

msgid ""
"We recommend using box or capsule collision shapes for characters for now. "
"Boxes generally provide the best reliability, but have the downside of "
"making the character take more space diagonally. Capsule collision shapes do "
"not have this downside, but their shape can make precision platforming more "
"difficult."
msgstr ""
"我們目前建議對角色使用盒子或膠囊碰撞形狀。盒子通常提供最好的可靠性，但缺點是"
"使角色佔用更多對角線空間。膠囊碰撞形狀沒有這個缺點，但它們的形狀會使精確平台"
"變得更加困難。"

msgid "VehicleBody simulation is unstable, especially at high speeds"
msgstr "車身模擬不穩定，尤其是在高速時"

msgid ""
"When a physics body moves at a high speed, it travels a large distance "
"between each physics step. For instance, when using the 1 unit = 1 meter "
"convention in 3D, a vehicle moving at 360 km/h will travel 100 units per "
"second. With the default physics simulation rate of 60 Hz, the vehicle moves "
"by ~1.67 units each physics tick. This means that small objects may be "
"ignored entirely by the vehicle (due to tunneling), but also that the "
"simulation has little data to work with in general at such a high speed."
msgstr ""
"當物理體高速移動時，它在每個物理步驟之間行進很長的距離。例如，當在 3D 中使用 "
"1 單位 = 1 公尺約定時，以 360 公里/小時的速度移動的車輛每秒將行駛 100 單位。"
"在預設物理模擬速率為 60 Hz 的情況下，車輛每個物理刻度移動約 1.67 個單位。這意"
"味著車輛可能會完全忽略小物體（由於隧道效應），而且在如此高的速度下，模擬通常"
"幾乎沒有可用的資料。"

msgid ""
"Fast-moving vehicles can benefit a lot from an increased physics simulation "
"rate. To do so, increase **Physics Ticks Per Second** in the advanced "
"Project Settings. Note that this increases CPU utilization and may not be "
"viable for mobile/web platforms. Multipliers of the default value of ``60`` "
"(such as ``120``, ``180`` or ``240``) should be preferred for a smooth "
"appearance on most displays."
msgstr ""
"快速移動的車輛可以從物理模擬速率的提高中受益匪淺。為此，請在進階專案設定中增"
"加**每秒物理滴答數**。請注意，這會增加 CPU 使用率，並且可能不適用於行動/網路"
"平台。為了在大多數顯示器上獲得平滑的外觀，應首選預設值「60」（例如「120」、"
"「180」或「240」）的乘數。"

msgid "Collision results in bumps when an object moves across tiles"
msgstr "當物體在瓷磚上移動時，碰撞會導致碰撞"

msgid ""
"This is a known issue in the physics engine caused by the object bumping on "
"a shape's edges, even though that edge is covered by another shape. This can "
"occur in both 2D and 3D."
msgstr ""
"這是物理引擎中的已知問題，由物件在形狀邊緣碰撞而引起，即使該邊緣被另一個形狀"
"覆蓋。這在 2D 和 3D 中都可能發生。"

msgid ""
"The best way to work around this issue is to create a \"composite\" "
"collider. This means that instead of individual tiles having their "
"collision, you create a single collision shape representing the collision "
"for a group of tiles. Typically, you should split composite colliders on a "
"per-island basis (which means each group of touching tiles gets its own "
"collider)."
msgstr ""
"解決這個問題的最佳方法是建立一個“複合”碰撞器。這表示您可以建立一個表示一組圖"
"塊碰撞的單一碰撞形狀，而不是單一圖塊發生碰撞。通常，您應該在每個島嶼的基礎上"
"拆分複合碰撞器（這意味著每組接觸的圖塊都有自己的碰撞器）。"

msgid ""
"Using a composite collider can also improve physics simulation performance "
"in certain cases. However, since the composite collision shape is much more "
"complex, this may not be a net performance win in all cases."
msgstr ""
"在某些情況下，使用複合對撞機還可以提高物理模擬性能。然而，由於複合碰撞形狀要"
"複雜得多，因此這可能並非在所有情況下都能帶來淨性能優勢。"

msgid "Framerate drops when an object touches another object"
msgstr "當一個物體接觸另一個物體時影格率下降"

msgid ""
"This is likely due to one of the objects using a collision shape that is too "
"complex. Convex collision shapes should use a number of shapes as low as "
"possible for performance reasons. When relying on Godot's automatic "
"generation, it's possible that you ended up with dozens if not hundreds of "
"shapes created for a single convex shape collision resource."
msgstr ""
"這可能是由於其中一個物件使用的碰撞形狀過於複雜。出於性能原因，凸碰撞形狀應使"
"用盡可能少的形狀。當依賴 Godot 的自動產生時，您最終可能會為單一凸形碰撞資源建"
"立數十個甚至數百個形狀。"

msgid ""
"In some cases, replacing a convex collider with a couple of primitive "
"collision shapes (box, sphere, or capsule) can deliver better performance."
msgstr ""
"在某些情況下，用幾個原始碰撞形狀（盒子、球體或膠囊）替換凸碰撞體可以提供更好"
"的性能。"

msgid ""
"This issue can also occur with StaticBodies that use very detailed trimesh "
"(concave) collisions. In this case, use a simplified representation of the "
"level geometry as a collider. Not only this will improve physics simulation "
"performance significantly, but this can also improve stability by letting "
"you remove small fixtures and crevices from being considered by collision."
msgstr ""
"使用非常詳細的修剪網格（凹面）碰撞的靜態物體也會出現此問題。在這種情況下，使"
"用關卡幾何體的簡化表示法作為碰撞器。這不僅會顯著提高物理模擬性能，而且還可以"
"透過讓您從碰撞考慮中刪除小型固定裝置和裂縫來提高穩定性。"

msgid "Physics simulation is unreliable when far away from the world origin"
msgstr "遠離世界原點時實體模擬不可靠"

msgid ""
"This is caused by floating-point precision errors, which become more "
"pronounced as the physics simulation occurs further away from the world "
"origin. This issue also affects rendering, which results in wobbly camera "
"movement when far away from the world origin. See :ref:"
"`doc_large_world_coordinates` for more information."
msgstr ""
"這是由浮點精度誤差引起的，當物理模擬遠離世界原點時，浮點精度誤差變得更加明"
"顯。此問題也會影響算繪，導致遠離世界原點時相機移動不穩定。請參閱:ref:"
"`doc_large_world_座標` 以了解更多資訊。"

msgid "Translation status"
msgstr "翻譯狀態"
