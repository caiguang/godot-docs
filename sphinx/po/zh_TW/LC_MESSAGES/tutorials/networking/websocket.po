# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "WebSocket"
msgstr "WebSocket"

msgid "HTML5 and WebSocket"
msgstr "HTML5 與 WebSocket"

msgid ""
"The WebSocket protocol was standardized in 2011 with the original goal of "
"allowing browsers to create stable and bidirectional connections with a "
"server. Before that, browsers used to only support HTTPRequests, which is "
"not well-suited for bidirectional communication."
msgstr ""
"WebSocket協定在2011年被標準化, 最初的目標是讓瀏覽器與伺服器建立穩定的雙向連"
"接. 在此之前, 瀏覽器曾只支援HTTPRequests, 並不適合雙向通信."

msgid ""
"The protocol is message based and a very powerful tool to send push "
"notifications to browsers, and has been used to implement chats, turn-based "
"games, etc. It still uses a TCP connection, which is good for reliability "
"but not for latency, so not good for real-time applications like VoIP and "
"fast-paced games (see :ref:`WebRTC <doc_webrtc>` for those use cases)."
msgstr ""
"這個協定相當簡單, 基於消息, 是一個非常強大的向瀏覽器推送通知的工具, 已經被用"
"來實作聊天, 回合制遊戲等. 它仍使用TCP連接, 這對可靠性有好處, 但對延遲沒有好"
"處, 所以不適合即時的應用, 比如VoIP和快節奏的遊戲(這些用例見 :ref:`WebRTC "
"<doc_webrtc>`)."

msgid ""
"Due to its simplicity, its wide compatibility, and being easier to use than "
"a raw TCP connection, WebSocket soon started to spread outside the browsers, "
"in native applications as a mean to communicate with network servers."
msgstr ""
"由於它的簡單性, 廣泛的相容性以及比原始TCP連接更容易使用,WebSocket很快就開始在"
"瀏覽器以外的地方應用, 在本地應用程式中作為與網路伺服器通信的一種手段."

msgid "Godot supports WebSocket in both native and HTML5 exports."
msgstr "Godot在本機和HTML5匯出中都支援WebSocket."

msgid "Using WebSocket in Godot"
msgstr "在 Godot 中使用 WebSocket"

msgid ""
"WebSocket is implemented in Godot via :ref:`WebSocketPeer "
"<class_WebSocketPeer>`. The WebSocket implementation is compatible with the "
"High Level Multiplayer. See section on :ref:`high-level multiplayer "
"<doc_high_level_multiplayer>` for more details."
msgstr ""
"在Godot中,WebSocket通過三個主要類來實作 :ref:`WebSocketClient "
"<class_WebSocketClient>`, :ref:`WebSocketServer <class_WebSocketServer>`, "
"和 :ref:`WebSocketPeer <class_WebSocketPeer>`.WebSocket的實作與高級多人遊戲相"
"容. 更多細節請參見 :ref:`high-level multiplayer "
"<doc_high_level_multiplayer>` 一節."

msgid ""
"When exporting to Android, make sure to enable the ``INTERNET`` permission "
"in the Android export preset before exporting the project or using one-click "
"deploy. Otherwise, network communication of any kind will be blocked by "
"Android."
msgstr ""
"當匯出到 Android 時，在匯出專案或使用一鍵部署之前，確保在 Android 匯出預設中"
"啟用 ``INTERNET`` 許可權。否則，任何形式的網路通信都會被 Android 系統阻止。"

msgid "Minimal client example"
msgstr "最小使用者端範例"

msgid ""
"This example will show you how to create a WebSocket connection to a remote "
"server, and how to send and receive data."
msgstr ""
"本範例將向您展示如何建立與遠端伺服器的 WebSocket 連接, 以及如何發送和接收資"
"料."

msgid "This will print:"
msgstr "這將列印:"

msgid "Minimal server example"
msgstr "最小伺服器範例"

msgid ""
"This example will show you how to create a WebSocket server that listens for "
"remote connections, and how to send and receive data."
msgstr ""
"這個例子將告訴你如何建立一個監聽遠端連接的WebSocket伺服器，以及如何發送和接收"
"資料。"

msgid "This will print (when a client connects) something similar to this:"
msgstr "這將列印(當使用者端連接時)與此類似的東西:"

msgid "Advanced chat demo"
msgstr "高級聊天演示"

msgid ""
"A more advanced chat demo which optionally uses the multiplayer mid-level "
"abstraction and a high level multiplayer demo are available in the `godot "
"demo projects <https://github.com/godotengine/godot-demo-projects>`_ under "
"`networking/websocket_chat` and `networking/websocket_multiplayer`."
msgstr ""
"在 `godot demo projects <https://github.com/godotengine/godot-demo-"
"projects>`_ 下 `networking/websocket_chat` 和 `networking/"
"websocket_multiplayer` 有一個更高級的聊天演示demo, 可以選擇使用多人中級抽象和"
"高級多人演示demo."

msgid "Translation status"
msgstr "翻譯狀態"
