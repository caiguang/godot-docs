# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D meshes"
msgstr "2D 網格"

msgid "Introduction"
msgstr "前言"

msgid ""
"In 3D, meshes are used to display the world. In 2D, they are rare as images "
"are used more often. Godot's 2D engine is a pure two-dimensional engine, so "
"it can't really display 3D meshes directly (although it can be done via "
"``Viewport`` and ``ViewportTexture``)."
msgstr ""
"在 3D 中，網格用於顯示世界。在 2D 中它們不常見，因為圖片使用得更頻繁。Godot "
"的 2D 部分是一個純 2D 引擎，因此它不能直接顯示 3D 網格（儘管它可以通過 "
"``Viewport`` 和 ``ViewportTexture`` 來實作）。"

msgid ""
"If you are interested in displaying 3D meshes on a 2D viewport, see the :ref:"
"`doc_viewport_as_texture` tutorial."
msgstr ""
"如果你對在二維視口上顯示三維網格感興趣, 請參見 :ref:"
"`doc_viewport_as_texture` 教學."

msgid ""
"2D meshes are meshes that contain two-dimensional geometry (Z can be omitted "
"or ignored) instead of 3D. You can experiment creating them yourself using "
"``SurfaceTool`` from code and displaying them in a ``MeshInstance2D`` node."
msgstr ""
"2D 網格是包含二維幾何（Z 軸可以省略或忽略）而不是三維幾何的網格。你可以嘗試使"
"用程式碼中的 ``SurfaceTool`` 建立它們，並在 ``MeshInstance2D`` 節點中顯示它"
"們。"

msgid ""
"Currently, the only way to generate a 2D mesh within the editor is by either "
"importing an OBJ file as a mesh, or converting it from a Sprite2D."
msgstr ""
"目前, 在編輯器中生成二維網格的唯一方法, 是匯入一個OBJ檔作為網格, 或者從Sprite"
"轉換而來."

msgid "Optimizing pixels drawn"
msgstr "優化繪製的像素"

msgid ""
"This workflow is useful for optimizing 2D drawing in some situations. When "
"drawing large images with transparency, Godot will draw the whole quad to "
"the screen. The large transparent areas will still be drawn."
msgstr ""
"在某些情況下, 這個工作流程對於優化二維繪圖比較有用. 當繪製具有透明度的大型圖"
"像時,Godot將把整個四方形(quad)繪製到螢幕上. 大片的透明區域還是會被繪製."

msgid ""
"This can affect performance, especially on mobile devices, when drawing very "
"large images (generally screen sized), or layering multiple images on top of "
"each other with large transparent areas (for example, when using "
"``ParallaxBackground``)."
msgstr ""
"如果繪製非常大的圖像時（大概螢幕大小），或者將多個有大透明區域的圖像疊加在一"
"起（例如使用 ``ParallaxBackground`` 時），這會影響性能，尤其是在移動裝置上。"

msgid ""
"Converting to a mesh will ensure that only the opaque parts will be drawn "
"and the rest will be ignored."
msgstr "轉換成網格能確保只繪製不透明部分, 其餘部分被忽略."

msgid "Converting Sprite2Ds to 2D meshes"
msgstr "建立 Godot 伺服器"

msgid ""
"You can take advantage of this optimization by converting a ``Sprite2D`` to "
"a ``MeshInstance2D``. Start with an image that contains large amounts of "
"transparency on the edges, like this tree:"
msgstr ""
"你可以通過把 ``Sprite2D`` 轉換為 ``MeshInstance2D`` 的方法來利用這種優化。從"
"邊緣有大量透明的圖片開始，就像這棵樹："

msgid ""
"Put it in a ``Sprite2D`` and select \"Convert to 2D Mesh\" from the menu:"
msgstr "把它放到一個 ``Sprite2D`` 中，從功能表選擇“轉換為 2D 網格”："

msgid ""
"A dialog will appear, showing a preview of how the 2D mesh will be created:"
msgstr "會出現一個對話方塊, 顯示將要建立的二維網格預覽:"

msgid ""
"The default values are good enough for many cases, but you can change growth "
"and simplification according to your needs:"
msgstr ""
"很多情況下, 預設值已經足夠好, 但是你可以根據需要改變growth(增長)和"
"simplication(簡化):"

msgid ""
"Finally, push the ``Convert 2D Mesh`` button and your Sprite2D will be "
"replaced:"
msgstr "最後，按下 ``轉換 2D 網格`` 按鈕，你的 Sprite2D 將被替換："

msgid "Translation status"
msgstr "翻譯狀態"
