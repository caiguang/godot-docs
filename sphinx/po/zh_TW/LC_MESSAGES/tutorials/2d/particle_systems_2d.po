# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D particle systems"
msgstr "粒子"

msgid "Intro"
msgstr "簡介"

msgid ""
"Particle systems are used to simulate complex physical effects, such as "
"sparks, fire, magic particles, smoke, mist, etc."
msgstr ""
"Godot提供了一種簡單(但對於大多數用途而言足夠靈活)的粒子系統. 粒子系統用於類比"
"複雜的物理效應, 如火花, 火焰, 魔法粒子, 煙霧, 霧氣, 等."

msgid ""
"The idea is that a \"particle\" is emitted at a fixed interval and with a "
"fixed lifetime. During its lifetime, every particle will have the same base "
"behavior. What makes each particle different from the rest and provides a "
"more organic look is the \"randomness\" associated with each parameter. In "
"essence, creating a particle system means setting base physics parameters "
"and then adding randomness to them."
msgstr ""
"這個想法是以固定的間隔發射具有固定的壽命的 \"粒子\". 在其生命週期中, 每個粒子"
"都具有相同的基本行為. 讓每個粒子變得不同並提供整體更加 \"有機\" 外觀的是與各"
"個參數相關的 \"隨機性\". 實質上, 建立粒子系統意味著設定基本物理參數, 然後為它"
"們新增隨機性."

msgid "Particle nodes"
msgstr "粒子"

msgid ""
"Godot provides two different nodes for 2D particles, :ref:"
"`class_GPUParticles2D` and :ref:`class_CPUParticles2D`. GPUParticles2D is "
"more advanced and uses the GPU to process particle effects. CPUParticles2D "
"is a CPU-driven option with near-feature parity with GPUParticles2D, but "
"lower performance when using large amounts of particles. On the other hand, "
"CPUParticles2D may perform better on low-end systems or in GPU-bottlenecked "
"situations."
msgstr ""
"Godot 為 2D 粒子提供了兩個不同的節點：:ref:`class_Particles2D` 和 :ref:"
"`class_CPUParticles2D`。Particles2D 更為先進，使用 GPU 處理粒子效果，但這將其"
"限制於相對高端的圖形 API 中，在我們的情況下僅限於 GLES3 算繪器。對於使用 "
"GLES2 後端的專案，CPUParticles2D 是一個 CPU 驅動的選項。其功能與 Particles2D "
"接近，但性能較低。Particles2D 是通過 :ref:`class_ParticlesMaterial`（以及可選"
"的自訂 Shader）來配置的，但相應的選項在 CPUParticles2D 中是通過節點屬性提供的"
"（軌跡設定除外）。您可以通過按一下場景中的節點，然後在工具列的“粒子”功能表中"
"選擇“轉換為 CPU 粒子”，將 Particles2D 節點轉換為 CPUParticles2D 節點。"

msgid ""
"While GPUParticles2D is configured via a :ref:"
"`class_ParticleProcessMaterial` (and optionally with a custom shader), the "
"matching options are provided via node properties in CPUParticles2D (with "
"the exception of the trail settings)."
msgstr ""
"雖然 GPUParticles2D 是通過 :ref:`class_ParticleProcessMaterial`（還可以使用自"
"訂著色器）進行配置的，不過配對的選項是通過 CPUParticles2D 中的節點屬性提供的"
"（除了軌跡設定）。"

#, fuzzy
msgid ""
"You can convert a GPUParticles2D node into a CPUParticles2D node by clicking "
"on the node in the inspector, selecting the 2D viewport, and selecting "
"**GPUParticles2D > Convert to CPUParticles2D** in the viewport toolbar."
msgstr ""
"你可以通過在檢視器中點擊節點，將 GPUParticles2D 節點轉換為 CPUParticles2D 節"
"點，然後在3D編輯器視口頂部的工具列中選擇**粒子 > 轉換為CPUParticles2D**，將 "
"GPUParticles2D 節點轉換為 CPUParticles2D 節點。"

msgid ""
"The rest of this tutorial is going to use the GPUParticles2D node. First, "
"add a GPUParticles2D node to your scene. After creating that node you will "
"notice that only a white dot was created, and that there is a warning icon "
"next to your GPUParticles2D node in the scene dock. This is because the node "
"needs a ParticleProcessMaterial to function."
msgstr ""
"這個教學後續將使用 Particles2D 節點。首先，新增一個 Particles2D 節點到場景"
"中。在建立該節點後，您會注意到只建立了一個白點，並且在場景面板的 Particles2D "
"節點旁邊有一個警告圖示。這是因為節點需要 ParticlesMaterial 才能工作。"

msgid "ParticleProcessMaterial"
msgstr "ParticleProcessMaterial"

msgid ""
"To add a process material to your particles node, go to ``Process Material`` "
"in your inspector panel. Click on the box next to ``Material``, and from the "
"dropdown menu select ``New ParticleProcessMaterial``."
msgstr ""
"要將運作材質新增到粒子節點，請轉到屬性面板面板中的 ``Process Material``。按一"
"下 ``Material`` 旁邊的框，然後從下拉式功能表中選擇 ``新建 "
"ParticlesMaterial``。"

msgid "Your GPUParticles2D node should now be emitting white points downward."
msgstr "您的 Particles2D 節點現在應該可以向下發射白點了。"

msgid "Texture"
msgstr "紋理貼圖"

msgid ""
"A particle system can use a single texture or an animation *flipbook*. A "
"flipbook is a texture that contains several frames of animation that can be "
"played back, or chosen at random during emission. This is equivalent to a "
"spritesheet for particles."
msgstr ""

msgid "The texture is set via the **Texture** property:"
msgstr ""

#, fuzzy
msgid "Using an animation flipbook"
msgstr "動畫樹"

msgid ""
"Particle flipbooks are suited to reproduce complex effects such as smoke, "
"fire, explosions. They can also be used to introduce random texture "
"variation, by making every particle use a different texture. You can find "
"existing particle flipbook images online, or pre-render them using external "
"tools such as `Blender <https://www.blender.org/>`__ or `EmberGen <https://"
"jangafx.com/software/embergen/>`__."
msgstr ""

msgid "Example of a particle system that uses a flipbook texture"
msgstr ""

msgid ""
"Using an animation flipbook requires additional configuration compared to a "
"single texture. For demonstration purposes, we'll use this texture with 5 "
"columns and 7 rows (right-click and choose **Save as…**):"
msgstr ""

#, fuzzy
msgid "Particle flipbook texture example"
msgstr "另一個範例："

msgid ""
"Credit: `JoesAlotofthings <https://opengameart.org/content/alot-of-particles-"
"indispersal-special-effect-alotofparticles30>`__ (CC BY 4.0)"
msgstr ""

msgid ""
"To use an animation flipbook, you must create a new CanvasItemMaterial in "
"the Material section of the GPUParticles2D (or CPUParticles2D) node:"
msgstr ""

msgid ""
"Creating a CanvasItemMaterial at the bottom of the particles node inspector"
msgstr ""

msgid ""
"In this CanvasItemMaterial, enable **Particle Animation** and set **H "
"Frames** and **V Frames** to the number of columns and rows present in your "
"flipbook texture:"
msgstr ""

msgid "Configuring the CanvasItemMaterial for the example flipbook texture"
msgstr ""

msgid ""
"Once this is done, the :ref:`Animation section "
"<doc_particle_systems_2d_animation>` in ParticleProcessMaterial (for "
"GPUParticles2D) or in the CPUParticles2D inspector will be effective."
msgstr ""

msgid ""
"If your flipbook texture has a black background instead of a transparent "
"background, you will also need to set the blend mode to **Add** instead of "
"**Mix** for correct display. Alternatively, you can modify the texture to "
"have a transparent background in an image editor. In `GIMP <https://gimp."
"org>`__, this can be done using the **Color > Color to Alpha** menu."
msgstr ""

msgid "Time parameters"
msgstr "Time (時間)參數"

msgid "Lifetime"
msgstr "生命期"

msgid ""
"The time in seconds that every particle will stay alive. When lifetime ends, "
"a new particle is created to replace it."
msgstr ""
"每個粒子存活的時間(以秒為單位). 生命週期結束時, 會建立一個新粒子來替換它."

msgid "Lifetime: 0.5"
msgstr "壽命:0.5"

msgid "Lifetime: 4.0"
msgstr "壽命:4.0"

msgid "One Shot"
msgstr "一次性"

msgid ""
"When enabled, a GPUParticles2D node will emit all of its particles once and "
"then never again."
msgstr "啟用後,Particles2D節點將一次性發出所有粒子, 然後再也不發射."

msgid "Preprocess"
msgstr "預處理"

msgid ""
"Particle systems begin with zero particles emitted, then start emitting. "
"This can be an inconvenience when loading a scene and systems like a torch, "
"mist, etc. begin emitting the moment you enter. Preprocess is used to let "
"the system process a given number of seconds before it is actually drawn the "
"first time."
msgstr ""
"粒子系統從沒有粒子被發射開始, 然後開始發射. 當載入場景如火炬, 霧等系統時可能"
"會帶來不便, 因為它會在進入場景的那一刻開始發射. 預處理用於讓系統在第一次實際"
"繪製之前處理給定的秒數."

msgid "Speed Scale"
msgstr "速度縮放"

msgid ""
"The speed scale has a default value of ``1`` and is used to adjust the speed "
"of a particle system. Lowering the value will make the particles slower "
"while increasing the value will make the particles much faster."
msgstr ""
"速度比例具有預設值 ``1`` , 用於調整粒子系統的速度. 降低值會使粒子變慢, 而增加"
"值會使粒子更快."

msgid "Explosiveness"
msgstr "爆炸性"

msgid ""
"If lifetime is ``1`` and there are 10 particles, it means a particle will be "
"emitted every 0.1 seconds. The explosiveness parameter changes this, and "
"forces particles to be emitted all together. Ranges are:"
msgstr ""
"如果有10個壽命為 ``1`` 的粒子, 則意味著粒子將每0.1秒發射一次. 爆炸性參數改變"
"了這一點, 並迫使粒子一起發射. 範圍是:"

msgid "0: Emit particles at regular intervals (default value)."
msgstr "0: 定期發射粒子(預設值)."

msgid "1: Emit all particles simultaneously."
msgstr "1: 同時發射所有粒子."

msgid ""
"Values in the middle are also allowed. This feature is useful for creating "
"explosions or sudden bursts of particles:"
msgstr "中間的值也是允許的. 此功能對於建立爆炸或突然爆發的粒子非常有用:"

msgid "Randomness"
msgstr "隨機性"

msgid ""
"All physics parameters can be randomized. Random values range from ``0`` to "
"``1``. The formula to randomize a parameter is:"
msgstr ""
"所有物理參數都可以隨機化. 隨機值範圍從 ``0`` 到 ``1`` . 隨機化參數的公式為:"

msgid "Fixed FPS"
msgstr "固定 FPS"

msgid ""
"This setting can be used to set the particle system to render at a fixed "
"FPS. For instance, changing the value to ``2`` will make the particles "
"render at 2 frames per second. Note this does not slow down the particle "
"system itself."
msgstr ""
"此設定可用於將粒子系統設定為以固定的影格率算繪. 例如, 將值更改為 ``2`` 將使粒"
"子以每秒2影格的速度算繪. 請注意, 這不會減慢粒子系統本身的速度."

msgid "Fract Delta"
msgstr "分數差異量"

msgid "This can be used to turn Fract Delta on or off."
msgstr "這可用於打開或關閉Fract Delta."

msgid "Drawing parameters"
msgstr "Drawing parameters (繪圖參數)"

msgid "Visibility Rect"
msgstr "可見矩形"

msgid ""
"The visibility rectangle controls the visibility of the particles on screen. "
"If this rectangle is outside of the viewport, the engine will not render the "
"particles on screen."
msgstr ""
"可見性矩形控制粒子在螢幕上的可見性. 如果此矩形位於視口之外, 則引擎將不會在螢"
"幕上算繪粒子."

msgid ""
"The rectangle's ``W`` and ``H`` properties respectively control its Width "
"and its Height. The ``X`` and ``Y`` properties control the position of the "
"upper-left corner of the rectangle, relative to the particle emitter."
msgstr ""
"矩形的 ``W`` 和 ``H`` 屬性分別控制其寬度和高度. ``X`` 和 ``Y`` 屬性控制矩形左"
"上角相對於粒子發射器的位置."

msgid ""
"You can have Godot generate a Visibility Rect automatically using the "
"toolbar above the 2d view. To do so, select the GPUParticles2D node and "
"Click ``Particles > Generate Visibility Rect``. Godot will simulate the "
"Particles2D node emitting particles for a few seconds and set the rectangle "
"to fit the surface the particles take."
msgstr ""
"可以使用2D視圖上方的工具列自動生成可見性區域. 為此, 請選擇Particles2D節點, 然"
"後按一下 ``粒子 > 生成視覺化區域`` . Godot將模擬Particles2D節點發射粒子幾秒"
"鐘, 並將矩形區域設定為適合粒子的大小."

msgid ""
"You can control the emit duration with the ``Generation Time (sec)`` option. "
"The maximum value is 25 seconds. If you need more time for your particles to "
"move around, you can temporarily change the ``preprocess`` duration on the "
"Particles2D node."
msgstr ""
"你可以使用 ``Generation Time (sec)`` 選項控制發射持續時間. 最大值為25秒. 如果"
"您需要更多時間讓粒子移動, 您可以暫時更改Particles2D節點上的 ``preprocess`` 時"
"間."

msgid "Local Coords"
msgstr "本地座標"

msgid ""
"By default this option is on, and it means that the space that particles are "
"emitted to is relative to the node. If the node is moved, all particles are "
"moved with it:"
msgstr ""
"預設情況下, 此選項處於啟用狀態, 這意味著粒子發射的空間是相對於節點來算的. 如"
"果移動節點, 則所有粒子會隨之移動:"

msgid ""
"If disabled, particles will emit to global space, meaning that if the node "
"is moved, already emitted particles are not affected:"
msgstr ""
"如果禁用, 粒子將發射到全域空間, 這意味著如果移動節點, 則已發射的粒子不會受到"
"影響:"

msgid "Draw Order"
msgstr "繪製順序"

msgid ""
"This controls the order in which individual particles are drawn. ``Index`` "
"means particles are drawn according to their emission order (default). "
"``Lifetime`` means they are drawn in order of remaining lifetime."
msgstr ""
"這可以控制繪製單個粒子的順序. ``Index`` 表示粒子根據它們的發射順序被繪製(預"
"設). ``Lifetime`` 表示它們按照剩餘壽命的順序被繪製."

msgid "ParticleProcessMaterial settings"
msgstr "ParticleProcessMaterial 設定"

msgid "Direction"
msgstr "方向"

msgid ""
"This is the base direction at which particles emit. The default is "
"``Vector3(1, 0, 0)`` which makes particles emit to the right. However, with "
"the default gravity settings, particles will go straight down."
msgstr ""
"這是粒子發射的基礎方向. 預設值是 ``Vector3(1,0,0)`` , 它使粒子向右發射. 然"
"而, 在預設的重力設定下, 粒子會直線下降."

msgid ""
"For this property to be noticeable, you need an *initial velocity* greater "
"than 0. Here, we set the initial velocity to 40. You'll notice that "
"particles emit toward the right, then go down because of gravity."
msgstr ""
"為了讓這個屬性作用更明顯, 你需要一個大於0的 *初始速度(initial velocity)* . 這"
"裡, 我們把初始速度設為40. 你會注意到粒子向右發射, 然後受重力作用下降."

msgid "Spread"
msgstr "發散"

msgid ""
"This parameter is the angle in degrees which will be randomly added in "
"either direction to the base ``Direction``. A spread of ``180`` will emit in "
"all directions (+/- 180). For spread to do anything the \"Initial Velocity\" "
"parameter must be greater than 0."
msgstr ""
"此參數是以度為單位的角度, 它會被隨機加減到基礎 ``Direction`` 上. ``180`` 的鋪"
"開角度將向所有方向發射(+/- 180)."

msgid "Flatness"
msgstr "扁平度"

msgid "This property is only useful for 3D particles."
msgstr "這個屬性只對3D粒子有用."

msgid "Gravity"
msgstr "重力"

msgid "The gravity applied to every particle."
msgstr "應用於每個粒子上的重力."

msgid "Initial Velocity"
msgstr "初速度"

msgid ""
"Initial velocity is the speed at which particles will be emitted (in pixels/"
"sec). Speed might later be modified by gravity or other accelerations (as "
"described further below)."
msgstr ""
"初始速度是粒子發射的速度（單位為像素/秒）。以後可以通過重力或其他加速度來修改"
"速度（後述）。"

msgid "Angular Velocity"
msgstr "角速度"

msgid "Angular velocity is the initial angular velocity applied to particles."
msgstr "角速度是應用於粒子的初始角速度."

msgid "Spin Velocity"
msgstr "Spin Velocity(旋轉速度)"

msgid ""
"Spin velocity is the speed at which particles turn around their center (in "
"degrees/sec)."
msgstr "旋轉速度是粒子圍繞其中心轉動的速度(以度/秒為單位)."

msgid "Orbit Velocity"
msgstr "環繞速度"

msgid "Orbit velocity is used to make particles turn around their center."
msgstr "環繞速度速度用於使粒子繞它們的中心轉動."

msgid "Linear Acceleration"
msgstr "Linear Acceleration(線性加速度)"

msgid "The linear acceleration applied to each particle."
msgstr "應用於每個粒子的線性加速度."

msgid "Radial Acceleration"
msgstr "Radial Acceleration(徑向加速度)"

msgid ""
"If this acceleration is positive, particles are accelerated away from the "
"center. If negative, they are absorbed towards it."
msgstr ""
"如果此加速度為正, 則粒子會向遠離發射中心加速. 如果是負的, 他們會被加速吸進去."

msgid "Tangential Acceleration"
msgstr "Tangential Acceleration(切向加速度)"

msgid ""
"This acceleration will use the tangent vector to the center. Combining with "
"radial acceleration can do nice effects."
msgstr ""
"該加速度會使用從粒子到中心點的切向量, 結合徑向加速度可以做出很酷炫的效果."

msgid "Damping"
msgstr "阻尼"

msgid ""
"Damping applies friction to the particles, forcing them to stop. It is "
"especially useful for sparks or explosions, which usually begin with a high "
"linear velocity and then stop as they fade."
msgstr ""
"阻尼選項會對顆粒施加摩擦力, 迫使它們停止. 它特別適用於火花或爆炸, 火花或爆炸"
"通常以高線速度開始, 然後在他們隱去時停下來."

msgid "Angle"
msgstr "角度"

msgid ""
"Determines the initial angle of the particle (in degrees). This parameter is "
"mostly useful randomized."
msgstr "確定粒子的初始角度(以度為單位). 該參數通常在隨機化後會有用."

msgid "Scale"
msgstr "縮放"

msgid "Determines the initial scale of the particles."
msgstr "確定粒子的初始大小."

msgid "Color"
msgstr "顏色"

msgid "Used to change the color of the particles being emitted."
msgstr "用於改變發射出來的粒子顏色."

#, fuzzy
msgid "Hue Variation"
msgstr "Hue Variation(色調變化)"

msgid ""
"The ``Variation`` value sets the initial hue variation applied to each "
"particle. The ``Variation Random`` value controls the hue variation "
"randomness ratio."
msgstr ""
"``Variation`` 值設定的是應用於每個粒子的初始色調變化. ``Variation Rand`` 值控"
"制色調變化的隨機性比率."

msgid "Animation"
msgstr "動畫"

msgid ""
"Particle flipbook animation is only effective if the CanvasItemMaterial used "
"on the GPUParticles2D or CPUParticles2D node has been :ref:`configured "
"accordingly <doc_particle_systems_2d_using_flipbook>`."
msgstr ""

msgid ""
"To set up the particle flipbook for linear playback, set the **Speed Min** "
"and **Speed Max** values to 1:"
msgstr ""

msgid ""
"Setting up particle animation for playback during the particle's lifetime"
msgstr ""

msgid ""
"By default, looping is disabled. If the particle is done playing before its "
"lifetime ends, the particle will keep using the flipbook's last frame (which "
"may be fully transparent depending on how the flipbook texture is designed). "
"If looping is enabled, the animation will loop back to the first frame and "
"resume playing."
msgstr ""

msgid ""
"Depending on how many images your sprite sheet contains and for how long "
"your particle is alive, the animation might not look smooth. The "
"relationship between particle lifetime, animation speed, and number of "
"images in the sprite sheet is this:"
msgstr ""

msgid ""
"At an animation speed of ``1.0``, the animation will reach the last image in "
"the sequence just as the particle's lifetime ends."
msgstr ""

msgid ""
"Animation\\ FPS = \\frac{Number\\ of\\ images}{Lifetime}\n"
"\n"
msgstr ""

msgid ""
"If you wish the particle flipbook to be used as a source of random particle "
"textures for every particle, keep the speed values at 0 and set **Offset "
"Max** to 1 instead:"
msgstr ""

msgid "Setting up particle animation for random offset on emission"
msgstr ""

msgid ""
"Note that the GPUParticles2D node's **Fixed FPS** also affects animation "
"playback. For smooth animation playback, it's recommended to set it to 0 so "
"that the particle is simulated on every rendered frame. If this is not an "
"option for your use case, set **Fixed FPS** to be equal to the effective "
"framerate used by the flipbook animation (see above for the formula)."
msgstr ""

msgid "Emission Shapes"
msgstr "碰撞區域的顯示"

msgid ""
"ParticleProcessMaterials allow you to set an Emission Mask, which dictates "
"the area and direction in which particles are emitted. These can be "
"generated from textures in your project."
msgstr ""
"ParticlesMaterial 可以讓你設定一個發射遮擋(Emission Mask), 它決定了粒子發射的"
"區域和方向. 這些可以用專案中的紋理來生成."

msgid ""
"Ensure that a ParticleProcessMaterial is set, and the GPUParticles2D node is "
"selected. A \"Particles\" menu should appear in the Toolbar:"
msgstr ""
"確保設定了ParticlesMaterial, 選中Particles2D節點. 工具列中應顯示 "
"\"Particles(粒子)\" 功能表:"

msgid "Open it and select \"Load Emission Mask\":"
msgstr "打開它, 選擇\"載入 Emission Mask(發射遮擋)\":"

msgid "Then select which texture you want to use as your mask:"
msgstr "然後選擇你想要用作遮擋的紋理:"

msgid "A dialog box with several settings will appear."
msgstr "會出現一個具有多個設定的對話方塊."

msgid "Emission Mask"
msgstr "發射遮罩"

msgid "Three types of emission masks can be generated from a texture:"
msgstr "紋理可以生成三種型別的發射遮擋:"

msgid ""
"Solid Pixels: Particles will spawn from any area of the texture, excluding "
"transparent areas."
msgstr "Solid Pixels(實心像素): 粒子將從紋理的任何區域產生, 透明區域除外."

msgid ""
"Border Pixels: Particles will spawn from the outer edges of the texture."
msgstr "Border Pixels(邊界像素): 粒子將從紋理的外邊緣產生."

msgid ""
"Directed Border Pixels: Similar to Border Pixels, but adds extra information "
"to the mask to give particles the ability to emit away from the borders. "
"Note that an ``Initial Velocity`` will need to be set in order to utilize "
"this."
msgstr ""
"Directed Border Pixels(定向邊界像素): 類似於邊界像素, 在遮罩中新增額外的資"
"訊, 使粒子能夠從邊緣發射出去. 請注意, 想要使用它, 需要設定一個 ``初始速度``."

msgid "Emission Colors"
msgstr "發射色彩"

msgid ""
"``Capture from Pixel`` will cause the particles to inherit the color of the "
"mask at their spawn points."
msgstr "``Capture from Pixel`` 會使粒子在其產生點處繼承遮擋材質的顏色."

msgid ""
"Once you click \"OK\", the mask will be generated and set to the "
"ParticleProcessMaterial, under the ``Emission Shape`` section:"
msgstr ""
"一旦你點擊 \"確定\", 將生成遮擋並設定為粒子材質. 可以在 ``Emission Shape(發射"
"形狀)`` 部分看到它:"

msgid ""
"All of the values within this section have been automatically generated by "
"the \"Load Emission Mask\" menu, so they should generally be left alone."
msgstr ""
"這個部分所有提到的值, \"載入Emission Mask(發射遮擋)\"功能表都會自動生成, 所以"
"通常他們放著不管就可以了."

msgid ""
"An image should not be added to ``Point Texture`` or ``Color Texture`` "
"directly. The \"Load Emission Mask\" menu should always be used instead."
msgstr ""
"不應該直接新增圖像到 ``Point Texture`` 或 ``Color Texture`` 中. 應該始終使用"
"\"載入Emisson Mask(發射遮擋)\"功能表."

msgid "Translation status"
msgstr "翻譯狀態"
