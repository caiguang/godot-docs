# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D antialiasing"
msgstr "**抗鋸齒：**"

msgid ""
"Godot also supports antialiasing in 3D rendering. This is covered on the :"
"ref:`doc_3d_antialiasing` page."
msgstr "Godot 同樣支援 3D 抗鋸齒。參看 :ref:`doc_3d_antialiasing` 頁面。"

msgid "Introduction"
msgstr "前言"

msgid ""
"Due to their limited resolution, scenes rendered in 2D can exhibit aliasing "
"artifacts. These artifacts usually manifest in the form of a \"staircase\" "
"effect on geometry edges, and are most noticeable when using nodes such as :"
"ref:`class_Line2D`, :ref:`class_Polygon2D` or :ref:"
"`class_TextureProgressBar`. :ref:`doc_custom_drawing_in_2d` can also have "
"aliasing artifacts for methods that don't support antialiasing."
msgstr ""
"由於其有限的解析度，以2D算繪的場景可能出現鋸齒偽影。這些偽影通常以幾何邊緣上"
"的“樓梯狀”效果的形式呈現，並且在使用節點（如 :ref:`class_Line2D`, :ref:"
"`class_Polygon2D` 或者 :ref:`class_TextureProgressBar`. :ref:"
"`doc_custom_drawing_in_2d`）時最為顯著。對於不支援消除鋸齒的方法，也可能出現"
"鋸齒偽影。"

msgid ""
"In the example below, you can notice how edges have a blocky appearance:"
msgstr "在下面的範例中，你可以看到邊緣呈現出塊狀："

msgid ""
"Image is scaled by 2× with nearest-neighbor filtering to make aliasing more "
"noticeable."
msgstr "圖像縮放 2 倍並進行近鄰濾波，使混疊現象更加明顯。"

msgid ""
"To combat this, Godot supports several methods of enabling antialiasing on "
"2D rendering."
msgstr "為了解決這個問題，Godot 支援多種在 2D 算繪中啟用抗鋸齒的方法。"

msgid "Antialiasing property in Line2D and custom drawing"
msgstr "Line2D 和自訂繪圖中的反鋸齒屬性"

msgid ""
"This is the recommended method, as it has a lower performance impact in most "
"cases."
msgstr "這是推薦的方法，因為在大多數情況下，這種方法對性能的影響較小。"

msgid ""
"Line2D has an **Antialiased** property which you can enable in the "
"inspector. Also, several methods for :ref:`doc_custom_drawing_in_2d` support "
"an optional ``antialiased`` parameter, which can be set to ``true`` when "
"calling the function."
msgstr ""
"Line2D 具有 **Antialiased**（抗鋸齒）屬性，可以在屬性面板中啟用。此外，:ref:"
"`doc_custom_drawing_in_2d` 中的一些方法支援提供可選的 ``antialiased`` 參數，"
"可以在呼叫函式時設定為 ``true``。"

msgid ""
"These methods do not require MSAA to be enabled, which makes their "
"*baseline* performance cost low. In other words, there is no permanent added "
"cost if you're not drawing any antialiased geometry at some point."
msgstr ""
"這些方法不需要啟用MSAA，這使得它們的*基準*性能成本很低。換句話說，如果您在某"
"個階段沒有繪製任何抗鋸齒幾何圖形，則不會產生永久性的額外性能消耗。"

msgid ""
"The downside of these antialiasing methods is that they work by generating "
"additional geometry. If you're generating complex 2D geometry that's updated "
"every frame, this may be a bottleneck. Also, Polygon2D, TextureProgressBar, "
"and several custom drawing methods don't feature an antialiased property. "
"For these nodes, you can use 2D multisample antialiasing instead."
msgstr ""
"這些抗鋸齒方法的缺點是需要生成額外的幾何圖形。如果要生成每影格都需要更新的複"
"雜 2D 幾何圖形，這可能會成為程式的性能瓶頸。此外，Polygon2D、"
"TextureProgressBar 和幾種自訂繪圖方法都不具備抗鋸齒屬性。對於這些節點，可以使"
"用 2D 多取樣抗鋸齒來代替。"

msgid "Multisample antialiasing (MSAA)"
msgstr "多取樣抗鋸齒 (MSAA)。"

msgid ""
"Before enabling MSAA in 2D, it's important to understand what MSAA will "
"operate on. MSAA in 2D follows similar restrictions as in 3D. While it does "
"not introduce any blurriness, its scope of application is limited. The main "
"applications of 2D MSAA are:"
msgstr ""
"在 2D 中啟用 MSAA 之前，必須先瞭解 MSAA 的操作物件。2D 中的 MSAA 遵循與 3D 中"
"類似的限制。雖然它不會帶來任何模糊，但其應用範圍是有限的。2D MSAA 的主要應用"
"包括："

msgid "Geometry edges, such as line and polygon drawing."
msgstr "幾何邊緣，如直線和多邊形繪圖。"

msgid ""
"Sprite edges *only for pixels touching one of the texture's edges*. This "
"works for both linear and nearest-neighbor filtering. Sprite edges created "
"using transparency on the image are not affected by MSAA."
msgstr ""
"精靈邊緣*僅限於與紋理邊緣接觸的像素*。這適用於線性篩選和最近鄰插值篩選。使用"
"圖像透明度建立的精靈邊緣不受MSAA影響。"

msgid ""
"The downside of MSAA is that it only operates on edges. This is because MSAA "
"increases the number of *coverage* samples, but not the number of *color* "
"samples. However, since the number of color samples did not increase, "
"fragment shaders are still run for each pixel only once. As a result, MSAA "
"will **not affect** the following kinds of aliasing in any way:"
msgstr ""
"MSAA 的不足之處在於它只對邊緣進行操作。這是因為 MSAA 增加了*覆蓋取樣*的數量，"
"而不是*顏色*取樣的數量。然而，由於顏色取樣的數量並沒有增加，片段著色器仍然只"
"會為每個像素運作一次。因此，MSAA *不會影響*以下型別的鋸齒："

msgid "Aliasing *within* nearest-neighbor filtered textures (pixel art)."
msgstr "最近鄰篩選紋理中的混疊現象（像素藝術）。"

msgid "Aliasing caused by custom 2D shaders."
msgstr "自訂 2D 著色器造成的鋸齒。"

msgid "Specular aliasing when using Light2D."
msgstr "使用 Light2D 時的鏡面反射鋸齒。"

msgid "Aliasing in font rendering."
msgstr "點算繪的點大小."

msgid ""
"MSAA can be enabled in the Project Settings by changing the value of the "
"**Rendering > Anti Aliasing > Quality > MSAA 2D** setting. It's important to "
"change the value of the **MSAA 2D** setting and not **MSAA 3D**, as these "
"are entirely separate settings."
msgstr ""
"可以通過更改專案設定中**算繪 > 抗鋸齒 > 品質 > MSAA 2D** 的設定值來啟用 "
"MSAA。重要的是要更改 **MSAA 2D** 的設定值，而不是 **MSAA 3D**，因為它們是完全"
"獨立的設定項。"

msgid ""
"Comparison between no antialiasing (left) and various MSAA levels (right). "
"The top-left corner contains a Line2D node, the top-right corner contains 2 "
"TextureProgressBar nodes. The bottom contains 8 pixel art sprites, with 4 of "
"them touching the edges (green background) and 4 of them not touching the "
"edges (Godot logo):"
msgstr ""
"左側為無抗鋸齒，右側為不同級別的多重取樣抗鋸齒MSAA比較。左上角包含一個Line2D"
"節點，右上角包含2個TextureProgressBar進度條節點。底部包含8個精靈，他們中的4個"
"與邊緣接觸（綠色背景），另外4個不與邊緣接觸（Godot旗標）："

msgid "Translation status"
msgstr "翻譯狀態"
