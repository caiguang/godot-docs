# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D movement overview"
msgstr "2D 運動概述"

msgid "Introduction"
msgstr "前言"

msgid ""
"Every beginner has been there: \"How do I move my character?\" Depending on "
"the style of game you're making, you may have special requirements, but in "
"general the movement in most 2D games is based on a small number of designs."
msgstr ""
"每個初學者都曾遇過同樣的情況：「我要怎麼控制我的角色？」根據你想做的遊戲風"
"格，你可能會有特殊的需求。但普遍來說，大部分2D遊戲的操控是以少數幾種設計為基"
"礎的。"

msgid ""
"We'll use :ref:`CharacterBody2D <class_CharacterBody2D>` for these examples, "
"but the principles will apply to other node types (Area2D, RigidBody2D) as "
"well."
msgstr ""
"這裡我們用 :ref:`KinematicBody2D <class_KinematicBody2D>` 當做例子，不過其他"
"型別的節點(Area2D, RigidBody2D) 也適用相同原則。"

msgid "Setup"
msgstr "設定"

msgid ""
"Each example below uses the same scene setup. Start with a "
"``CharacterBody2D`` with two children: ``Sprite2D`` and "
"``CollisionShape2D``. You can use the Godot icon (\"icon.png\") for the "
"Sprite2D's texture or use any other 2D image you have."
msgstr ""
"以下每個範例都使用相同的場景佈置。從帶有 ``Sprite2D`` 和 "
"``CollisionShape2D`` 這兩個子節點的 ``CharacterBody2D`` 開始。你可以將 Godot "
"圖示（“icon.png”）用於 Sprite2D 的紋理，也可以使用你擁有的任何其他 2D 圖像。"

msgid ""
"Open ``Project -> Project Settings`` and select the \"Input Map\" tab. Add "
"the following input actions (see :ref:`InputEvent <doc_inputevent>` for "
"details):"
msgstr ""
"打開``專案 -> 專案設定``並選擇“輸入對應”分頁。新增以下輸入操作（相關詳細資訊"
"請參閱 :ref:`InputEvent <doc_inputevent>`）："

msgid "8-way movement"
msgstr "八向移動"

msgid ""
"In this scenario, you want the user to press the four directional keys (up/"
"left/down/right or W/A/S/D) and move in the selected direction. The name \"8-"
"way movement\" comes from the fact that the player can move diagonally by "
"pressing two keys at the same time."
msgstr ""
"在這種情況下, 您希望使用者按下四個方向鍵(上/左/下/右或W / A / S / D)並沿所選"
"方向移動. \"8向移動\" 意味著遊戲角色可以通過同時按下兩個鍵實作斜向移動."

msgid "Add a script to the character body and add the following code:"
msgstr "點擊 [場景] -> [新增場景]，然後新增下列節點："

msgid ""
"In the ``get_input()`` function, we use :ref:`Input <class_Input>` "
"``get_vector()`` to check for the four key events and sum return a direction "
"vector."
msgstr ""
"在函式 ``get_input()`` 中，我們使用 :ref:`Input <class_Input>` 的 "
"``get_vector()`` 來檢查四個按鍵事件，並返回一個方向向量的累加值。"

msgid ""
"We can then set our velocity by multiplying this direction vector, which has "
"a length of ``1``, by our desired speed."
msgstr "然後，我們可以將長度為 ``1`` 的方向向量乘以所需的速度來設定速度。"

msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`."
msgstr ""
"如果你之前從未接觸過向量數學, 或者需要複習, 你可以在 :ref:`doc_vector_math` "
"看到Godot中向量用法的解釋."

msgid ""
"If the code above does nothing when you press the keys, double-check that "
"you've set up input actions correctly as described in the :ref:"
"`doc_2d_movement_setup` part of this tutorial."
msgstr ""
"如果在你按下鍵時上面的程式碼不起任何作用, 請仔細檢查你是否按照本教學的 :ref:"
"`doc_2d_movement_setup` 部分所描述的正確設定了輸入操作."

msgid "Rotation + movement"
msgstr "旋轉+移動"

msgid ""
"This type of movement is sometimes called \"Asteroids-style\" because it "
"resembles how that classic arcade game worked. Pressing left/right rotates "
"the character, while up/down moves it forward or backward in whatever "
"direction it's facing."
msgstr ""
"這種型別的運動有時被稱為 \"Asteroids式運動\", 因為它類似於經典街機遊戲"
"Asteroids的工作方式. 按左/右旋轉角色, 而按上/下使得角色在面向的方向上向前或向"
"後."

msgid ""
"Here we've added two variables to track our rotation direction and speed. "
"The rotation is applied directly to the body's ``rotation`` property."
msgstr ""
"我們新增了兩個新變數來追蹤旋轉方向和速度. 同樣, 一次按下兩個鍵將相互抵消並導"
"致沒有旋轉. 旋轉直接應用於物體的 ``rotation`` 屬性上."

msgid ""
"To set the velocity, we use the body's ``transform.x`` which is a vector "
"pointing in the body's \"forward\" direction, and multiply that by the speed."
msgstr ""
"要設定速度，我們使用物體的 ``transform.x`` ，這是一個指向物體 “前進” 方向的向"
"量，然後乘以速度。"

msgid "Rotation + movement (mouse)"
msgstr "旋轉+移動（滑鼠）"

msgid ""
"This style of movement is a variation of the previous one. This time, the "
"direction is set by the mouse position instead of the keyboard. The "
"character will always \"look at\" the mouse pointer. The forward/back inputs "
"remain the same, however."
msgstr ""
"這種運動方式是前一種運動方式的變體。這次，方向由滑鼠位置而不是鍵盤設定。角色"
"將始終“看向”滑鼠指標。前進/後退輸入保持不變。"

msgid ""
"Here we're using the :ref:`Node2D <class_Node2D>` ``look_at()`` method to "
"point the player towards the mouse's position. Without this function, you "
"could get the same effect by setting the angle like this:"
msgstr ""
"這裡我們用到 :ref:`Node2D <class_Node2D>` 中的 ``look_at()`` 方法, 使遊戲角色"
"朝向給定的位置. 如果沒有此函式, 為獲得相同的效果, 可能需要像下面這樣設定角度:"

msgid "Click-and-move"
msgstr "點擊並移動"

msgid ""
"This last example uses only the mouse to control the character. Clicking on "
"the screen will cause the player to move to the target location."
msgstr ""
"最後一個範例僅使用滑鼠來控制角色. 按一下螢幕將使遊戲角色移動到目標位置."

msgid ""
"Note the ``distance_to()`` check we make prior to movement. Without this "
"test, the body would \"jitter\" upon reaching the target position, as it "
"moves slightly past the position and tries to move back, only to move too "
"far and repeat."
msgstr ""
"注意我們在移動之前做的 ``distance_to()`` 檢查. 如果沒有這個檢查, 物體在到達目"
"標位置時會 \"抖動\", 因為它稍微移過該位置時就會試圖向後移動, 只是每次移動步長"
"都會有點遠從而導致來回重複移動."

msgid ""
"Uncommenting the ``look_at()`` line will also turn the body to point in its "
"direction of motion if you prefer."
msgstr "如果你喜歡, 取消注釋的 ``rotation`` 程式碼可以使物體轉向其運動方向."

msgid ""
"This technique can also be used as the basis of a \"following\" character. "
"The ``target`` position can be that of any object you want to move to."
msgstr ""
"該技術也可以用到“跟隨”的遊戲角色中。``target`` 目標位置可以是任何你想移動到的"
"物件的位置。"

msgid "Summary"
msgstr "總結"

msgid ""
"You may find these code samples useful as starting points for your own "
"projects. Feel free to use them and experiment with them to see what you can "
"make."
msgstr ""
"你可能覺得這些程式碼範例可以作為你自己的專案的一個有用的出發點. 請隨意使用它"
"們並試驗它們, 看看你能做些什麼."

msgid ""
"You can download this sample project here: `2d_movement_starter.zip <https://"
"github.com/godotengine/godot-docs-project-starters/releases/download/"
"latest-4.x/2d_movement_starter.zip>`_"
msgstr ""
"您可以在此處下載這個範例專案：`2d_movement_starter.zip <https://github.com/"
"godotengine/godot-docs-project-starters/releases/download/latest-4."
"x/2d_movement_starter.zip>`_"

msgid "Translation status"
msgstr "翻譯狀態"
