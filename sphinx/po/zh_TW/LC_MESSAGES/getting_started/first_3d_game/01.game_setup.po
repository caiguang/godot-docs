# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Setting up the game area"
msgstr "設定遊戲區域"

msgid ""
"In this first part, we're going to set up the game area. Let's get started "
"by importing the start assets and setting up the game scene."
msgstr ""
"在第一部分中，我們將設定遊戲區域。讓我們從匯入初始素材、設定遊戲場景入手。"

msgid ""
"We've prepared a Godot project with the 3D models and sounds we'll use for "
"this tutorial, linked in the index page. If you haven't done so yet, you can "
"download the archive here: `Squash the Creeps assets <https://github.com/"
"godotengine/godot-3d-dodge-the-creeps/releases/tag/1.1.0>`__."
msgstr ""
"我們準備了一些遊戲素材，以便我們可以直接跳到程式碼。你可以在這裡下載它們： "
"`Squash the Creeps assets <https://github.com/GDQuest/godot-3d-dodge-the-"
"creeps/releases/tag/1.1.0>`__ 。"

msgid ""
"Once you downloaded it, extract the .zip archive on your computer. Open the "
"Godot Project Manager and click the *Import* button."
msgstr ""
"一旦下在完成，解壓縮到任意處，然後打開 Godot 並在專案管理員裡點擊 [匯入] 按鈕"
"來新增該專案。"

msgid ""
"In the import popup, enter the full path to the freshly created directory "
"``squash_the_creeps_start/``. You can click the *Browse* button on the right "
"to open a file browser and navigate to the ``project.godot`` file the folder "
"contains."
msgstr ""
"請在匯入彈出框中輸入剛才新建的目錄 ``squash_the_creeps_start/`` 的完整路徑。"
"你也可以點擊右側的*瀏覽*按鈕，打開檔瀏覽器並找到該資料夾所包含的 ``project."
"godot`` 檔案。"

msgid "Click *Import & Edit* to open the project in the editor."
msgstr "點擊*匯入並編輯*在編輯器中打開該專案。"

msgid ""
"The start project contains an icon and two folders: ``art/`` and ``fonts/``. "
"There, you will find the art assets and music we'll use in the game."
msgstr ""
"起始專案中包含一個圖示和兩個資料夾：``art/`` 和 ``fonts/``。你可以在裡面找到"
"遊戲中我們會用到的藝術素材和音樂。"

msgid ""
"There are two 3D models, ``player.glb`` and ``mob.glb``, some materials that "
"belong to these models, and a music track."
msgstr ""
"裡面有兩個 3D 模型，``player.glb`` 和 ``mob.glb``，一些模型使用的材質，以及一"
"首音樂。"

msgid "Setting up the playable area"
msgstr "設定建置系統"

msgid ""
"We're going to create our main scene with a plain :ref:`Node <class_Node>` "
"as its root. In the *Scene* dock, click the *Add Child Node* button "
"represented by a \"+\" icon in the top-left and double-click on *Node*. Name "
"the node ``Main``. An alternate method to rename the node is to right-click "
"on *Node* and choose *Rename* (or :kbd:`F2`). Alternatively, to add a node "
"to the scene, you can press :kbd:`Ctrl + a` (or :kbd:`Cmd + a` on macOS)."
msgstr ""
"我們將以普通的 :ref:`Node <class_Node>` 作為其根建立主場景。在*場景*面板中，"
"按一下左上角由“+”圖示表示的*新增子節點*按鈕，然後按兩下 *Node*。將節點命名為 "
"``Main``。另一種重命名節點的方法是在*節點*上按一下右鍵，然後選擇*重命名*（或"
"者按 :kbd:`F2`）。另一種將節點新增到場景中的方法是按 :kbd:`Ctrl + a` （macOS "
"上則是按 :kbd:`Cmd + a`）。"

msgid ""
"Save the scene as ``main.tscn`` by pressing :kbd:`Ctrl + s` (:kbd:`Cmd + s` "
"on macOS)."
msgstr ""
"接著保存場景。選擇 [場景] -> [保存]，或是在 Windows/Linux 上按鍵盤 :kbd:"
"`Ctrl + S` ，在 macOS 上則是 :kbd:`Cmd + S` 。"

msgid ""
"We'll start by adding a floor that'll prevent the characters from falling. "
"To create static colliders like the floor, walls, or ceilings, you can use :"
"ref:`StaticBody3D <class_StaticBody3D>` nodes. They require :ref:"
"`CollisionShape3D <class_CollisionShape3D>` child nodes to define the "
"collision area. With the ``Main`` node selected, add a :ref:`StaticBody3D "
"<class_StaticBody3D>` node, then a :ref:`CollisionShape3D "
"<class_CollisionShape3D>`. Rename the :ref:`StaticBody3D "
"<class_StaticBody3D>` to ``Ground``."
msgstr ""
"我們先新增一個地板，以防止角色掉落。要建立地板、牆壁或天花板等靜態碰撞器，可"
"以使用 :ref:`StaticBody3D <class_StaticBody3D>` 節點。它們需要 :ref:"
"`CollisionShape3D <class_CollisionShape3D>` 子節點來定義碰撞區域。選擇 "
"*Main* 節點後，新增 :ref:`StaticBody3D <class_StaticBody3D>` 節點，然後新增 :"
"ref:`CollisionShape3D <class_CollisionShape3D>`。將 :ref:`StaticBody3D "
"<class_StaticBody3D>` 重命名為 ``Ground`` 。"

msgid "Your scene tree should look like this"
msgstr "現在場景看起來會這樣："

msgid ""
"A warning sign next to the :ref:`CollisionShape3D <class_CollisionShape3D>` "
"appears because we haven't defined its shape. If you click the icon, a popup "
"appears to give you more information."
msgstr ""
"在 :ref:`CollisionShape3D <class_CollisionShape3D>` 旁邊會出現一個警告旗標，"
"因為我們還沒有定義它的形狀。如果你點擊這個圖示，就會彈出一個視窗，為你提供更"
"多資訊。"

msgid ""
"To create a shape, select the :ref:`CollisionShape3D "
"<class_CollisionShape3D>` node, head to the *Inspector* and click the "
"*<empty>* field next to the *Shape* property. Create a new *BoxShape3D*."
msgstr ""
"要建立形狀，請選中 :ref:`CollisionShape3D <class_CollisionShape3D>`，轉到*屬"
"性面板*，然後按一下 *Shape*（形狀）屬性旁邊的 *<空>* 欄位。建立一個新的 "
"*BoxShape3D*。"

msgid ""
"The box shape is perfect for flat ground and walls. Its thickness makes it "
"reliable to block even fast-moving objects."
msgstr ""
"盒子形狀非常適合平坦的地面和牆壁。它的厚度使它能夠可靠地阻擋甚至快速移動的物"
"體。"

msgid ""
"A box's wireframe appears in the viewport with three orange dots. You can "
"click and drag these to edit the shape's extents interactively. We can also "
"precisely set the size in the inspector. Click on the :ref:`BoxShape3D "
"<class_BoxShape3D>` to expand the resource. Set its *Size* to ``60`` on the "
"X axis, ``2`` for the Y axis, and ``60`` for the Z axis."
msgstr ""
"盒子的線框會在視口中出現三個橙色的小點。你可以點擊並拖動這些點來互動地編輯形"
"狀的範圍。我們也可以在屬性面板中精確設定尺寸。點擊 :ref:`BoxShape3D "
"<class_BoxShape3D>` 來展開資源。將它的 *Size* 設定為 X 軸上的 ``60``，Y 軸的 "
"``2`` 和 Z 軸上的 ``60``。"

msgid ""
"Collision shapes are invisible. We need to add a visual floor that goes "
"along with it. Select the ``Ground`` node and add a :ref:`MeshInstance3D "
"<class_MeshInstance3D>` as its child."
msgstr ""
"碰撞形狀是不可見的。我們需要新增一個與之配套的視覺層。選擇 ``Ground`` 節點並"
"新增一個 :ref:`MeshInstance3D <class_MeshInstance3D>` 作為其子節點。"

msgid ""
"In the *Inspector*, click on the field next to *Mesh* and create a :ref:"
"`BoxMesh <class_BoxMesh>` resource to create a visible box."
msgstr ""
"在*屬性面板*中，點擊 *Mesh* 旁邊的欄位，建立一個 *BoxMesh* 資源，建立一個可見"
"的立方體。"

msgid ""
"Once again, it's too small by default. Click the box icon to expand the "
"resource and set its *Size* to ``60``, ``2``, and ``60``."
msgstr ""
"再次設定大小，對於預設值來說它有點太小了。點擊立方體圖示展開資源，並將其 "
"*Size* 設定為 ``60``、``2``、``60``。由於立方體資源使用的是大小（size）而不是"
"範圍（extents），我們需要使用這些值，以便它與我們的碰撞形狀相配對。"

msgid ""
"You should see a wide grey slab that covers the grid and blue and red axes "
"in the viewport."
msgstr "您應該會在視口中看到一個覆蓋網格以及藍色和紅色軸的寬灰色平板。"

msgid ""
"We're going to move the ground down so we can see the floor grid. Select the "
"``Ground`` node, hold the :kbd:`Ctrl` key down to turn on grid snapping, and "
"click and drag down on the Y axis. It's the green arrow in the move gizmo."
msgstr ""
"我們要把地面往下移一點，這樣才能看到地板網格。選中 *Ground* 節點，按住 :kbd:"
"`Ctrl`鍵啟用網格吸附（macOS 上則是 :kbd:`Cmd`），然後按一下並在 Y 軸上向下拖"
"動。也就是移動小工具裡的綠色箭頭。"

msgid ""
"If you can't see the 3D object manipulator like on the image above, ensure "
"the *Select Mode* is active in the toolbar above the view."
msgstr ""
"如果你沒有看到如上圖所示的 3D 物件操作器，請確保已啟動視圖上方工具列中的*選擇"
"模式*。"

msgid ""
"Move the ground down ``1`` meter, in order to have a visible editor grid. A "
"label in the bottom-left corner of the viewport tells you how much you're "
"translating the node."
msgstr ""
"為了有一個可見的編輯器柵格，可以將地面往下移動 ``1`` 米。視口左下角的標籤會顯"
"示你將該節點平移了多遠。"

msgid ""
"Moving the *Ground* node down moves both children along with it. Ensure you "
"move the *Ground* node, **not** the *MeshInstance3D* or the "
"*CollisionShape3D*."
msgstr ""
"子節點會跟隨 *Ground* 節點一起往下移動。請確保你移動的是 *Ground* 節點，而不"
"是 *MeshInstance3D* 和 *CollisionShape3D*。"

msgid "Ultimately, ``Ground``'s transform.position.y should be -1"
msgstr "最終，``Ground`` 的 transform.position.y 應當是 -1"

msgid ""
"Let's add a directional light so our scene isn't all grey. Select the "
"``Main`` node and add a child node :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>`."
msgstr ""
"現在來新增一個平行光，從而讓我們的整個場景不全都是灰色的。選擇 ``Main`` 節"
"點，然後新增一個子節點 :ref:`DirectionalLight3D <class_DirectionalLight3D>`。"

msgid ""
"We need to move and rotate the :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>` node. Move it up by clicking and dragging on the "
"manipulator's green arrow and click and drag on the red arc to rotate it "
"around the X axis, until the ground is lit."
msgstr ""
"我們需要移動並旋轉 :ref:`DirectionalLight3D <class_DirectionalLight3D>` 節"
"點。通過按一下並拖動操縱器的綠色箭頭將其向上移動，然後按一下並拖動紅色弧線以"
"圍繞 X 軸旋轉它，直到地面被照亮。"

msgid ""
"In the *Inspector*, turn on *Shadow -> Enabled* by clicking the checkbox."
msgstr "在*屬性面板*中，勾選核取方塊打開*Shadow -> Enabled*。"

msgid "At this point, your project should look like this."
msgstr "腳本最終看起來應該長這樣："

msgid ""
"That's our starting point. In the next part, we will work on the player "
"scene and base movement."
msgstr "這就是我們的起點了。在下一部分中，我們將處理玩家場景與基礎移動。"

msgid "Translation status"
msgstr "翻譯狀態"
