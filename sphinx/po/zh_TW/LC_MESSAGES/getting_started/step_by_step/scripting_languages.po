# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Scripting languages"
msgstr "為場景編寫腳本"

msgid ""
"This lesson will give you an overview of the available scripting languages "
"in Godot. You will learn the pros and cons of each option. In the next part, "
"you will write your first script using GDScript."
msgstr ""
"本課將向你介紹 Godot 中可用的指令碼語言。你將瞭解每個選項的優點和缺點。在下一"
"部分，你將使用 GDScript 編寫你的第一個腳本。"

msgid ""
"**Scripts attach to a node and extend its behavior**. This means that "
"scripts inherit all functions and properties of the node they attach to."
msgstr ""
"**腳本附加到節點並擴充其行為** 。這意味著腳本繼承所附加節點的全部函式和屬性。"

msgid ""
"For example, take a game where a Camera2D node follows a ship. The Camera2D "
"node follows its parent by default. Imagine you want the camera to shake "
"when the player takes damage. As this feature is not built into Godot, you "
"would attach a script to the Camera2D node and code the shake."
msgstr ""
"例如，以一個 Camera2D 節點跟隨一艘船的遊戲為例。Camera2D 節點預設跟隨其父節"
"點。想像一下，當玩家受到傷害時，您希望相機震動。由於此功能未內建在 Godot 中，"
"因此您可以在該 Camera2D 節點上附加腳本並對抖動進行程式設計。"

msgid "Available scripting languages"
msgstr "與其他腳本語言溝通"

msgid ""
"Godot offers **four gameplay programming languages**: GDScript, C#, and, via "
"its GDExtension technology, C and C++. There are more community-supported "
"languages, but these are the official ones."
msgstr ""
"Godot 提供了 **四種遊戲程式設計語言** ：GDScript、C# 以及通過 GDExtension 技"
"術提供的 C 和 C++。還有更多社區支援的語言，但這四個是官方語言。"

msgid ""
"You can use multiple languages in a single project. For instance, in a team, "
"you could code gameplay logic in GDScript as it's fast to write, and use C# "
"or C++ to implement complex algorithms and maximize their performance. Or "
"you can write everything in GDScript or C#. It's your call."
msgstr ""
"您可以在一個專案中使用多種語言。例如，在團隊中，您可以在 GDScript 中編寫遊戲"
"邏輯，因為它編寫起來很快，並使用 C# 或 C++ 來實作複雜的演算法並最大限度地提高"
"其性能。或者您可以使用 GDScript 或 C# 編寫所有內容。由您決定。"

msgid ""
"We provide this flexibility to answer the needs of different game projects "
"and developers."
msgstr "我們提供這種靈活性以滿足不同遊戲專案和開發者的需求。"

msgid "Which language should I use?"
msgstr "GDScript是什麼？為什麼我要用它？"

msgid ""
"If you're a beginner, we recommend to **start with GDScript**. We made this "
"language specifically for Godot and the needs of game developers. It has a "
"lightweight and straightforward syntax and provides the tightest integration "
"with Godot."
msgstr ""
"如果你是初學者，我們推薦 **從 GDScript 入手** 。這門語言是我們針對 Godot 和遊"
"戲開發者的需求製作的。語法簡單直白，與 Godot 結合得最為緊密。"

msgid ""
"For C#, you will need an external code editor like `VSCode <https://code."
"visualstudio.com/>`_ or Visual Studio. While C# support is now mature, you "
"will find fewer learning resources for it compared to GDScript. That's why "
"we recommend C# mainly to users who already have experience with the "
"language."
msgstr ""
"使用 C# 時，你需要使用 `VSCode <https://code.visualstudio.com/>`_ 或 Visual "
"Studio 等外部編輯器。雖然對 C# 支援目前已經成熟，但相對 GDScript 而言，能找到"
"的學習資源會比較少。因此，我們主要推薦已經熟悉 C# 語言的使用者去使用 C#。"

msgid "Let's look at each language's features, as well as its pros and cons."
msgstr "讓我們來看看各個語言的功能，以及優缺點。"

msgid "GDScript"
msgstr "GDScript"

msgid ""
":ref:`GDScript<doc_gdscript>` is an `object-oriented <https://en.wikipedia."
"org/wiki/Object-oriented_programming>`_ and `imperative <https://en."
"wikipedia.org/wiki/Imperative_programming>`_ programming language built for "
"Godot. It's made by and for game developers to save you time coding games. "
"Its features include:"
msgstr ""
":ref:`GDScript<doc_gdscript>` 是一門 `物件導向 <https://zh.wikipedia.org/"
"wiki/"
"%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1>`_ "
"的 `指令式 <https://zh.wikipedia.org/wiki/"
"%E6%8C%87%E4%BB%A4%E5%BC%8F%E7%B7%A8%E7%A8%8B>`_ 程式設計語言，專為 Godot 建"
"構。是遊戲開發者為遊戲開發者製作的，目的是節省編寫遊戲程式碼的時間。它的功能"
"包括："

msgid "A simple syntax that leads to short files."
msgstr "簡單的語法，讓檔更短。"

msgid "Blazing fast compilation and loading times."
msgstr "極快的編譯和載入速度。"

msgid ""
"Tight editor integration, with code completion for nodes, signals, and more "
"information from the scene it's attached to."
msgstr ""
"編輯器整合讓作業過程變得更開心。節點、訊號以及其他與正在編輯的場景有關的專案"
"都能進行程式碼補全。"

msgid ""
"Built-in vector and transform types, making it efficient for heavy use of "
"linear algebra, a must for games."
msgstr ""
"有內建 Vector 型別 (如 Vector, Transform…等)，當需要大量線性代數運算時更有效"
"率。"

msgid "Supports multiple threads as efficiently as statically typed languages."
msgstr "與靜態型別相比效能較差。"

msgid ""
"No `garbage collection <https://en.wikipedia.org/wiki/"
"Garbage_collection_(computer_science)>`_, as this feature eventually gets in "
"the way when creating games. The engine counts references and manages the "
"memory for you in most cases by default, but you can also control memory if "
"you need to."
msgstr ""
"沒有 `垃圾回收 <https://zh.wikipedia.org/wiki/"
"%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8)>`_ ，"
"因為最終會影響遊戲的開發。引擎會預設進行引用計數，在大多數情況下為你管理記憶"
"體，但你也可以在需要時自行控制記憶體。"

msgid ""
"`Gradual typing <https://en.wikipedia.org/wiki/Gradual_typing>`_. Variables "
"have dynamic types by default, but you also can use type hints for strong "
"type checks."
msgstr ""
"`緩型別 <https://en.wikipedia.org/wiki/Gradual_typing>`_ 。變數預設是動態型"
"別，但你也可以使用型別提示來做強型別檢查。"

msgid ""
"GDScript looks like Python as you structure your code blocks using "
"indentations, but it doesn't work the same way in practice. It's inspired by "
"multiple languages, including Squirrel, Lua, and Python."
msgstr ""
"因為 GDScript 用縮進來做程式碼塊的結構化，所以它看上去像 Python，不過實際上這"
"兩者的原理截然不同。GDScript 是從 Squirrel、Lua、Python 等諸多語言中得到的靈"
"感。"

msgid "Why don't we use Python or Lua directly?"
msgstr "我們為什麼不直接使用 Python 或者 Lua？"

msgid ""
"Years ago, Godot used Python, then Lua. Both languages' integration took a "
"lot of work and had severe limitations. For example, threading support was a "
"big challenge with Python."
msgstr ""
"很多年前，Godot 使用過 Python，後來也用過 Lua。這兩個語言的集成花費了大量精"
"力，並且還存在局限性。例如，在 Python 中做多執行緒支援是非常大的挑戰。"

msgid ""
"Developing a dedicated language doesn't take us more work and we can tailor "
"it to game developers' needs. We're now working on performance optimizations "
"and features that would've been difficult to offer with third-party "
"languages."
msgstr ""
"開發專屬語言不會花費更多的時間，我們還能針對遊戲開發者的需求去量體裁衣。我們"
"現在在做性能優化工作，以及用協力廠商語言難以實作的功能。"

msgid ".NET / C#"
msgstr ".NET / C#"

msgid ""
"As Microsoft's `C# <https://en.wikipedia.org/wiki/"
"C_Sharp_(programming_language)>`_ is a favorite amongst game developers, we "
"officially support it. C# is a mature and flexible language with tons of "
"libraries written for it. We were able to add support for it thanks to a "
"generous donation from Microsoft."
msgstr ""
"微軟的 C# 是很受遊戲開發者歡迎的語言，所以 Godot 也新增了對 C# 的官方支援。"
"C# 是一個成熟的語言，有許多程式都是用 C# 寫的。要感謝微軟慷慨的捐款讓我們能夠"
"支援 C#。"

msgid ""
"C# offers a good tradeoff between performance and ease of use, although you "
"should be aware of its garbage collector."
msgstr ""
"C# 在易用度與效能間的平衡做得非常優秀，雖然需要注意一下記憶體回收行程。"

msgid ""
"You must use the .NET edition of the Godot editor to script in C#. You can "
"download it on the Godot website's `download <https://godotengine.org/"
"download/>`_ page."
msgstr ""
"你必須使用 .NET版本的 Godot 編輯器才能在專案中使用 C# 進行程式設計。你可以在 "
"Godot 網站的 `下載 <https://godotengine.org/download/>`_ 頁面進行下載。"

msgid ""
"Since Godot uses .NET 6, in theory, you can use any third-party .NET library "
"or framework in Godot, as well as any Common Language Infrastructure-"
"compliant programming language, such as F#, Boo, or ClojureCLR. However, C# "
"is the only officially supported .NET option."
msgstr ""
"Godot 使用了 `Mono <https://mono-project.com>`_ .NET 執行環境，理論上任一第三"
"方 .NET 函式庫或框架都可以拿來在 Godot 裡使用。同樣的，理論上其他 CLI "
"(Common Language Infrastructure，通用語言基礎結構) 相容的程式語言也都能使用，"
"如 F#, Boo 或是 ClojureCLR。但 C# 是唯一官方支援的 .NET 選項。"

msgid ""
"GDScript code itself doesn't execute as fast as compiled C# or C++. However, "
"most script code calls functions written with fast algorithms in C++ code "
"inside the engine. In many cases, writing gameplay logic in GDScript, C#, or "
"C++ won't have a significant impact on performance."
msgstr ""
"GDScript 程式碼本身的執行是沒有 C# 或 C++ 等編譯型語言快的。然而，大多數腳本"
"程式碼都是在呼叫引擎中的 C++ 程式碼快速演算法。在許多情況下，使用 GDScript、"
"C#、C++ 編寫遊戲邏輯並不會有顯著的性能區別。"

msgid ""
"Projects written in C# using Godot 4 currently cannot be exported to the web "
"platform. To use C# on that platform, consider Godot 3 instead. Android and "
"iOS platform support is available as of Godot 4.2, but is experimental and :"
"ref:`some limitations apply <doc_c_sharp_platforms>`."
msgstr ""

msgid "C++ via GDExtension"
msgstr "通過 GDExtension 使用 C++"

msgid ""
"GDExtension allows you to write game code in C++ without needing to "
"recompile Godot."
msgstr ""
"最後是 3.0 版所新增的亮點：GDNative。使用 GDNative 就可以在不需要重新編譯 (甚"
"至重新啟動) Godot 的情況下以 C++ 來寫腳本。"

msgid ""
"You can use any version of the language or mix compiler brands and versions "
"for the generated shared libraries, thanks to our use of an internal C API "
"Bridge."
msgstr ""
"可以使用任一版本的 C++。而因為使用了內部 C API Bridge，也可以正常使用由不同編"
"譯器產生的共用函式庫。"

msgid ""
"GDExtension is the best choice for performance. You don't need to use it "
"throughout an entire game, as you can write other parts in GDScript or C#."
msgstr ""
"若要追求效能，GDNative / C++ 是最好的選擇。而且不需要整個遊戲都改用 "
"GDNative / C++，其他部分還是可以用 GDScript 或視覺腳本 (Visual Script) 來寫。"
"話雖如此，GDNative 的 API 還是很清楚簡單的，因為大部分都是直接用 Godot 原生 "
"API。"

msgid ""
"When working with GDExtension, the available types, functions, and "
"properties closely resemble Godot's actual C++ API."
msgstr ""
"當使用 GDExtension 時，可用的型別、函式和屬性與 Godot 實際的 C++ API 非常相"
"似。"

msgid "Summary"
msgstr "總結"

msgid ""
"Scripts are files containing code that you attach to a node to extend its "
"functionality."
msgstr "腳本是包含附加到節點以擴充其功能的程式碼檔。"

msgid ""
"Godot supports four official scripting languages, offering you flexibility "
"between performance and ease of use."
msgstr "Godot 支援四種官方指令碼語言，在性能和易用性之間為你提供靈活性。"

msgid ""
"You can mix languages, for instance, to implement demanding algorithms with "
"C or C++ and write most of the game logic with GDScript or C#."
msgstr ""
"你可以混合語言，例如，用 C 或 C++ 實作高要求的演算法，用 GDScript 或 C# 編寫"
"大部分的遊戲邏輯。"

msgid "Translation status"
msgstr "翻譯狀態"
