# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Prototyping levels with CSG"
msgstr ""

msgid ""
"CSG stands for **Constructive Solid Geometry**, and is a tool to combine "
"basic shapes or custom meshes to create more complex shapes. In 3D modeling "
"software, CSG is mostly known as \"Boolean Operators\"."
msgstr ""

msgid ""
"Level prototyping is one of the main uses of CSG in Godot. This technique "
"allows users to create the most common shapes by combining primitives. "
"Interior environments can be created by using inverted primitives."
msgstr ""

msgid ""
"The CSG nodes in Godot are mainly intended for prototyping. There is no "
"built-in support for UV mapping or editing 3D polygons (though extruded 2D "
"polygons can be used with the CSGPolygon3D node)."
msgstr ""

msgid ""
"If you're looking for an easy to use level design tool for a project, you "
"may want to use `Qodot <https://github.com/QodotPlugin/Qodot>`__ instead. It "
"lets you design levels using `TrenchBroom <https://kristianduske.com/"
"trenchbroom/>`__ and import them in Godot."
msgstr ""

#, fuzzy
msgid ""
"You can check how to use CSG nodes to build various shapes (such as stairs "
"or roads) using the `Constructive Solid Geometry demo project <https://"
"github.com/godotengine/godot-demo-projects/tree/master/3d/csg>`__."
msgstr ""
"Eğer bir örneğe bakarak daha iyi öğreniyorsanız, bir demo projeyi `burada "
"<https://github.com/godotengine/godot-demo-projects/tree/master/mobile/"
"android_iap>`__ bulabilirsiniz."

msgid "Introduction to CSG nodes"
msgstr "CSG düğümlerine giriş"

msgid ""
"Like other features of Godot, CSG is supported in the form of nodes. These "
"are the CSG nodes:"
msgstr ""

#, fuzzy
msgid ":ref:`CSGBox3D <class_CSGBox3D>`"
msgstr ":ref:`class_BoxShape`"

msgid ":ref:`CSGCylinder3D <class_CSGCylinder3D>` (also supports cone)"
msgstr ""

#, fuzzy
msgid ":ref:`CSGSphere3D <class_CSGSphere3D>`"
msgstr ":ref:`class_SphereShape`"

msgid ":ref:`CSGTorus3D <class_CSGTorus3D>`"
msgstr ""

#, fuzzy
msgid ":ref:`CSGPolygon3D <class_CSGPolygon3D>`"
msgstr ":ref:`CollisionShape2D <class_CollisionShape2D>`"

msgid ":ref:`CSGMesh3D <class_CSGMesh3D>`"
msgstr ""

#, fuzzy
msgid ":ref:`CSGCombiner3D <class_CSGCombiner3D>`"
msgstr ":ref:`int <class_int>`"

msgid "CSG tools features"
msgstr ""

msgid "Every CSG node supports 3 kinds of boolean operations:"
msgstr ""

msgid ""
"**Union:** Geometry of both primitives is merged, intersecting geometry is "
"removed."
msgstr ""

msgid ""
"**Intersection:** Only intersecting geometry remains, the rest is removed."
msgstr ""

msgid ""
"**Subtraction:** The second shape is subtracted from the first, leaving a "
"dent with its shape."
msgstr ""

msgid "CSGPolygon"
msgstr ""

msgid ""
"The :ref:`CSGPolygon3D <class_CSGPolygon3D>` node extrude along a Polygon "
"drawn in 2D (in X, Y coordinates) in the following ways:"
msgstr ""

msgid "**Depth:** Extruded back a given amount."
msgstr ""

msgid "**Spin:** Extruded while spinning around its origin."
msgstr ""

msgid ""
"**Path:** Extruded along a Path node. This operation is commonly called "
"lofting."
msgstr ""

msgid ""
"The **Path** mode must be provided with a :ref:`Path3D <class_Path3D>` node "
"to work. In the Path node, draw the path and the polygon in CSGPolygon3D "
"will extrude along the given path."
msgstr ""

msgid "Custom meshes"
msgstr "Özel örgüler"

msgid ""
"Any mesh can be used for :ref:`CSGMesh3D <class_CSGMesh3D>`; the mesh can be "
"modeled in other software and imported into Godot. Multiple materials are "
"supported. There are some restrictions for geometry:"
msgstr ""

msgid "it must be closed,"
msgstr ""

msgid "it must not self-intersect,"
msgstr ""

msgid "it must not contain internal faces,"
msgstr ""

msgid "every edge must connect to only two other faces."
msgstr ""

msgid "CSGCombiner3D"
msgstr ""

msgid ""
"The :ref:`CSGCombiner3D <class_CSGCombiner3D>` node is an empty shape used "
"for organization. It will only combine children nodes."
msgstr ""

msgid "Processing order"
msgstr ""

msgid ""
"Every CSG node will first process its children nodes and their operations: "
"union, intersection, or subtraction, in tree order, and apply them to itself "
"one after the other."
msgstr ""

msgid ""
"In the interest of performance, make sure CSG geometry remains relatively "
"simple, as complex meshes can take a while to process. If adding objects "
"together (such as table and room objects), create them as separate CSG "
"trees. Forcing too many objects in a single tree will eventually start "
"affecting performance. Only use binary operations where you actually need "
"them."
msgstr ""

msgid "Prototyping a level"
msgstr ""

msgid "We will prototype a room to practice the use of CSG tools."
msgstr ""

msgid ""
"Working in **Orthogonal** projection gives a better view when combining the "
"CSG shapes."
msgstr ""

msgid "Our level will contain these objects:"
msgstr ""

msgid "a room,"
msgstr ""

msgid "a bed,"
msgstr ""

msgid "a lamp,"
msgstr ""

msgid "a desk,"
msgstr ""

msgid "a bookshelf."
msgstr ""

msgid "Create a scene with a Node3D node as root node."
msgstr ""

msgid ""
"The default lighting of the environment doesn't provide clear shading at "
"some angles. Change the display mode using **Display Overdraw** in the 3D "
"viewport menu, or add a DirectionalLight node to help you see clearly."
msgstr ""

msgid ""
"Create a CSGBox3D and name it ``room``, enable **Invert Faces** and change "
"the dimensions of your room."
msgstr ""

msgid "Next, create a CSGCombiner3D and name it ``desk``."
msgstr ""

msgid "A desk has one surface and 4 legs:"
msgstr ""

msgid ""
"Create 1 CSGBox3D children node in **Union** mode for the surface and adjust "
"the dimensions."
msgstr ""

msgid ""
"Create 4 CSGBox3D children nodes in **Union** mode for the legs and adjust "
"the dimensions."
msgstr ""

msgid "Adjust their placement to resemble a desk."
msgstr ""

msgid ""
"CSG nodes inside a CSGCombiner3D will only process their operation within "
"the combiner. Therefore, CSGCombiner3Ds are used to organize CSG nodes."
msgstr ""

msgid "Create a CSGCombiner3D and name it ``bed``."
msgstr ""

msgid ""
"Our bed consists of 3 parts: the bed, the mattress and a pillow. Create a "
"CSGBox3D and adjust its dimension for the bed. Create another CSGBox3D and "
"adjust its dimension for the mattress."
msgstr ""

#, fuzzy
msgid ""
"We will create another CSGCombiner3D named ``pillow`` as the child of  "
"``bed``. The scene tree should look like this:"
msgstr ""
"``bed`` 'in alt-öğesi olarak ``pillow`` (yastık) isminde başka bir "
"CSGCombiner oluşturacağız. Sahne ağacınız bunun gibi görünmelidir:"

msgid ""
"We will combine 3 CSGSphere3D nodes in **Union** mode to form a pillow. "
"Scale the Y axis of the spheres and enable **Smooth Faces**."
msgstr ""

msgid ""
"Select the ``pillow`` node and switch the mode to **Subtraction**; the "
"combined spheres will cut a hole into the mattress."
msgstr ""

msgid ""
"Try to re-parent the ``pillow`` node to the root ``Node3D`` node; the hole "
"will disappear."
msgstr ""

msgid ""
"This is to illustrate the effect of CSG processing order. Since the root "
"node is not a CSG node, the CSGCombiner3D nodes are the end of the "
"operations; this shows the use of CSGCombiner3D to organize the CSG scene."
msgstr ""

msgid ""
"Undo the re-parent after observing the effect. The bed you've built should "
"look like this:"
msgstr ""
"Etkiyi gözlemledikten sonra, üst-öğe birleştirmeyi geri alın. Yaptığınız "
"yatak öğesi bunun gibi görünmelidir:"

msgid "Create a CSGCombiner3D and name it ``lamp``."
msgstr ""

msgid ""
"A lamp consists of 3 parts: the stand, the pole and the lampshade. Create a "
"CSGCylinder3D, enable the **Cone** option and make it the stand. Create "
"another CSGCylinder3D and adjust the dimensions to use it as a pole."
msgstr ""

msgid ""
"We will use a CSGPolygon3D for the lampshade. Use the **Spin** mode for the "
"CSGPolygon3D and draw a `trapezoid <https://en.wikipedia.org/wiki/"
"Trapezoid>`_ while in **Front View** (numeric keypad 1); this shape will "
"extrude around the origin and form the lampshade."
msgstr ""

msgid "Adjust the placement of the 3 parts to make it look like a lamp."
msgstr ""

msgid "Create a CSGCombiner3D and name it ``bookshelf``."
msgstr ""

msgid ""
"We will use 3 CSGBox3D nodes for the bookshelf. Create a CSGBox3D and adjust "
"its dimensions; this will be the size of the bookshelf."
msgstr ""

msgid ""
"Duplicate the CSGBox3D and shorten the dimensions of each axis and change "
"the mode to **Subtraction**."
msgstr ""

msgid ""
"You've almost built a shelf. Create one more CSGBox3D for dividing the shelf "
"into two levels."
msgstr ""

msgid ""
"Position your furniture in your room as you like and your scene should look "
"this:"
msgstr ""
"Odanızdaki mobilyaları istediğiniz gibi yerleştirin, işiniz bitince sahneniz "
"bunun gibi görünmelidir:"

msgid ""
"You've successfully prototyped a room level with the CSG tools in Godot. CSG "
"tools can be used for designing all kinds of levels, such as a maze or a "
"city; explore its limitations when designing your game."
msgstr ""

msgid "Using prototype textures"
msgstr ""

msgid ""
"Godot's :ref:`doc_standard_material_3d` supports *triplanar mapping*, which "
"can be used to automatically apply a texture to arbitrary objects without "
"distortion. This is handy when using CSG as Godot doesn't support editing UV "
"maps on CSG nodes yet. Triplanar mapping is relatively slow, which usually "
"restricts its usage to organic surfaces like terrain. Still, when "
"prototyping, it can be used to quickly apply textures to CSG-based levels."
msgstr ""

msgid ""
"If you need some textures for prototyping, Kenney made a `set of CC0-"
"licensed prototype textures <https://kenney.nl/assets/prototype-textures>`__."
msgstr ""

msgid "There are two ways to apply a material to a CSG node:"
msgstr "Bir CSG düğümüne bir malzeme uygulamanın iki yolu var:"

msgid ""
"Applying it to a CSGCombiner3D node as a material override (**Geometry > "
"Material Override** in the Inspector). This will affect its children "
"automatically, but will make it impossible to change the material in "
"individual children."
msgstr ""

msgid ""
"Applying a material to individual nodes (**Material** in the Inspector). "
"This way, each CSG node can have its own appearance. Subtractive CSG nodes "
"will apply their material to the nodes they're \"digging\" into."
msgstr ""

msgid ""
"To apply triplanar mapping to a CSG node, select it, go to the Inspector, "
"click the **[empty]** text next to **Material Override** (or **Material** "
"for individual CSG nodes). Choose **New StandardMaterial3D**. Click the "
"newly created material's icon to edit it. Unfold the **Albedo** section and "
"load a texture into the **Texture** property. Now, unfold the **Uv1** "
"section and check **Triplanar**. You can change the texture offset and scale "
"on each axis by playing with the **Scale** and **Offset** properties just "
"above. Higher values in the **Scale** property will cause the texture to "
"repeat more often."
msgstr ""

msgid ""
"You can copy a StandardMaterial3D to reuse it across CSG nodes. To do so, "
"click the dropdown arrow next to a material property in the Inspector and "
"choose **Copy**. To paste it, select the node you'd like to apply the "
"material onto, click the dropdown arrow next to its material property then "
"choose **Paste**."
msgstr ""

#, fuzzy
msgid "Exporting as glTF"
msgstr "Dışa Aktarım"

msgid ""
"It can be useful to block out a level using CSG, then export it as a 3d "
"model, to import into 3D modeling software. You can do this by selecting "
"**Scene > Export As... > glTF 2.0 Scene**."
msgstr ""

msgid "Translation status"
msgstr "Çeviri durumu"
