# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Idle and Physics Processing"
msgstr ""

msgid ""
"Games run in a loop. Each frame, you need to update the state of your game "
"world before drawing it on screen. Godot provides two virtual methods in the "
"Node class to do so: :ref:`Node._process() "
"<class_Node_private_method__process>` and :ref:`Node._physics_process() "
"<class_Node_private_method__physics_process>`. If you define either or both "
"in a script, the engine will call them automatically."
msgstr ""

msgid "There are two types of processing available to you:"
msgstr "Kullanabileceğiniz iki tür işlem var:"

msgid ""
"**Idle processing** allows you to run code that updates a node every frame, "
"as often as possible."
msgstr ""

msgid ""
"**Physics processing** happens at a fixed rate, 60 times per second by "
"default. This is independent of your game's actual framerate, and keeps "
"physics running smoothly. You should use it for anything that involves the "
"physics engine, like moving a body that collides with the environment."
msgstr ""

msgid ""
"You can activate idle processing by defining the ``_process()`` method in a "
"script. You can turn it off and back on by calling :ref:`Node.set_process() "
"<class_Node_method_set_process>`."
msgstr ""
"Boşta bekleyen işlemeyi, betik içerisinde bir ``_process()`` yöntemini "
"tanımlayarak etkinleştirebilirsiniz. Daha sonra bunu kapatıp tekrar açmak "
"için:ref:`Node.set_process() <class_Node_method_set_process>` çağrısını "
"kullanabilirsiniz."

msgid "The engine calls this method every time it draws a frame:"
msgstr ""

msgid ""
"Keep in mind that the frequency at which the engine calls ``_process()`` "
"depends on your application's framerate, which varies over time and across "
"devices."
msgstr ""
"Aklınızda bulunsun, motorun ``_process()`` çağrısını yapma sıklığı, "
"uygulamanızın karehızı'na bağlıdır; zamana ve cihazlara bağlı değişiklik "
"gösterir."

msgid ""
"The function's ``delta`` parameter is the time elapsed in seconds since the "
"previous call to ``_process()``. Use this parameter to make calculations "
"independent of the framerate. For example, you should always multiply a "
"speed value by ``delta`` to animate a moving object."
msgstr ""

msgid ""
"Physics processing works with a similar virtual function: "
"``_physics_process()``. Use it for calculations that must happen before each "
"physics step, like moving a character that collides with the game world. As "
"mentioned above, ``_physics_process()`` runs at fixed time intervals as much "
"as possible to keep the physics interactions stable. You can change the "
"interval between physics steps in the Project Settings, under Physics -> "
"Common -> Physics Fps. By default, it's set to run 60 times per second."
msgstr ""
"Fizik işlemeleri benzer bir sanal fonksiyon ile çalışır: "
"``_physics_process()``. Oyun dünyası ile çarpışan bir karakteri hareket "
"ettirmek gibi, her bir fizik adımından önce yapılması gereken hesaplamalar "
"için kullanın. Yukarıda bahsedildiği gibi, fiziksel etkileşimlerin mümkün "
"olduğu kadar kararlı olması için, ``_physics_process()`` sabit zaman "
"aralıklarında çalışır. Fizik adımları arasındaki bu aralığı, Proje ayarları "
"altında Fizik -> Ortak -> Fizik FPS altında değiştirebilirsiniz. Varsayılan "
"değeri, saniyede 60 kere çalışacak şekilde ayarlıdır."

msgid "The engine calls this method before every physics step:"
msgstr ""

msgid ""
"The function ``_process()`` is not synchronized with physics. Its rate "
"depends on hardware and game optimization. It also runs after the physics "
"step in single-threaded games."
msgstr ""
"``_process()`` fonksiyonu, fizik ile eşlenmiş değildir. Bunun oranı donanıma "
"ve oyun iyileştirmelerine bağlıdır. Ayrıca, tek-iş-parçacıklı oyunlar için "
"fizik adımından zonra çalışır."

msgid ""
"You can see the ``_process()`` function at work by creating a scene with a "
"single Label node, with the following script attached to it:"
msgstr ""
"``_process()`` fonksiyonunu çalışırken görmek için, içinde tek bir etiket "
"düğümü, Label, bulunan bir sahne oluşturun, ve aşağıdaki betiği buna "
"bağlayın:"

msgid "When you run the scene, you should see a counter increasing each frame."
msgstr ""
"Sahneyi çalıştırdığınızda, her karede değeri artan bir sayaç görmelisiniz."

msgid "Translation status"
msgstr "Çeviri durumu"
