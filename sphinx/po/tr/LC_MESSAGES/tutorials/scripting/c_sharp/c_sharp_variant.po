# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "C# Variant"
msgstr "Alt-Çeşit"

msgid ""
"For a detailed explanation of Variant in general, see the :ref:`Variant "
"<class_Variant>` documentation page."
msgstr ""

msgid ""
"``Godot.Variant`` is used to represent Godot's native :ref:`Variant "
"<class_Variant>` type. Any Variant-compatible type can be converted from/to "
"it. We recommend avoiding ``Godot.Variant`` unless it is necessary to "
"interact with untyped engine APIs. Take advantage of C#'s type safety when "
"possible."
msgstr ""

msgid ""
"Any of ``Variant.As{TYPE}`` methods or the generic ``Variant.As<T>`` method "
"can be used to convert a ``Godot.Variant`` to a C# type. Since the ``Godot."
"Variant`` type contains implicit conversions defined for all the supported "
"types, calling these methods directly is usually not necessary."
msgstr ""

msgid ""
"Use ``CreateFrom`` method overloads or the generic ``Variant.From<T>`` "
"method to convert a C# type to a ``Godot.Variant``."
msgstr ""

msgid ""
"Since the Variant type in C# is a struct, it can't be null. To create a "
"\"null\" Variant use the ``default`` keyword or the parameterless "
"constructor."
msgstr ""

msgid "Variant-compatible types"
msgstr ""

msgid ""
"All the `built-in value types <https://docs.microsoft.com/en-us/dotnet/"
"csharp/language-reference/keywords/built-in-types-table>`_, except "
"``decimal``, ``nint`` and ``nuint``."
msgstr ""

msgid "``string``."
msgstr ""

msgid "Classes derived from :ref:`GodotObject <class_Object>`."
msgstr ""

msgid "Collections types defined in the ``Godot.Collections`` namespace."
msgstr ""

msgid "Full list of Variant types and their equivalent C# type:"
msgstr ""

#, fuzzy
msgid "Variant.Type"
msgstr "Alt-Çeşit"

#, fuzzy
msgid "C# Type"
msgstr "Tip"

msgid "``Nil``"
msgstr ""

msgid "``null`` (Not a type)"
msgstr ""

msgid "``Bool``"
msgstr ""

msgid "``bool``"
msgstr ""

msgid "``Int``"
msgstr ""

msgid "``long`` (Godot stores 64-bit integers in Variant)"
msgstr ""

#, fuzzy
msgid "``Float``"
msgstr "Float"

msgid "``double`` (Godot stores 64-bit floats in Variant)"
msgstr ""

#, fuzzy
msgid "``String``"
msgstr "Dize"

#, fuzzy
msgid "``string``"
msgstr "Dize"

#, fuzzy
msgid "``Vector2``"
msgstr "Vektör"

msgid "``Godot.Vector2``"
msgstr ""

#, fuzzy
msgid "``Vector2I``"
msgstr "Vektör"

msgid "``Godot.Vector2I``"
msgstr ""

msgid "``Rect2``"
msgstr ""

msgid "``Godot.Rect2``"
msgstr ""

msgid "``Rect2I``"
msgstr ""

msgid "``Godot.Rect2I``"
msgstr ""

#, fuzzy
msgid "``Vector3``"
msgstr "Vektör"

msgid "``Godot.Vector3``"
msgstr ""

#, fuzzy
msgid "``Vector3I``"
msgstr "Vektör"

msgid "``Godot.Vector3I``"
msgstr ""

#, fuzzy
msgid "``Transform2D``"
msgstr "``dönüştürme``"

#, fuzzy
msgid "``Godot.Transform2D``"
msgstr "``dönüştürme``"

#, fuzzy
msgid "``Vector4``"
msgstr "Vektör"

msgid "``Godot.Vector4``"
msgstr ""

#, fuzzy
msgid "``Vector4I``"
msgstr "Vektör"

msgid "``Godot.Vector4I``"
msgstr ""

#, fuzzy
msgid "``Plane``"
msgstr "Düzlem"

msgid "``Godot.Plane``"
msgstr ""

#, fuzzy
msgid "``Quaternion``"
msgstr "``Rotation``"

#, fuzzy
msgid "``Godot.Quaternion``"
msgstr "``Rotation``"

msgid "``Aabb``"
msgstr ""

msgid "``Godot.Aabb``"
msgstr ""

#, fuzzy
msgid "``Basis``"
msgstr "Temel"

msgid "``Godot.Basis``"
msgstr ""

#, fuzzy
msgid "``Transform3D``"
msgstr "``dönüştürme``"

#, fuzzy
msgid "``Godot.Transform3D``"
msgstr "``dönüştürme``"

#, fuzzy
msgid "``Projection``"
msgstr "``bağlantı``"

#, fuzzy
msgid "``Godot.Projection``"
msgstr "``bağlantı``"

#, fuzzy
msgid "``Color``"
msgstr "``Color8``"

#, fuzzy
msgid "``Godot.Color``"
msgstr "``Color8``"

#, fuzzy
msgid "``StringName``"
msgstr "Dize"

msgid "``Godot.StringName``"
msgstr ""

#, fuzzy
msgid "``NodePath``"
msgstr "``$DüğümYolu``"

#, fuzzy
msgid "``Godot.NodePath``"
msgstr "``$DüğümYolu``"

msgid "``Rid``"
msgstr ""

msgid "``Godot.Rid``"
msgstr ""

#, fuzzy
msgid "``Object``"
msgstr "Nesne"

msgid "``Godot.GodotObject`` or any derived type."
msgstr ""

msgid "``Callable``"
msgstr ""

msgid "``Godot.Callable``"
msgstr ""

#, fuzzy
msgid "``Signal``"
msgstr "Sinyal"

msgid "``Godot.Signal``"
msgstr ""

#, fuzzy
msgid "``Dictionary``"
msgstr "``bağlantı``"

msgid "``Godot.Collections.Dictionary``"
msgstr ""

msgid "``Array``"
msgstr ""

msgid "``Godot.Collections.Array``"
msgstr ""

msgid "``PackedByteArray``"
msgstr ""

msgid "``byte[]``"
msgstr ""

msgid "``PackedInt32Array``"
msgstr ""

msgid "``int[]``"
msgstr ""

msgid "``PackedInt64Array``"
msgstr ""

#, fuzzy
msgid "``long[]``"
msgstr "``Color[]``"

msgid "``PackedFloat32Array``"
msgstr ""

msgid "``float[]``"
msgstr ""

msgid "``PackedFloat64Array``"
msgstr ""

#, fuzzy
msgid "``double[]``"
msgstr "``Color[]``"

msgid "``PackedStringArray``"
msgstr ""

#, fuzzy
msgid "``string[]``"
msgstr "``[]``"

msgid "``PackedVector2Array``"
msgstr ""

#, fuzzy
msgid "``Godot.Vector2[]``"
msgstr "``Color[]``"

msgid "``PackedVector3Array``"
msgstr ""

#, fuzzy
msgid "``Godot.Vector3[]``"
msgstr "``Color[]``"

#, fuzzy
msgid "``PackedColorArray``"
msgstr "``Color8``"

#, fuzzy
msgid "``Godot.Color[]``"
msgstr "``Color[]``"

msgid ""
"Godot uses 64-bit integers and floats in Variant. Smaller integer and float "
"types such as ``int``, ``short`` and ``float`` are supported since they can "
"fit in the bigger type. Be aware that an implicit conversion is performed so "
"using the wrong type will result in potential precision loss."
msgstr ""

msgid ""
"Enums are supported by ``Godot.Variant`` since their underlying type is an "
"integer type which are all compatible. However, implicit conversions don't "
"exist, enums must be manually converted to their underlying integer type "
"before they can converted to/from ``Godot.Variant`` or use the generic "
"``Variant.As<T>`` and ``Variant.From<T>`` methods to convert them."
msgstr ""

msgid "Using Variant in a generic context"
msgstr ""

msgid ""
"When using generics, you may be interested in restricting the generic ``T`` "
"type to be only one of the Variant-compatible types. This can be achieved "
"using the ``[MustBeVariant]`` attribute."
msgstr ""

msgid ""
"Combined with the generic ``Variant.From<T>`` allows you to obtain an "
"instance of ``Godot.Variant`` from an instance of a generic ``T`` type. Then "
"it can be used in any API that only supports the ``Godot.Variant`` struct."
msgstr ""

msgid ""
"In order to invoke a method with a generic parameter annotated with the "
"``[MustBeVariant]`` attribute, the value must be a Variant-compatible type "
"or a generic ``T`` type annotated with the ``[MustBeVariant]`` attribute as "
"well."
msgstr ""

msgid "Translation status"
msgstr "Çeviri durumu"
