# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Listening to player input"
msgstr "Oyuncu girdisini dinlemek"

#, fuzzy
msgid ""
"Building upon the previous lesson, :ref:`doc_scripting_first_script`, let's "
"look at another important feature of any game: giving control to the player. "
"To add this, we need to modify our ``sprite_2d.gd`` code."
msgstr ""
"Önceki dersimize, :ref:`doc_scripting_first_script`, devam ederek şimdi de "
"herhangi bir oyun için bir başka önemli özelliğe göz atalım: kontrolü "
"oyuncuya vermek. Bunu eklemek için, ``Sprite.gd`` kodumuzda değişiklik "
"yapmamız gerek."

msgid "You have two main tools to process the player's input in Godot:"
msgstr "Oyuncu girdilerini işlemek için, Godot'da iki ana araç bulunur:"

msgid ""
"The built-in input callbacks, mainly ``_unhandled_input()``. Like "
"``_process()``, it's a built-in virtual function that Godot calls every time "
"the player presses a key. It's the tool you want to use to react to events "
"that don't happen every frame, like pressing :kbd:`Space` to jump. To learn "
"more about input callbacks, see :ref:`doc_inputevent`."
msgstr ""
"Başta ``_unhandled_input()`` olmak üzere dahili girdi geriçağrıları. "
"``_process()`` gibi bu da, oyuncunun bir tuşa bastığı her seferinde "
"Godot'nun çağırdığı dahili bir sanal fonksiyondur. :kbd:`Boşluk` tuşuna "
"basıp zıplamak gibi, her karede gerçekleşmeyen olaylara tepki vermek için "
"kullanmak isteyeceğiniz bir araçtır. Girdi geriçağrıları hakkında daha "
"fazlasını öğrenmek, :ref:`doc_inputevent` sayfasına bakınız."

msgid ""
"The ``Input`` singleton. A singleton is a globally accessible object. Godot "
"provides access to several in scripts. It's the right tool to check for "
"input every frame."
msgstr ""
"``Input`` tekil nesnesi. Bir tekil nesne, genel erişilebilir bir nesnedir. "
"Godot, betik içerisinde bunlardan pek çoğuna erişim sağlar. Her karede "
"girdileri denetlemek en doğru araçtır."

msgid ""
"We're going to use the ``Input`` singleton here as we need to know if the "
"player wants to turn or move every frame."
msgstr ""
"Burada ``Input`` tekil nesnesini kullanacağız, çünkü oyuncunun dönmeyi veya "
"hareket etmeyi isteyip istemediğini her karede bilmemiz gerekiyor."

msgid ""
"For turning, we should use a new variable: ``direction``. In our "
"``_process()`` function, replace the ``rotation += angular_speed * delta`` "
"line with the code below."
msgstr ""
"Dönüş için, yeni bir değişken kullanmalıyız: ``direction`` (yön). "
"``_process()`` fonksiyonumuzda, ``rotation += angular_speed * delta`` "
"satırını aşağıdaki kod ile değiştirin."

msgid ""
"Our ``direction`` local variable is a multiplier representing the direction "
"in which the player wants to turn. A value of ``0`` means the player isn't "
"pressing the left or the right arrow key. A value of ``1`` means the player "
"wants to turn right, and ``-1`` means they want to turn left."
msgstr ""
"``direction`` yerel değişkeni, oyuncunun dönmek istediği yönü belirten bir "
"çarpandır. ``0`` değeri oyuncunun sol veya sağ ok tuşlarına basmadığını "
"ifade eder. ``1`` değeri oyuncunun sağa dönmek istediği, ``-1`` ise sola "
"dönmek istediği anlamındadır."

msgid ""
"To produce these values, we introduce conditions and the use of ``Input``. A "
"condition starts with the ``if`` keyword in GDScript and ends with a colon. "
"The condition is the expression between the keyword and the end of the line."
msgstr ""
"Bu değerleri üretmek için, koşulları ve ``Input`` kullanımını tanıtıyoruz. "
"Bir koşul, GDScript'te ``if`` (eğer) anahtar kelimesi ile başlar ve iki "
"nokta üstüste ile biter. Koşulun kendisi ise anahtar kelime ile satır sonu "
"arasında kalan ifadedir."

msgid ""
"To check if a key was pressed this frame, we call ``Input."
"is_action_pressed()``. The method takes a text string representing an input "
"action and returns ``true`` if the action is pressed, ``false`` otherwise."
msgstr ""
"Bu karede bir tuşa basılıp basılmadığını denetlemek için ``Input."
"is_action_pressed()`` çağrısını yaparız. Yöntem, girdi eylemini temsil eden "
"bir yazı dizesi alır, ve eğer eylem basılmışsa ``true`` (doğru), değilse "
"``false`` (yanlış) döndürür."

msgid ""
"The two actions we use above, \"ui_left\" and \"ui_right\", are predefined "
"in every Godot project. They respectively trigger when the player presses "
"the left and right arrows on the keyboard or left and right on a gamepad's D-"
"pad."
msgstr ""
"Yukarıda kullandığımız iki tane eylem, \"ui_left\" ve \"ui_right\", her "
"Godot projesinde ön tanımlı gelir. Bunlar oyuncunun klavyeden sırasıyla sol "
"ve sağ ok tuşlarına, veya oyun kumandasındaki D-pad üzerinde sol ve sağ "
"düğmelere basması ile tetiklenir."

msgid ""
"You can see and edit input actions in your project by going to Project -> "
"Project Settings and clicking on the Input Map tab."
msgstr ""
"Projenizin girdi eylemlerini, Proje -> Proje Ayarları'na gidip Girdi "
"Haritası sekmesine tıklayarak görebilir ve düzenleyebilirsiniz."

msgid ""
"Finally, we use the ``direction`` as a multiplier when we update the node's "
"``rotation``: ``rotation += angular_speed * direction * delta``."
msgstr ""
"Son olarak, ``direction`` (yön) değerini düğümümüzün dönmesini, "
"``rotation``, güncellerken çarpan olarak kullanıyoruz: ``rotation += "
"angular_speed * direction * delta``."

msgid ""
"If you run the scene with this code, the icon should rotate when you press :"
"kbd:`Left` and :kbd:`Right`."
msgstr ""
"Eğer sahnenizi bu kod ile çalıştırırsanız, simgenin :kbd:`Sol` ve :kbd:`Sağ` "
"tuşlara bastığınız zaman döndüğünü görmelisiniz."

msgid "Moving when pressing \"up\""
msgstr "\"Yukarı\" basarak hareket etmek"

msgid ""
"To only move when pressing a key, we need to modify the code that calculates "
"the velocity. Replace the line starting with ``var velocity`` with the code "
"below."
msgstr ""
"Sdece bir tuşa basarken hareket etmek için, hız vektörünü hesaplayan kodu "
"değiştirmemiz gerekiyor. ``var velocity`` ile başlayan satırı aşağıdaki kod "
"ile değiştirin."

msgid ""
"We initialize the ``velocity`` with a value of ``Vector2.ZERO``, another "
"constant of the built-in ``Vector`` type representing a 2D vector of length "
"0."
msgstr ""
"``velocity`` 'yi ``Vector2.ZERO`` ilk değeri ile başlattık; bu da yine "
"yerleşik ``Vector`` tipinde, uzunluğu 0 olan bir 2B vektörü temsil eder "
"(sıfır)."

msgid ""
"If the player presses the \"ui_up\" action, we then update the velocity's "
"value, causing the sprite to move forward."
msgstr ""
"Eğer oyuncu \"ui_up\" (yukarı) eylemine basarsa, hız vektörünün değerini "
"güncelleriz, bu da grafik öğeyi ileriye hareket ettirir."

msgid "Complete script"
msgstr "Tamamlanmış betik"

#, fuzzy
msgid "Here is the complete ``sprite_2d.gd`` file for reference."
msgstr "Tamamlanmış ``Sprite.gd`` dosyası, başvuru amaçlı aşağıda verilmiştir."

msgid ""
"If you run the scene, you should now be able to rotate with the left and "
"right arrow keys and move forward by pressing :kbd:`Up`."
msgstr ""
"Eğer bu sahneyi çalıştırırsanız, sol ve sağ ok tuşları ile dönebiliyor, ve :"
"kbd:`Yukarı` basarak ileri hareket edebiliyor olmanız gerekir."

msgid "Summary"
msgstr "Özet"

#, fuzzy
msgid ""
"In summary, every script in Godot represents a class and extends one of the "
"engine's built-in classes. The node types your classes inherit from give you "
"access to properties, such as ``rotation`` and ``position`` in our sprite's "
"case. You also inherit many functions, which we didn't get to use in this "
"example."
msgstr ""
"Özet olarak, Godot'daki her betik bir sınıfı temsil eder ve motorun dahili "
"sınıflarından birini genişletir. Sınıfınızın miras aldığı düğümün tipi, "
"mesela grafik öğeniz için ``rotation`` ve ``position`` gibi özelliklere "
"erişmenizi sağlar. Ayrıca, bu örneğimizde kullanma fırsatımız olmayan pek "
"çok fonksiyonu da miras alırsınız."

msgid ""
"In GDScript, the variables you put at the top of the file are your class's "
"properties, also called member variables. Besides variables, you can define "
"functions, which, for the most part, will be your classes' methods."
msgstr ""
"GDScript'te dosyanın en üstüne koyduğunuz değişkenler, üye değişkenler de "
"denilen, sınıfınızın özellikleridir. Değişkenlerin yanında, fonksiyonlar da "
"tanımlayabilirsiniz, ki pek çok durumda, bunlar da sınıfınızın yöntemleri "
"olacaklardır."

msgid ""
"Godot provides several virtual functions you can define to connect your "
"class with the engine. These include ``_process()``, to apply changes to the "
"node every frame, and ``_unhandled_input()``, to receive input events like "
"key and button presses from the users. There are quite a few more."
msgstr ""
"Godot, sınıfınızı motora bağlamak için tanımlayabileceğiniz bir çok sanal "
"fonksiyon da sağlar. Bunların arasında, değişiklikleri düğüme her karede "
"uygulamak için ``_process()``, ve kullanıcıların tuş ve düğmelere basması "
"gibi girdi eylemlerini alan ``_unhandled_input()`` bulunur. Bunlardan daha "
"oldukça fazlası var."

msgid ""
"The ``Input`` singleton allows you to react to the players' input anywhere "
"in your code. In particular, you'll get to use it in the ``_process()`` loop."
msgstr ""
"``Input`` tekil nesnesi, oyuncu girdilerine kodunuzun her yerinden tepki "
"vermenizi sağlar. Özellikle, ``_process()`` döngüsü içerisinden çokça "
"kullanmaya başlayacaksınız."

#, fuzzy
msgid ""
"In the next lesson, :ref:`doc_signals`, we'll build upon the relationship "
"between scripts and nodes by having our nodes trigger code in scripts."
msgstr ""
"Sıradaki :ref:`doc_signals` dersinde, betiklerimizin ve düğümlerimizin "
"arasındaki ilişkiyi, düğümlerimizin betik içindeki kodu tetiklemesini "
"sağlayarak geliştireceğiz."

msgid "Translation status"
msgstr "Çeviri durumu"
