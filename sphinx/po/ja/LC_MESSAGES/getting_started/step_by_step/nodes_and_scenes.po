# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Nodes and Scenes"
msgstr "ノードとシーン"

msgid ""
"In :ref:`doc_key_concepts_overview`, we saw that a Godot game is a tree of "
"scenes and that each scene is a tree of nodes. In this lesson, we explain a "
"bit more about them. You will also create your first scene."
msgstr ""
":ref:`doc_key_concepts_overview` では、Godotゲームはシーンのツリーで構成さ"
"れ、各シーンはノードのツリーで構成されることを知りました。このレッスンでは、"
"それらについてもう少し詳しく説明します。また、最初のシーンを作成します。"

msgid "Nodes"
msgstr "ノード"

msgid ""
"**Nodes are the fundamental building blocks of your game**. They are like "
"the ingredients in a recipe. There are dozens of kinds that can display an "
"image, play a sound, represent a camera, and much more."
msgstr ""
"**ノードとは、ゲームの基礎的な構成要素のことです** 。ノードはレシピの材料のよ"
"うなものです。ノードには、画像を表示したり、音を鳴らしたり、カメラを表現した"
"りと、様々な種類があります。"

msgid "All nodes have the following characteristics:"
msgstr "すべてのノードには次の特性があります。"

msgid "A name."
msgstr "名前"

msgid "Editable properties."
msgstr "編集できるプロパティ"

msgid "They receive callbacks to update every frame."
msgstr "毎フレーム、更新するためのコールバックを受け取ります。"

msgid "You can extend them with new properties and functions."
msgstr "新しいプロパティと関数を使用して拡張できます。"

msgid "You can add them to another node as a child."
msgstr "別のノードを子として追加できます。"

msgid ""
"The last characteristic is important. **Together, nodes form a tree**, which "
"is a powerful feature to organize projects. Since different nodes have "
"different functions, combining them produces more complex behavior. As we "
"saw before, you can build a playable character the camera follows using a :"
"ref:`CharacterBody2D <class_CharacterBody2D>` node, a :ref:`Sprite2D "
"<class_Sprite2D>` node, a :ref:`Camera2D <class_Camera2D>` node, and a :ref:"
"`CollisionShape2D <class_CollisionShape2D>` node."
msgstr ""
"最後の特性が重要です。 **ノードは集まってツリーを形成します** 。これは、プロ"
"ジェクトを構成するための強力な機能です。 異なるノードには異なる機能があるた"
"め、それらを組み合わせるとより複雑な動作が実現できます。 前に説明したように、"
"カメラが追従するプレイアブルキャラクターを、 :ref:`CharacterBody2D "
"<class_CharacterBody2D>` ノード、 :ref:`Sprite2D <class_Sprite2D>` ノード、 :"
"ref:`Camera2D <class_Camera2D>` ノード、および :ref:`CollisionShape2D "
"<class_CollisionShape2D>` ノードを使って作成することができます。"

msgid "Scenes"
msgstr "シーン"

msgid ""
"When you organize nodes in a tree, like our character, we call this "
"construct a scene. Once saved, scenes work like new node types in the "
"editor, where you can add them as a child of an existing node. In that case, "
"the instance of the scene appears as a single node with its internals hidden."
msgstr ""
"このキャラクタのようにツリー内のノードを編成したものをシーンと呼びます。保存"
"すると、シーンはエディタの新しいタイプのノードのように動作し、既存のノードの"
"子として追加できます。シーンのインスタンスは、内部が非表示になっている単一の"
"ノードとして表示されます。"

msgid ""
"Scenes allow you to structure your game's code however you want. You can "
"**compose nodes** to create custom and complex node types, like a game "
"character that runs and jumps, a life bar, a chest with which you can "
"interact, and more."
msgstr ""
"シーンを使用すると、ゲームのコードを好きなように構成できます。 **ノードを構成"
"** して、走ったりジャンプしたりするゲームキャラクター・ライフバー・操作できる"
"チェストなど、独自で複雑なノードタイプを作成できます。"

msgid ""
"The Godot editor essentially is a **scene editor**. It has plenty of tools "
"for editing 2D and 3D scenes, as well as user interfaces. A Godot project "
"can contain as many of these scenes as you need. The engine only requires "
"one as your application's **main scene**. This is the scene Godot will first "
"load when you or a player runs the game."
msgstr ""
"Godotエディタは基本的に **シーンエディタ** です。2Dや3Dのシーンを編集するため"
"のツールや、ユーザーインターフェースなどが充実しています。1つのGodotプロジェ"
"クトには、必要なだけのシーンを含めることができます。エンジンが最低限で必要と"
"するのは、アプリケーションの **メインシーン** の1つだけです。これは、あなたや"
"プレイヤーがゲームを実行したときに、Godotが最初にロードするシーンです。"

msgid "On top of acting like nodes, scenes have the following characteristics:"
msgstr "ノードのように機能することに加えて、シーンには次の特性があります。"

msgid "They always have one root node, like the \"Character\" in our example."
msgstr "この例の「キャラクター」のように、常に1つのルートノードがあります。"

msgid "You can save them to your local drive and load them later."
msgstr "ローカルドライブに保存しておいて、後で読み込むことができます。"

msgid ""
"You can create as many instances of a scene as you'd like. You could have "
"five or ten characters in your game, created from your Character scene."
msgstr ""
"シーンのインスタンスはいくつでも作成できます。5人でも10人でも、キャラクター"
"シーンから、キャラクターをゲームに保持することが出来ます。"

msgid "Creating your first scene"
msgstr "最初のシーンを作る"

msgid ""
"Let's create our first scene with a single node. To do so, you will need to :"
"ref:`create a new project <doc_creating_and_importing_projects>` first. "
"After opening the project, you should see an empty editor."
msgstr ""
"それでは、最初のシーンをノード1つだけで作成してみましょう。そのためには、最初"
"に :ref:`新しいプロジェクト <doc_creating_and_importing_projects>` を作成する"
"必要があります。 プロジェクトを開くと、空のエディタが表示されるはずです。"

msgid ""
"In an empty scene, the Scene dock on the left shows several options to add a "
"root node quickly. \"2D Scene\" adds a :ref:`Node2D <class_Node2D>` node, "
"\"3D Scene\" adds a :ref:`Node3D <class_Node3D>` node, and \"User "
"Interface\" adds a :ref:`Control <class_Control>` node. These presets are "
"here for convenience; they are not mandatory. \"Other Node\" lets you select "
"any node to be the root node. In an empty scene, \"Other Node\" is "
"equivalent to pressing the \"Add Child Node\" button at the top-left of the "
"Scene dock, which usually adds a new node as a child of the currently "
"selected node."
msgstr ""
"空のシーンでは、左側のシーン ドックに、ルートノードをすばやく追加するための選"
"択肢がいくつか表示されます。「2D Scene (2Dシーン)」は :ref:`Node2D "
"<class_Node2D>` ノードを追加し、「3D Scene (3Dシーン)」は :ref:`Node3D "
"<class_Node3D>` ノードを追加し、「User Interface (ユーザーインターフェイス)」"
"は :ref:`Control <class_Control>` ノードを追加します。これらのプリセットは便"
"宜上用意されているもので、必ずしもこのボタンを使わなければならないというわけ"
"ではありません。「Other Node (その他のノード)」では任意のノードを選択できま"
"す。空のシーンにおいては、「その他のノード」はシーンドックの上部左側にある"
"「Add Child Node (子ノードを追加)」と全く同じ機能で、その機能は通常、現在選択"
"しているノードの子として新しいノードを追加するときに使います。"

msgid ""
"We're going to add a single :ref:`Label <class_Label>` node to our scene. "
"Its function is to draw text on the screen."
msgstr ""
"ここでは、:ref:`Label <class_Label>` ノードを1つシーンに追加します。このノー"
"ドの役割は、スクリーンにテキストを描くことです。"

msgid ""
"Press the \"Add Child Node\" button or \"Other Node\" to create a root node."
msgstr ""
"\"子ノードを追加\"ボタンをクリックするか、その他のノードをクリックして親ノー"
"ドを作成します。"

msgid "The Create Node dialog opens, showing the long list of available nodes."
msgstr ""
"するとノード作成のダイアログが開いて、作成できるノードの長いリストが表示され"
"ます。"

msgid "Select the Label node. You can type its name to filter down the list."
msgstr ""
"[Label] ノードを選択します。名前を入力して、リストを絞り込むことができます。"

msgid ""
"Click on the Label node to select it and click the Create button at the "
"bottom of the window."
msgstr ""
"[Label] ノードをクリックして選択し、ウィンドウの下部にある [Create] ボタンを"
"クリックします。"

msgid ""
"A lot happens when you add a scene's first node. The scene changes to the 2D "
"workspace because Label is a 2D node type. The Label appears, selected, in "
"the top-left corner of the viewport. The node appears in the Scene dock on "
"the left, and the node's properties appear in the Inspector dock on the "
"right."
msgstr ""
"シーンの最初のノードを追加すると、多くのことが起こります。[Label]が 2D ノー"
"ド タイプであるため、シーンは 2D ワークスペースに変わります。ビューポートの左"
"上隅に[Label]が表示されます。ノードは左側のシーン ドックに表示され、ノードの"
"プロパティは右側のインスペクター ドックに表示されます。"

msgid "Changing a node's properties"
msgstr "ノードのプロパティの変更"

msgid ""
"The next step is to change the Label's \"Text\" property. Let's change it to "
"\"Hello World\"."
msgstr ""
"次の一歩はLabelの「Text(テキスト)」プロパティを変更することです。「Hello "
"world」に変えてみましょう。"

msgid ""
"Head to the Inspector dock on the right of the viewport. Click inside the "
"field below the Text property and type \"Hello World\"."
msgstr ""
"ビューポートの右側にあるインスペクター ドックに向かいます。Text プロパティの"
"下のフィールドをクリックし、「Hello World」と入力します。"

msgid "You will see the text draw in the viewport as you type."
msgstr "入力すると、ビューポートにテキストが描画されるのがわかります。"

msgid ""
"You can edit any property listed in the Inspector as we did with the Text. "
"For a complete reference of the Inspector dock, see :ref:"
"`doc_editor_inspector_dock`."
msgstr ""
"Text プロパティで行ったように、インスペクターに表示されたプロパティを編集する"
"ことができます。インスペクター ドックの詳細なリファレンスについては :ref:"
"`doc_editor_inspector_dock` をご覧ください。"

msgid ""
"You can move your Label node in the viewport by selecting the move tool in "
"the toolbar."
msgstr ""
"ビューポート内のLabelノードを移動するには、ツールバーの移動ツールを選択しま"
"す。"

msgid ""
"With the Label selected, click and drag anywhere in the viewport to move it "
"to the center of the view delimited by the rectangle."
msgstr ""
"[Label] を選択した状態で、ビューポート内の任意の場所をクリックしてドラッグす"
"ると、長方形で区切られたビューの中心に移動します。"

msgid "Running the scene"
msgstr "シーンの実行"

msgid ""
"Everything's ready to run the scene! Press the Play Scene button in the top-"
"right of the screen or press :kbd:`F6` (:kbd:`Cmd + R` on macOS)."
msgstr ""
"さて、シーンを実行する準備がすべて整いました！トップバーの右の[シーンを実行]"
"ボタンを押します (または :kbd:`F6` を押します)。"

msgid ""
"A popup invites you to save the scene, which is required to run it. Click "
"the Save button in the file browser to save it as ``label.tscn``."
msgstr ""
"シーンを保存するように促すポップアップが表示されますが、シーンの実行のために"
"必要となります。ファイルブラウザの保存ボタンを押して、シーンを \"label."
"tscn\" という名前で保存してください。"

msgid ""
"The Save Scene As dialog, like other file dialogs in the editor, only allows "
"you to save files inside the project. The ``res://`` path at the top of the "
"window represents the project's root directory and stands for \"resource "
"path\". For more information about file paths in Godot, see :ref:"
"`doc_filesystem`."
msgstr ""
"Save Scene As ダイアログは、エディタの他のファイルダイアログと同様に、プロ"
"ジェクト内のファイルのみ保存可能です。ウィンドウ上部の``res://`` パスはプロ"
"ジェクト'のルートディレクトリを表し、 \"resource path\" を意味しています。"
"Godotのファイルパスについての詳細は、 :ref:`doc_filesystem` を参照してくださ"
"い。"

msgid ""
"The application should open in a new window and display the text \"Hello "
"World\"."
msgstr ""
"アプリケーションが新しいウィンドウで開き、\"Hello World\"のテキストが表示され"
"るはずです。"

msgid ""
"Close the window or press :kbd:`F8` (:kbd:`Cmd + .` on macOS) to quit the "
"running scene."
msgstr ""
"ウィンドウを閉じるか、 :kbd:`F8`（macOS では :kbd:`Cmd + .`）を押すと、実行中"
"のシーンを終了します。"

msgid "Setting the main scene"
msgstr "メイン シーンの設定"

msgid ""
"To run our test scene, we used the Play Scene button. Another button next to "
"it allows you to set and run the project's main scene. You can press :kbd:"
"`F5` (:kbd:`Cmd + B` on macOS) to do so."
msgstr ""
"テストシーンを実行するには、「実行」ボタンを使用します。その隣にある別のボタ"
"ンで、プロジェクトのメインシーンを設定して実行することができます'。その際は :"
"kbd:`F5` を押してください。"

msgid "A popup window appears and invites you to select the main scene."
msgstr ""
"ポップアップウィンドウが表示され、メインシーンを選択するように促されます。"

msgid ""
"Click the Select button, and in the file dialog that appears, double click "
"on ``label.tscn``."
msgstr ""
"「選択」ボタンをクリックし、表示されたファイルダイアログで、 ``label.tscn`` "
"をダブルクリックします。"

msgid ""
"The demo should run again. Moving forward, every time you run the project, "
"Godot will use this scene as a starting point."
msgstr ""
"デモが再び実行されるはずです。今後、プロジェクトを実行するたびに、Godot はこ"
"のシーンを開始点として使用します。"

msgid ""
"The editor saves the main scene's path in a project.godot file in your "
"project's directory. While you can edit this text file directly to change "
"project settings, you can also use the \"Project -> Project Settings\" "
"window to do so. For more information, see :ref:`doc_project_settings`."
msgstr ""
"エディターは、プロジェクトのディレクトリに、project.godotファイルとしてメイン"
"シーンのパスを保存します。このテキストファイルを直接編集してプロジェクトの設"
"定を変更することもできますが、\"Project -> Project Settings\"ウィンドウを使用"
"して変更することも可能です。 :ref:`doc_project_settings` をご確認下さい。"

msgid ""
"In the next part, we will discuss another key concept in games and in Godot: "
"creating instances of a scene."
msgstr ""
"次のパートでは、ゲームとGodotのもう1つの重要な概念、シーンのインスタンスの作"
"成について説明します。"

msgid "Translation status"
msgstr "翻訳ステータス"
