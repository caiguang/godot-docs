# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Standard Material 3D and ORM Material 3D"
msgstr ""

msgid "Introduction"
msgstr "はじめに"

#, fuzzy
msgid ""
"``StandardMaterial3D`` and ``ORMMaterial3D`` (Occlusion, Roughness, "
"Metallic) are default 3D materials that aim to provide most of the features "
"artists look for in a material, without the need for writing shader code. "
"However, they can be converted to shader code if additional functionality is "
"needed."
msgstr ""
"``SpatialMaterial`` は、シェーダーコードを記述する必要なしに、アーティストが"
"マテリアルで探すほとんどの機能を提供することを目的としたデフォルトの3Dマテリ"
"アルです。ただし、追加の機能が必要な場合は、シェーダーコードに変換できます。"

#, fuzzy
msgid "This tutorial explains the parameters present in both materials."
msgstr ""
"このチュートリアルでは、\\ ``SpatialMaterial`` に存在するほとんどのパラメー"
"ターについて説明します。"

#, fuzzy
msgid ""
"There are 4 ways to add these materials to an object. A material can be "
"added in the *Material* property of the mesh. It can be added in the "
"*Material* property of the node using the mesh (such as a MeshInstance3D "
"node), the *Material Override* property of the node using the mesh, and the "
"*Material Overlay*."
msgstr ""
"オブジェクトに ``SpatialMaterial`` を追加するには3つの方法があります。メッ"
"シュの *Material* プロパティに追加できます。メッシュを使用するノード"
"(MeshInstanceノードなど)の *Material* プロパティ、またはメッシュを使用する"
"ノードの *Material Override* プロパティに追加できます。"

msgid ""
"If you add a material to the mesh itself, every time that mesh is used it "
"will have that material. If you add a material to the node using the mesh, "
"the material will only be used by that node, it will also override the "
"material property of the mesh. If a material is added in the *Material "
"Override* property of the node, it will only be used by that node. It will "
"also override the regular material property of the node and the material "
"property of the mesh."
msgstr ""
"メッシュ自体にマテリアルを追加すると、そのメッシュが使用されるたびにそのマテ"
"リアルが追加されます。メッシュを使用してノードにマテリアルを追加すると、マテ"
"リアルはそのノードでのみ使用され、メッシュのマテリアルプロパティもオーバーラ"
"イドします。マテリアルがノードの *Material Override* プロパティに追加された場"
"合、そのノードでのみ使用されます。また、ノードの通常のマテリアルプロパティと"
"メッシュのマテリアルプロパティもオーバーライドします。"

msgid ""
"The *Material Overlay* property will render a material **over** the current "
"one being used by the mesh. As an example, this can be used to put a "
"transparent shield effect on a mesh."
msgstr ""

#, fuzzy
msgid "BaseMaterial 3D settings"
msgstr "パーティクルマテリアルの設定"

msgid ""
"StandardMaterial3D has many settings that determine the look of a material. "
"All of these are under the BaseMaterial3D category"
msgstr ""

msgid ""
"ORM materials are almost exactly the same with one difference. Instead of "
"separate settings and textures for occlusion, roughness, and metallic, there "
"is a single ORM texture. The different color channels of that texture are "
"used for each parameter. Programs such as Substance Painter and Armor Paint "
"will give you the option to export in this format, for these two programs "
"it's with the export preset for unreal engine, which also uses ORM textures."
msgstr ""

#, fuzzy
msgid "Transparency"
msgstr "透明"

msgid ""
"By default, materials in Godot are opaque. This is fast to render, but it "
"means the material can't be seen through even if you use a transparent "
"texture in the **Albedo > Texture** property (or set **Albedo > Color** to a "
"transparent color)."
msgstr ""

msgid ""
"To be able to see through a material, the material needs to be made "
"*transparent*. Godot offers several transparency modes:"
msgstr ""

msgid ""
"**Disabled:** Material is opaque. This is the fastest to render, with all "
"rendering features supported."
msgstr ""

msgid ""
"**Alpha:** Material is transparent. Semi-transparent areas are drawn with "
"blending. This is slow to render, but it allows for partial transparency "
"(also known as translucency). Materials using alpha blending also can't cast "
"shadows, and are not visible in screen-space reflections."
msgstr ""

msgid "**Alpha** is a good fit for particle effects and VFX."
msgstr ""

msgid ""
"**Alpha Scissor:** Material is transparent. Semi-transparent areas whose "
"opacity is below **Alpha Scissor Threshold** are not drawn (above this "
"opacity, these are drawn as opaque). This is faster to render than Alpha and "
"doesn't exhibit transparency sorting issues. The downside is that this "
"results in \"all or nothing\" transparency, with no intermediate values "
"possible. Materials using alpha scissor can cast shadows."
msgstr ""

msgid ""
"**Alpha Scissor** is ideal for foliage and fences, since these have hard "
"edges and require correct sorting to look good."
msgstr ""

msgid ""
"**Alpha Hash:** Material is transparent. Semi-transparent areas are drawn "
"using dithering. This is also \"all or nothing\" transparency, but dithering "
"helps represent partially opaque areas with limited precision depending on "
"viewport resolution. Materials using alpha hash can cast shadows."
msgstr ""

msgid ""
"**Alpha Hash** is suited for realistic-looking hair, although stylized hair "
"may work better with alpha scissor."
msgstr ""

msgid ""
"**Depth Pre-Pass:** This renders the object's fully opaque pixels via the "
"opaque pipeline first, then renders the rest with alpha blending. This "
"allows transparency sorting to be *mostly* correct (albeit not fully so, as "
"partially transparent regions may still exhibit incorrect sorting). "
"Materials using depth prepass can cast shadows."
msgstr ""

msgid ""
"Godot will automatically force the material to be transparent with alpha "
"blending if *any* of these conditions is met:"
msgstr ""

msgid "Setting the transparency mode to **Alpha** (as described here)."
msgstr ""

msgid "Setting a blend mode other than the default **Mix**"
msgstr ""

msgid "Enabling **Refraction**, **Proximity Fade**, or **Distance Fade**."
msgstr ""

msgid ""
"Comparison between alpha blending (left) and alpha scissor (right) "
"transparency:"
msgstr ""

msgid ""
"Alpha-blended transparency has several :ref:`limitations "
"<doc_3d_rendering_limitations_transparency_sorting>`:"
msgstr ""

msgid ""
"Alpha-blended materials are significantly slower to render, especially if "
"they overlap."
msgstr ""

msgid ""
"Alpha-blended materials may exhibit sorting issues when transparent surfaces "
"overlap each other. This means that surfaces may render in the incorrect "
"order, with surfaces in the back appearing to be in front of those which are "
"actually closer to the camera."
msgstr ""

msgid ""
"Alpha-blended materials don't cast shadows, although they can receive "
"shadows."
msgstr ""

msgid ""
"Alpha-blended materials don't appear in any reflections (other than "
"reflection probes)."
msgstr ""

msgid ""
"Screen-space reflections and sharp SDFGI reflections don't appear on alpha-"
"blended materials. When SDFGI is enabled, rough reflections are used as a "
"fallback regardless of material roughness."
msgstr ""

msgid ""
"Before using the **Alpha** transparency mode, always consider whether "
"another transparency mode is more suited for your needs."
msgstr ""

#, fuzzy
msgid "Alpha Antialiasing"
msgstr "**アンチエイリアシング:**"

msgid ""
"This property is only visible when the transparency mode is **Alpha "
"Scissor** or **Alpha Hash**."
msgstr ""

msgid ""
"While alpha scissor and alpha hash materials are faster to render than alpha-"
"blended materials, they exhibit hard edges between opaque and transparent "
"regions. While it's possible to use post-processing-based :ref:`antialiasing "
"techniques <doc_3d_antialiasing>` such as FXAA and TAA, this is not always "
"desired as these techniques tend to make the final result look blurrier or "
"exhibit ghosting artifacts."
msgstr ""

#, fuzzy
msgid "There are 3 alpha antialiasing modes available:"
msgstr "これを行うには、次の 2 つの方法があります:"

msgid ""
"**Disabled:** No alpha antialiasing. Edges of transparent materials will "
"appear aliased unless a post-processing-based antialiasing solution is used."
msgstr ""

msgid ""
"**Alpha Edge Blend:** Results in a smooth transition between opaque and "
"transparent areas. Also known as \"alpha to coverage\"."
msgstr ""

msgid ""
"**Alpha Edge Clip:** Results in a sharp, but still antialiased transition "
"between opaque and transparent areas. Also known as \"alpha to coverage + "
"alpha to one\"."
msgstr ""

msgid ""
"When the alpha antialiasing mode is set to **Alpha Edge Blend** or **Alpha "
"Edge Clip**, a new **Alpha Antialiasing Edge** property becomes visible "
"below in the inspector. This property controls the threshold below which "
"pixels should be made transparent. While you've already defined an alpha "
"scissor threshold (when using **Alpha Scissor** only), this additional "
"threshold is used to smoothly transition between opaque and transparent "
"pixels. **Alpha Antialiasing Edge** must *always* be set to a value that is "
"strictly below the alpha scissor threshold. The default of ``0.3`` is a "
"sensible value with an alpha scissor of threshold of ``0.5``, but remember "
"to adjust this alpha antialiasing edge when modifying the alpha scissor "
"threshold."
msgstr ""

msgid ""
"If you find the antialiasing effect not effective enough, try increasing "
"**Alpha Antialiasing Edge** while making sure it's below **Alpha Scissor "
"Threshold** (if the material uses alpha scissor). On the other hand, if you "
"notice the texture's appearance visibly changing as the camera moves closer "
"to the material, try decreasing **Alpha Antialiasing Edge**."
msgstr ""

msgid ""
"For best results, MSAA 3D should be set to at least 2× in the Project "
"Settings when using alpha antialiasing. This is because this feature relies "
"on alpha to coverage, which is a feature provided by MSAA."
msgstr ""

msgid ""
"Without MSAA, a fixed dithering pattern is applied on the material's edges, "
"which isn't very effective at smoothing out edges (although it can still "
"help a little)."
msgstr ""

msgid "Blend Mode"
msgstr "ブレンドモード"

msgid ""
"Controls the blend mode for the material. Keep in mind that any mode other "
"than *Mix* forces the object to go through the transparent pipeline."
msgstr ""
"マテリアルのブレンドモードをコントロールします。\\ *Mix* 以外のモードでは、オ"
"ブジェクトが強制的に透過パイプラインをスルーする(処理されない)ことに注意して"
"ください。"

msgid ""
"**Mix:** Default blend mode, alpha controls how much the object is visible."
msgstr ""
"**Mix:** デフォルトのブレンドモード、アルファはオブジェクトの表示量(透け方)を"
"制御します。"

#, fuzzy
msgid ""
"**Add:** The final color of the object is added to the color of the screen, "
"nice for flares or some fire-like effects."
msgstr ""
"**Add:** オブジェクトは加算的にブレンドされ、フレアや火のようなエフェクトに適"
"しています。"

msgid ""
"**Sub:** The final color of the object is subtracted from the color of the "
"screen."
msgstr ""

#, fuzzy
msgid ""
"**Mul:** The final color of the object is multiplied with the color of the "
"screen."
msgstr ""
"**Front:** 表示されていない場合、オブジェクトの前面がカリングされます。"

msgid "Cull Mode"
msgstr "カリングモード"

msgid ""
"Determines which side of the object is not drawn when backfaces are rendered:"
msgstr ""
"背面がレンダリングされるときにオブジェクトのどちら側が描画されないかを決定し"
"ます:"

msgid "**Back:** The back of the object is culled when not visible (default)."
msgstr ""
"**Back:** オブジェクトの背面は、表示されていないときにカリングされます(デフォ"
"ルト)。"

msgid "**Front:** The front of the object is culled when not visible."
msgstr ""
"**Front:** 表示されていない場合、オブジェクトの前面がカリングされます。"

msgid ""
"**Disabled:** Used for objects that are double-sided (no culling is "
"performed)."
msgstr "**Disabled:** 両面オブジェクトに使用します(カリングは実行されません)。"

msgid ""
"By default, Blender has backface culling disabled on materials and will "
"export materials to match how they render in Blender. This means that "
"materials in Godot will have their cull mode set to **Disabled**. This can "
"decrease performance since backfaces will be rendered, even when they are "
"being culled by other faces. To resolve this, enable **Backface Culling** in "
"Blender's Materials tab, then export the scene to glTF again."
msgstr ""

msgid "Depth Draw Mode"
msgstr "Depth Draw Mode(深度描画モード)"

msgid "Specifies when depth rendering must take place."
msgstr "深度レンダリングを実行する必要がある場合を指定します。"

msgid "**Opaque Only (default):** Depth is only drawn for opaque objects."
msgstr ""
"**Opaque Only(デフォルト):** 深度(奥行き)は不透明オブジェクトに対してのみ描画"
"されます。"

msgid ""
"**Always:** Depth draw is drawn for both opaque and transparent objects."
msgstr ""
"**Always:** 不透明オブジェクトと透明オブジェクトの両方に対して深度描画が描画"
"されます。"

#, fuzzy
msgid ""
"**Never:** No depth draw takes place (do not confuse this with the No Depth "
"Test option below)."
msgstr ""
"**Never:** 深度描画は行われません(これを上記のNo Depth Test オプションと混同"
"しないでください)。"

msgid ""
"**Depth Pre-Pass:** For transparent objects, an opaque pass is made first "
"with the opaque parts, then transparency is drawn above. Use this option "
"with transparent grass or tree foliage."
msgstr ""
"**Depth Pre-Pass:** 透明なオブジェクトの場合、まず不透明な部分で不透明なパス"
"が作成され、次に透明度が上に描画されます。このオプションは、透明な草や木の葉"
"で使用します。"

msgid "No Depth Test"
msgstr "No Depth Test(深度テスト無し)"

msgid ""
"In order for close objects to appear over far away objects, depth testing is "
"performed. Disabling it has the result of objects appearing over (or under) "
"everything else."
msgstr ""
"近くのオブジェクトを遠くのオブジェクトの上に表示するために、深度テストが実行"
"されます。無効にすると、オブジェクトが他のすべての上(または下)に表示されま"
"す。"

msgid ""
"Disabling this makes the most sense for drawing indicators in world space, "
"and works very well with the *Render Priority* property of Material (see the "
"bottom of this page)."
msgstr ""
"これを無効にすることは、ワールド空間でインジケータを描画する場合に最適で、"
"Materialの *Render Priority* プロパティともに非常にうまく機能します(このペー"
"ジの下部を参照)。"

msgid "Shading"
msgstr "シェーディング"

#, fuzzy
msgid "Shading mode"
msgstr "シェーディング"

msgid ""
"Godot has a more or less uniform cost per pixel thanks to depth pre-pass. "
"All lighting calculations are made by running the lighting shader on every "
"pixel."
msgstr ""
"Godotでは深度プリパスのおかげで、ピクセルあたりのコストはほぼ均一です。すべて"
"の照明計算は、すべてのピクセルで照明シェーダーを実行することによって行われま"
"す。"

msgid ""
"As these calculations are costly, performance can be brought down "
"considerably in some corner cases such as drawing several layers of "
"transparency (which is common in particle systems). Switching to per-vertex "
"lighting may help in these cases."
msgstr ""
"これらの計算にはコストがかかるため、いくつもの透明度を持つレイヤーを描画する"
"場合などの、一部のコーナーケース(極まれで厄介なケース)ではパフォーマンスが大"
"幅に低下する可能性があります(これはパーティクルシステムでは一般的です)。これ"
"らの場合、頂点ごとの照明に切り替えると役立つ場合があります。"

msgid ""
"Additionally, on low-end or mobile devices, switching to vertex lighting can "
"considerably increase rendering performance."
msgstr ""
"さらに、ローエンドまたはモバイルデバイスでは、頂点照明(vertex lighting)に切り"
"替えると、レンダリングパフォーマンスが大幅に向上します。"

msgid ""
"Keep in mind that when vertex lighting is enabled, only directional lighting "
"can produce shadows (for performance reasons)."
msgstr ""
"vertex lightingを有効にすると、指向性のライティングのみが影を生成できることに"
"注意してください(パフォーマンス上の理由から)。"

#, fuzzy
msgid ""
"However, in some cases you might want to show just the albedo (color) and "
"ignore the rest. To do this you can set the shading mode to unshaded"
msgstr ""
"ただし、場合によっては、アルベド(色)のみを表示し、残りは無視したい場合があり"
"ます。このフラグをオンに切り替えると、すべてのシェーディングが削除され、照明"
"の影響を受けていない元々の色が表示されます。"

msgid "Diffuse Mode"
msgstr "\\ Diffuse Mode(拡散モード)"

msgid ""
"Specifies the algorithm used by diffuse scattering of light when hitting the "
"object. The default is *Burley*. Other modes are also available:"
msgstr ""
"光がオブジェクトに当たるときの拡散散乱で使用されるアルゴリズムを指定します。"
"デフォルトは *Burley* です。他のモードも利用可能です:"

msgid ""
"**Burley:** Default mode, the original Disney Principled PBS diffuse "
"algorithm."
msgstr ""
"**Burley:** デフォルトモード、オリジナルのDisney Principled PBS拡散アルゴリズ"
"ム。"

msgid "**Lambert:** Is not affected by roughness."
msgstr "**Lambert:** roughnessの影響を受けません。"

msgid ""
"**Lambert Wrap:** Extends Lambert to cover more than 90 degrees when "
"roughness increases. Works great for hair and simulating cheap subsurface "
"scattering. This implementation is energy conserving."
msgstr ""
"**Lambert Wrap:** roughnessが増すと、Lambertを90度以上に広げます。髪の毛や低"
"コストのサブサーフェススキャッタリングのシミュレーションに最適です。この実装"
"は省エネルギーです。"

msgid ""
"**Oren Nayar:** This implementation aims to take microsurfacing into account "
"(via roughness). Works well for clay-like materials and some types of cloth."
msgstr ""
"**Oren Nayar:** この実装は、(roughnessによる)マイクロサーフェシングを考慮する"
"ことを目的としています。粘土のような素材やある種の布に適しています。"

#, fuzzy
msgid ""
"**Toon:** Provides a hard cut for lighting, with smoothing affected by "
"roughness. It is recommended you disable sky contribution from your "
"environment's ambient light settings or disable ambient light in the "
"StandardMaterial3D to achieve a better effect."
msgstr ""
"**Toon:** roughnessの影響を受けたスムージングで、照明にハードカットを提供しま"
"す。より良い効果を得るには、環境の環境光設定から空の影響を無効にするか、"
"spatialマテリアルの環境光を無効にすることをお勧めします。"

msgid "Specular Mode"
msgstr "Specular Mode(鏡面反射モード )"

msgid ""
"Specifies how the specular blob will be rendered. The specular blob "
"represents the shape of a light source reflected in the object."
msgstr ""
"鏡面反射(スペキュラ)blob のレンダリング方法を指定します。鏡面反射blobは、オブ"
"ジェクトに反射される光源の形状を表します。"

#, fuzzy
msgid "**SchlickGGX:** The most common blob used by PBR 3D engines nowadays."
msgstr "**ShlickGGX:** PBR 3Dエンジンで最近使用されている最も一般的なblob。"

msgid ""
"**Blinn:** Common in previous-generation engines. Not worth using nowadays, "
"but left here for the sake of compatibility."
msgstr ""
"**Blinn:** 前世代のエンジンで一般的。現在使用する価値はありませんが、互換性の"
"ためにここに残しました。"

msgid "**Phong:** Same as above."
msgstr "**Phong:** 上記と同じ。"

msgid ""
"**Toon:** Creates a toon blob, which changes size depending on roughness."
msgstr ""
"**Toon:** トゥーンblobを作成します。これは、roughnessに応じてサイズを変更しま"
"す。"

msgid "**Disabled:** Sometimes the blob gets in the way. Begone!"
msgstr "**Disabled:** 時々blobが邪魔になります。なので立ち去りなさい！"

msgid "Disable Ambient Light"
msgstr "Disable Ambient Light(アンビエントライト無効)"

msgid ""
"Makes the object not receive any kind of ambient lighting that would "
"otherwise light it."
msgstr ""
"他のライトが無い場合でも照明を行うアンビエントライトをオブジェクトが受けない"
"ようにします。"

#, fuzzy
msgid "Disable Fog"
msgstr "Disabled"

msgid ""
"Makes the object unaffected by depth-based or volumetric fog. This is useful "
"for particles or other additively blended materials that would otherwise "
"show the shape of the mesh (even in places where it would be invisible "
"without the fog)."
msgstr ""

msgid "Vertex Color"
msgstr "Vertex Color(頂点色)"

#, fuzzy
msgid ""
"This setting allows choosing what is done by default to vertex colors that "
"come from your 3D modeling application. By default, they are ignored."
msgstr ""
"この設定では、3D モデリング アプリケーションから取得した頂点色に対して既定で"
"実行される処理を選択できます。デフォルトでは、それらは無視されます。"

msgid "Use as Albedo"
msgstr "Use as Albedo(アルベドとして使用)"

msgid "Choosing this option means vertex color is used as albedo color."
msgstr "このオプションを選択すると、頂点色がアルベド色として使用されます。"

msgid "Is sRGB"
msgstr "Is sRGB(これはsRGBです)"

#, fuzzy
msgid ""
"Most 3D modeling software will likely export vertex colors as sRGB, so "
"toggling this option on will help them look correct."
msgstr ""
"ほとんどの3D DCCは頂点色をsRGBとしてエクスポートする可能性が高いため、このオ"
"プションをオンに切り替えると、正しく見えるようになります。"

msgid "Albedo"
msgstr "Albedo(アルベド)"

msgid ""
"*Albedo* is the base color for the material, on which all the other settings "
"operate. When set to *Unshaded*, this is the only color that is visible. In "
"previous versions of Godot, this channel was named *Diffuse*. The change of "
"name mainly happened because, in PBR (Physically Based Rendering), this "
"color affects many more calculations than just the diffuse lighting path."
msgstr ""
"*Albedo* は、他のすべての設定に関連するマテリアルのベースカラーです。\\ "
"*Unshaded* に設定すると、これが表示される唯一の色になります。 Godotの以前の"
"バージョンでは、このチャネルの名前は *Diffuse* でした。名前の変更を行った主な"
"理由は、PBR(Physically Based Rendering)では、この色が単なる拡散照明パスよりも"
"多くの計算に影響するためです。"

msgid "Albedo color and texture can be used together as they are multiplied."
msgstr "アルベドの色とテクスチャは、乗算されて一緒に使用されます。"

msgid ""
"*Alpha channel* in albedo color and texture is also used for the object "
"transparency. If you use a color or texture with *alpha channel*, make sure "
"to either enable transparency or *alpha scissoring* for it to work."
msgstr ""
"アルベド色とテクスチャの *アルファチャンネル* は、オブジェクトの透明度にも使"
"用されます。色またはテクスチャで *アルファチャンネル* を使用する場合は、"
"transparencyを有効にするか、\\*alpha scissoring* を有効にしてください。"

msgid "Metallic"
msgstr "Metallic(メタリック)"

msgid ""
"Godot uses a metallic model over competing models due to its simplicity. "
"This parameter defines how reflective the material is. The more reflective, "
"the less diffuse/ambient light affects the material and the more light is "
"reflected. This model is called \"energy-conserving\"."
msgstr ""
"Godotは、そのシンプルさから、競合する他のモデルではなくMetalicモデルを使用し"
"ています。このパラメーターは、マテリアルの反射率を定義します。反射が多いほ"
"ど、拡散光や周囲光が材料に影響を及ぼし、反射光が多くなります。このモデルは"
"「省エネルギー」だといわれています。"

msgid ""
"The *Specular* parameter is a general amount for the reflectivity (unlike "
"*Metallic*, this is not energy-conserving, so leave it at ``0.5`` and don't "
"touch it unless you need to)."
msgstr ""
"*Specular* パラメーターは、反射率の一般的な量です(*Metallic* とは異なり、これ"
"はエネルギーを節約しませんので、\\ ``0.5`` のままにして、必要でない限り触れな"
"いでください)。"

msgid ""
"The minimum internal reflectivity is ``0.04``, so it's impossible to make a "
"material completely unreflective, just like in real life."
msgstr ""
"最小の内部反射率は ``0.04`` であるため、現実の世界のようにマテリアルを完全に"
"無反射にすることはできません。"

msgid "Roughness"
msgstr "ラフネス"

msgid ""
"*Roughness* affects the way reflection happens. A value of ``0`` makes it a "
"perfect mirror while a value of ``1`` completely blurs the reflection "
"(simulating natural microsurfacing). Most common types of materials can be "
"achieved with the right combination of *Metallic* and *Roughness*."
msgstr ""
"*Roughness* は反射の発生方法に影響します。\\ ``0`` の値は完璧な鏡になり、\\ "
"``1`` の値は反射を完全にぼかします(自然なマイクロサーフェシングをシミュレート"
"します)。最も一般的な種類のマテリアルは、\\ *Metaric* と *Roughness* の適切な"
"組み合わせで実現できます。"

msgid "Emission"
msgstr "Emission(発光)"

#, fuzzy
msgid ""
"*Emission* specifies how much light is emitted by the material (keep in mind "
"this does not include light surrounding geometry unless :ref:`VoxelGI "
"<doc_using_voxel_gi>` or :ref:`SDFGI <doc_using_sdfgi>` are used). This "
"value is added to the resulting final image and is not affected by other "
"lighting in the scene."
msgstr ""
"*Emission* は、マテリアルから放射される光の量を指定します(これには、\\ :ref:"
"`doc_gi_probes` が使用されない限り、ジオメトリを囲む光は含まれないことに注意"
"してください)。この値は、結果の最終画像に追加され、シーン内の他の照明の影響を"
"受けません。"

#, fuzzy
msgid "Normal map"
msgstr "Normalmap(法線マップ)"

#, fuzzy
msgid ""
"Normal mapping allows you to set a texture that represents finer shape "
"detail. This does not modify geometry, only the incident angle for light. In "
"Godot, only the red and green channels of normal maps are used for better "
"compression and wider compatibility."
msgstr ""
"法線マッピングを使用すると、より詳細な形状細部を表すテクスチャを設定できま"
"す。これはジオメトリを変更せず、光の入射角のみを変更します。Godot では、より"
"広い互換性を保つために、法線マップの赤と緑のチャネルのみが使用されます。"

#, fuzzy
msgid ""
"Godot requires the normal map to use the X+, Y+ and Z+ coordinates, this is "
"known as OpenGL style. If you've imported a material made to be used with "
"another engine it may be DirectX style, in which case the normal map needs "
"to be converted so its Y axis is flipped."
msgstr ""
"Godotでは、X+、Y-、Z+の座標を使用するために、法線マップを変換する必要がありま"
"す。つまり、他のエンジンで使用するために作られたマテリアルをインポートした場"
"合、法線マップの Y 軸が反転するように変換する必要があるかもしれません。そうし"
"ないと、法線マップの方向がY軸上で反転して見えることがあります。"

msgid ""
"More information about normal maps (including a coordinate order table for "
"popular engines) can be found `here <http://wiki.polycount.com/wiki/"
"Normal_Map_Technical_Details>`__."
msgstr ""

msgid "Rim"
msgstr "Rim(縁)"

msgid ""
"Some fabrics have small micro-fur that causes light to scatter around it. "
"Godot emulates this with the *Rim* parameter. Unlike other rim lighting "
"implementations, which just use the emission channel, this one actually "
"takes light into account (no light means no rim). This makes the effect "
"considerably more believable."
msgstr ""
"一部の布地には、周囲に光を散乱させる小さなマイクロファーがあります。 Godot"
"は、これを *Rim* パラメーターでエミュレートします。Emissionチャネルのみを使用"
"する他のリム照明の実装とは異なり、この実装では実際に光が考慮されます(光がない"
"場合はリムが現れないことを意味します)。これにより、より真実味を作り出す効果が"
"えられます。"

msgid ""
"Rim size depends on roughness, and there is a special parameter to specify "
"how it must be colored. If *Tint* is ``0``, the color of the light is used "
"for the rim. If *Tint* is ``1``, then the albedo of the material is used. "
"Using intermediate values generally works best."
msgstr ""
"リムのサイズはroughnessに依存し、色の付け方を指定する特別なパラメーターがあり"
"ます。\\ *Tint*が ``0`` の場合、ライトの色がリムに使用されます。\\ *Tint* が "
"``1`` の場合、素材のアルベドが使用されます。通常、中間値を使用するのが最適で"
"す。"

msgid "Clearcoat"
msgstr "Clearcoat(クリアコート)"

msgid ""
"The *Clearcoat* parameter is used to add a secondary pass of transparent "
"coat to the material. This is common in car paint and toys. In practice, "
"it's a smaller specular blob added on top of the existing material."
msgstr ""
"*Clearcoat* パラメーターは、透明なコーティングの2次パスをマテリアルに追加する"
"ために使用されます。これは、車の塗装やおもちゃでは一般的です。実際には、既存"
"のマテリアルの上に追加される小さなスペキュラblobです。"

msgid "Anisotropy"
msgstr "Anisotropy(異方性)"

msgid ""
"This changes the shape of the specular blob and aligns it to tangent space. "
"Anisotropy is commonly used with hair, or to make materials such as brushed "
"aluminum more realistic. It works especially well when combined with "
"flowmaps."
msgstr ""
"これにより、スペキュラblobの形状が変更され、接線空間に位置合わせされます。異"
"方性は一般に髪の毛に使用されるか、ブラシをかけられたアルミニウムなどの素材を"
"よりリアルにするために使用されます。フローマップ(flowmap)と組み合わせると、特"
"にうまく機能します。"

msgid "Ambient Occlusion"
msgstr "アンビエントオクルージョン"

msgid ""
"It is possible to specify a baked ambient occlusion map. This map affects "
"how much ambient light reaches each surface of the object (it does not "
"affect direct light by default). While it is possible to use Screen-Space "
"Ambient Occlusion (SSAO) to generate ambient occlusion, nothing beats the "
"quality of a well-baked AO map. It is recommended to bake ambient occlusion "
"whenever possible."
msgstr ""
"焼き込み(ベイク)処理されたアンビエントオクルージョンマップを指定することがで"
"きます。このマップは、オブジェクトの各表面に到達する環境光の光量に影響します"
"(デフォルトでは、直接光には影響しません)。スクリーンスペースアンビエントオク"
"ルージョン(SSAO)を使用してアンビエントオクルージョンを生成することは可能です"
"が、よく焼き込まれたAOマップの品質に勝るものはありません。可能な場合は、アン"
"ビエントオクルージョンを焼き込むことをお勧めします。"

#, fuzzy
msgid "Height"
msgstr "ライト"

msgid ""
"Setting a depth map on a material produces a ray-marched search to emulate "
"the proper displacement of cavities along the view direction. This is not "
"real added geometry, but an illusion of depth. It may not work for complex "
"objects, but it produces a realistic depth effect for textures. For best "
"results, *Depth* should be used together with normal mapping."
msgstr ""
"マテリアルにDepthマップを設定すると、光線方向のサーチが行われ、ビュー方向に"
"沿った凹凸の適切な変位がエミュレートされます。これは実際に追加されたジオメト"
"リではなく、奥行きの錯覚です。複雑なオブジェクトでは機能しない場合があります"
"が、テクスチャにリアルな奥行き効果をもたらします。最良の結果を得るには、\\ "
"*Depth* を通常のマッピングと一緒に使用する必要があります。"

msgid "Subsurface Scattering"
msgstr "サブサーフェススキャタリング"

msgid ""
"This effect emulates light that penetrates an object's surface, is "
"scattered, and then comes out. It is useful to create realistic skin, "
"marble, colored liquids, etc."
msgstr ""
"この効果は、オブジェクトの表面を透過し、散乱してから出る光をエミュレートしま"
"す。リアルな肌、大理石、色のついた液体などを作成すると便利です。"

#, fuzzy
msgid "Back Lighting"
msgstr "ライトの焼き込み(ベイク)"

msgid ""
"This controls how much light from the lit side (visible to light) is "
"transferred to the dark side (opposite from the light). This works well for "
"thin objects such as plant leaves, grass, human ears, etc."
msgstr ""
"これは、明るい側(光源から見える)からの光が暗い側(光源とは反対側)に透過される"
"量を制御します。これは、植物の葉、草、人間の耳などの薄いオブジェクトに適して"
"います。"

msgid "Refraction"
msgstr "Refraction(屈折)"

#, fuzzy
msgid ""
"When refraction is enabled, Godot attempts to fetch information from behind "
"the object being rendered. This allows distorting the transparency in a way "
"similar to refraction in real life."
msgstr ""
"Refractionが有効な場合、Godotはアルファブレンディングより優先して、レンダリン"
"グされるオブジェクトの背後から情報を取得しようとします。これにより、現実の屈"
"折に似た方法で透明な部分を歪めることができます。"

msgid ""
"Remember to use a transparent albedo texture (or reduce the albedo color's "
"alpha channel) to make refraction visible, as refraction relies on "
"transparency to have a visible effect."
msgstr ""

msgid ""
"A normal map can optionally be specified in the **Refraction Texture** "
"property to allow distorting the refraction's direction on a per-pixel basis."
msgstr ""

msgid ""
"Refraction is implemented as a screen-space effect and forces the material "
"to be transparent. This makes the effect relatively fast, but this results "
"in some limitations:"
msgstr ""

msgid ""
":ref:`Transparency sorting "
"<doc_3d_rendering_limitations_transparency_sorting>` issues may occur."
msgstr ""

msgid ""
"The refractive material cannot refract onto itself, or onto other "
"transparent materials. A refractive material behind another transparent "
"material will be invisible."
msgstr ""

msgid ""
"Off-screen objects cannot appear in the refraction. This is most noticeable "
"with high refraction strength values."
msgstr ""

msgid ""
"Opaque materials in front of the refractive material will appear to have "
"\"refracted\" edges, even though they shouldn't."
msgstr ""

msgid "Detail"
msgstr "Detail(詳細)"

msgid ""
"Godot allows using secondary albedo and normal maps to generate a detail "
"texture, which can be blended in many ways. By combining this with secondary "
"UV or triplanar modes, many interesting textures can be achieved."
msgstr ""
"Godot は、第二アルベドマップと法線マップを使用して、多くの方法でブレンドでき"
"るDetailテクスチャを生成することができます。これをセカンダリUV または"
"Triplanarモードと組み合わせることで、多くの興味深いテクスチャを実現できます。"

msgid "There are several settings that control how detail is used."
msgstr "ディテールの使用をコントロールする設定がいくつかあります。"

msgid ""
"Mask: The detail mask is a black and white image used to control where the "
"blending takes place on a texture. White is for the detail textures, Black "
"is for the regular material textures, different shades of gray are for "
"partial blending of the material textures and detail textures."
msgstr ""

msgid ""
"Blend Mode: These four modes control how the textures are blended together."
msgstr ""
"Blend Mode: これらの4つのモードは、テクスチャのブレンド方法をコントロールしま"
"す。"

msgid ""
"Mix: Combines pixel values of both textures. At black, only show the "
"material texture, at white, only show the detail texture. Values of gray "
"create a smooth blend between the two."
msgstr ""

msgid ""
"Add: Adds pixel values of one Texture with the other. Unlike mix mode both "
"textures are completely mixed at white parts of a mask and not at gray "
"parts. The original texture is mostly unchanged at black"
msgstr ""

msgid ""
"Sub: Subtracts pixel values of one texture with the other. The second "
"texture is completely subtracted at white parts of a mask with only a little "
"subtraction in black parts, gray parts being different levels of subtraction "
"based on the exact texture."
msgstr ""

msgid ""
"Mul: Multiplies the RGB channel numbers for each pixel from the top texture "
"with the values for the corresponding pixel from the bottom texture."
msgstr ""

msgid ""
"Albedo: This is where you put an albedo texture you want to blend. If "
"nothing is in this slot it will be interpreted as white by default."
msgstr ""

msgid ""
"Normal: This is where you put a normal texture you want to blend. If nothing "
"is in this slot it will be interpreted as a flat normal map. This can still "
"be used even if the material does not have normal map enabled."
msgstr ""

msgid "UV1 and UV2"
msgstr "UV1 and UV2(UV1およびUV2)"

msgid ""
"Godot supports two UV channels per material. Secondary UV is often useful "
"for ambient occlusion or emission (baked light). UVs can be scaled and "
"offset, which is useful when using repeating textures."
msgstr ""
"Godotは、マテリアルごとに2つのUVチャネルをサポートします。第二UVは、アンビエ"
"ントオクルージョンまたは放出(焼き込みライト)に役立つことがよくあります。 UVは"
"スケーリングとオフセットが可能で、繰り返しテクスチャを使用する場合に便利で"
"す。"

msgid "Triplanar Mapping"
msgstr "Triplanar Mapping(三面マッピング)"

msgid ""
"Triplanar mapping is supported for both UV1 and UV2. This is an alternative "
"way to obtain texture coordinates, sometimes called \"Autotexture\". "
"Textures are sampled in X, Y and Z and blended by the normal. Triplanar "
"mapping can be performed in either world space or object space."
msgstr ""
"Triplanarマッピングは、UV1とUV2の両方でサポートされています。これは、テクス"
"チャ座標を取得する代替方法であり、「オートテクスチャ」とも呼ばれます。テクス"
"チャは、X、Y、Zでサンプリングされ、法線によってブレンドされます。 Triplanar"
"マッピングは、ワールド空間またはオブジェクト空間で実行できます。"

msgid ""
"In the image below, you can see how all primitives share the same material "
"with world triplanar, so the brick texture continues smoothly between them."
msgstr ""
"下の画像では、すべてのプリミティブがワールドTriplanarと同じマテリアルを共有す"
"る方法を確認できるため、レンガのテクスチャはそれらの間でスムーズに連続してい"
"ます。"

msgid "World Triplanar"
msgstr "World Triplanar(ワールド空間でのTriplanar)"

#, fuzzy
msgid ""
"When using triplanar mapping, it is computed in object local space. This "
"option makes it use world space instead."
msgstr ""
"Triplanarマッピングを使用する場合(UV1およびUV2設定で以下を参照)、Triplanarは"
"オブジェクトのローカル空間で計算されます。このオプションは、ワールド空間で"
"Triplanarを機能させます。"

#, fuzzy
msgid "Sampling"
msgstr "リサンプリング"

msgid "Filter"
msgstr "フィルター"

msgid ""
"The filtering method for the textures used by the material. See :ref:`this "
"page<class_BaseMaterial3D_property_texture_filter>` for a full list of "
"options and their description."
msgstr ""

msgid "Repeat"
msgstr "繰り返し"

msgid ""
"if the textures used by the material repeat, and how they repeat. See :ref:"
"`this page<class_BaseMaterial3D_property_texture_repeat>` for a full list of "
"options and their description."
msgstr ""

msgid "Shadows"
msgstr "シャドウ"

msgid "Do Not Receive Shadows"
msgstr "シャドウを受け取らない"

msgid ""
"Makes the object not receive any kind of shadow that would otherwise be cast "
"onto it."
msgstr "オブジェクトに影を付けないようにします。"

msgid "Use Shadow to Opacity"
msgstr "Use Shadow to Opacity(影を不透明度に使用)"

msgid ""
"Lighting modifies the alpha so shadowed areas are opaque and non-shadowed "
"areas are transparent. Useful for overlaying shadows onto a camera feed in "
"AR."
msgstr ""
"ライティングはアルファを修正し、影のある領域は不透明になり、影のない領域は透"
"明になります。 ARのカメラフィードに影を重ねるのに便利です。"

#, fuzzy
msgid "Billboard"
msgstr "Billboard Mode(ビルボードモード)"

msgid "Billboard Mode"
msgstr "Billboard Mode(ビルボードモード)"

msgid ""
"Enables billboard mode for drawing materials. This controls how the object "
"faces the camera:"
msgstr ""
"描画するマテリアルのビルボード モードを有効にします。これは、オブジェクトがカ"
"メラに向く方法を制御します:"

msgid "**Disabled:** Billboard mode is disabled."
msgstr "**Disabled:** ビルボードモードは無効です。"

#, fuzzy
msgid ""
"**Enabled:** Billboard mode is enabled. The object's -Z axis will always "
"face the camera's viewing plane."
msgstr ""
"**Enabled:** ビルボードモードが有効になっている場合、オブジェクトの-Z軸は常に"
"カメラに向かいます。"

#, fuzzy
msgid ""
"**Y-Billboard:** The object's X axis will always be aligned with the "
"camera's viewing plane."
msgstr "**Y-Billboard:** オブジェクトのX軸は常にカメラのX軸に合わせられます。"

#, fuzzy
msgid ""
"**Particle Billboard:** Most suited for particle systems, because it allows "
"specifying :ref:`flipbook animation "
"<doc_process_material_properties_animation>`."
msgstr ""
"**Particles:** アニメーションオプションを指定できるため、パーティクルシステム"
"に最適です。"

msgid ""
"The **Particles Anim** section is only visible when the billboard mode is "
"**Particle Billboard**."
msgstr ""

msgid "Billboard Keep Scale"
msgstr "Billboard Keep Scale(ビルボードキープスケール)"

msgid "Enables scaling a mesh in billboard mode."
msgstr "ビルボードモードでメッシュのスケーリングを有効にします。"

msgid "Grow"
msgstr "Grow(成長/拡張)"

msgid "Grows the object vertices in the direction pointed by their normals:"
msgstr "法線が指す方向にオブジェクトの頂点を成長させます:"

msgid ""
"This is commonly used to create cheap outlines. Add a second material pass, "
"make it black and unshaded, reverse culling (Cull Front), and add some grow:"
msgstr ""
"これは、一般的に安価にアウトラインを作成するために使用されます。2 番目のマテ"
"リアル パスを追加し、その色を黒にし、シェーディングなし、逆カリング(Cull "
"Front)にして、Growをチックしたものをいくつか追加します:"

msgid "Transform"
msgstr "トランスフォーム"

msgid "Fixed Size"
msgstr "Fixed Size(固定サイズ)"

msgid ""
"This causes the object to be rendered at the same size no matter the "
"distance. This is useful mostly for indicators (no depth test and high "
"render priority) and some types of billboards."
msgstr ""
"これにより、オブジェクトは距離に関係なく同じサイズでレンダリングされます。こ"
"れは主にインジケーター(深度テストなし、高いレンダリング優先度)および一部のタ"
"イプのビルボードに役立ちます。"

msgid "Use Point Size"
msgstr "Use Point Size(ポイントのサイズを使用)"

#, fuzzy
msgid ""
"This option is only effective when the geometry rendered is made of points "
"(generally it's made of triangles when imported from 3D modeling software). "
"If so, then those points can be resized (see below)."
msgstr ""
"このオプションは、レンダリングされるジオメトリがポイントで構成されている場合"
"にのみ有効です(3D DCCからインポートされる場合、通常は三角形で構成されます)。"
"その場合、それらのポイントのサイズを変更できます(以下を参照)。"

msgid "Point Size"
msgstr "Point Size(ポイントサイズ)"

msgid "When drawing points, specify the point size in pixels."
msgstr "ポイントを描画するときの、ポイントサイズをピクセル単位で指定します。"

#, fuzzy
msgid "Transmission"
msgstr "トランジション"

#, fuzzy
msgid "Proximity and Distance Fade"
msgstr "Proximity and distance fade(近接および距離でのフェード)"

#, fuzzy
msgid ""
"Godot allows materials to fade by proximity to each other as well as "
"depending on the distance from the viewer. Proximity fade is useful for "
"effects such as soft particles or a mass of water with a smooth blending to "
"the shores."
msgstr ""
"Godotでは、視点からの距離やマテリアル同士の近さに応じてマテリアルをフェードさ"
"せることができます。Proximity フェードは、ソフトパーティクルや、海岸に滑らか"
"にブレンドされた水の塊などの効果に役立ちます。Distanceフェードは、特定の距離"
"より後にのみ存在するライトシャフトまたはインジケーターに役立ちます。"

msgid ""
"Distance fade is useful for light shafts or indicators that are only present "
"after a given distance."
msgstr ""

msgid ""
"Keep in mind enabling proximity fade or distance fade with **Pixel Alpha** "
"mode enables alpha blending. Alpha blending is more GPU-intensive and can "
"cause transparency sorting issues. Alpha blending also disables many "
"material features such as the ability to cast shadows. To hide a character "
"when they get too close to the camera, consider using **Pixel Dither** or "
"better, **Object Dither** (which is even faster than **Pixel Dither**)."
msgstr ""

#, fuzzy
msgid "Material Settings"
msgstr "パーティクルマテリアルの設定"

msgid "Render priority"
msgstr "Render priority(レンダリングの優先度)"

msgid ""
"The rendering order of objects can be changed, although this is mostly "
"useful for transparent objects (or opaque objects that perform depth draw "
"but no color draw, such as cracks on the floor)."
msgstr ""
"オブジェクトのレンダリング順序は変更できますが、これは主に透明なオブジェクト"
"(または、床の亀裂などの深さの描画は行うが色の描画は行わない不透明なオブジェク"
"ト)に役立ちます。"

#, fuzzy
msgid "Next Pass"
msgstr "次のステップ"

msgid ""
"Sets the material to be used for the next pass. This renders the object "
"again with a different material."
msgstr ""

msgid "Translation status"
msgstr "翻訳ステータス"
