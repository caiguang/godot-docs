# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Environment and post-processing"
msgstr "環境とポストプロセッシング"

#, fuzzy
msgid ""
"Godot 4 provides a redesigned Environment resource, as well as a new post-"
"processing system with many available effects right out of the box."
msgstr ""
"Godot 3.x は、再設計された環境(Environment/エンバイロメント)リソースと、すぐ"
"に使用できる多くのエフェクトを備えた真新しいポストプロセッシングシステムを提"
"供します。"

msgid ""
"As of Godot 4, Environment *performance/quality* settings are defined in the "
"project settings instead of in the Environment resource. This makes global "
"adjustments easier, as you no longer have to tweak Environment resources "
"individually to suit various hardware configurations."
msgstr ""

msgid ""
"Note that most Environment performance/quality settings are only visible "
"after enabling the **Advanced** toggle in the Project Settings."
msgstr ""

msgid "Environment"
msgstr "環境"

#, fuzzy
msgid ""
"The :ref:`class_Environment` resource stores all the information required "
"for controlling the 2D and 3D rendering environment. This includes the sky, "
"ambient lighting, tone mapping, effects, and adjustments. By itself, it does "
"nothing, but you can enable it by using it in one of the following "
"locations, in order of priority:"
msgstr ""
"Environment(環境)リソースには、レンダリング環境の制御に必要なすべての情報が格"
"納されます。これには、空、環境光、トーンマッピング、エフェクト、調整が含まれ"
"ます。それ自体は何もしませんが、次の場所のいずれかで使用されると、優先度順に"
"有効になります:"

#, fuzzy
msgid "Camera3D node (high priority)"
msgstr "サブスクリプション(最優先)"

#, fuzzy
msgid ""
"An Environment can be set to a Camera3D node. It will have priority over any "
"other setting."
msgstr "環境はカメラに設定できます。他の設定よりも優先されます。"

#, fuzzy
msgid ""
"This is mostly useful when you want to override an existing environment, but "
"in general it's a better idea to use the option below."
msgstr ""
"これは、既存の環境をオーバーライドする場合に最も役立ちますが、一般的には以下"
"のオプションを使用することをお勧めします。"

msgid "WorldEnvironment node (medium priority, recommended)"
msgstr ""

msgid ""
"The WorldEnvironment node can be added to any scene, but only one can exist "
"per active scene tree. Adding more than one will result in a warning."
msgstr ""
"WorldEnvironmentノードはどのシーンにも追加できますが、アクティブなシーンツ"
"リーごとに1つしか存在できません。複数追加すると警告が表示されます。"

msgid ""
"Any Environment added has higher priority than the default Environment "
"(explained below). This means it can be overridden on a per-scene basis, "
"which makes it quite useful."
msgstr ""
"追加された環境は、デフォルトの環境(以下で説明)よりも高い優先度を持ちます。つ"
"まり、シーンごとにオーバーライドできるため、非常に便利です。"

#, fuzzy
msgid "Preview environment and sun (low priority)"
msgstr "代入、優先度最低"

msgid ""
"Since Godot 4, the preview environment and sun system replace the "
"``default_env.tres`` file that was used in Godot 3 projects."
msgstr ""

msgid ""
"If no WorldEnvironment node or DirectionalLight3D node is present in the "
"current scene, the editor will display a preview environment and sun "
"instead. This can be disabled using the buttons at the top of the 3D editor:"
msgstr ""

msgid ""
"Clicking on the 3 vertical dots on the right will display a dialog which "
"allows you to customize the appearance of the preview environment:"
msgstr ""

msgid ""
"**The preview sun and sky is only visible in the editor, not in the running "
"project.** Using the buttons at the bottom of the dialog, you can add the "
"preview sun and sky into the scene as nodes."
msgstr ""

msgid ""
"If you hold :kbd:`Shift` while clicking **Add Sun to Scene** or **Add "
"Environment to Scene** in the preview environment editor, this will add both "
"a preview sun and environment to the current scene (as if you clicked both "
"buttons separately). Use this to speed up project setup and prototyping."
msgstr ""

#, fuzzy
msgid "Camera attributes"
msgstr "頂点の属性"

msgid ""
"In Godot 4, exposure and depth of field information was split from the "
"Environment resource into a separate CameraAttributes resource. This allows "
"adjusting those properties independently of other Environment settings more "
"easily."
msgstr ""

msgid ""
"The :ref:`class_CameraAttributes` resource stores exposure and depth of "
"field information. It also allows enabling automatic exposure adjustments "
"depending on scene brightness."
msgstr ""

#, fuzzy
msgid "There are two kinds of CameraAttribute resources available:"
msgstr "リソースを保存する方法はふたつあります。それは:"

msgid ""
"**CameraAttributesPractical:** Features are exposed using arbitrary units, "
"which are easier to reason about for most game use cases."
msgstr ""

msgid ""
"**CameraAttributesPhysical:** Features are exposed using real world units, "
"similar to a digital camera. For example, field of view is set using a focal "
"length in millimeters instead of a value in degrees. Recommended when "
"physical accuracy is important, such as for photorealistic rendering."
msgstr ""

msgid ""
"Both CameraAttribute resource types allow you to use the same features, but "
"they are configured differently. If you don't know which one to choose, use "
"**CameraAttributesPractical**."
msgstr ""

msgid ""
"Using a :ref:`class_CameraAttributesPhysical` on a Camera3D node will lock "
"out FOV and aspect adjustments in that Camera3D, as field of view is "
"adjusted in the CameraAttributesPhysical resource instead. If used in a "
"WorldEnvironment, the CameraAttributesPhysical will not override any "
"Camera3D in the scene."
msgstr ""

msgid ""
"A CameraAttributes resource can be added to a Camera3D or a WorldEnvironment "
"node. When the current camera has a CameraAttributes set, it will *override* "
"the one set in WorldEnvironment (if any)."
msgstr ""

msgid ""
"In most situations, setting the CameraAttributes resource on the Camera3D "
"node instead of the WorldEnvironment is recommended. Unlike "
"WorldEnvironment, assigning the CameraAttributes resource to the Camera3D "
"node prevents depth of field from displaying in the 3D editor viewport, "
"unless the camera is being previewed."
msgstr ""

msgid "Environment options"
msgstr "Environment(環境)のオプション"

#, fuzzy
msgid ""
"The following is a detailed description of all environment options and how "
"they are intended to be used."
msgstr ""
"以下は、すべてのEnvironmentのオプションとそれらの使用方法の詳細な説明です。"

msgid "Background"
msgstr "背景"

#, fuzzy
msgid ""
"The Background section contains settings on how to fill the background "
"(parts of the screen where objects were not drawn). The background not only "
"serves the purpose of displaying an image or color. By default, it also "
"affects how objects are affected by ambient and reflected light. This is "
"called image-based lighting (IBL)."
msgstr ""
"Backgroundセクションには、背景(オブジェクトが描画されなかった画面の一部)を塗"
"りつぶす方法に関する設定が含まれています。Godot 3.0では、背景は画像や色を表示"
"するだけでなく、環境光や反射光によるオブジェクトへの影響を変えることもできま"
"す。"

msgid ""
"As a result, the background sky may greatly impact your scene's overall "
"appearance, even if the sky is never directly visible on screen. This should "
"be taken into account when tweaking lighting in your scene."
msgstr ""

#, fuzzy
msgid "There are several background modes available:"
msgstr "これを行うには、次の 2 つの方法があります:"

#, fuzzy
msgid ""
"**Clear Color** uses the default clear color defined in the project "
"settings. The background will be a constant color."
msgstr ""
"**Clear Color** は、プロジェクトで定義されているデフォルトのクリアカラーを使"
"用します。背景は一定の色になります。"

msgid "**Custom Color** is like Clear Color, but with a custom color value."
msgstr ""
"**Custom Color** はクリアカラーに似ていますが、カスタムカラー値を持ちます。"

#, fuzzy
msgid ""
"**Sky** lets you define a background sky material (see below). By default, "
"objects in the scene will reflect this sky material and absorb ambient light "
"from it."
msgstr ""
"**Sky** では、パノラマの空 (360度の球体テクスチャ) または手続き型の空 (グラ"
"デーションとオプションの太陽を備えたシンプルな空) を定義できます。オブジェク"
"トはそれを反射し、そこから環境光を吸収します。"

msgid ""
"**Canvas** displays the 2D scene as a background to the 3D scene. This can "
"be used to make environment effects visible on 2D rendering, such as :ref:"
"`glow in 2D <doc_environment_and_post_processing_using_glow_in_2d>`."
msgstr ""

msgid ""
"**Keep** does not draw any sky, keeping what was present on previous frames "
"instead. This improves performance in purely indoor scenes, but creates a "
"\"hall of mirrors\" visual glitch if the sky is visible at any time."
msgstr ""

#, fuzzy
msgid "Sky materials"
msgstr "シェーダーマテリアル"

msgid ""
"When using the **Sky** background mode (or the ambient/reflected light mode "
"is set to **Sky**), a Sky subresource becomes available to edit in the "
"Environment resource. Editing this subresource allows you to create a "
"SkyMaterial resource within the Sky."
msgstr ""

msgid "There are 3 built-in sky materials to choose from:"
msgstr ""

msgid ""
"**PanoramaSkyMaterial:** Use a 360 degree panorama sky image (2:1 aspect "
"ratio recommended). To benefit from high dynamic range, the panorama image "
"must be in an HDR-compatible format such as ``.hdr`` or ``.exr`` rather than "
"a standard dynamic range format like ``.png`` or ``.jpg``."
msgstr ""

msgid ""
"**ProceduralSkyMaterial:** Use a procedurally generated sky with adjustable "
"ground, sun, sky and horizon colors. This is the type of sky used in the "
"editor preview. The sun's position is automatically derived from the first 4 "
"DirectionalLight3D nodes present in the scene. There can be up to 4 suns at "
"a given time."
msgstr ""

msgid ""
"**PhysicalSkyMaterial:** Use a physically-based procedural sky with "
"adjustable scattering parameters. The sun's position is automatically "
"derived from the first DirectionalLight3D node present in the scene. "
"PhysicalSkyMaterial is slightly more expensive to render compared to "
"ProceduralSkyMaterial. There can be up to 1 sun at a given time."
msgstr ""

msgid ""
"Panorama sky images are sometimes called HDRIs (High Dynamic Range Images). "
"You can find freely licensed HDRIs on `Poly Haven <https://polyhaven.com/"
"hdris>`__."
msgstr ""

msgid ""
"HDR PanoramaSkyMaterial textures with very bright spots (such as real life "
"photos with the sun visible) may result in visible sparkles on ambient and "
"specular reflections. This is caused by the texture's peak exposure being "
"too high."
msgstr ""

msgid ""
"To resolve this, select the panorama texture in the FileSystem dock, go to "
"the Import dock, enable **HDR Clamp Exposure** then click **Reimport**."
msgstr ""

msgid ""
"If you need a custom sky material (e.g. for procedural clouds), you can "
"create a custom :ref:`sky shader <doc_sky_shader>`."
msgstr ""

msgid "Ambient light"
msgstr "環境光"

#, fuzzy
msgid ""
"Ambient light (as defined here) is a type of light that affects every piece "
"of geometry with the same intensity. It is global and independent of lights "
"that might be added to the scene. Ambient light is one of the two components "
"of image-based lighting. Unlike reflected light, ambient light does not vary "
"depending on the camera's position and viewing angle."
msgstr ""
"Ambient(ここで定義)は、同じ強度ですべてのジオメトリに影響するライトの一種で"
"す。これはグローバルであり、シーンに追加される可能性のあるライトとは無関係で"
"す。"

#, fuzzy
msgid "There are several types of ambient light to choose from:"
msgstr "これにはいくつかの理由があります:"

msgid ""
"**Background:** Source ambient light from the background, such as the sky, "
"custom color or clear color (default). Ambient light intensity will vary "
"depending on the sky image's contents, which can result in more visually "
"appealing ambient lighting. A sky must be set as background for this mode to "
"be visible."
msgstr ""

msgid ""
"**Disabled:** Do not use any ambient light. Useful for purely indoor scenes."
msgstr ""

msgid ""
"**Color:** Use a constant color for ambient light, ignoring the background "
"sky. Ambient light intensity will be the same on all sides, which may result "
"in the scene's lighting looking more flat. Useful for indoor scenes where "
"pitch black shadows may be too dark, or to maximize performance on low-end "
"devices."
msgstr ""

msgid ""
"**Sky:** Source ambient light from a specified sky, even if the background "
"is set to a mode other than **Sky**. If the background mode is already "
"**Sky**, this mode behaves identically to **Background**."
msgstr ""

#, fuzzy
msgid ""
"When the ambient light mode is set to Sky or Background (and background is "
"set to Sky), it's possible to blend between the ambient color and sky using "
"the **Sky Contribution** property. This value is set to ``1.0`` by default, "
"which means that only the ambient sky is used. The ambient color is ignored "
"unless **Sky Contribution** is decreased below ``1.0``."
msgstr ""
"*Sky* を背景として設定すると、\\ **Sky Contribution** 設定を使用して環境色と"
"空をブレンドできます(便宜上、この値はデフォルトでは1.0であるため、空のみがオ"
"ブジェクトに影響します)。"

msgid "Here is a comparison of how different ambient light affects a scene:"
msgstr "異なる環境光がシーンに与える影響の比較は次のとおりです:"

#, fuzzy
msgid ""
"Finally, there is an **Energy** setting which is a multiplier. It's useful "
"when working with HDR."
msgstr ""
"最後に、\\ **Energy** 設定があります。これは乗数であり、HDRで作業するときに便"
"利です。"

#, fuzzy
msgid ""
"In general, you should only rely on ambient light alone for simple scenes or "
"large exteriors. You may also do so to boost performance. Ambient light is "
"fast to render, but it doesn't provide the best lighting quality. It's "
"better to generate ambient light from :ref:`ReflectionProbe "
"<doc_reflection_probes>`, :ref:`VoxelGI <doc_using_voxel_gi>` or :ref:`SDFGI "
"<doc_using_sdfgi>`, as these will simulate how indirect light propagates "
"more accurately. Below is a comparison, in terms of quality, between using a "
"flat ambient color and a VoxelGI:"
msgstr ""
"一般に、環境光は、最高の照明品質を提供しないため、単純なシーン、大きなエクス"
"テリア、またはパフォーマンス上の理由(環境光はレンダリングコストが安い)に対し"
"てのみ使用する必要があります。 ReflectionProbeまたはGIProbeから環境光を生成す"
"ると、間接光がどのように伝播するかをより忠実にシミュレートできます。以下は、"
"均一な環境色とGIProbeを使用した場合の品質の比較です:"

#, fuzzy
msgid ""
"Using one of the methods described above will replace constant ambient "
"lighting with ambient lighting from the probes."
msgstr ""
"上記の方法のいずれかを使用すると、オブジェクトは一定した環境光をプローブから"
"の環境光に置き換えます。"

#, fuzzy
msgid "Reflected light"
msgstr "反射"

msgid ""
"Reflected light (also called specular light) is the other of the two "
"components of image-based lighting."
msgstr ""

#, fuzzy
msgid "Reflected light can be set to one of 3 modes:"
msgstr "リジッドボディは、次の4つのモードのいずれかに設定できます:"

msgid ""
"**Background:** Reflect from the background, such as the sky, custom color "
"or clear color (default)."
msgstr ""

msgid ""
"**Disabled:** Do not reflect any light from the environment. Useful for "
"purely indoor scenes, or to maximize performance on low-end devices."
msgstr ""

msgid ""
"**Sky:** Reflect from the background sky, even if the background is set to a "
"mode other than **Sky**. If the background mode is already **Sky**, this "
"mode behaves identically to **Background**."
msgstr ""

msgid "Fog"
msgstr "フォグ"

msgid ""
"This section refers to non-volumetric fog only. It is possible to use both "
"non-volumetric fog and :ref:`doc_volumetric_fog` at the same time."
msgstr ""

#, fuzzy
msgid ""
"Fog, as in real life, makes distant objects fade away into a uniform color. "
"There are two kinds of fog in Godot:"
msgstr ""
"霧は、実生活と同様に、遠くのオブジェクトを均一な色にフェードアウトさせます。"
"物理的な効果は実際にはかなり複雑ですが、Godotは適切な近似を提供します。 Godot"
"には2種類の霧があります:"

msgid ""
"**Depth Fog:** This one is applied based on the distance from the camera."
msgstr "**Depth Fog:** これはカメラからの距離に基づいて適用されます。"

msgid ""
"**Height Fog:** This one is applied to any objects below (or above) a "
"certain height, regardless of the distance from the camera."
msgstr ""
"**Height Fog:** これは、カメラからの距離に関係なく、特定の高さの下(または上)"
"のオブジェクトに適用されます。"

msgid ""
"Both of these fog types can have their curve tweaked, making their "
"transition more or less sharp."
msgstr ""
"これらの霧のタイプは両方とも、カーブを微調整して、トランジションを多少シャー"
"プにすることができます。"

msgid "Two properties can be tweaked to make the fog effect more interesting:"
msgstr "霧の効果をさらに面白くするために、2つのプロパティを調整できます:"

msgid ""
"The first is **Sun Amount**, which makes use of the Sun Color property of "
"the fog. When looking towards a directional light (usually a sun), the color "
"of the fog will be changed, simulating the sunlight passing through the fog."
msgstr ""
"1つ目は **Sun Amount** で、霧のSun Colorプロパティを使用します。指向性ライト"
"(通常は太陽)を見ると、フォグの色が変わり、フォグを通過する日光をシミュレート"
"します。"

msgid ""
"The second is **Transmit Enabled** which simulates more realistic light "
"transmittance. In practice, it makes light stand out more across the fog."
msgstr ""
"2つ目は **Transmit Enabled** で、より現実的な光透過率をシミュレートします。実"
"際には、霧の中で光をより際立たせます。"

msgid ""
"Fog can cause banding to appear on the viewport, especially at higher "
"density levels. See :ref:`doc_3d_rendering_limitations_color_banding` for "
"guidance on reducing banding."
msgstr ""

msgid "Volumetric Fog"
msgstr ""

msgid ""
"Volumetric fog provides a realistic fog effect to the scene, with fog color "
"being affected by the lights that traverse the fog."
msgstr ""

msgid ""
"See :ref:`doc_volumetric_fog` for documentation on setting up volumetric fog."
msgstr ""

msgid "Tonemap"
msgstr "トーンマップ"

#, fuzzy
msgid ""
"Tonemap selects the tonemapping curve that will be applied to the scene, "
"from a list of standard curves used in the film and game industries. "
"Tonemapping operators other than Linear are used to make light and dark "
"areas more homogeneous, while also avoiding clipping of bright highlights."
msgstr ""
"映画およびゲーム業界で使用される標準曲線の短いリストから、シーンに適用される"
"トーンマッピング曲線を選択します。トーンマッピングは、結果がそれほど強くない"
"場合でも、明るい領域と暗い領域をより均一にすることができます。トーンマッピン"
"グオプションは次のとおりです:"

#, fuzzy
msgid "The tone mapping options are:"
msgstr "主な欠点は次のとおりです:"

msgid "**Mode:** The tone mapping mode to use."
msgstr ""

msgid ""
"**Linear:** The default tonemapping mode. This is the fastest and simplest "
"tonemapping operator, but it causes bright lighting to look blown out, with "
"noticeable clipping in the output colors."
msgstr ""

msgid ""
"**Reinhardt:** Performs a variation on rendered pixels' colors by this "
"formula: ``color = color / (1 + color)``. This avoids clipping bright "
"highlights, but the resulting image can look a bit dull."
msgstr ""

msgid ""
"**Filmic:** This avoids clipping bright highlights, with a resulting image "
"that usually looks more vivid than Reinhardt."
msgstr ""

msgid ""
"**ACES:** Academy Color Encoding System tonemapper. ACES is slightly more "
"expensive than other options, but it handles bright lighting in a more "
"realistic fashion by desaturating it as it becomes brighter. ACES typically "
"has a more contrasted output compared to Reinhardt and Filmic. ACES is the "
"recommended option when aiming for photorealistic visuals. This tonemapping "
"mode was called \"ACES Fitted\" in Godot 3.x."
msgstr ""

msgid ""
"**Exposure:** Tone mapping exposure which simulates amount of light received "
"over time (default: ``1.0``). Higher values result in an overall brighter "
"appearance. If the scene appears too dark as a result of a tonemapping "
"operator or whitepoint change, try increasing this value slightly."
msgstr ""

msgid ""
"**White:** Tone mapping whitepoint, which simulates where in the scale white "
"is located (default: ``1.0``). For photorealistic lighting, recommended "
"values are between ``6.0`` and ``8.0``. Higher values result in less blown "
"out highlights, but make the scene appear slightly darker as a whole."
msgstr ""

msgid "Mid- and post-processing effects"
msgstr "中間およびポストプロセッシングエフェクト"

msgid ""
"The Environment resource supports many popular mid- and post-processing "
"effects."
msgstr ""

msgid ""
"Screen-space effects such as :abbr:`SSR (Screen-Space Reflections)`, :abbr:"
"`SSAO (Screen-Space Ambient Occlusion)`, :abbr:`SSIL (Screen-Space Indirect "
"Lighting)` and glow do not operate on geometry that is located outside the "
"camera view or is occluded by other opaque geometry. Consider this when "
"tweaking their settings to avoid distracting changes during gameplay."
msgstr ""

msgid "Screen-Space Reflections (SSR)"
msgstr "スクリーンスペース反射(Ss Reflections/SSR)"

#, fuzzy
msgid ""
"*This feature is only available when using the Forward+ backend, not Mobile "
"or Compatibility.*"
msgstr "*この機能は、GLES3バックエンドを使用している場合にのみ使用できます。*"

#, fuzzy
msgid ""
"While Godot supports several sources of reflection data such as :ref:"
"`doc_reflection_probes`, they may not provide enough detail for all "
"situations. Scenarios where screen-space reflections make the most sense are "
"when objects are in contact with each other (object over floor, over a "
"table, floating on water, etc)."
msgstr ""
"Godotは3つの反射データソース(Sky、ReflectionProbe、GIProbe)をサポートしていま"
"すが、すべての状況に対して十分な詳細を提供するわけではありません。スクリーン"
"スペースの反射が最も意味のあるシナリオは、オブジェクトが互いに接触している場"
"合です(床の上、テーブルの上、水に浮いているオブジェクトなど)。"

#, fuzzy
msgid ""
"On top of providing more detail, screen-space reflections also work in real-"
"time (while other types of reflections are usually precomputed). This can be "
"used to make characters, cars, etc. reflect on surrounding surfaces when "
"moving around."
msgstr ""
"もう1つの利点は(最低限しか有効にしない場合でも)、リアルタイムで機能することで"
"す(他の種類の反射は事前に計算されます)。これを使用して、キャラクター、車など"
"が動き回るときに周囲の表面に反映させることができます。"

msgid ""
"Screen-space reflections can be used at the same time as other reflection "
"sources to benefit from detailed reflections when possible, while having a "
"fallback when screen-space reflections cannot be used (for example, to "
"reflect off-screen objects)."
msgstr ""

msgid ""
"A few user-controlled parameters are available to better tweak the technique:"
msgstr ""
"いくつかのユーザー制御パラメーターを使用して、この手法を微調整できます:"

#, fuzzy
msgid ""
"**Max Steps:** Determines the length of the reflection. The bigger this "
"number, the more costly it is to compute."
msgstr ""
"**Max Steps** は、反射の長さを決定します。この数値が大きいほど、計算にコスト"
"がかかります。"

#, fuzzy
msgid ""
"**Fade In:** Allows adjusting the fade-in curve, which is useful to make the "
"contact area softer."
msgstr ""
"**Fade In** では、接触領域を柔らかくために役立つフェードイン曲線を調整できま"
"す。"

#, fuzzy
msgid ""
"**Fade Out:** Allows adjusting the fade-out curve, so the step limit fades "
"out softly."
msgstr ""
"**Fade Out** で、フェードアウト曲線を調整できるため、ステップの限界は柔らかく"
"フェードアウトします。"

msgid ""
"**Depth Tolerance:** Can be used to allow screen-space rays to pass behind "
"objects. The rays will treat each object as if it has this depth in "
"determining if it can pass behind the object. Higher values will make screen-"
"space reflections exhibit fewer \"breakups\", at the cost of some objects "
"creating physically incorrect reflections."
msgstr ""

#, fuzzy
msgid ""
"Keep in mind that screen-space-reflections only work for reflecting opaque "
"geometry. Transparent materials won't be reflected, as they don't write to "
"the depth buffer. This also applies to shaders that use "
"``hint_screen_texture`` or ``hint_depth_texture`` uniforms."
msgstr ""
"スクリーンスペース反射は不透明なジオメトリを反射する場合にのみ機能することに"
"注意してください。透明なオブジェクトは反射できません。"

msgid "Screen-Space Ambient Occlusion (SSAO)"
msgstr "スクリーンスペース・アンビエントオクルージョン(Ssao/SSAO)"

#, fuzzy
msgid ""
"As mentioned in the **Ambient** section, areas where light from light nodes "
"does not reach (either because it's outside the radius or shadowed) are lit "
"with ambient light. Godot can simulate this using VoxelGI, ReflectionProbe, "
"the Sky, or a constant ambient color. The problem, however, is that all the "
"methods proposed previously act more on a larger scale (large regions) than "
"at the smaller geometry level."
msgstr ""
"**Ambient** セクションで述べたように、Lightノードからの光が(その範囲外にある"
"か、遮られているといった理由で)到達しない領域は環境光で照らされます。 Godot"
"は、GIProbe、ReflectionProbe、Sky、または一定の環境色を使用してこれをシミュ"
"レートできます。しかしこれらの方法はすべて、小さなジオメトリ・レベルではな"
"く、より大きなスケール (大きな領域)にて効果が表れるという欠点があります。"

msgid ""
"Constant ambient color and Sky are the same everywhere, while GI and "
"Reflection probes have more local detail, but not enough to simulate "
"situations where light is not able to fill inside hollow or concave features."
msgstr ""
"一定の環境色とSkyはどの場所でも同じですが、それに比べてGIおよびReflectionプ"
"ローブはより局所的な詳細度を持つとはいえ、光が中空または凹面の形状を照らすこ"
"とができない状況をシミュレートするには不十分です。"

msgid ""
"This can be simulated with Screen Space Ambient Occlusion. As you can see in "
"the image below, its purpose is to make sure concave areas are darker, "
"simulating a narrower path for the light to enter:"
msgstr ""
"これは、スクリーンスペースアンビエントオクルージョンでシミュレートできます。"
"下の画像でわかるように、その目的は、光が入る狭い経路をシミュレートして、凹面"
"領域がより暗くなるようにすることです:"

#, fuzzy
msgid ""
"It is a common mistake to enable this effect, turn on a light, and not be "
"able to appreciate it. This is because :abbr:`SSAO (Screen-Space Ambient "
"Occlusion)` only acts on *ambient* light. It does not affect direct light."
msgstr ""
"よくある間違いとして、このエフェクトを有効にし、ライトをオンにしても、結果が"
"確認できないというものです。これは、SSAOが直接光ではなく、\\ *環境*\\ 光のみ"
"に作用するためです。"

#, fuzzy
msgid ""
"This is why, in the image above, the effect is less noticeable under the "
"direct light (on the left). If you want to force :abbr:`SSAO (Screen-Space "
"Ambient Occlusion)` to work with direct light too, use the **Light Affect** "
"parameter. Even though this is not physically correct, some artists like how "
"it looks."
msgstr ""
"これが、上の画像で、直接光の下(左側)では効果が目立たない理由です。 SSAOを直接"
"光でも機能させる場合は、\\ **Light Affect** パラメーターを使用します(これは正"
"しくありませんが、一部のアーティストはこの見た目が好きです)。"

#, fuzzy
msgid ""
":abbr:`SSAO (Screen-Space Ambient Occlusion)` looks best when combined with "
"a real source of indirect light, like VoxelGI:"
msgstr ""
"SSAOは、GIProbeのような間接光の実際の光源と組み合わせたときに見栄えがします:"

#, fuzzy
msgid ""
"Tweaking :abbr:`SSAO (Screen-Space Ambient Occlusion)` is possible with "
"several parameters:"
msgstr "SSAOの調整は、いくつかのパラメーターで可能です:"

msgid ""
"**Radius:** The distance at which objects can occlude each other when "
"calculating screen-space ambient occlusion. Higher values will result in "
"occlusion over a greater distance at the cost of performance and quality."
msgstr ""

msgid ""
"**Intensity:** The primary screen-space ambient occlusion intensity. Acts as "
"a multiplier for the screen-space ambient occlusion effect. A higher value "
"results in darker occlusion. Since :abbr:`SSAO (Screen-Space Ambient "
"Occlusion)` is a screen-space effect, it's recommended to remain "
"conservative with this value. :abbr:`SSAO (Screen-Space Ambient Occlusion)` "
"that is too strong can be distracting during gameplay."
msgstr ""

msgid ""
"**Power:** The distribution of occlusion. A higher value results in darker "
"occlusion, similar to **Intensity**, but with a sharper falloff."
msgstr ""

msgid ""
"**Detail:** Sets the strength of the additional level of detail for the "
"screen-space ambient occlusion effect. A high value makes the detail pass "
"more prominent, but it may contribute to aliasing in your final image."
msgstr ""

msgid ""
"**Horizon:** The threshold for considering whether a given point on a "
"surface is occluded or not represented as an angle from the horizon mapped "
"into the 0.0-1.0 range. A value of 1.0 results in no occlusion."
msgstr ""

msgid ""
"**Sharpness:** The amount that the screen-space ambient occlusion effect is "
"allowed to blur over the edges of objects. Setting too high will result in "
"aliasing around the edges of objects. Setting too low will make object edges "
"appear blurry."
msgstr ""

msgid ""
"**Light Affect:** The screen-space ambient occlusion intensity in direct "
"light. In real life, ambient occlusion only applies to indirect light, which "
"means its effects can't be seen in direct light. Values higher than 0 will "
"make the :abbr:`SSAO (Screen-Space Ambient Occlusion)` effect visible in "
"direct light. Values above ``0.0`` are not physically accurate, but some "
"artists prefer this effect."
msgstr ""

#, fuzzy
msgid "Screen-Space Indirect Lighting (SSIL)"
msgstr "スクリーンスペース反射(Ss Reflections/SSR)"

msgid ""
":abbr:`SSIL (Screen-Space Indirect Lighting)` provides indirect lighting for "
"small details or dynamic geometry that other global illumination techniques "
"cannot cover. This applies to bounced diffuse lighting, but also emissive "
"materials. When :abbr:`SSIL (Screen-Space Indirect Lighting)` is enabled on "
"its own, the effect may not be that noticeable, which is intended."
msgstr ""

msgid ""
"Instead, :abbr:`SSIL (Screen-Space Indirect Lighting)` is meant to be used "
"as a *complement* to other global illumination techniques such as VoxelGI, "
"SDFGI and LightmapGI. :abbr:`SSIL (Screen-Space Indirect Lighting)` also "
"provides a subtle ambient occlusion effect, similar to SSAO but with less "
"detail."
msgstr ""

msgid ""
"This feature only provides indirect lighting. It is not a full global "
"illumination solution. This makes it different from screen-space global "
"illumination (SSGI) offered by other 3D engines. :abbr:`SSIL (Screen-Space "
"Indirect Lighting)` can be combined with :abbr:`SSR (Screen-Space "
"Reflections)` and/or :abbr:`SSAO (Screen-Space Ambient Occlusion)` for "
"greater visual quality (at the cost of performance)."
msgstr ""

#, fuzzy
msgid ""
"Tweaking :abbr:`SSIL (Screen-Space Indirect Lighting)` is possible with "
"several parameters:"
msgstr "SSAOの調整は、いくつかのパラメーターで可能です:"

msgid ""
"**Radius:** The distance that bounced lighting can travel when using the "
"screen space indirect lighting effect. A larger value will result in light "
"bouncing further in a scene, but may result in under-sampling artifacts "
"which look like long spikes surrounding light sources."
msgstr ""

msgid ""
"**Intensity:** The brightness multiplier for the screen-space indirect "
"lighting effect. A higher value will result in brighter light."
msgstr ""

msgid ""
"**Sharpness:** The amount that the screen-space indirect lighting effect is "
"allowed to blur over the edges of objects. Setting too high will result in "
"aliasing around the edges of objects. Setting too low will make object edges "
"appear blurry."
msgstr ""

msgid ""
"**Normal Rejection:** Amount of normal rejection used when calculating "
"screen-space indirect lighting. Normal rejection uses the normal of a given "
"sample point to reject samples that are facing away from the current pixel. "
"Normal rejection is necessary to avoid light leaking when only one side of "
"an object is illuminated. However, normal rejection can be disabled if light "
"leaking is desirable, such as when the scene mostly contains emissive "
"objects that emit light from faces that cannot be seen from the camera."
msgstr ""

msgid "Signed Distance Field Global Illumination (SDFGI)"
msgstr ""

msgid ""
"Signed distance field global illumination (SDFGI) is a form of real-time "
"global illumination. It is not a screen-space effect, which means it can "
"provide global illumination for off-screen elements (unlike :abbr:`SSIL "
"(Screen-Space Indirect Lighting)`)."
msgstr ""

msgid ""
"See :ref:`doc_using_sdfgi` for instructions on setting up this global "
"illumination technique."
msgstr ""

msgid "Glow"
msgstr "Glow(にじみ/発光)"

#, fuzzy
msgid ""
"*This feature is only available when using the Forward+ and Mobile backends, "
"not Compatibility.*"
msgstr "*この機能は、GLES3バックエンドを使用している場合にのみ使用できます。*"

#, fuzzy
msgid ""
"In photography and film, when light amount exceeds the maximum *luminance* "
"(brightness) supported by the media, it generally bleeds outwards to darker "
"regions of the image. This is simulated in Godot with the **Glow** effect."
msgstr ""
"写真やフィルムでは、光量がメディアでサポートされている最大値(アナログまたはデ"
"ジタル)を超えると、一般に画像の暗い領域に向かって外側ににじみます。これ"
"は、\\ **Glow** エフェクトを使用してGodotでシミュレートされます。"

msgid ""
"By default, even if the effect is enabled, it will be weak or invisible. One "
"of two conditions need to happen for it to actually show:"
msgstr ""
"デフォルトでは、エフェクトが有効になっていても、効果が弱いか見えません。実際"
"に表示するには、次の2つの条件のいずれかが必要です:"

msgid ""
"The light in a pixel surpasses the **HDR Threshold** (where 0 is all light "
"surpasses it, and 1.0 is light over the tonemapper **White** value). "
"Normally, this value is expected to be at 1.0, but it can be lowered to "
"allow more light to bleed. There is also an extra parameter, **HDR Scale**, "
"that allows scaling (making brighter or darker) the light surpassing the "
"threshold."
msgstr ""
"ピクセル内の光が **HDR Threshold** を超えている(0はすべてのライトを超え、1.0"
"はトーンマッパー **White** の値を超えています)。通常、この値は1.0であると予想"
"されますが、より多くの光を放出できるように下げることができます。また、\\ "
"**HDR Scale** という追加のパラメーターがあり、しきい値を超える光のスケーリン"
"グ(明るくまたは暗くする)を可能にします。"

#, fuzzy
msgid ""
"The **Bloom** property has a value greater than ``0.0``. As it increases, it "
"sends the whole screen to the glow processor at higher amounts."
msgstr ""
"Bloomエフェクトの値が0より大きい値に設定されている。値が大きくなると、画面全"
"体がグロープロセッサーに大量に送信されます。"

msgid "Both will cause the light to start bleeding out of the brighter areas."
msgstr "両方とも、明るい部分から光がにじみ出始めます。"

msgid "Once glow is visible, it can be controlled with a few extra parameters:"
msgstr "Glowが表示されたら、いくつかの追加パラメーターで制御できます:"

#, fuzzy
msgid ""
"**Intensity** is an overall scale for the effect, it can be made stronger or "
"weaker (``0.0`` removes it)."
msgstr ""
"**Intensity** はエフェクトの全体的な尺度であり、より強くまたはより弱くするこ"
"とができます(0.0に設定すると削除します)。"

#, fuzzy
msgid ""
"**Strength** is how strong the gaussian filter kernel is processed. Greater "
"values make the filter saturate and expand outwards. In general, changing "
"this is not needed, as the size can be adjusted more efficiently with the "
"**Levels**."
msgstr ""
"**Strength** ガウスフィルターカーネルが処理される強度です。値を大きくすると、"
"フィルターが飽和して外側に拡張します。一般に、\\ **Levels** でサイズをより効"
"率的に調整できるため、これを変更する必要はありません。"

msgid "The **Blend Mode** of the effect can also be changed:"
msgstr "エフェクトの **Blend Mode** も変更できます:"

#, fuzzy
msgid ""
"**Additive** is the strongest one, as it only adds the glow effect over the "
"image with no blending involved. In general, it's too strong to be used, but "
"can look good with low-intensity **Bloom** (produces a dream-like effect)."
msgstr ""
"**Additive** は、ブレンドを行わずに画像にグロー効果を加算するだけなので、最も"
"強力です。一般的に使用するには効果が強すぎますが、低強度のブルームでは見栄え"
"がよくなります(夢のような効果が得られます)。"

#, fuzzy
msgid ""
"**Screen** ensures glow never brightens more than itself and it works great "
"as an all around."
msgstr ""
"**Screen** がデフォルトです。それはGlowがそれ自体よりも明るくならないことを保"
"証し、すべての周囲で素晴らしい働きをします。"

#, fuzzy
msgid ""
"**Softlight** is the default and weakest one, producing only a subtle color "
"disturbance around the objects. This mode works best on dark scenes."
msgstr ""
"**Softlight** は最も弱いもので、オブジェクトの周囲にわずかな色の乱れしか生じ"
"ません。このモードは暗いシーンに最適です。"

#, fuzzy
msgid ""
"**Replace** can be used to :ref:`blur the whole screen "
"<doc_environment_and_post_processing_using_glow_to_blur_the_screen>` or "
"debug the effect. It only shows the glow effect without the image below."
msgstr ""
"**Replace** は、画面全体をぼかす、または効果をデバッグするために使用できま"
"す。下地の画像なしでグローエフェクトを表示します。"

msgid ""
"**Mix** mixes the glow effect with the main image. This can be used for "
"greater artistic control. The mix factor is controlled by the **Mix** "
"property which appears above the blend mode (only when the blend mode is set "
"to Mix). High mix factor values will appear to darken the image unless "
"**Bloom** is increased."
msgstr ""

msgid ""
"To change the glow effect size and shape, Godot provides **Levels**. Smaller "
"levels are strong glows that appear around objects, while large levels are "
"hazy glows covering the whole screen:"
msgstr ""
"グローエフェクトのサイズと形状を変更するために、Godotは **Levels** を提供しま"
"す。小さなレベルはオブジェクトの周りに現れる強い輝きであり、大きいレベルは画"
"面全体を覆うかすんだ輝きです。"

msgid ""
"The real strength of this system, though, is to combine levels to create "
"more interesting glow patterns:"
msgstr ""
"ただし、このシステムの本当の長所は、複数のレベルを組み合わせてより興味深いグ"
"ローパターンを作成することです:"

msgid ""
"Finally, the glow effect can be controlled using a *glow map*, which is a "
"texture that determines how bright glow should be on each part of the "
"screen. This texture can optionally be colored to tint the glow effect to "
"the glow map's color. The texture is stretched to fit the viewport, so using "
"an aspect ratio that matches your viewport's most common aspect ratio (such "
"as 16:9) is recommended to avoid visible distortion."
msgstr ""

msgid "There are 2 main use cases for a glow map texture:"
msgstr ""

msgid "Create a \"lens dirt\" effect using a dirt pattern texture."
msgstr ""

msgid ""
"Make glow less strong on specific parts of the screen by using a gradient "
"texture."
msgstr ""

#, fuzzy
msgid "Using glow in 2D"
msgstr "RigidBody2Dを使用する"

#, fuzzy
msgid "There are 2 ways to use glow in 2D:"
msgstr "背景を設定するには多くの方法があります:"

msgid ""
"Since Godot 4.2, you can enable HDR for 2D rendering when using the Forward+ "
"and Mobile rendering methods. This has a performance cost, but it allows for "
"a greater dynamic range. This also allows you to control which objects glow "
"using their individual **Modulate** or **Self Modulate** properties (use the "
"RAW mode in the color picker). Enabling HDR can also reduce banding in the "
"2D rendering output."
msgstr ""

msgid ""
"To enable HDR in 2D, open the Project Settings, enable **Rendering > "
"Viewport > HDR 2D** then restart the editor."
msgstr ""

msgid ""
"If you want to maximize performance, you can leave HDR disabled for 2D "
"rendering. However, you will have less control on which objects glow."
msgstr ""

msgid ""
"Enable glow, set the environment background mode to **Canvas** then decrease "
"**Glow HDR Threshold** so that pixels that are not overbright will still "
"glow. To prevent UI elements from glowing, make them children of a :ref:"
"`class_CanvasLayer` node. You can control which layers are affected by glow "
"using the **Background > Canvas Max Layer** property of the Environment "
"resource."
msgstr ""

#, fuzzy
msgid "Example of using glow in a 2D scene"
msgstr "4つのコアを使用する例:"

msgid ""
"Example of using glow in a 2D scene. HDR 2D is enabled, while coins and the "
"bullet have their **Modulate** property increased to overbright values using "
"the RAW mode in the color picker."
msgstr ""

msgid ""
"The 2D renderer renders in linear color space if the **Rendering > Viewport "
"> HDR 2D** project setting is enabled, so ``source_color`` must also be used "
"for uniform samplers that are used as color input in ``canvas_item`` "
"shaders. If this is not done, the texture will appear washed out."
msgstr ""

msgid ""
"If 2D HDR is disabled, ``source_color`` will keep working correctly in "
"``canvas_item`` shaders, so it's recommend to use it when relevant either "
"way."
msgstr ""

msgid "Using glow to blur the screen"
msgstr ""

msgid ""
"Glow can be used to blur the whole viewport, which is useful for background "
"blur when a menu is open. Only 3D rendering will be affected unless the "
"environment's background mode is set to **Canvas**. To prevent UI elements "
"from being blurred when using the Canvas background mode, make them children "
"of a :ref:`class_CanvasLayer` node. You can control which layers are "
"affected by this blurring effect using the **Background > Canvas Max Layer** "
"property of the Environment resource."
msgstr ""

msgid "To use glow as a blurring solution:"
msgstr ""

msgid ""
"Enable **Normalized** and adjust levels according to preference. Increasing "
"higher level indices will result in a more blurred image. It's recommended "
"to leave a single glow level at ``1.0`` and leave all other glow levels at "
"``0.0``, but this is not required. Note that the final appearance will vary "
"depending on viewport resolution."
msgstr ""

msgid "Set **Intensity** to ``1.0`` and **Bloom** to ``1.0``."
msgstr ""

msgid "Set the blend mode to **Replace** and **HDR Luminance Cap** to ``1.0``."
msgstr ""

msgid "Example of using glow to blur the 2D rendering in the menu's background"
msgstr ""

msgid "Adjustments"
msgstr "Adjustments(調整)"

msgid ""
"At the end of processing, Godot offers the possibility to do some standard "
"image adjustments."
msgstr ""
"処理の最後に、Godotはいくつかの標準的な画像調整を行う可能性を提供します。"

msgid "**Basic BCS adjustments**"
msgstr ""

#, fuzzy
msgid ""
"The first adjustment is being able to change the typical **Brightness**, "
"**Contrast**, and **Saturation** properties:"
msgstr ""
"1つ目は、一般的なBrightness(明るさ)、Contrast(コントラスト)、Saturation(彩度)"
"を変更できることです:"

#, fuzzy
msgid "**Color correction using a 1D gradient**"
msgstr "一次元rampを用いた色補正。"

msgid ""
"The second adjustment is by supplying a color correction gradient. This can "
"be done by assigning a GradientTexture1D resource to the **Color "
"Correction** property, or by loading a texture containing a horizontal "
"gradient. The leftmost part of the gradient represents black in the source "
"image, whereas the rightmost part of the gradient represents white in the "
"source image."
msgstr ""

#, fuzzy
msgid ""
"A linear black-to-white gradient like the following one will produce no "
"effect:"
msgstr ""
"2つ目は、色補正のグラデーションを指定することです。次のような通常の黒から白へ"
"のグラデーションでは効果がありません:"

msgid ""
"But creating custom ones will allow to map each channel to a different color:"
msgstr ""
"しかし、カスタムのものを作成すると、各チャンネルを異なる色にマップすることが"
"できます:"

#, fuzzy
msgid "**Color correction using a 3D LUT**"
msgstr "一次元rampを用いた色補正。"

msgid ""
"A 3D look-up-texture (LUT) can also be used for color correction. This is a "
"special texture used to modify each color channel separately from one "
"another (red, green, blue). This image can be of any resolution, but since "
"color correction is low-frequency data, sticking to low resolutions is "
"recommended for performance reasons. A LUT texture's resolution is typically "
"17×17×17, 33×33×33, 51×51×51 or 65×65×65 (the odd size allows for better "
"interpolation)."
msgstr ""

msgid ""
"For this to work, the look-up texture's import mode must be set to Texture3D "
"in the Import dock (instead of being imported as a regular Texture2D):"
msgstr ""

msgid ""
"Make sure to configure the number of horizontal and vertical slices to "
"import as well. If you don't do this, the LUT texture will not affect the "
"viewport correctly when used. You can preview how the 3D texture was "
"imported by double-clicking it, in the FileSystem dock, then going to the "
"inspector to flip through the texture's layers."
msgstr ""

msgid ""
"You can use this neutral 33×33×33 LUT template as a base (right-click and "
"choose **Save as…**):"
msgstr ""

msgid ""
"With the above LUT template, after changing its import mode to "
"**Texture3D**, set its number of **Horizontal** slices to ``33`` in the "
"Import dock then click **Reimport**. If you load this LUT into the **Color "
"Correction** property, you won't see any visible difference for now since "
"this texture is designed to be a neutral starting point."
msgstr ""

msgid ""
"This LUT template can be modified in an image editor to provide a different "
"mood to the image. A common workflow is to place the LUT image next to a "
"screenshot of the project's 3D viewport, then use an image editor to modify "
"both the LUT image and the screenshot at the same time. The LUT can then be "
"saved and applied to the game engine to perform the same color correction in "
"real-time."
msgstr ""

msgid ""
"For example, modifying the LUT template in an image editor to give it a "
"\"sepia\" look results in the image on the right:"
msgstr ""

msgid ""
"Adjustments and color correction are applied *after* tonemapping. This means "
"the tonemapping properties defined above still have an effect when "
"adjustments are enabled."
msgstr ""

#, fuzzy
msgid "Camera attribute options"
msgstr "頂点の属性"

msgid "Depth of Field / Far Blur"
msgstr "被写界深度(DOF)/遠方ぼかし(Far Blur)"

#, fuzzy
msgid ""
"This effect simulates focal distance on cameras. It blurs objects behind a "
"given range. It has an initial **Distance** with a **Transition** region (in "
"world units):"
msgstr ""
"このエフェクトは、ハイエンドカメラの焦点距離をシミュレートします。特定の範囲"
"の背後にあるオブジェクトをぼかします。\\ **Transition**(遷移)領域(ワールド単"
"位)を持つ 開始 **Distance**(距離) を持っています:"

#, fuzzy
msgid ""
"The **Amount** parameter controls the amount of blur. For larger blurs, "
"tweaking the depth of field quality in the advanced project settings may be "
"needed to avoid artifacts."
msgstr ""
"**Amount** パラメーターは、ぼかしの量を制御します。大きなぼかしの場合、アー"
"ティファクトを回避するために **Quality** の調整が必要になる場合があります。"

msgid "Depth of Field / Near Blur"
msgstr "被写界深度(DOF)/近方ぼかし(Near Blur)"

#, fuzzy
msgid ""
"This effect simulates focal distance on cameras. It blurs objects close to "
"the camera (acts in the opposite direction as far blur). It has an initial "
"**Distance** with a **Transition** region (in world units):"
msgstr ""
"このエフェクトは、ハイエンドカメラの焦点距離をシミュレートします。カメラに近"
"いオブジェクトをぼかします(遠方ぼかしとは反対方向に作用します)。\\ "
"**Transition**(遷移)領域(ワールド単位)を持つ 開始 **Distance**(距離) を持って"
"います:"

msgid ""
"The **Amount** parameter controls the amount of blur. For larger blurs, "
"tweaking the **Quality** may be needed in order to avoid artifacts."
msgstr ""
"**Amount** パラメーターは、ぼかしの量を制御します。大きなぼかしの場合、アー"
"ティファクトを回避するために **Quality** の調整が必要になる場合があります。"

#, fuzzy
msgid ""
"It is common to use both blurs together to focus the viewer's attention on a "
"given object, or create a so-called `\"tilt shift\" effect <https://en."
"wikipedia.org/wiki/Miniature_faking>`__."
msgstr ""
"両方のぼかしを一緒に使用して、特定のオブジェクトに視聴者の注意を集中させる使"
"い方が一般的です:"

msgid ""
"When using CameraAttributesPhysical instead of CameraAttributesPractical, "
"depth of field is automatically computed from the camera attributes' focus "
"distance, focal length, and aperture."
msgstr ""

#, fuzzy
msgid "Exposure"
msgstr "エクスポート"

msgid ""
"This multiplies the overall scene brightness visible from the camera. Higher "
"values result in a visually brighter scene."
msgstr ""

#, fuzzy
msgid "Auto Exposure"
msgstr "自動露出"

#, fuzzy
msgid ""
"Even though, in most cases, lighting and texturing are heavily artist "
"controlled, Godot supports a basic high dynamic range implementation with "
"the auto exposure mechanism. This is generally used to add realism when "
"combining interior areas with low light and bright outdoor areas. Auto "
"exposure simulates the camera (or eye) in an effort to adapt between light "
"and dark locations and their different amounts of light."
msgstr ""
"ほとんどの場合、照明とテクスチャリングはアーティストによって厳しく制御されま"
"すが、Godotは自動露出メカニズムを備えたシンプルなハイダイナミックレンジの実装"
"をサポートしています。これは一般に、暗い場所や屋外で屋内エリアを組み合わせる"
"ときにリアリズムのために使用されます。自動露出は、明るい場所と暗い場所、およ"
"び異なる光量の間を適応させるために、カメラ(または目)をシミュレートします。"

msgid ""
"Auto exposure needs to evaluate the scene's brightness every frame, which "
"has a moderate performance cost. Therefore, it's recommended to leave Auto "
"Exposure disabled if it doesn't make much of a difference in your scene."
msgstr ""

msgid ""
"The simplest way to use auto exposure is to make sure outdoor lights (or "
"other strong lights) have energy beyond 1.0. This is done by tweaking their "
"**Energy** multiplier (on the Light itself). To make it consistent, the "
"**Sky** usually needs to use the energy multiplier too, to match with the "
"directional light. Normally, values between 3.0 and 6.0 are enough to "
"simulate indoor-outdoor conditions."
msgstr ""
"自動露出を使用する最も簡単な方法は、屋外の照明(または他の強い照明)のエネル"
"ギーが1.0を超えるようにすることです。これは、(ライト自体の) **Energy** 乗数を"
"微調整することによって行われます。通常、一貫性を持たせるために、\\ **Sky** も"
"指向性ライトと一致させるためにエネルギー乗数を使用する必要があります。一般的"
"に、屋内と屋外の状態をシミュレートするには、3.0〜6.0の値で十分です。"

#, fuzzy
msgid ""
"By combining Auto Exposure with :ref:"
"`doc_environment_and_post_processing_glow` post-processing, pixels that go "
"over the tonemap **White** will bleed to the glow buffer, creating the "
"typical bloom effect in photography."
msgstr ""
"自動露出と *Glow* ポストプロセッシング(詳細は下記)を組み合わせることにより、"
"トーンマップの **White** を超えたピクセルがグローバッファー流れ込み、典型的な"
"写真のブルームエフェクトを作成できます。"

msgid ""
"The user-controllable values in the Auto Exposure section come with sensible "
"defaults, but you can still tweak them:"
msgstr ""
"Auto Exposureセクションのユーザーが制御可能な値には、適切なデフォルトがありま"
"すが、微調整ができます:"

#, fuzzy
msgid ""
"**Scale:** Value to scale the lighting. Higher values produce brighter "
"images, and lower values produce darker ones."
msgstr ""
"**Scale:** 照明をスケールする値。明るい値は明るい画像を生成し、小さい値は暗い"
"画像を生成します。"

#, fuzzy
msgid ""
"**Min Sensitivity / Min Exposure Value:** Minimum luminance that auto "
"exposure will aim to adjust for (in ISO when using "
"CameraAttributesPractical, or in EV100 when using CameraAttributesPhysical). "
"Luminance is the average of the light in all the pixels of the screen."
msgstr ""
"**Min Luma:** 自動露出の調整対象となる最小輝度。輝度は、画面のすべてのピクセ"
"ルの光の平均です。"

msgid ""
"**Max Sensitivity / Max Exposure Value:** Maximum luminance that auto "
"exposure will aim to adjust for (in ISO when using "
"CameraAttributesPractical, or in EV100 when using CameraAttributesPhysical)."
msgstr ""

#, fuzzy
msgid ""
"**Speed:** Speed at which luminance corrects itself. The higher the value, "
"the faster luminance correction happens. High values may be more suited to "
"fast-paced games, but can be distracting in some scenarios."
msgstr ""
"**Speed:** 輝度が補正される速度。値が大きいほど、より速い補正が行われます。"

msgid ""
"When using CameraAttributesPractical, exposure is set using *sensitivity* "
"defined in ISO instead of an exposure value in EV100. Typical ISO values are "
"between 50 and 3200, with higher values resulting in higher final exposure. "
"In real life, daytime photography generally uses ISO values between 100 and "
"800."
msgstr ""

msgid ""
"See :ref:`doc_physical_light_and_camera_units` if you wish to use real world "
"units to configure your camera's exposure, field of view and depth of field."
msgstr ""

msgid "Translation status"
msgstr "翻訳ステータス"
