# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Fixing jitter, stutter and input lag"
msgstr "ジッターとスタッターの解消"

#, fuzzy
msgid "What is jitter, stutter and input lag?"
msgstr "ジッターとスタッターとは何ですか？"

msgid ""
"*Jitter* and *stutter* are two different alterations to visible motion of "
"objects on screen that may affect a game, even when running at full speed. "
"These effects are mostly visible in games where the world moves at a "
"constant speed in a fixed direction, like runners or platformers."
msgstr ""
"*ジッター* および *スタッター* は、フルスピードで実行している場合でも、ゲーム"
"に影響を与える可能性のある画面上のオブジェクトの目に見える動きに対する2つの異"
"なる変化です。これらの効果は、ランナーやプラットフォーマーなど、世界が一定の"
"方向に一定の速度で移動するゲームでほとんど見られます。"

msgid ""
"*Input lag* is unrelated to jitter and stutter, but is sometimes discussed "
"alongside. Input lag refers to visible on-screen delay when performing "
"actions with the mouse, keyboard, controller or touchscreen. It can be "
"related to game code, engine code or external factors (such as hardware). "
"Input lag is most noticeable in games that use the mouse to aim, such as "
"first-person games. Input lag can't be completely eliminated, but it can be "
"reduced in several ways."
msgstr ""

#, fuzzy
msgid "Distinguishing between jitter and stutter"
msgstr "それぞれを区別する"

msgid ""
"A game running at a normal framerate without exhibiting any effect will "
"appear smooth:"
msgstr ""
"それらの効果を示さずに通常のフレームレートで実行されているゲームはスムーズに"
"表示されます:"

msgid "A game exhibiting *jitter* will shake constantly in a very subtle way:"
msgstr "*ジッター*を示すゲームは非常に微妙な方法で絶えず揺れます:"

msgid ""
"Finally, a game exhibiting *stutter* will appear smooth, but appear to "
"*stop* or *roll back a frame* every few seconds:"
msgstr ""
"最後に、\\ *スタッター* を呈するゲームは一見滑らかに見えますが、数秒ごとに *"
"停止* または*ロールバック* をおこします。"

msgid "Jitter"
msgstr "ジッター"

msgid ""
"There can be many causes of jitter, the most typical one happens when the "
"game *physics frequency* (usually 60 Hz) runs at a different resolution than "
"the monitor refresh rate. Check whether your monitor refresh rate is "
"different from 60 Hz."
msgstr ""
"ジッターの原因は数多くありますが、最も一般的なものは、ゲームの *物理周波数* "
"(通常は60Hz)がモニタのリフレッシュレートとは異なる解像度で実行されたときに起"
"こります。モニタのリフレッシュレートが60Hzと異なっているかどうかを確認しま"
"す。"

#, fuzzy
msgid ""
"This is generally not a problem, given that most monitors are 60 Hz, and "
"starting with Godot 3.1, a frame timer was introduced that tries to "
"synchronize with refresh as well as possible."
msgstr ""
"これは一般に問題ではありません。60Hzを超えるリフレッシュレートは人間の目には"
"ほとんど見えないため、Godot 3.1から、可能な限りリフレッシュと同期しようとする"
"フレームタイマーが導入されました。"

#, fuzzy
msgid ""
"Sometimes only some objects appear to jitter (character or background). This "
"happens when they are processed in different time sources (one is processed "
"in the physics step while another is processed in the idle step). Godot 3.1 "
"does some improvements to this, from allowing kinematic bodies to be "
"animated in the regular ``_process()`` loop, to further fixes in the frame "
"timer."
msgstr ""
"場合によっては、一部のオブジェクトのみが揺れているように見えます(文字または背"
"景)。これは、異なるタイムソースで処理された場合に発生します(1つは物理ステップ"
"で処理され、もう1つはアイドルステップで処理されます)。Godot 3.1では、キネマ"
"ティックボディを通常の_processループでアニメーション化できるようにすること"
"や、フレームタイマーをさらに修正することまで、いくつかの改善を加えています。"

msgid ""
"You can use physics interpolation to mitigate physics-related jittering. See "
"`lawnjelly's smoothing-addon <https://github.com/lawnjelly/smoothing-"
"addon>`__ for an add-on that can be dropped into any project to enable "
"physics interpolation."
msgstr ""

msgid "Stutter"
msgstr "スタッター"

msgid ""
"Stutter may happen due to two different reasons. The first, and most obvious "
"one, is the game not being able to keep full framerate performance. Solving "
"this is game specific and will require optimization."
msgstr ""
"スタッターは、2つの異なる理由で発生する可能性があります。最初の、そして最も明"
"白なものは、ゲームがフルフレームレートのパフォーマンスを維持できないことで"
"す。これを解決することはゲーム固有の命題であり、最適化が必要です。"

msgid ""
"The second is more complicated, because it is often not associated to the "
"engine or game but the underlying operating system. Here is some information "
"regarding stutter on different OSs."
msgstr ""
"2つ目はより複雑です。これは、多くの場合、エンジンやゲームではなく、実行基盤の"
"オペレーティングシステムに関連付けられているためです。さまざまなOSでのスタッ"
"ターに関する情報を次に示します。"

msgid ""
"On platforms that support disabling V-Sync, stuttering can be made less "
"noticeable by disabling V-Sync in the project settings. This will however "
"cause tearing to appear, especially on monitors with low refresh rates. If "
"your monitor supports it, consider enabling variable refresh rate (G-Sync/"
"FreeSync) while leaving V-Sync enabled. This avoids mitigating some forms of "
"stuttering without introducing tearing."
msgstr ""

msgid ""
"Forcing your graphics card to use the maximum performance profile can also "
"help reduce stuttering, at the cost of increased GPU power draw."
msgstr ""

msgid "Windows"
msgstr "Windows"

msgid ""
"Windows is known to cause stutter in windowed games. This mostly depends on "
"the hardware installed, drivers version and processes running in parallel (e."
"g. having many browser tabs open may cause stutter in a running game). To "
"avoid this, starting with 3.1, Godot raises the game priority to \"Above "
"Normal\". This helps considerably but may not completely eliminate stutter."
msgstr ""
"Windowsは、ウィンドウで動作するゲームでスタッターを引き起こすことが知られてい"
"ます。これは主に、インストールされているハードウェア、ドライバーのバージョ"
"ン、および並行して実行されているプロセスに依存します(たとえば、多くのブラウザ"
"タブを開いていると、実行中のゲームの動きが途切れることがあります)。"

msgid ""
"Eliminating this completely requires giving your game full privileges to "
"become \"time critical\", which is not advised. Some games may do it, but it "
"is advised to learn to live with this problem, as it is common for Windows "
"games and most users won't play games windowed (games that are played in a "
"window, e.g. puzzle games, will usually not exhibit this problem anyway)."
msgstr ""
"これを完全に排除するには、ゲームに「タイムクリティカル」になるための完全な権"
"限を与える必要がありますが、これはお勧めしません。一部のゲームはそれを行う場"
"合がありますが、この問題に耐えることを学ぶことをお勧めします。この問題は"
"Windowsゲームでは一般的であり、また、ほとんどのユーザーはウィンドウでゲームを"
"プレイしません(ウィンドウでプレイされるゲーム、たとえばパズルゲームでは、通"
"常、この現象は問題にされません)。"

msgid ""
"For fullscreen, Windows gives special priority to the game so stutter is no "
"longer visible and very rare. This is how most games are played."
msgstr ""
"フルスクリーンの場合、Windowsはゲームに特別な優先順位を与えるため、スタッター"
"は表示されなくなり、非常にまれになります。これが、ほとんどのゲームのプレイ状"
"態です。"

msgid ""
"Games should use the **Exclusive Fullscreen** window mode, as opposed to "
"**Fullscreen** which is designed to prevent Windows from automatically "
"treating the window as if it was exclusive fullscreen."
msgstr ""

msgid ""
"**Fullscreen** is meant to be used by GUI applications that want to use per-"
"pixel transparency without a risk of having it disabled by the OS. It "
"achieves this by leaving a 1-pixel line at the bottom of the screen. By "
"contrast, **Exclusive Fullscreen** uses the actual screen size and allows "
"Windows to reduce jitter and input lag for fullscreen games."
msgstr ""

msgid "Linux"
msgstr "Linux"

#, fuzzy
msgid ""
"Stutter may be visible on desktop Linux, but this is usually associated with "
"different video drivers and compositors. Some compositors may also trigger "
"this problem (e.g. KWin), so it is advised to try using a different one to "
"rule it out as the cause. Some window managers such as KWin and Xfwm allow "
"you to manually disable compositing, which can improve performance (at the "
"cost of tearing)."
msgstr ""
"スタッターはデスクトップLinuxで表示される場合がありますが、これは通常、個別の"
"ビデオドライバーとウィンドウマネージャが原因になります。Nouveauドライバーはし"
"ばしばこれを示しますが、AMDまたはNVidia独自のものは示しません。一部のウィンド"
"ウマネージャもこの問題を引き起こす可能性があります(KWinなど)。そのため、別の"
"ウィンドウマネージャを使用して原因を除外することをお勧めします。"

#, fuzzy
msgid ""
"There is no workaround for driver or compositor stuttering, other than "
"reporting it as an issue to the driver or compositor developers. Stutter may "
"be more present when playing in windowed mode as opposed to fullscreen, even "
"with compositing disabled."
msgstr ""
"ドライバーまたはウィンドウマネージャの開発者に問題として報告する以外に、ドラ"
"イバーまたはウィンドウマネージャによるスタッターに対する回避策はありません。"

msgid ""
"`Feral GameMode <https://github.com/FeralInteractive/gamemode>`__ can be "
"used to automatically apply optimizations (such as forcing the GPU "
"performance profile) when running specific processes."
msgstr ""

msgid "macOS"
msgstr "macOS"

msgid ""
"Generally, macOS is stutter-free, although recently some bugs were reported "
"when running on fullscreen (this is a macOS bug). If you have a machine "
"exhibiting this behavior, please let us know."
msgstr ""
"一般的に、macOSはスタッターが発生しませんが、最近はフルスクリーンで実行してい"
"るときにいくつかのバグが報告されました(これはmacOSのバグです)。この動作を示す"
"機械がある場合は、お知らせください。"

msgid "Android"
msgstr "Android"

msgid ""
"Generally, Android is stutter and jitter-free because the running activity "
"gets all the priority. That said, there may be problematic devices (older "
"Kindle Fire is known to be one). If you see this problem on Android, please "
"let us know."
msgstr ""
"一般に、Androidは実行中のアクティビティがすべて優先されるため、スタッターと"
"ジッターがありません。ただし、問題のあるデバイスが存在する可能性があります(古"
"いKindle Fireはその1つであることが知られています)。Androidでこの問題が発生し"
"た場合は、お知らせください。"

msgid "iOS"
msgstr "iOS"

msgid ""
"iOS devices are generally stutter-free, but older devices running newer "
"versions of the operating system may exhibit problems. This is generally "
"unavoidable."
msgstr ""
"iOSデバイスは通常、スタッターがありませんが、新しいバージョンのオペレーティン"
"グシステムを実行している古いデバイスでは問題が発生する場合があります。これは"
"一般的に避けられません。"

#, fuzzy
msgid "Input lag"
msgstr "入力"

#, fuzzy
msgid "Project configuration"
msgstr "プロジェクトの構成"

msgid ""
"On platforms that support disabling V-Sync, input lag can be made less "
"noticeable by disabling V-Sync in the project settings. This will however "
"cause tearing to appear, especially on monitors with low refresh rates."
msgstr ""

msgid ""
"Increasing the number of physics iterations per second can also reduce "
"physics-induced input latency. This is especially noticeable when using "
"physics interpolation (which improves smoothness but increases latency). To "
"do so, set **Physics > Common > Physics Ticks Per Second** to a value higher "
"than the default ``60``, or set ``Engine.physics_ticks_per_second`` at run-"
"time in a script. Values that are a multiple of the monitor refresh rate "
"(typically ``60``) work best when physics interpolation is disabled, as they "
"will avoid jitter. This means values such as ``120``, ``180`` and ``240`` "
"are good starting points. As a bonus, higher physics FPSes make tunneling "
"and physics unstability issues less likely to occur."
msgstr ""

msgid ""
"The downside of increasing physics FPS is that CPU usage will increase, "
"which can lead to performance bottlenecks in games that have heavy physics "
"simulation code. This can be alleviated by increasing physics FPS only in "
"situations where low latency is critical, or by letting players adjust "
"physics FPS to match their hardware. However, different physics FPS will "
"lead to different outcomes in physics simulation, even when ``delta`` is "
"consistently used in your game logic. This can give certain players an "
"advantage over others. Therefore, allowing the player to change the physics "
"FPS themselves should be avoided for competitive multiplayer games."
msgstr ""

msgid ""
"Lastly, you can disable input buffering on a per-rendered frame basis by "
"calling ``Input.set_use_accumulated_input(false)`` in a script. This will "
"make it so the ``_input()`` and ``_unhandled_input()`` functions in your "
"scripts are called on every input, rather than accumulating inputs and "
"waiting for a frame to be rendered. Disabling input accumulation will "
"increase CPU usage, so it should be done with caution."
msgstr ""

msgid "Hardware/OS-specific"
msgstr ""

msgid ""
"If your monitor supports it, consider enabling variable refresh rate (G-Sync/"
"FreeSync) while leaving V-Sync enabled, then cap the framerate in the "
"project settings to a slightly lower value than your monitor's maximum "
"refresh rate as per `this page <https://blurbusters.com/howto-low-lag-vsync-"
"on/>`__. For example, on a 144 Hz monitor, you can set the project's "
"framerate cap to ``141``. This may be counterintuitive at first, but capping "
"the FPS below the maximum refresh rate range ensures that the OS never has "
"to wait for vertical blanking to finish. This leads to *similar* input lag "
"as V-Sync disabled with the same framerate cap (usually less than 1 ms "
"greater), but without any tearing."
msgstr ""

msgid ""
"This can be done by changing the **Application > Run > Max FPS** project "
"setting or assigning ``Engine.max_fps`` at run-time in a script."
msgstr ""

msgid ""
"On some platforms, you can also opt into a low-latency mode in the graphics "
"driver options (such as the NVIDIA Control Panel on Windows). The **Ultra** "
"setting will give you the lowest possible latency, at the cost of slightly "
"lower average framerates. Forcing the GPU to use the maximum performance "
"profile can also further reduce input lag, at the cost of higher power "
"consumption (and resulting heat/fan noise)."
msgstr ""

msgid ""
"Finally, make sure your monitor is running at its highest possible refresh "
"rate in the OS' display settings."
msgstr ""

msgid ""
"Also, ensure that your mouse is configured to use its highest polling rate "
"(typically 1,000 Hz for gaming mice, sometimes more). High USB polling rates "
"can however result in high CPU usage, so 500 Hz may be a safer bet on low-"
"end CPUs. If your mouse offers multiple :abbr:`DPI (Dots Per Inch)` "
"settings, consider also `using the highest possible setting and reducing in-"
"game sensitivity to reduce mouse latency <https://www.youtube.com/watch?"
"v=6AoRfv9W110>`__."
msgstr ""

msgid ""
"On Linux, disabling compositing in window managers that allow it (such as "
"KWin or Xfwm) can reduce input lag significantly."
msgstr ""

#, fuzzy
msgid "Reporting jitter, stutter or input lag problems"
msgstr "スタッターまたはジッターの問題の報告"

msgid ""
"If you are reporting a stutter or jitter problem (opening an issue) not "
"caused by any of the above reasons, please specify very clearly all the "
"information possible about device, operating system, driver versions, etc. "
"This may help to better troubleshoot it."
msgstr ""
"上記の理由のいずれでもないスタッターまたはジッターの問題を報告する(issueを開"
"く)場合は、デバイス、オペレーティングシステム、ドライバーのバージョンなどにつ"
"いて可能な限りすべての情報を明確に指定してください。"

msgid ""
"If you are reporting input lag problems, please include a capture made with "
"a high speed camera (such as your phone's slow motion video mode). The "
"capture **must** have both the screen and the input device visible so that "
"the number of frames between an input and the on-screen result can be "
"counted. Also, make sure to mention your monitor's refresh rate and your "
"input device's polling rate (especially for mice)."
msgstr ""

#, fuzzy
msgid ""
"Also, make sure to use the correct term (jitter, stutter, input lag) based "
"on the exhibited behavior. This will help understand your issue much faster. "
"Provide a project that can be used to reproduce the issue, and if possible, "
"include a screen capture demonstrating the bug."
msgstr ""
"また、発生した動作に基づいて正しい用語(ジッターまたはスタッター)を使用するよ"
"うにしてください。これにより、問題をより迅速に理解できます。問題の再現に使用"
"できるプロジェクトを提供し、可能であればバグを示すスクリーンキャプチャを提供"
"します。"

msgid "Translation status"
msgstr "翻訳ステータス"
