# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Node type customization using name suffixes"
msgstr ""

msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr ""
"多くの場合、シーンを編集する場合、エクスポート後に実行する必要がある一般的な"
"タスクがあります:"

msgid "Adding collision detection to objects."
msgstr "オブジェクトへのコリジョン検出の追加。"

msgid "Setting objects as navigation meshes."
msgstr "オブジェクトをナビゲーションメッシュとして設定する。"

#, fuzzy
msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modeling)."
msgstr ""
"ゲーム エンジンで使用されていないノードの削除 (モデリングに使用される特定のラ"
"イトなど)。"

#, fuzzy
msgid ""
"To simplify this workflow, Godot offers several suffixes that can be added "
"to the names of the objects in your 3D modeling software. When imported, "
"Godot will detect suffixes in object names and will perform actions "
"automatically."
msgstr ""
"このワークフローを簡略化するために、Godotには3Dモデリング・ソフトウェアのオブ"
"ジェクトの名前に追加できるサフィックスがいくつかあります。インポートすると、"
"Godotはそれらのオブジェクトの名前のサフィックスを検出し、自動的にアクションを"
"実行します。"

msgid "All the suffixes described below are **case-sensitive**."
msgstr ""

msgid "Remove nodes (-noimp)"
msgstr "ノードの削除 (-noimp)"

#, fuzzy
msgid ""
"Objects that have the ``-noimp`` suffix will be removed at import-time no "
"matter what their type is. They will not appear in the imported scene."
msgstr ""
"このサフィックスを持つノード名は、インポート時に、その型に関係なく削除されま"
"す。読み込まれたシーンには表示されません。"

msgid ""
"This is equivalent to enabling **Skip Import** for a node in the Advanced "
"Import Settings dialog."
msgstr ""

#, fuzzy
msgid "Create collisions (-col, -convcol, -colonly, -convcolonly)"
msgstr "コリジョンの作成 (-col、-colonly、-convcolonly)"

msgid ""
"The option ``-col`` will work only for Mesh objects. If it is detected, a "
"child static collision node will be added, using the same geometry as the "
"mesh. This will create a triangle mesh collision shape, which is a slow, but "
"accurate option for collision detection. This option is usually what you "
"want for level geometry (but see also ``-colonly`` below)."
msgstr ""

msgid ""
"The option ``-convcol`` will create a :ref:`class_ConvexPolygonShape3D` "
"instead of a :ref:`class_ConcavePolygonShape3D`. Unlike triangle meshes "
"which can be concave, a convex shape can only accurately represent a shape "
"that doesn't have any concave angles (a pyramid is convex, but a hollow box "
"is concave). Due to this, convex collision shapes are generally not suited "
"for level geometry. When representing simple enough meshes, convex collision "
"shapes can result in better performance compared to a triangle collision "
"shape. This option is ideal for simple or dynamic objects that require "
"mostly-accurate collision detection."
msgstr ""

#, fuzzy
msgid ""
"However, in both cases, the visual geometry may be too complex or not smooth "
"enough for collisions. This can create physics glitches and slow down the "
"engine unnecessarily."
msgstr ""
"ただし、視覚的ジオメトリが複雑すぎたり、コリジョンに対してスムーズでなかった"
"りして、うまく機能しないことがよくあります。"

#, fuzzy
msgid ""
"To solve this, the ``-colonly`` modifier exists. It will remove the mesh "
"upon importing and will create a :ref:`class_StaticBody3D` collision "
"instead. This helps the visual mesh and actual collision to be separated."
msgstr ""
"これを解決するには、インポート時にメッシュを削除し、代わりに \\ :ref:"
"`class_staticbody` の衝突を作成する \"-colonly\" 修飾子が存在します。これによ"
"り、視覚的なメッシュと実際のコリジョンを分離できます。"

#, fuzzy
msgid ""
"The option ``-convcolonly`` works in a similar way, but will create a :ref:"
"`class_ConvexPolygonShape3D` instead using convex decomposition."
msgstr ""
"オプション \"-convcolonly\" は、\\ :ref:`class_concavepolygonshape` の代わり"
"に :ref:`class_convexpolygonshape` を作成します。"

#, fuzzy
msgid ""
"With Collada files, the option ``-colonly`` can also be used with Blender's "
"empty objects. On import, it will create a :ref:`class_StaticBody3D` with a "
"collision node as a child. The collision node will have one of a number of "
"predefined shapes, depending on Blender's empty draw type:"
msgstr ""
"オプション \"-colonly\" は、Blenderの空のオブジェクトでも使用できます。イン"
"ポート時に、コリジョンノードを子として持つ :ref:`class_staticbody` が作成され"
"ます。コリジョンノードには、Blenderの空の描画タイプに応じて、事前定義されたい"
"くつかの形状があります:"

msgid "Choosing a draw type for an Empty on creation in Blender"
msgstr ""

#, fuzzy
msgid "Single arrow will create a :ref:`class_SeparationRayShape3D`."
msgstr "単一の矢印(Single arrow)は :ref:`class_rayshape` を作成します。"

#, fuzzy
msgid "Cube will create a :ref:`class_BoxShape3D`."
msgstr "キューブは :ref:`class_boxshape` を作成します。"

#, fuzzy
msgid "Image will create a :ref:`class_WorldBoundaryShape3D`."
msgstr "イメージ :ref:`class_planeshape` を作成します。"

#, fuzzy
msgid ""
"Sphere (and the others not listed) will create a :ref:`class_SphereShape3D`."
msgstr ""
"球、(およびリストされていない他のもの)は :ref:`class_sphereshape` を作成しま"
"す。"

msgid ""
"When possible, **try to use a few primitive collision shapes** instead of "
"triangle mesh or convex shapes. Primitive shapes often have the best "
"performance and reliability."
msgstr ""

#, fuzzy
msgid ""
"For better visibility on Blender's editor, you can set the \"X-Ray\" option "
"on collision empties and set some distinct color for them by changing **Edit "
"> Preferences > Themes > 3D Viewport > Empty**."
msgstr ""
"Blenderのエディタで見やすくするために、ユーザーはコリジョン用エンプティに「X-"
"Ray」オプションを設定し、プリファレンス/テーマ/3Dビュー/エンプティでそれらに"
"明確な色を設定できます。"

msgid ""
"If using Blender 2.79 or older, follow these steps instead: **User "
"Preferences > Themes > 3D View > Empty**."
msgstr ""

msgid ""
"See :ref:`doc_collision_shapes_3d` for a comprehensive overview of collision "
"shapes."
msgstr ""

msgid "Create Occluder (-occ, -occonly)"
msgstr ""

msgid ""
"If a mesh is imported with the ``-occ`` suffix an :ref:`class_occluder3D` "
"node will be created based on the geometry of the mesh, it does not replace "
"the mesh. A mesh node with the ``-occonly`` suffix will be converted to an :"
"ref:`class_occluder3D` on import."
msgstr ""

msgid "Create navigation (-navmesh)"
msgstr "ナビゲーションの作成(-navmesh)"

#, fuzzy
msgid ""
"A mesh node with the ``-navmesh`` suffix will be converted to a navigation "
"mesh. The original Mesh object will be removed at import-time."
msgstr ""
"このサフィックスを持つメッシュノードは、ナビゲーションメッシュに変換されま"
"す。元のメッシュノードが削除されます。"

msgid "Create a VehicleBody (-vehicle)"
msgstr "VehicleBodyの作成(-vehicle)"

#, fuzzy
msgid ""
"A mesh node with the ``-vehicle`` suffix will be imported as a child to a :"
"ref:`class_VehicleBody3D` node."
msgstr ""
"このサフィックスを持つメッシュノードは、\\ :ref:`VehicleBody "
"<class_VehicleBody>` ノードの子としてインポートされます。"

msgid "Create a VehicleWheel (-wheel)"
msgstr "VehicleWheelの作成[-wheel)"

#, fuzzy
msgid ""
"A mesh node with the ``-wheel`` suffix will be imported as a child to a :ref:"
"`class_VehicleWheel3D` node."
msgstr ""
"このサフィックスを持つメッシュノードは、\\ :ref:`VehicleWheel "
"<class_VehicleWheel>` ノードの子としてインポートされます。"

msgid "Rigid Body (-rigid)"
msgstr "リジッドボディ(-rigid)"

#, fuzzy
msgid ""
"A mesh node with the ``-rigid`` suffix will be imported as a :ref:"
"`class_RigidBody3D`."
msgstr ""
"このサフィックスを持つメッシュノードは、\\ :ref:`VehicleBody "
"<class_VehicleBody>` ノードの子としてインポートされます。"

msgid "Animation loop (-loop, -cycle)"
msgstr "アニメーションループ(-loop、-cycle)"

#, fuzzy
msgid ""
"Animation clips in the source 3D file that start or end with the token "
"``loop`` or ``cycle`` will be imported as a Godot :ref:`class_Animation` "
"with the loop flag set. **Unlike the other suffixes described above, this "
"does not require a hyphen.**"
msgstr ""
"``loop``または ``cycle``トークンで開始または終了するCOLLADAドキュメント内のア"
"ニメーションクリップは、ループフラグが設定されたGodotアニメーションとしてイン"
"ポートされます。**これは上記で示したような他のサフィックスとは違い、ハイフン"
"は不要です。**"

#, fuzzy
msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the ``loop`` or ``cycle`` prefix or suffix."
msgstr ""
"Blenderでは、NLAエディタを使用し、アクジョンの名前に「loop」または「cycle」の"
"プレフィックスもしくはサフィックスを付ける必要があります。"

msgid "Translation status"
msgstr "翻訳ステータス"
