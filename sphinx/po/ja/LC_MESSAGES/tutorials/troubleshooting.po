# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Troubleshooting"
msgstr "トラブルシューティング"

msgid ""
"This page lists common issues encountered when using Godot and possible "
"solutions."
msgstr ""
"このページでは、Godotを使用する際によく遭遇する問題と、その解決策の候補を一覧"
"にしています。"

msgid ""
"See :ref:`doc_using_the_web_editor` for caveats specific to the Web version "
"of the Godot editor."
msgstr ""
"Web版のGodotエディタに特有の注意点については、 :ref:"
"`doc_using_the_web_editor` をご覧ください。"

msgid ""
"The editor runs slowly and uses all my CPU and GPU resources, making my "
"computer noisy"
msgstr ""
"エディターの動作が遅く、CPUとGPUのリソースの多くを使用する場合、コンピュータ"
"からの騒音が大きくなります"

msgid ""
"This is a known issue, especially on macOS since most Macs have Retina "
"displays. Due to Retina displays' higher pixel density, everything has to be "
"rendered at a higher resolution. This increases the load on the GPU and "
"decreases perceived performance."
msgstr ""
"これは既知の問題であり、ほとんどの Mac には Retina ディスプレイが搭載されてい"
"るため、特に macOS で発生します。このディスプレイでは、より高い解像度でのエン"
"ジンのレンダリングが必要になります。これにより、GPU負荷が増加し、体感的なパ"
"フォーマンスが低下します。"

msgid "There are several ways to improve performance and battery life:"
msgstr ""
"パフォーマンスとバッテリー寿命を向上させるには、いくつか方法があります。"

msgid ""
"In 3D, click the **Perspective** button in the top left corner and enable "
"**Half Resolution**. The 3D viewport will now be rendered at half "
"resolution, which can be up to 4 times faster."
msgstr ""
"3D では、左上隅にある **Perspective**ボタンをクリックし、**Half Resolution**"
"を有効にします。 3D ビューポートは半分の解像度でレンダリングされるようにな"
"り、最大 4 倍高速化されます。"

msgid ""
"Open the Editor Settings and increase the value of **Low Processor Mode "
"Sleep (µsec)** to ``33000`` (30 FPS). This value determines the amount of "
"*microseconds* between frames to render. Higher values will make the editor "
"feel less reactive but will help decrease CPU and GPU usage significantly."
msgstr ""
"エディタ設定を開き、**Low Processor Mode Sleep (マイクロ秒)** の値を「33000」"
"(30 FPS) に増やします。 この値は、レンダリングするフレーム間の *マイクロ秒* "
"の量を決定します。 値を高くすると、エディターの反応性が低くなりますが、CPU "
"と GPU の使用量が大幅に減少します。"

msgid ""
"If you have a node that causes the editor to redraw continuously (such as "
"particles), hide it and show it using a script in the ``_ready()`` method. "
"This way, it will be hidden in the editor but will still be visible in the "
"running project."
msgstr ""
"エディターに継続的に再描画させるノード (パーティクルなど) がある場合は、それ"
"を非表示にし、GDScriptの ``_ready()`` を使用して表示させるようにすることで、"
"Editorをより軽量化することができます。"

msgid ""
"The editor stutters and flickers on my variable refresh rate monitor (G-Sync/"
"FreeSync)"
msgstr ""
"可変リフレッシュレートモニター(G-Sync/FreeSync)でエディターが途切れたり、チラ"
"ついたりします"

msgid ""
"This is a `known issue <https://github.com/godotengine/godot/"
"issues/38219>`__. Variable refresh rate monitors need to adjust their gamma "
"curves continuously to emit a consistent amount of light over time. This can "
"cause flicker to appear in dark areas of the image when the refresh rate "
"varies a lot, which occurs as the Godot editor only redraws when necessary."
msgstr ""
"既知の問題です。可変リフレッシュ レート モニターは、時間の経過とともに一貫し"
"た量の光を放射するために、ガンマ カーブを継続的に調整する必要があります。 こ"
"れにより、リフレッシュ レートが大幅に変化するときに画像の暗い領域にちらつきが"
"発生する可能性があります。これは、Godot エディタが必要な場合にのみ再描画する"
"ために発生します。\n"
"`こちら<https://github.com/godotengine/godot/issues/38219>`__ から問題の詳細"
"を確認してください。"

msgid "There are several workarounds for this:"
msgstr "これにはいくつかの理由があります:"

msgid ""
"Enable **Interface > Editor > Update Continuously** in the Editor Settings. "
"Keep in mind this will increase power usage and heat/noise emissions since "
"the editor will now be rendering constantly, even if nothing has changed on "
"screen. To alleviate this, you can increase **Low Processor Mode Sleep "
"(µsec)** to ``33000`` (30 FPS) in the Editor Settings. This value determines "
"the amount of *microseconds* between frames to render. Higher values will "
"make the editor feel less reactive but will help decrease CPU and GPU usage "
"significantly."
msgstr ""
"エディターの設定で**Interface > Editor > Update Continuously**を有効にしてく"
"ださい。画面に何も変化がない場合でも、エディターは常にレンダリングを行うた"
"め、電力使用量と熱やノイズの放出が増加することに注意してください。これを軽減"
"するには、**Low Processor Mode Sleep (µsec)*を ``33000`` (30 FPS)に増やしてく"
"ださい。この値は、レンダリングするフレーム感覚を変更するためのものです。エ"
"ディターの反応性は低くなりますが、CPUとGPUの使用料が低下します。"

msgid ""
"Alternatively, disable variable refresh rate on your monitor or in the "
"graphics driver."
msgstr ""
"お使いのモニターまたはグラフィックス ドライバーで可変リフレッシュ レートを無"
"効にすることもできます。"

msgid ""
"VRR flicker can be reduced on some displays using the **VRR Control** or "
"**Fine Tune Dark Areas** options in your monitor's OSD. These options may "
"increase input lag or result in crushed blacks."
msgstr ""
"一部のディスプレイでは、モニターの OSD の **VRR コントロール** または **暗部"
"の微調整** オプションを使用して、VRR ちらつきを軽減できます。 これらのオプ"
"ションを使用すると、入力ラグが増加したり、黒が潰れてしまう可能性があります。"

msgid ""
"If using an OLED display, use the **Black (OLED)** editor theme preset in "
"the Editor Settings. This hides VRR flicker thanks to OLED's perfect black "
"levels."
msgstr ""
"OLED ディスプレイを使用している場合は、エディター設定でプリセットされている "
"**ブラック (OLED)** エディター テーマを使用します。 OLED の完璧な黒レベルのお"
"かげで、VRR のちらつきを隠すことができます。"

msgid "The editor or project takes a very long time to start"
msgstr "エディタやプロジェクトの開始に非常に時間がかかります"

msgid ""
"When using one of the Vulkan-based renderers (Forward+ or Forward Mobile), "
"the first startup is expected to be relatively long. This is because shaders "
"need to be compiled before they can be cached. Shaders also need to be "
"cached again after updating Godot, after updating graphics drivers or after "
"switching graphics cards."
msgstr ""
"Vulkanベースのレンダラ (Forward+またはForward Mobile)を使用する場合、最初の起"
"動には比較的時間がかかることが予想されます。これは、シェーダをキャッシュする"
"前にコンパイルする必要があるためです。Godot の更新後、グラフィックス ドライ"
"バーの更新後、またはグラフィックス カードの切り替え後も、シェーダーを再度"
"キャッシュする必要があります。"

msgid ""
"If the issue persists after the first startup, this is a `known bug <https://"
"github.com/godotengine/godot/issues/20566>`__ on Windows when you have "
"specific USB peripherals connected. In particular, Corsair's iCUE software "
"seems to cause this bug. Try updating your USB peripherals' drivers to their "
"latest version. If the bug persists, you need to disconnect the specific "
"peripheral before opening the editor. You can then connect the peripheral "
"again."
msgstr ""
"これはWindows上において、特定のUSB周辺機器を接続している場合に発生する\\ `既"
"知のバグ <https://github.com/godotengine/godot/issues/20566>`__\\ です。特"
"に、Corsair の iCUE ソフトウェアがこのバグの原因となっているようです。USB周辺"
"機器のドライバを最新バージョンにアップデートしてみてください。バグが続く場合"
"は、エディタを開く前に問題のある周辺機器を切断する必要があります。その後、再"
"度周辺機器を接続してください。"

msgid ""
"Firewall software such as Portmaster may also cause the debug port to be "
"blocked. This causes the project to take a long time to start, while being "
"unable to use debugging features in the editor (such as viewing ``print()`` "
"output). You can work this around by changing the debug port used by the "
"project in the Editor Settings (**Network > Debug > Remote Port**). The "
"default is ``6007``; try another value that is greater than ``1024``, such "
"as ``7007``."
msgstr ""

msgid "The Godot editor appears frozen after clicking the system console"
msgstr ""
"システムコンソールをクリックすると、Godotエディタがフリーズしたように見える"

msgid ""
"When running Godot on Windows with the system console enabled, you can "
"accidentally enable *selection mode* by clicking inside the command window. "
"This Windows-specific behavior pauses the application to let you select text "
"inside the system console. Godot cannot override this system-specific "
"behavior."
msgstr ""
"システムコンソールが有効な状態でGodotをWindows上で実行しているとき、コマンド"
"ウィンドウの内側をクリックすると誤って *選択モード* を有効にしてしまうことが"
"あります。このWindows固有の動作は、システムコンソール内でテキストを選択できる"
"ようにアプリケーションを一時停止させます。Godot はこのシステム固有の動作を上"
"書きすることができません。"

msgid ""
"To solve this, select the system console window and press Enter to leave "
"selection mode."
msgstr ""
"これを解決するには、システムコンソールウィンドウを選択し、Enterキーを押して選"
"択モードを解除します。"

msgid ""
"The Godot editor's macOS dock icon gets duplicated every time it is manually "
"moved"
msgstr "Godot エディタの macOS ドック アイコンを移動するたびに複製される"

msgid ""
"If you open the Godot editor and manually change the position of the dock "
"icon, then restart the editor, you will get a duplicate dock icon all the "
"way to the right of the dock."
msgstr ""
"Godot エディタを開いてドック アイコンの位置を手動で変更し、エディタを再起動す"
"ると、ドックの右側に複製のドック アイコンが表示されます。"

msgid ""
"This is due to a design limitation of the macOS dock. The only known way to "
"resolve this would be to merge the project manager and editor into a single "
"process, which means the project manager would no longer spawn a separate "
"process when starting the editor. While using a single process instance "
"would bring several benefits, it isn't planned to be done in the near future "
"due to the complexity of the task."
msgstr ""
"これは、macOS ドックの設計制限によるものです。 これを解決する唯一の方法は、プ"
"ロジェクト マネージャーとエディターを 1 つのプロセスにマージすることです。こ"
"れは、プロジェクト マネージャーがエディターの起動時に別のプロセスを生成しなく"
"なることを意味します。 単一のプロセス インスタンスを使用するといくつかの利点"
"が得られますが、タスクが複雑であるため、近い将来には使用される予定はありませ"
"ん。"

msgid ""
"To avoid this issue, keep the Godot editor's dock icon at its default "
"location as created by macOS."
msgstr ""
"この問題を回避するには、Godot エディタのドック アイコンを macOS によって作成"
"されたデフォルトの場所に維持します。"

msgid ""
"Some text such as \"NO DC\" appears in the top-left corner of the Project "
"Manager and editor window"
msgstr ""
"「NO DC」などの文字は稀にプロジェクトマネージャーやエディターの左上に現れるこ"
"とがあります。"

msgid ""
"This is caused by the NVIDIA graphics driver injecting an overlay to display "
"information."
msgstr ""
"これは、NVIDIAグラフィックスドライバが情報を表示するためにオーバーレイを挿入"
"することが原因です。"

msgid ""
"To disable this overlay on Windows, restore your graphics driver settings to "
"the default values in the NVIDIA Control Panel."
msgstr ""
"Windowsでこのオーバーレイを無効にするには、NVIDIA Control Panelでグラフィック"
"ドライバーの設定をデフォルト値に戻してください。"

msgid ""
"To disable this overlay on Linux, open ``nvidia-settings``, go to **X Screen "
"0 > OpenGL Settings** then uncheck **Enable Graphics API Visual Indicator**."
msgstr ""
"Linuxでこのオーバーレイを無効にするには、 ``nvidia-settings`` を開き、 **X "
"Screen 0 > OpenGL Settings** を選択し、 **Enable Graphics API Visual "
"Indicator** のチェックを外します。"

msgid "The editor or project appears overly sharp or blurry"
msgstr "エディターやプロジェクトが過度にぼやけたり鋭く見える"

msgid ""
"Correct appearance (left), oversharpened appearance due to graphics driver "
"sharpening (right)"
msgstr ""
"正しい外観 (左)、グラフィックス ドライバーのシャープ化によるオーバーシャープ"
"な外観 (右)"

msgid ""
"If the editor or project appears overly sharp, this is likely due to image "
"sharpening being forced on all Vulkan or OpenGL applications by your "
"graphics driver. You can disable this behavior in the graphics driver's "
"control panel:"
msgstr ""
"エディターまたはプロジェクトが過度に鮮明に見える場合は、グラフィックス ドライ"
"バーによってすべての Vulkan または OpenGL アプリケーションで画像の鮮明化が強"
"制されていることが原因である可能性があります。 この動作は、グラフィックス ド"
"ライバーのコントロール パネルで無効にすることができます。"

msgid ""
"**NVIDIA (Windows):** Open the start menu and choose **NVIDIA Control "
"Panel**. Open the **Manage 3D settings** tab on the left. In the list in the "
"middle, scroll to **Image Sharpening** and set it to **Sharpening Off**."
msgstr ""
"**NVIDIA (Windows):** スタート メニューを開き、**NVIDIA コントロール パネル"
"** を選択します。 左側の **3D 設定の管理** タブを開きます。 中央のリストで、"
"**画像の鮮明化**までスクロールし、**鮮明化オフ**に設定します。"

msgid ""
"**AMD (Windows):** Open the start menu and choose **AMD Software**. Click "
"the settings \"cog\" icon in the top-right corner. Go to the **Graphics** "
"tab then disable **Radeon Image Sharpening**."
msgstr ""
"**AMD (Windows):** スタート メニューを開き、**AMD ソフトウェア** を選択しま"
"す。 右上隅にある設定の「歯車」アイコンをクリックします。 [**グラフィックス"
"**] タブに移動し、**Radeon Image Sharpening** を無効にします。"

msgid ""
"If the editor or project appears overly blurry, this is likely due to :abbr:"
"`FXAA (Fast Approximate AntiAliasing)` being forced on all Vulkan or OpenGL "
"applications by your graphics driver."
msgstr ""
"エディターまたはプロジェクトが過度にぼやけて見える場合は、グラフィックス ドラ"
"イバーによってすべての Vulkan または OpenGL アプリケーションに :abbr:`FXAA "
"(Fast Average AntiAliasing)` が強制されていることが原因である可能性がありま"
"す。"

msgid ""
"**NVIDIA (Windows):** Open the start menu and choose **NVIDIA Control "
"Panel**. Open the **Manage 3D settings** tab on the left. In the list in the "
"middle, scroll to **Fast Approximate Antialiasing** and set it to "
"**Application Controlled**."
msgstr ""
"**NVIDIA (Windows):** スタート メニューを開き、**NVIDIA コントロール パネル"
"** を選択します。 左側の **3D 設定の管理** タブを開きます。 中央のリストで、"
"**アンチエイリアシング - FXAA**までスクロールし、**アプリケーションによるコン"
"トロール**に設定します。"

msgid ""
"**NVIDIA (Linux):** Open the applications menu and choose **NVIDIA X Server "
"Settings**. Select to **Antialiasing Settings** on the left, then uncheck "
"**Enable FXAA**."
msgstr ""
"**NVIDIA (Linux):**アプリケーションを開き **NVIDIA X Server Settings**の項目"
"を開きます。その後左側の **Antialiasing Settings**を選び、**Enable FXAA**とい"
"う項目をオフにしてください。"

msgid ""
"**AMD (Windows):** Open the start menu and choose **AMD Software**. Click "
"the settings \"cog\" icon in the top-right corner. Go to the **Graphics** "
"tab, scroll to the bottom and click **Advanced** to unfold its settings. "
"Disable **Morphological Anti-Aliasing**."
msgstr ""

msgid ""
"Third-party vendor-independent utilities such as vkBasalt may also force "
"sharpening or FXAA on all Vulkan applications. You may want to check their "
"configuration as well."
msgstr ""
"vkBasaltのようなサードパーティ製のユーティリティもまた、すべてのVulkanアプリ"
"ケーションにおいて鮮明化を強制したりFXAAを有効にする可能性があります。それら"
"ツールの設定も確認しておくと良いでしょう。"

msgid ""
"After changing options in the graphics driver or third-party utilities, "
"restart Godot to make the changes effective."
msgstr ""
"グラフィックスドライバーやサードパーティ製ユーティリティーのオプションを変更"
"した後、Godotを再起動して変更を有効にします。"

msgid ""
"If you still wish to force sharpening or FXAA on other applications, it's "
"recommended to do so on a per-application basis using the application "
"profiles system provided by graphics drivers' control panels."
msgstr ""
"それでも他のアプリケーションで鮮明化の強制やFXAAを使用したい場合は、グラ"
"フィックスドライバーのコントロールパネルでアプリケーション毎に設定することを"
"推奨します。"

#, fuzzy
msgid "The editor or project appears to have washed out colors"
msgstr "エディタやプロジェクトの開始に非常に時間がかかる。"

msgid ""
"On Windows, this is usually caused by incorrect OS or monitor settings, as "
"Godot currently does not support :abbr:`HDR (High Dynamic Range)` *output* "
"(even though it may internally render in HDR)."
msgstr ""
"Windowsでは、これは多くの場合OSやモニターの設定が不正なために発生します。"
"Godotは現在 :abbr:`HDR (ハイダイナミックレンジ)` *出力*をサポートしていません"
"(内部処理にHDRを使用する場合もありますが)。"

msgid ""
"As `most displays are not designed to display SDR content in HDR mode "
"<https://tftcentral.co.uk/articles/heres-why-you-should-only-enable-hdr-mode-"
"on-your-pc-when-you-are-viewing-hdr-content>`__, it is recommended to "
"disable HDR in the Windows settings when not running applications that use "
"HDR output. On Windows 11, this can be done by pressing :kbd:`Windows + Alt "
"+ B` (this shortcut is part of the Xbox Game Bar app). To toggle HDR "
"automatically based on applications currently running, you can use "
"`AutoActions <https://github.com/Codectory/AutoActions>`__."
msgstr ""

msgid ""
"If you insist on leaving HDR enabled, it is possible to somewhat improve the "
"result by ensuring the display is configured to use :abbr:`HGIG (HDR Gaming "
"Interest Group)` tonemapping (as opposed to :abbr:`DTM (Dynamic Tone "
"Mapping)`), then `using the Windows HDR calibration app <https://support."
"microsoft.com/en-us/windows/calibrate-your-hdr-display-using-the-windows-hdr-"
"calibration-app-f30f4809-3369-43e4-9b02-9eabebd23f19>`__. It is also "
"strongly recommended to use Windows 11 instead of Windows 10 when using HDR. "
"The end result will still likely be inferior to disabling HDR on the "
"display, though."
msgstr ""

msgid "Support for HDR *output* is planned in a future release."
msgstr "HDR *出力*のサポートは将来のリリースで追加される予定です。"

msgid ""
"The editor/project freezes or displays glitched visuals after resuming the "
"PC from suspend"
msgstr ""
"スリープしてから復帰するとエディター/プロジェクトが固まったり異常な見た目にな"
"る"

msgid ""
"This is a known issue on Linux with NVIDIA graphics when using the "
"proprietary driver. There is no definitive fix yet, as suspend on Linux + "
"NVIDIA is often buggy when OpenGL or Vulkan is involved. The Compatibility "
"rendering method (which uses OpenGL) is generally less prone to suspend-"
"related issues compared to the Forward+ and Forward Mobile rendering methods "
"(which use Vulkan)."
msgstr ""
"これはNVIDIA GPUをLinuxで使うときにプロプライエタリのドライバーを使うと発生す"
"る問題です。Linux + NVIDIAの環境でスリープにOpenGLやVulkanが関わると不具合が"
"出やすいからです。一般に、OpenGLを使用する「互換性」レンダラーはVulkanを使用"
"する「Forward+」や「モバイル」と比べてスリープに関連した問題が起こりにくいで"
"す。"

msgid ""
"The NVIDIA driver offers an *experimental* `option to preserve video memory "
"after suspend <https://wiki.archlinux.org/title/NVIDIA/"
"Tips_and_tricks#Preserve_video_memory_after_suspend>`__ which may resolve "
"this issue. This option has been reported to work better with more recent "
"NVIDIA driver versions."
msgstr ""

msgid ""
"To avoid losing work, save scenes in the editor before putting the PC to "
"sleep."
msgstr "作業を失わないよう、PCをスリープさせる前にシーンを保存しましょう。"

#, fuzzy
msgid ""
"The project works when run from the editor, but fails to load some files "
"when running from an exported copy"
msgstr ""
"エディタから実行するとプロジェクトは動作するが、エクスポートしたコピーから実"
"行するといくつかのファイルの読み込みに失敗する。"

msgid ""
"This is usually caused by forgetting to specify a filter for non-resource "
"files in the Export dialog. By default, Godot will only include actual "
"*resources* into the PCK file. Some files commonly used, such as JSON files, "
"are not considered resources. For example, if you load ``test.json`` in the "
"exported project, you need to specify ``*.json`` in the non-resource export "
"filter. See :ref:`doc_exporting_projects_export_mode` for more information."
msgstr ""
"これは通常、エクスポートダイアログでリソース以外のファイルのフィルタを指定す"
"るのを忘れたことが原因です。デフォルトでは、Godotは実際の *リソース* のみを"
"PCKファイルに含めます。JSONファイルのような一般的に使われているファイルはリ"
"ソースとはみなされません。例えば、\\ ``test.json`` をエクスポートしたプロジェ"
"クトで読み込む場合、\\ ``*.json`` をリソース以外のエクスポートフィルタに指定"
"する必要があります。詳しくは\\ :ref:`doc_exporting_projects_export_mode`\\ を"
"参照してください。"

msgid ""
"Also, note that files and folders whose names begin with a period will never "
"be included in the exported project. This is done to prevent version control "
"folders like ``.git`` from being included in the exported PCK file."
msgstr ""
"また、名前がピリオドから始まるファイルやフォルダはエクスポートされるプロジェ"
"クトには含まれません。これは ``.git``のようなバージョン管理のフォルダがエクス"
"ポートされるPCKファイルに含まれないようにするためです。"

msgid ""
"On Windows, this can also be due to :ref:`case sensitivity "
"<doc_project_organization_case_sensitivity>` issues. If you reference a "
"resource in your script with a different case than on the filesystem, "
"loading will fail once you export the project. This is because the virtual "
"PCK filesystem is case-sensitive, while Windows's filesystem is case-"
"insensitive by default."
msgstr ""
"Windowsでは、\\ :ref:`大文字小文字の区別 "
"<doc_project_organization_case_sensitivity>`\\ における問題が原因である可能性"
"もあります。スクリプト内のリソースを、ファイルシステム上とは異なる大文字小文"
"字で参照した場合、プロジェクトをエクスポートすると読み込みに失敗します。これ"
"は、Windows のファイルシステムがデフォルトで大文字小文字を区別しないのに対"
"し、仮想 PCK ファイルシステムは大文字小文字を区別しているためです。"

msgid "Translation status"
msgstr "翻訳ステータス"
