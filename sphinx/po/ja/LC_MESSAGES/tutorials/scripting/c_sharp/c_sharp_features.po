# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "C# language features"
msgstr "カスタム機能"

msgid ""
"This page provides an overview of the commonly used features of both C# and "
"Godot and how they are used together."
msgstr ""
"このページでは、C#とGodotの両方で一般的に使用される機能の概要と、それらの併用"
"方法について説明します。"

msgid "Type conversion and casting"
msgstr "型変換とキャスト"

msgid ""
"C# is a statically typed language. Therefore, you can't do the following:"
msgstr "C#は静的に型指定された言語です。したがって、次の操作は実行できません:"

#, fuzzy
msgid ""
"The method ``GetNode()`` returns a ``Node`` instance. You must explicitly "
"convert it to the desired derived type, ``Sprite2D`` in this case."
msgstr ""
"メソッド ``GetNode()`` は ``Node`` インスタンスを返します。この場合は、明示的"
"に目的の派生型 ``Sprite`` に変換する必要があります。"

msgid "For this, you have various options in C#."
msgstr "このために、C#にはさまざまなオプションがあります。"

msgid "**Casting and Type Checking**"
msgstr "\\ **キャストと型チェック**"

#, fuzzy
msgid ""
"Throws ``InvalidCastException`` if the returned node cannot be cast to "
"Sprite2D. You would use it instead of the ``as`` operator if you are pretty "
"sure it won't fail."
msgstr ""
"返されたNodeをSpriteにキャストできない場合は、 ``InvalidCastException`` をス"
"ローします。失敗しないと確信している場合は、\\ ``as`` 演算子の代わりにキャス"
"トを使用します。"

msgid "**Using the AS operator**"
msgstr "\\ **AS演算子の使用**"

#, fuzzy
msgid ""
"The ``as`` operator returns ``null`` if the node cannot be cast to Sprite2D, "
"and for that reason, it cannot be used with value types."
msgstr ""
"NodeをSpriteにキャストできない場合、\\ ``as`` 演算子は ``null`` を返します。"
"そのため、値型では使用できません。"

msgid "**Using the generic methods**"
msgstr "**汎用メソッドを使用**"

msgid ""
"Generic methods are also provided to make this type conversion transparent."
msgstr "この型変換を透過的にするための汎用メソッドも提供されています。"

msgid ""
"``GetNode<T>()`` casts the node before returning it. It will throw an "
"``InvalidCastException`` if the node cannot be cast to the desired type."
msgstr ""
"``GetNode<T>()`` は、ノードを返す前にノードをキャストします。ノードを目的の型"
"にキャストできない場合は、\\ ``InvalidCastException`` がスローされます。"

msgid ""
"``GetNodeOrNull<T>()`` uses the ``as`` operator and will return ``null`` if "
"the node cannot be cast to the desired type."
msgstr ""
"``GetNodeOrNull<T>()`` は ``as`` 演算子を使用し、ノードを目的の型にキャストで"
"きない場合は ``null`` を返します。"

msgid "**Type checking using the IS operator**"
msgstr "**IS演算子を使用した型チェック**"

#, fuzzy
msgid ""
"To check if the node can be cast to Sprite2D, you can use the ``is`` "
"operator. The ``is`` operator returns false if the node cannot be cast to "
"Sprite2D, otherwise it returns true. Note that when the ``is`` operator is "
"used against ``null`` the result is always going to be ``false``."
msgstr ""
"ノードをSpriteにキャストできるかどうかを確認するには、 ``is`` 演算子を使用で"
"きます。\\ ``is`` 演算子は、ノードをSpriteにキャストできない場合はfalseを返"
"し、できる場合はtrueを返します。"

msgid ""
"You can also declare a new variable to conditionally store the result of the "
"cast if the ``is`` operator returns ``true``."
msgstr ""

msgid ""
"For more advanced type checking, you can look into `Pattern Matching "
"<https://docs.microsoft.com/en-us/dotnet/csharp/pattern-matching>`_."
msgstr ""
"より高度な型チェックについては、 `パターンマッチング<https://docs.microsoft."
"com/ja-jp/dotnet/csharp/pattern-matching>` で調べることができます。"

msgid "Preprocessor defines"
msgstr "プリプロセッサ定義"

msgid ""
"Godot has a set of defines that allow you to change your C# code depending "
"on the environment you are compiling to."
msgstr ""
"Godotには、コンパイルする環境に応じてC#コードを変更できる一連の定義がありま"
"す。"

msgid ""
"If you created your project before Godot 3.2, you have to modify or "
"regenerate your `csproj` file to use this feature (compare "
"``<DefineConstants>`` with a new 3.2+ project)."
msgstr ""
"Godot 3.2より前にプロジェクトを作成した場合、この機能を使用するには、\\ "
"`csproj` ファイルを変更または再生成する必要があります (``<DefineConstants>`` "
"を新しい3.2+プロジェクトと比較してください)。"

msgid "Examples"
msgstr "例"

msgid "For example, you can change code based on the platform:"
msgstr "たとえば、プラットフォームに基づいてコードを変更できます:"

msgid ""
"Or you can detect which engine your code is in, useful for making cross-"
"engine libraries:"
msgstr ""
"または、コードがどのエンジンにあるかを検出できます。これは、クロスエンジンラ"
"イブラリを作成するのに役立ちます:"

msgid ""
"Or you can write scripts that target multiple Godot versions and take "
"advantage of features that are only available on some of those versions:"
msgstr ""

msgid "Full list of defines"
msgstr "定義の完全なリスト"

msgid "``GODOT`` is always defined for Godot projects."
msgstr "Godotプロジェクトでは、\\ ``GODOT`` が常に定義されています。"

msgid ""
"``TOOLS`` is defined when building with the Debug configuration (editor and "
"editor player)."
msgstr ""

msgid ""
"``GODOT_REAL_T_IS_DOUBLE`` is defined when the ``GodotFloat64`` property is "
"set to ``true``."
msgstr ""

msgid ""
"One of ``GODOT_64`` or ``GODOT_32`` is defined depending on if the "
"architecture is 64-bit or 32-bit."
msgstr ""
"アーキテクチャが64ビットか32ビットかによって、\\ ``GODOT_64`` または "
"``GODOT_32`` のいずれかが定義されます。"

#, fuzzy
msgid ""
"One of ``GODOT_LINUXBSD``, ``GODOT_WINDOWS``, ``GODOT_OSX``, "
"``GODOT_ANDROID``, ``GODOT_IOS``, ``GODOT_HTML5``, or ``GODOT_SERVER`` "
"depending on the OS. These names may change in the future. These are created "
"from the ``get_name()`` method of the :ref:`OS <class_OS>` singleton, but "
"not every possible OS the method returns is an OS that Godot with .NET runs "
"on."
msgstr ""
"OSに応じて、\\ ``GODOT_X11``\\ 、\\ ``GODOT_WINDOWS``\\ 、\\ "
"``GODOT_OSX``\\ 、\\ ``GODOT_ANDROID``\\ 、\\ ``GODOT_HTML5``\\ 、または "
"``GODOT_SERVER`` のいずれか1つ。これらの名前は将来変更される可能性がありま"
"す。これらは :ref:``OS <class_OS>`` シングルトンの ``get_name()`` メソッドか"
"ら作成されますが、メソッドが返すすべての利用可能なOSが、Monoを搭載したGodotが"
"実行できるOSというわけではありません。"

msgid ""
"``GODOTX``, ``GODOTX_Y``, ``GODOTX_Y_Z``, ``GODOTx_OR_GREATER``, "
"``GODOTX_y_OR_GREATER``, and ``GODOTX_Y_z_OR_GREATER``, where ``X``, ``Y``, "
"and ``Z`` are replaced by the current major, minor and patch version of "
"Godot. ``x``, ``y``, and ``z`` are replaced by all values from 0 to the "
"current version number for that component."
msgstr ""

msgid ""
"These defines were first added in Godot 4.0.4 and 4.1. Version defines for "
"prior versions do not exist, regardless of the current Godot version."
msgstr ""

msgid ""
"For example: Godot 4.0.5 defines ``GODOT4``, ``GODOT4_OR_GREATER``, "
"``GODOT4_0``, ``GODOT4_0_OR_GREATER``, ``GODOT4_0_5``, "
"``GODOT4_0_4_OR_GREATER``, and ``GODOT4_0_5_OR_GREATER``. Godot 4.3.2 "
"defines ``GODOT4``, ``GODOT4_OR_GREATER``, ``GODOT4_3``, "
"``GODOT4_0_OR_GREATER``, ``GODOT4_1_OR_GREATER``, ``GODOT4_2_OR_GREATER``, "
"``GODOT4_3_OR_GREATER``, ``GODOT4_3_2``, ``GODOT4_3_0_OR_GREATER``, "
"``GODOT4_3_1_OR_GREATER``, and ``GODOT4_3_2_OR_GREATER``."
msgstr ""

msgid ""
"When **exporting**, the following may also be defined depending on the "
"export features:"
msgstr "**エクスポート** する場合、エクスポート機能に応じて以下も定義できます:"

msgid ""
"One of ``GODOT_PC``, ``GODOT_MOBILE``, or ``GODOT_WEB`` depending on the "
"platform type."
msgstr ""
"プラットフォームの種類に応じて、\\ ``GODOT_PC``\\ 、\\ ``GODOT_MOBILE``\\ 、"
"または ``GODOT_WEB`` のいずれか。"

#, fuzzy
msgid ""
"One of ``GODOT_WINDOWS``, ``GODOT_LINUXBSD``, ``GODOT_MACOS``, "
"``GODOT_ANDROID``, ``GODOT_IOS``, or ``GODOT_WEB`` depending on the platform."
msgstr ""
"プラットフォームの種類に応じて、\\ ``GODOT_PC``\\ 、\\ ``GODOT_MOBILE``\\ 、"
"または ``GODOT_WEB`` のいずれか。"

#, fuzzy
msgid ""
"To see an example project, see the OS testing demo: https://github.com/"
"godotengine/godot-demo-projects/tree/master/misc/os_test"
msgstr ""
"明確にするために、これが `bomber demo <https://github.com/godotengine/godot-"
"demo-projects/tree/master/networking/multiplayer_bomber>`_ でどのように見える"
"かの例を示します:"

msgid "Translation status"
msgstr "翻訳ステータス"
