# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "FAQ"
msgstr "FAQ"

msgid "Frequently asked questions"
msgstr "よくある質問"

msgid ""
"What can I do with Godot? How much does it cost? What are the license terms?"
msgstr "Godotでできることは何ですか？それに費用は掛かりますか？ライセンスは？"

msgid ""
"Godot is `Free and open source Software <https://en.wikipedia.org/wiki/"
"Free_and_open source_software>`_ available under the `OSI-approved <https://"
"opensource.org/licenses/MIT>`_ MIT license. This means it is free as in "
"\"free speech\" as well as in \"free beer.\""
msgstr ""
"Godotは\\ `フリーかつオープンソースのソフトウェア <https://ja.wikipedia.org/"
"wiki/FLOSS>`_\\ であり、\\ `OSI承認済み <https://opensource.org/licenses/"
"MIT>`_\\ のMITライセンスの元で利用できます。これは「フリービール (無料のビー"
"ル)」のフリーと「フリースピーチ (言論の自由)」のフリーの二つの意味でとてもフ"
"リーであることを意味します。"

msgid "In short:"
msgstr "要約すると:"

msgid ""
"You are free to download and use Godot for any purpose: personal, non-"
"profit, commercial, or otherwise."
msgstr ""
"Godotは、個人的な利用、非営利な利用、商業、そのほかの目的に無料で自由に使用で"
"きます。"

msgid ""
"You are free to modify, distribute, redistribute, and remix Godot to your "
"heart's content, for any reason, both non-commercially and commercially."
msgstr "商用、非商用を問わず、無料で自由にGodotを改変、配布、再配布できます。"

msgid ""
"All the contents of this accompanying documentation are published under the "
"permissive Creative Commons Attribution 3.0 (`CC BY 3.0 <https://"
"creativecommons.org/licenses/by/3.0/>`_) license, with attribution to \"Juan "
"Linietsky, Ariel Manzur and the Godot Engine community.\""
msgstr ""
"このコンテンツは、「Juan Linietsky」、「Ariel Manzur」そして 「Godot Engineコ"
"ミュニティ」によって、クリエイティブ・コモンズ-表示 3.0(\\ `CC-BY 3.0 "
"<https://creativecommons.org/licenses/by/3.0/deed.ja>`_\\ )ライセンスの下、管"
"理されております。"

msgid ""
"Logos and icons are generally under the same Creative Commons license. Note "
"that some third-party libraries included with Godot's source code may have "
"different licenses."
msgstr ""
"ロゴ、アイコンはクリエイティブ・コモンズ・ライセンス下で管理しています。補足"
"としてサードパーティライブラリには、Godotのソースコードとは違うライセンスを含"
"んでいる可能性があります。"

msgid ""
"For full details, look at the `COPYRIGHT.txt <https://github.com/godotengine/"
"godot/blob/master/COPYRIGHT.txt>`_ as well as the `LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_ and `LOGO_LICENSE."
"txt <https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.txt>`_ "
"files in the Godot repository."
msgstr ""
"詳細はGodotリポジトリの、\\ `COPYRIGHT.txt <https://github.com/godotengine/"
"godot/blob/master/COPYRIGHT.txt>`_\\ と `LICENSE.txt <https://github.com/"
"godotengine/godot/blob/master/LICENSE.txt>`_\\ 、さらに\\ `LOGO_LICENSE.txt "
"<https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_\\ ファイ"
"ルをご覧ください。"

msgid ""
"Also, see `the license page on the Godot website <https://godotengine.org/"
"license>`_."
msgstr ""
"また、\\ `Godotウェブサイトのライセンス情報ページ <https://godotengine.org/"
"license>`_\\ も見てみて下さい。"

msgid "Which platforms are supported by Godot?"
msgstr "Godotが対応するプラットフォームは？"

msgid "**For the editor:**"
msgstr "**エディタ:**"

msgid "Windows"
msgstr "Windows"

msgid "macOS"
msgstr "macOS"

msgid "Linux, \\*BSD"
msgstr "X11 (Linux, \\*BSD)"

msgid "Android (experimental)"
msgstr "Android (実験的)"

msgid "`Web <https://editor.godotengine.org/>`__ (experimental)"
msgstr "`Web <https://editor.godotengine.org/>`__ (実験的)"

msgid "**For exporting your games:**"
msgstr "**ゲームの書き出し:**"

msgid "Android"
msgstr "Android"

msgid "iOS"
msgstr "iOS"

msgid "Web"
msgstr "Web"

msgid ""
"Both 32- and 64-bit binaries are supported where it makes sense, with 64 "
"being the default. Official macOS builds support Apple Silicon natively as "
"well as x86_64."
msgstr "デフォルトは64ビットですが、32ビットと64ビット両方に対応しています。"

msgid ""
"Some users also report building and using Godot successfully on ARM-based "
"systems with Linux, like the Raspberry Pi."
msgstr ""
"Raspberry Piのような、ARMベースのLinuxマシンでGodotが動作したという報告もいく"
"つかあります。"

msgid ""
"The Godot team can't provide an open source console export due to the "
"licensing terms imposed by console manufacturers. Regardless of the engine "
"you use, though, releasing games on consoles is always a lot of work. You "
"can read more about :ref:`doc_consoles`."
msgstr ""
"コンソールゲーム機製造元とのライセンス契約を結ばずに、コンソール向けにゲーム"
"をエクスポートする機能を提供することはGodotチームには出来ません。どのエンジン"
"を使っていても、コンソール機でゲームをリリースするには常に多くの労力が必要で"
"す。そのことについては :ref:`doc_consoles` で詳しく解説しています。"

msgid ""
"For more on this, see the sections on :ref:`exporting <toc-learn-workflow-"
"export>` and :ref:`compiling Godot yourself <toc-devel-compiling>`."
msgstr ""
"詳しくは、\\ :ref:`書き出しについて <toc-learn-workflow-export>`\\ の節や\\ :"
"ref:`Godotをコンパイルする <toc-devel-compiling>`\\ をご参照ください。"

msgid ""
"Godot 3 also had support for Universal Windows Platform (UWP). This platform "
"port was removed in Godot 4 due to lack of maintenance, and it being "
"deprecated by Microsoft. It is still available in the current stable release "
"of Godot 3 for interested users."
msgstr ""
"Godot3ではUniversal Windows Platform(UWP)もサポートしていました。しかしこの"
"ポートはメンテナンス不足やMicrosoftからの対応が薄まった事でGodot4からはサポー"
"トされなくなりました。興味があるユーザーは現在もGodot3の最新バージョンを使用"
"する事でUWPをサポートすることが出来ます。"

msgid "Which programming languages are supported in Godot?"
msgstr "Godotが対応するプログラミング言語は？"

msgid ""
"The officially supported languages for Godot are GDScript, C#, and C++. See "
"the subcategories for each language in the :ref:`scripting <toc-learn-"
"scripting>` section."
msgstr ""
"Godotが公式対応している言語は、GDScript、C#、およびC++です。それぞれの言語に"
"ついてのサブカテゴリーは\\ :ref:`スクリプト <toc-learn-scripting>`\\ セクショ"
"ンにあります。"

msgid ""
"If you are just starting out with either Godot or game development in "
"general, GDScript is the recommended language to learn and use since it is "
"native to Godot. While scripting languages tend to be less performant than "
"lower-level languages in the long run, for prototyping, developing Minimum "
"Viable Products (MVPs), and focusing on Time-To-Market (TTM), GDScript will "
"provide a fast, friendly, and capable way of developing your games."
msgstr ""
"初めてGodotを使う人や、これからゲーム開発を始める人には、Godot内蔵のGDScript"
"がおすすめです。スクリプト言語はより低水準な言語に比べて、必ずしも長期的には"
"最適ではありません。しかし試作や、実用最小限の製品(MVP)の開発、製品化への時間"
"(TTM)を重視する場合、GDScriptはゲーム開発のためのスピーディで親しみやすい、有"
"用な手段になります。"

msgid ""
"Note that C# support is still relatively new, and as such, you may encounter "
"some issues along the way. C# support is also currently missing on the web "
"platform. Our friendly and hard-working development community is always "
"ready to tackle new problems as they arise, but since this is an open source "
"project, we recommend that you first do some due diligence yourself. "
"Searching through discussions on `open issues <https://github.com/"
"godotengine/godot/issues?q=is%3Aopen+is%3Aissue+label%3Atopic%3Adotnet>`__ "
"is a great way to start your troubleshooting."
msgstr ""
"C#への対応はまだ比較的新しいため、何らかの問題が生じる可能性があります。C#は"
"ウェブプラットフォームでもまだサポートされていません。当方のフレンドリーで仕"
"事熱心な開発コミュニティーは、新たに浮かんできた問題に挑む準備は万端です。し"
"かし、これはオープンソース・プロジェクトなので、まずはご自身で解決法を探るこ"
"とを推奨します。トラブルシューティングには最初に、\\ `open issues(英語) "
"<https://github.com/godotengine/godot/issues>`_\\ 内にて交わされているやりと"
"りを参照してみてください。"

msgid ""
"As for new languages, support is possible via third parties with "
"GDExtensions. (See the question about plugins below). Work is currently "
"underway, for example, on unofficial bindings for Godot to `Python <https://"
"github.com/touilleMan/godot-python>`_ and `Nim <https://github.com/pragmagic/"
"godot-nim>`_."
msgstr ""
"新しい言語については、GDNative/NativeScript/PluginScript機能を通じてサード"
"パーティによる対応が可能です。例えば現在、\\ `Python <https://github.com/"
"touilleMan/godot-python>`_\\ や\\ `Nim <https://github.com/pragmagic/godot-"
"nim>`_\\ のGodot向け非公式バインディングが開発進行中です。"

msgid "What is GDScript and why should I use it?"
msgstr "GDScriptとは何ですか？それを使うメリットは？"

msgid ""
"GDScript is Godot's integrated scripting language. It was built from the "
"ground up to maximize Godot's potential in the least amount of code, "
"affording both novice and expert developers alike to capitalize on Godot's "
"strengths as fast as possible. If you've ever written anything in a language "
"like Python before, then you'll feel right at home. For examples and a "
"complete overview of the power GDScript offers you, check out the :ref:"
"`GDScript scripting guide <doc_gdscript>`."
msgstr ""
"GDScriptはGodot内蔵のスクリプト言語です。より少ないコードでGodotの能力を最大"
"限に発揮できるよう、一から設計されています。初心者からエキスパートまで、すば"
"やくGodotの性能を引き出せるようになります。もしPythonのような言語で書いた経験"
"があれば、すぐに馴染めることでしょう。GDScriptのサンプルや歴史、その力の概要"
"を知りたい方は、\\ :ref:`GDScriptスクリプティング・ガイド <doc_gdscript>`\\ "
"をお読み下さい。"

msgid ""
"There are several reasons to use GDScript, especially when you are "
"prototyping, in alpha/beta stages of your project, or are not creating the "
"next AAA title. The most salient reason is the overall **reduction of "
"complexity**."
msgstr ""
"GDScriptを使用するメリットは多くありますが、特に、試作やアルファ/ベータ版の段"
"階にある場合や、大作を作るのでない場合などが挙げられます。しかし一番のメリッ"
"トは、全体的に **複雑さを減らせることです**。"

msgid ""
"The original intent of creating a tightly integrated, custom scripting "
"language for Godot was two-fold: first, it reduces the amount of time "
"necessary to get up and running with Godot, giving developers a rapid way of "
"exposing themselves to the engine with a focus on productivity; second, it "
"reduces the overall burden of maintenance, attenuates the dimensionality of "
"issues, and allows the developers of the engine to focus on squashing bugs "
"and improving features related to the engine core, rather than spending a "
"lot of time trying to get a small set of incremental features working across "
"a large set of languages."
msgstr ""
"Godot用に緊密に統合されたカスタムスクリプト言語を作る目的は、2つありました: "
"第一に、Godotを起動したり動作させたりするときに必要な時間を減らし、開発者がエ"
"ンジンにすばやく触れる方法を提供して、生産性を重視するためです。第二に、維持"
"にかかる負担を全体的に軽減し、問題の次元を下げるためで、これによりエンジンの"
"開発者は、多くの言語で動作する小さな機能追加に多くの時間を費やすのではなく、"
"エンジンコアのみに関連する機能改善やバグ修正に集中できるようになります。"

msgid ""
"Since Godot is an open source project, it was imperative from the start to "
"prioritize a more integrated and seamless experience over attracting "
"additional users by supporting more familiar programming languages, "
"especially when supporting those more familiar languages would result in a "
"worse experience. We understand if you would rather use another language in "
"Godot (see the list of supported options above). That being said, if you "
"haven't given GDScript a try, try it for **three days**. Just like Godot, "
"once you see how powerful it is and rapid your development becomes, we think "
"GDScript will grow on you."
msgstr ""
"Godot はオープンソースプロジェクトなので、よく知られたプログラミング言語をサ"
"ポートすることでユーザー数を増やそうとするより、より統合されたシームレスな体"
"験を必須要件として優先してきました。あなたがGodotで別の言語(上記のサポートさ"
"れるオプションのリストを参照してください) を使用したいということは理解しま"
"す。とはいえ、GDScriptをまだ試していない人は、\\ **3日間**\\ だけ試してみてく"
"ださい。Godotと同じように、GDScriptがいかに強力であり、開発がいかに迅速になる"
"かを見れば、気に入ってもらえるはずです。"

msgid ""
"More information about getting comfortable with GDScript or dynamically "
"typed languages can be found in the :ref:`doc_gdscript_more_efficiently` "
"tutorial."
msgstr ""
"GDScriptや他の動的言語を使いこなすための情報は、こちらのチュートリアル\\ :"
"ref:`doc_gdscript_more_efficiently`\\ にあります。"

msgid "What were the motivations behind creating GDScript?"
msgstr "なぜGodot Scriptを作ったのですか？"

msgid ""
"In the early days, the engine used the `Lua <https://www.lua.org>`__ "
"scripting language. Lua can be fast thanks to LuaJIT, but creating bindings "
"to an object-oriented system (by using fallbacks) was complex and slow and "
"took an enormous amount of code. After some experiments with `Python "
"<https://www.python.org>`__, that also proved difficult to embed."
msgstr ""
"最初、このエンジンは `Lua <http://www.lua.org>`_ スクリプト言語を使用していま"
"した。Luaは高速ですが、オブジェクト指向システム(フォールバックを使用して)への"
"バインディングの作成は複雑で時間がかかり、膨大なコードを必要としました。 "
"`Python <https://www.python.org>`_ でいくつかの実験を行った結果、それを埋め込"
"むのは難しいことがわかりました。"

msgid ""
"The main reasons for creating a custom scripting language for Godot were:"
msgstr "Godot専用のスクリプト言語を作った主な理由は以下の通りです:"

msgid ""
"Poor threading support in most script VMs, and Godot uses threads (Lua, "
"Python, Squirrel, JavaScript, ActionScript, etc.)."
msgstr ""
"ほとんどのスクリプトVM(Lua、Python、Squirrel、JavaScript、ActionScriptなど)で"
"はスレッドサポートが不十分ですが、Godotはスレッドを使用します。"

msgid ""
"Poor class-extending support in most script VMs, and adapting to the way "
"Godot works is highly inefficient (Lua, Python, JavaScript)."
msgstr ""
"ほとんどのスクリプトVM(Lua、Python、JavaScript)ではクラス拡張のサポートが不十"
"分で、Godotの動作方法に適応させる作業は非常に非効率的です。"

msgid ""
"Many existing languages have horrible interfaces for binding to C++, "
"resulting in a large amount of code, bugs, bottlenecks, and general "
"inefficiency (Lua, Python, Squirrel, JavaScript, etc.). We wanted to focus "
"on a great engine, not a great number of integrations."
msgstr ""
"既存の多くの言語(Lua、Python、Squirrel、JavaScript など)では、C++とバインドす"
"るには、煩雑なインターフェイスを使わなければなりません。その結果、大量のコー"
"ド、バグ、ボトルネック、および全般的な非効率性が生じてしまいます。私たちは、"
"結合用コードではなく、すばらしいエンジンのために集中したかったのです。"

msgid ""
"No native vector types (Vector3, Transform3D, etc.), resulting in highly "
"reduced performance when using custom types (Lua, Python, Squirrel, "
"JavaScript, ActionScript, etc.)."
msgstr ""
"(Lua、Python、Squirrel、JavaScript、ActionScriptなどには)ネイティブなベクトル"
"タイプ(vector3、matrix4など)がないため、その代わりにカスタムタイプを使用する"
"必要がありますが、それによってパフォーマンスが大幅に低下します。"

msgid ""
"Garbage collector results in stalls or unnecessarily large memory usage "
"(Lua, Python, JavaScript, ActionScript, etc.)."
msgstr ""
"(Lua、Python、JavaScript、ActionScriptなどでは)ガベージコレクタが原因で速度低"
"下が発生したり、不必要にメモリ使用量が増えたりします。"

msgid ""
"Difficulty integrating with the code editor for providing code completion, "
"live editing, etc. (all of them)."
msgstr ""
"(前記の各種言語では)コード補完、ライブ編集などを提供するコードエディタとの統"
"合が困難です。GDScriptではそれらがサポートされています。"

msgid "GDScript was designed to curtail the issues above, and more."
msgstr "GDScriptは上記の問題を減らすように設計されています。"

msgid "What 3D model formats does Godot support?"
msgstr "Godotで読み込める3Dモデルのフォーマットは?"

msgid ""
"You can find detailed information on supported formats, how to export them "
"from your 3D modeling software, and how to import them for Godot in the :ref:"
"`doc_importing_3d_scenes` documentation."
msgstr ""
"サポートされているフォーマットや、3Dモデリングソフトからのエクスポート方法、"
"Godotへのインポート方法については、 :ref:`doc_importing_3d_scenes` ドキュメン"
"トに詳しい情報があります。"

msgid ""
"Will [insert closed SDK such as FMOD, GameWorks, etc.] be supported in Godot?"
msgstr ""
"Godotでは(FMODやGameWorksなどの)クローズドSDKの組み込みがサポートされますか?"

msgid ""
"The aim of Godot is to create a free and open source MIT-licensed engine "
"that is modular and extendable. There are no plans for the core engine "
"development community to support any third-party, closed-source/proprietary "
"SDKs, as integrating with these would go against Godot's ethos."
msgstr ""
"Godotの目的は、モジュール式で拡張可能な自由でオープンソースのMITライセンスエ"
"ンジンを作成することです。コアエンジン開発コミュニティは、サードパーティのク"
"ローズドソース/プロプライエタリSDKについては、これらとの統合がGodotの精神に反"
"するとして、サポートする計画はありません。"

msgid ""
"That said, because Godot is open source and modular, nothing prevents you or "
"anyone else interested in adding those libraries as a module and shipping "
"your game with them, as either open- or closed-source."
msgstr ""
"とはいえ、Godot はオープンソースかつモジュラーであるため、ライブラリがオープ"
"ンソースかクローズドソースであるかに関わりなく、それらをモジュールとして追加"
"して、ゲームを出荷することを妨げるものは何もありません。"

msgid ""
"To see how support for your SDK of choice could still be provided, look at "
"the Plugins question below."
msgstr ""
"選択したSDKのサポートがどのように提供されるのかを確認するには、以下のプラグイ"
"ンの質問を参照してください。"

msgid ""
"If you know of a third-party SDK that is not supported by Godot but that "
"offers free and open source integration, consider starting the integration "
"work yourself. Godot is not owned by one person; it belongs to the "
"community, and it grows along with ambitious community contributors like you."
msgstr ""
"Godotではサポートされていないものの、自由かつオープン ソースでの統合が可能な"
"サードパーティ製のSDKがあるのをご存知であれば、その統合作業を自身で始めること"
"をご検討ください。Godotは一人の人間が所有しているわけではなく、コミュニティに"
"属しているので、あなたのような野心的なコミュニティへの貢献者と一緒に成長しま"
"す。"

msgid "How can I extend Godot?"
msgstr "Godotを拡張するにはどうすればよいですか?"

msgid ""
"For extending Godot, like creating Godot Editor plugins or adding support "
"for additional languages, take a look at :ref:`EditorPlugins "
"<doc_making_plugins>` and tool scripts."
msgstr ""
"Godotエディタプラグインの作成や追加言語のサポートの追加など、Godotを拡張する"
"には、\\ :ref:`エディタプラグイン <doc_making_plugins>`\\ およびツールスクリ"
"プトを参照してください。"

msgid ""
"Also, see the official blog post on GDExtension, a way to develop native "
"extensions for Godot:"
msgstr ""
"また、Godot用のネイティブ拡張機能を開発する方法であるGDExtensionに関する公式"
"ブログの投稿も参照してください:"

msgid ""
"`Introducing GDNative's successor, GDExtension <https://godotengine.org/"
"article/introducing-gd-extensions>`_"
msgstr ""
"`GDNativeの成功例、GDExtensionの紹介(英語) <https://godotengine.org/article/"
"introducing-gd-extensions>`_"

msgid ""
"You can also take a look at the GDScript implementation, the Godot modules, "
"as well as the `Jolt physics engine integration <https://github.com/godot-"
"jolt/godot-jolt>`__ for Godot. This would be a good starting point to see "
"how another third-party library integrates with Godot."
msgstr ""
"GDScriptの実装、Godotモジュール、およびGodot向けの `Jolt Physics Engine "
"integration <https://github.com/godot-jolt/godot-jolt>`__ もご覧ください。こ"
"れは、別のサードパーティライブラリがどのようにGodotに統合されるかを知る良い出"
"発点です。"

msgid ""
"How do I install the Godot editor on my system (for desktop integration)?"
msgstr "Godotを自分のシステムにインストール（デスクトップへ統合）するには？"

msgid ""
"Since you don't need to actually install Godot on your system to run it, "
"this means desktop integration is not performed automatically. There are two "
"ways to overcome this. You can install Godot from `Steam <https://store."
"steampowered.com/app/404790/Godot_Engine/>`__ (all platforms), `Scoop "
"<https://scoop.sh/>`__ (Windows), `Homebrew <https://brew.sh/>`__ (macOS) or "
"`Flathub <https://flathub.org/apps/details/org.godotengine.Godot>`__ "
"(Linux). This will automatically perform the required steps for desktop "
"integration."
msgstr ""
"実際にはGodotをあなたのシステムで実行する必要はないので、デスクトップ統合は自"
"動的には実行されません。これを解決するには2つの方法があります。Godotを "
"`Steam <https://store.steampowered.com/app/404790/Godot_Engine/>`__ (all "
"platforms), `Scoop <https://scoop.sh/>`__ (Windows), `Homebrew <https://brew."
"sh/>`__ (macOS) もしくは `Flathub <https://flathub.org/apps/details/org."
"godotengine.Godot>`__ (Linux) からインストールできます。これらの方法では、デ"
"スクトップ統合に必要なステップが自動的に実行されます。"

msgid ""
"Alternatively, you can manually perform the steps that an installer would do "
"for you:"
msgstr ""
"あるいは、インストーラーが実行するステップをあなたが手動で行うこともできま"
"す。"

msgid ""
"Move the Godot executable to a stable location (i.e. outside of your "
"Downloads folder), so you don't accidentally move it and break the shortcut "
"in the future."
msgstr ""
"Godot の実行可能ファイルを安定した場所（ex.WindowsではProgram filesの中など）"
"に移動し、将来誤って移動してショートカットが壊れないようにします。"

msgid "Right-click the Godot executable and choose **Create Shortcut**."
msgstr "Godotの実行ファイルを右クリックして **ショートカットの作成** を選択。"

msgid ""
"Move the created shortcut to ``%APPDATA%\\Microsoft\\Windows\\Start "
"Menu\\Programs``. This is the user-wide location for shortcuts that will "
"appear in the Start menu. You can also pin Godot in the task bar by right-"
"clicking the executable and choosing **Pin to Task Bar**."
msgstr ""
"作成したショートカットを ``%APPDATA%\\Microsoft\\Windows\\Start "
"Menu\\Programs`` へ移動します。 これはスタートメニューに表示されるショート"
"カットのユーザー共通の場所です。また、実行ファイルを右クリックして **タスク"
"バーにピン留め** を選択すれば、Godotをタスクバーにピン留めすることができま"
"す。"

msgid ""
"Drag the extracted Godot application to ``/Applications/Godot.app``, then "
"drag it to the Dock if desired. Spotlight will be able to find Godot as long "
"as it's in ``/Applications`` or ``~/Applications``."
msgstr ""
"取り出されたGodotアプリケーションを ``/Applications/Godot.app`` にドラッグ"
"し、必要な場合にはDockにもドラッグします。Spotlightは ``/Applications`` また"
"は ``~/Applications`` にある限り、Godotを見つけられるようになります。"

msgid "Linux"
msgstr "Linux"

msgid ""
"Move the Godot binary to a stable location (i.e. outside of your Downloads "
"folder), so you don't accidentally move it and break the shortcut in the "
"future."
msgstr ""
"Godot の実行可能ファイルを安定した場所（Program Filesフォルダなど）に移動し、"
"将来誤って移動してショートカットが壊れないようにします。"

msgid ""
"Rename and move the Godot binary to a location present in your ``PATH`` "
"environment variable. This is typically ``/usr/local/bin/godot`` or ``/usr/"
"bin/godot``. Doing this requires administrator privileges, but this also "
"allows you to :ref:`run the Godot editor from a terminal "
"<doc_command_line_tutorial>` by entering ``godot``."
msgstr ""
"Godotのバイナリを環境変数`PATH`に含まれる場所にリネームして移動してください。"
"これは標準では`/usr/local/bin/godot`または`/usr/bin/godot`です。この作業を行"
"うには管理者権限が必要ですが、 :ref:`ターミナルからGodotエディタを起動する"
"<doc_command_line_tutorial>`のように`godot`と入力して起動することも可能になり"
"ます。"

msgid ""
"If you cannot move the Godot editor binary to a protected location, you can "
"keep the binary somewhere in your home directory, and modify the ``Path=`` "
"line in the ``.desktop`` file linked below to contain the full *absolute* "
"path to the Godot binary."
msgstr ""
"Godot エディタのバイナリを保護された場所に移動できない場合、バイナリをホーム"
"ディレクトリのどこかに置いて、下記にリンクされている \\ ``.desktop``\\ ファイ"
"ルの中の ``Path=`` 行を修正し、Godotバイナリへの\\ *絶対*\\ パスのすべてを含"
"めることができます。"

msgid ""
"Save `this .desktop file <https://raw.githubusercontent.com/godotengine/"
"godot/master/misc/dist/linux/org.godotengine.Godot.desktop>`__ to ``$HOME/."
"local/share/applications/``. If you have administrator privileges, you can "
"also save the ``.desktop`` file to ``/usr/local/share/applications`` to make "
"the shortcut available for all users."
msgstr ""
"\\ `この .desktop ファイル<https://raw.githubusercontent.com/godotengine/"
"godot/master/misc/dist/linux/org.godotengine.Godot.desktop>`__\\ を \\ "
"``$HOME/.local/share/applications/``\\ に保存してください。また、管理者権限が"
"あれば、\\ ``.desktop``\\ のファイルを \\ ``/usr/local/share/"
"applications``\\ に保存することによって、すべてのユーザーへのショートカットを"
"作成できます。"

msgid "Is the Godot editor a portable application?"
msgstr "Godotエディタはポータブルなアプリケーションですか？"

msgid ""
"In its default configuration, Godot is *semi-portable*. Its executable can "
"run from any location (including non-writable locations) and never requires "
"administrator privileges."
msgstr ""
"デフォルトでは、Godot は \"セミポータブル\" です。その実行ファイルはどんな場"
"所（書き込み不可能な場所を含む）から実行でき、特別な権限は必要ありません。"

msgid ""
"However, configuration files will be written to the user-wide configuration "
"or data directory. This is usually a good approach, but this means "
"configuration files will not carry across machines if you copy the folder "
"containing the Godot executable. See :ref:`doc_data_paths` for more "
"information."
msgstr ""
"しかし、設定ファイルはユーザー全体の設定またはデータディレクトリに書き込まれ"
"ます。これは通常良いアプローチですが、Godotの実行ファイルがあるフォルダをコ"
"ピーした場合、設定ファイルが異なる環境で共有されないことを意味します。詳しく"
"は :ref:`doc_data_paths` を参照してください。"

msgid ""
"If *true* portable operation is desired (e.g. for use on an USB stick), "
"follow the steps in :ref:`doc_data_paths_self_contained_mode`."
msgstr ""
"もし、\\ *本当に*\\ ポータブルな操作が必要な場合 (例: USB メモリでの使用)、 :"
"ref:`doc_data_paths_self_contained_mode` のステップに従ってください。"

msgid "Why does Godot use Vulkan or OpenGL instead of Direct3D?"
msgstr "GodotがDirect3Dの代わりにVulkanやOpenGLを使うのはなぜですか？"

msgid ""
"Godot aims for cross-platform compatibility and open standards first and "
"foremost. OpenGL and Vulkan are the technologies that are both open and "
"available on (nearly) all platforms. Thanks to this design decision, a "
"project developed with Godot on Windows will run out of the box on Linux, "
"macOS, and more."
msgstr ""
"Godotは第一にクロスプラットフォームでの互換性とオープンスタンダードを目指して"
"います。OpenGLとVulkanは(ほぼ)すべてのプラットフォームで利用できる技術です。"
"このおかげで、Windows上のGodotで開発されたプロジェクトでもLinuxやmacOSなどで"
"実行することができます。"

msgid ""
"Since Godot only has a few people working on its renderer, we would prefer "
"having fewer rendering backends to maintain. On top of that, using a single "
"API on all platforms allows for greater consistency with fewer platform-"
"specific issues."
msgstr ""
"Godotのレンダラーについて作業する人は数人しかいないため、私たちがメンテナンス"
"するレンダリングバックエンドはより少ない方が望ましいです。またすべてのプラッ"
"トフォームにおいて単一のAPIを使用することでプラットフォーム固有の問題が少なく"
"なり、一貫性の向上が見込めます。"

msgid ""
"In the long term, we may develop a Direct3D 12 renderer for Godot (mainly "
"for Xbox), but Vulkan and OpenGL will remain the default rendering backends "
"on all platforms, including Windows."
msgstr ""
"長期的には、私たちはDirect3D 12 レンダラーを(主にXbox用に)開発する可能性はあ"
"りますが、VulkanとOpenGLはWindowsを含むすべてのプラットフォームにおいてデフォ"
"ルトのレンダリングバックエンドであるでしょう。"

msgid "Why does Godot aim to keep its core feature set small?"
msgstr ""
"なぜGodotは基本的な機能をより少ないリソースで提供しようとしているのですか？"

msgid ""
"Godot intentionally does not include features that can be implemented by add-"
"ons unless they are used very often. One example of something not used often "
"is advanced artificial intelligence functionality."
msgstr ""
"よほど使用機会が多くない限り、Godotではアドオンで実装できるような機能は意図的"
"に搭載していません。例えば、高度な人工知能の機能などがその例です。"

msgid "There are several reasons for this:"
msgstr "これにはいくつかの理由があります:"

msgid ""
"**Code maintenance and surface for bugs.** Every time we accept new code in "
"the Godot repository, existing contributors often take the responsibility of "
"maintaining it. Some contributors don't always stick around after getting "
"their code merged, which can make it difficult for us to maintain the code "
"in question. This can lead to poorly maintained features with bugs that are "
"never fixed. On top of that, the \"API surface\" that needs to be tested and "
"checked for regressions keeps increasing over time."
msgstr ""
"**コードのメンテナンス性とバグの表面化。** Godotのリポジトリに新しいコードを"
"受け入れるたびに、既存の貢献者がそのコードを維持する責任を負うことがよくあり"
"ます。一部の貢献者はコードがマージされた後も常にいるわけではありませんので、"
"私たちが当該コードを保守することが困難になることがあります。そのため、バグが"
"修正されないまま、メンテナンスが不十分な機能になってしまうことがあります。そ"
"れに加えて、テストやリグレッションのチェックが必要になる「APIサーフェス」も、"
"時間とともに増え続けます。"

msgid ""
"**Ease of contribution.** By keeping the codebase small and tidy, it can "
"remain fast and easy to compile from source. This makes it easier for new "
"contributors to get started with Godot, without requiring them to purchase "
"high-end hardware."
msgstr ""
"**開発参加の容易化。** コードベースを小さく整頓することで、ソースからのコンパ"
"イルを高速かつ簡単に行うことができます。これにより、新しい貢献者は、ハイエン"
"ドのハードウェアを購入することなく、Godot開発を始めることができます。"

msgid ""
"**Keeping the binary size small for the editor.** Not everyone has a fast "
"Internet connection. Ensuring that everyone can download the Godot editor, "
"extract it and run it in less than 5 minutes makes Godot more accessible to "
"developers in all countries."
msgstr ""
"**エディタのバイナリサイズ削減。** 誰もが高速なインターネット接続を持っている"
"わけではありません。誰もがGodotエディタをダウンロードし、解凍し、5分以内に実"
"行できるようにすることで、あらゆる国の開発者がGodotにアクセスできるようになり"
"ます。"

msgid ""
"**Keeping the binary size small for export templates.** This directly "
"impacts the size of projects exported with Godot. On mobile and web "
"platforms, keeping file sizes low is important to ensure fast installation "
"and loading on underpowered devices. Again, there are many countries where "
"high-speed Internet is not readily available. To add to this, strict data "
"usage caps are often in effect in those countries."
msgstr ""
"**エクスポートテンプレートのバイナリサイズ削減。** これはGodotでエクスポート"
"するプロジェクトのサイズに直接影響します。モバイルやウェブのプラットフォーム"
"では、ファイルサイズを小さくすることは、パワー不足のデバイスでのインストール"
"や読み込みを高速に行うためには基本的なことです。また、高速インターネットが容"
"易に利用できない国も多くあります。さらに、これらの国では厳しいデータ使用量の"
"上限が設定されていることもあります。"

msgid ""
"For all the reasons above, we have to be selective of what we can accept as "
"core functionality in Godot. This is why we are aiming to move some core "
"functionality to officially supported add-ons in future versions of Godot. "
"In terms of binary size, this also has the advantage of making you pay only "
"for what you actually use in your project. (In the meantime, you can :ref:"
"`compile custom export templates with unused features disabled "
"<doc_optimizing_for_size>` to optimize the distribution size of your "
"project.)"
msgstr ""
"上記のような理由から、Godotのコア機能として認められるものを選択しなければなり"
"ません。そのため、Godotの将来のバージョンでは、コア機能の一部を公式にサポート"
"されるアドオンに移行することを目指しています。バイナリサイズの点では、プロ"
"ジェクトで実際に使用する分だけを消費することになるという利点もあります。(今の"
"段階では、プロジェクトの配布サイズを最適化するためには、未使用の機能を無効に"
"したカスタムエクスポートテンプレートを :ref:`コンパイル "
"<doc_optimizing_for_size>` します)"

msgid ""
"How should assets be created to handle multiple resolutions and aspect "
"ratios?"
msgstr ""
"複数の解像度やアスペクト比に対応するアセットを作成するにはどうすればよいです"
"か？"

msgid ""
"This question pops up often and it's probably thanks to the misunderstanding "
"created by Apple when they originally doubled the resolution of their "
"devices. It made people think that having the same assets in different "
"resolutions was a good idea, so many continued towards that path. That "
"originally worked to a point and only for Apple devices, but then several "
"Android and Apple devices with different resolutions and aspect ratios were "
"created, with a very wide range of sizes and DPIs."
msgstr ""
"この質問は頻繁に出てきますが、これはおそらくAppleが当初デバイスの解像度を2倍"
"にしたときに起こした誤解のせいでしょう。同じアセットを異なる解像度で持つこと"
"は良い考えだと人々に思わせ、多くの人がその道に向かって進み続けました。当初は"
"Appleのデバイスのみであり、ある程度はうまくいっていましたが、その後、解像度と"
"アスペクト比の異なる複数のAndroidとAppleのデバイスが作られたことで、サイズと"
"DPIの幅が非常に広くなりました。"

#, fuzzy
msgid ""
"The most common and proper way to achieve this is to, instead, use a single "
"base resolution for the game and only handle different screen aspect ratios. "
"This is mostly needed for 2D, as in 3D, it's just a matter of camera "
"vertical or horizontal FOV."
msgstr ""
"これを実現する最も一般的で適切な方法は、代わりに、ゲームでは単一の基本解像度"
"を使用して、異なる画面アスペクト比のみに対処することです。これが必要になるの"
"は主に2Dにおいてであり、3DではカメラXFov (X視野角) またはYFovの問題になりま"
"す。"

#, fuzzy
msgid ""
"Choose a single base resolution for your game. Even if there are devices "
"that go up to 1440p and devices that go down to 400p, regular hardware "
"scaling in your device will take care of this at little or no performance "
"cost. The most common choices are either near 1080p (1920x1080) or 720p "
"(1280x720). Keep in mind the higher the resolution, the larger your assets, "
"the more memory they will take and the longer the time it will take for "
"loading."
msgstr ""
"ゲームの基本解像度を1つ選択します。解像度が2Kあるデバイスであろうと400pしかな"
"いデバイスであろうと、通常デバイスはパフォーマンスコストをほとんど又はまった"
"くかけずにハードウェアスケーリングで対応できます。最も一般的な選択肢は、"
"1080p(1920x1080)または720p(1280x720)です。解像度が高ければ高いほど、アセット"
"が大きくなり、メモリの使用量が多くなり、ロードに時間がかかることに注意してく"
"ださい。"

#, fuzzy
msgid ""
"Use the stretch options in Godot; canvas items stretching while keeping "
"aspect ratios works best. Check the :ref:`doc_multiple_resolutions` tutorial "
"on how to achieve this."
msgstr ""
"Godotのストレッチオプションを使用します。アスペクト比を維持したまま2Dストレッ"
"チを行うと、最適な結果が得られます。この方法については、チュートリアル\\ :"
"ref:`doc_multiple_resolutions`\\ を参照してください。"

msgid ""
"Determine a minimum resolution and then decide if you want your game to "
"stretch vertically or horizontally for different aspect ratios, or if there "
"is one aspect ratio and you want black bars to appear instead. This is also "
"explained in :ref:`doc_multiple_resolutions`."
msgstr ""
"最小解像度を決定し、ゲームを縦横比ごとに垂直または水平に伸ばすかどうか、また"
"は縦横比を固定して余白に黒いバーを表示するかどうかを決定します。これについて"
"は、\\ :ref:`doc_multiple_resolutions`\\ でも説明されています。"

msgid ""
"For user interfaces, use the :ref:`anchoring <doc_size_and_anchors>` to "
"determine where controls should stay and move. If UIs are more complex, "
"consider learning about Containers."
msgstr ""
"ユーザインタフェースでは、\\ :ref:`anchoring <doc_size_and_anchors>`\\ を使用"
"して、コントロールの位置と移動先を指定します。UIがより複雑な場合は、コンテナ"
"について学ぶことを検討してください。"

msgid "And that's it! Your game should work in multiple resolutions."
msgstr "これで終わりです！あなたのゲームは複数の解像度で動くことでしょう。"

msgid "When is the next release of Godot out?"
msgstr "次のGodotのリリースはいつですか？"

msgid ""
"When it's ready! See :ref:`doc_release_policy_when_is_next_release_out` for "
"more information."
msgstr ""
"用意できたときです！ 詳細については、\\ :ref:"
"`doc_release_policy_when_is_next_release_out`\\ を参照してください。"

msgid "Which Godot version should I use for a new project?"
msgstr ""
"新しいプロジェクトを作るにはどのGodotのバージョンを使用すればいいですか？"

msgid ""
"We recommend using Godot 4.x for new projects, but depending on the feature "
"set you need, it may be better to use 3.x instead. See :ref:"
"`doc_release_policy_which_version_should_i_use` for more information."
msgstr ""
"新しく作るプロジェクトにはGodot 4.xを使うことをお勧めしますが、必要な機能セッ"
"トによっては3.xを使う方が良いかもしれません。詳しくは :ref:"
"`doc_release_policy_which_version_should_i_use` を参照してください。"

msgid "Should I upgrade my project to use new Godot versions?"
msgstr ""
"新しいバージョンのGodotを使用するために自分のプロジェクトをアップグレードする"
"べきですか？"

msgid ""
"Some new versions are safer to upgrade to than others. In general, whether "
"you should upgrade depends on your project's circumstances. See :ref:"
"`doc_release_policy_should_i_upgrade_my_project` for more information."
msgstr ""
"新しいバージョンの中にはアップグレードしたほうが安全なものもあります。一般的"
"に、アップグレードすべきかどうかはあなたのプロジェクトの状況によります。詳し"
"くは :ref:`doc_release_policy_should_i_upgrade_my_project` を参照してくださ"
"い。"

msgid "I would like to contribute! How can I get started?"
msgstr "Godotに貢献したいのですが、どうすればよいですか？"

msgid ""
"Awesome! As an open source project, Godot thrives off of the innovation and "
"the ambition of developers like you."
msgstr ""
"Awesome!オープンソースプロジェクトとして、Godotは、あなたのような野心的で貢献"
"的なメンバーを求めています。"

msgid ""
"The best way to start contributing to Godot is by using it and reporting any "
"`issues <https://github.com/godotengine/godot/issues>`_ that you might "
"experience. A good bug report with clear reproduction steps helps your "
"fellow contributors fix bugs quickly and efficiently. You can also report "
"issues you find in the `online documentation <https://github.com/godotengine/"
"godot-docs/issues>`_."
msgstr ""
"もっとも良いGodotに貢献する方法は、Godotを使用して発生したバグを報告すること"
"です。`ここ <https://github.com/godotengine/godot/issues>`_ から再現可能なバ"
"グを報告することで、ほかの開発者が迅速かつ高速にその問題について取り組むこと"
"ができます。また、オンラインドキュメントで見つかった問題も`こちら <https://"
"github.com/godotengine/godot-docs/issues>`_ から報告することができます。"

msgid ""
"If you feel ready to submit your first PR, pick any issue that resonates "
"with you from one of the links above and try your hand at fixing it. You "
"will need to learn how to compile the engine from sources, or how to build "
"the documentation. You also need to get familiar with Git, a version control "
"system that Godot developers use."
msgstr ""
"もし問題を報告する準備が整っていれば、上記のリンクから問題を報告、選択、修正"
"することができます。ソースからエンジンをコンパイルする方法、ドキュメントを構"
"築する方法を学ぶ必要があります。また、Godot 開発者が使用するバージョン管理シ"
"ステムである Git についても理解しておく必要があります。"

msgid ""
"We explain how to work with the engine source, how to edit the "
"documentation, and what other ways to contribute are there in our :ref:"
"`documentation for contributors <doc_ways_to_contribute>`."
msgstr ""
"エンジンソースの扱い方、ドキュメントの編集方法、その他の貢献方法については :"
"ref:`documentation for contributors <doc_ways_to_contribute>`で説明していま"
"す。"

msgid "I have a great idea for Godot. How can I share it?"
msgstr "Godotについていいアイデアがあるのですが、どこで共有すればいいですか？"

msgid ""
"We are always looking for suggestions about how to improve the engine. User "
"feedback is the main driving force behind our decision-making process, and "
"limitations that you might face while working on your project are a great "
"data point for us when considering engine enhancements."
msgstr ""
"私たちはエンジンを改善するための提案を常に求めています。ユーザーからのフィー"
"ドバックは、私たちの意思決定プロセスの主な原動力であり、あなたがプロジェクト"
"に取り組んでいる間に考えた疑問や不満点は、私たちがエンジンの改良を検討する際"
"の素晴らしい判断材料になります。"

msgid ""
"If you experience a usability problem or are missing a feature in the "
"current version of Godot, start by discussing it with our `community "
"<https://godotengine.org/community/>`_. There may be other, perhaps better, "
"ways to achieve the desired result that community members could suggest. And "
"you can learn if other users experience the same issue, and figure out a "
"good solution together."
msgstr ""
"Godotの現在のバージョンで、使いづらいと感じた部分や、欠けている機能がある場合"
"は、私たちの`コミュニティ<https://godotengine.org/community/>`_で議論すること"
"から始めてください。コミュニティのメンバーの提案によって他にもっと良い方法が"
"見つかるかもしれません。また他のユーザーが同じ問題を経験しているかどうかを知"
"り、良い解決策を一緒に考えることができます。"

msgid ""
"If you come up with a well-defined idea for the engine, feel free to open a "
"`proposal issue <https://github.com/godotengine/godot-proposals/issues>`_. "
"Try to be specific and concrete while describing your problem and your "
"proposed solution — only actionable proposals can be considered. It is not "
"required, but if you want to implement it yourself, that's always "
"appreciated!"
msgstr ""
"エンジンのための明確なアイデアを思いついたら、遠慮なく`proposal issue "
"<https://github.com/godotengine/godot-proposals/issues>`_を開いてください。あ"
"なたの問題や提案する解決策を明確かつ具体的に説明するようにしてください。実行"
"可能な提案のみが考慮されます。必須ではありませんが、自分で実装したい場合は、"
"いつでも歓迎します！"

msgid ""
"If you only have a general idea without specific details, you can open a "
"`proposal discussion <https://github.com/godotengine/godot-proposals/"
"discussions>`_. These can be anything you want, and allow for a free-form "
"discussion in search of a solution. Once you find one, a proposal issue can "
"be opened."
msgstr ""
"具体的な詳細がない一般的なアイデアについては、`proposal discussion <https://"
"github.com/godotengine/godot-proposals/discussions>`_を開くことができます。提"
"案の内容は何でもよく、解決策を探すための自由な議論ができます。解決策が見つか"
"れば、proposal issueを開くことができます。"

msgid ""
"Please, read the `readme <https://github.com/godotengine/godot-proposals/"
"blob/master/README.md>`_ document before creating a proposal to learn more "
"about the process."
msgstr ""
"`readme <https://github.com/godotengine/godot-proposals/blob/master/README."
"md>`_を読み、手順について理解した上での提案をお願いします。"

msgid "Is it possible to use Godot to create non-game applications?"
msgstr "ゲーム以外のアプリケーション作成のためにGodotを使用できますか？"

msgid ""
"Yes! Godot features an extensive built-in UI system, and its small "
"distribution size can make it a suitable alternative to frameworks like "
"Electron or Qt."
msgstr ""
"Godotには豊富なUIシステムが組み込まれており、ディストリビューションサイズが小"
"さいため、ElectronやQtのようなフレームワークの代替としても適しています。"

msgid ""
"When creating a non-game application, make sure to enable :ref:`low-"
"processor mode <class_ProjectSettings_property_application/run/"
"low_processor_mode>` in the Project Settings to decrease CPU and GPU usage."
msgstr ""
"ゲーム以外のアプリケーションを作成する場合、プロジェクト設定で :ref:`low-"
"processor mode <class_ProjectSettings_property_application/run/"
"low_processor_mode>`を有効にして、CPUとGPUの使用量を減らしてください。"

msgid ""
"Check out `Material Maker <https://github.com/RodZill4/material-maker>`__ "
"and `Pixelorama <https://github.com/Orama-Interactive/Pixelorama>`__ for "
"examples of open source applications made with Godot."
msgstr ""
"Godotで作成されたオープンソースアプリケーションの例については、 `Material "
"Maker <https://github.com/RodZill4/material-maker>`__ と `Pixelorama "
"<https://github.com/Orama-Interactive/Pixelorama>`__ をご覧ください。"

msgid "Is it possible to use Godot as a library?"
msgstr "ライブラリとしてGodotを使用できますか？"

msgid ""
"Godot is meant to be used with its editor. We recommend you give it a try, "
"as it will most likely save you time in the long term. There are no plans to "
"make Godot usable as a library, as it would make the rest of the engine more "
"convoluted and difficult to use for casual users."
msgstr ""
"Godotはエディタを通じて使用されるように作られています。長い目で見れば時間の節"
"約になるはずなので、まずはエディタを試してみてください。Godotをライブラリとし"
"て使用可能にする計画は今のところありません。そうするとエンジンの他の部分がよ"
"り複雑になり、カジュアルユーザーにとって使うのが難しくなってしまうためです。"

msgid ""
"If you want to use a rendering library, look into using an established "
"rendering engine instead. Keep in mind rendering engines usually have "
"smaller communities compared to Godot. This will make it more difficult to "
"find answers to your questions."
msgstr ""
"もしレンダリング ライブラリとして使用されたければ、代わりに既存のレンダリング"
"エンジンを検討してください。ただし、レンダリングエンジンは通常、Godotと比較す"
"るとコミュニティーが小さいことに注意してください。疑問の答えを見つけるのは、"
"より難しくなるでしょう。"

msgid "What user interface toolkit does Godot use?"
msgstr "Godot はどのユーザーインターフェースツールキットを使いますか？"

msgid ""
"Godot does not use a standard :abbr:`GUI (Graphical User Interface)` toolkit "
"like GTK, Qt or wxWidgets. Instead, Godot uses its own user interface "
"toolkit, rendered using OpenGL ES or Vulkan. This toolkit is exposed in the "
"form of Control nodes, which are used to render the editor (which is written "
"in C++). These Control nodes can also be used in projects from any scripting "
"language supported by Godot."
msgstr ""
"Godotは、GTK、Qt、wxWidgetsなどの標準の :abbr:`GUI (Graphical User "
"Interface)` ツールキットを使用しません。代わりに、Godotは、OpenGLESまたは"
"Vulkanを使用してレンダリングされた独自のユーザーインターフェイスツールキット"
"を使用します。このツールキットは、エディター (C ++で記述されている) のレンダ"
"リングに使用されるコントロールノードの形式で公開されます。これらのコントロー"
"ルノードは、Godotでサポートされている任意のスクリプト言語のプロジェクトでも使"
"用できます。"

msgid ""
"This custom toolkit makes it possible to benefit from hardware acceleration "
"and have a consistent appearance across all platforms. On top of that, it "
"doesn't have to deal with the LGPL licensing caveats that come with GTK or "
"Qt. Lastly, this means Godot is \"eating its own dog food\" since the editor "
"itself is one of the most complex users of Godot's UI system."
msgstr ""
"このカスタムツールキットを使用すると、ハードウェア アクセラレーションのメリッ"
"トを受けられ、すべてのプラットフォームで一貫した外観を実現できます。その上、"
"GTKやQtに付随するLGPLライセンス制限に対処する必要がありません。最後に、エディ"
"タ自体がGodotのUIシステムを特に複雑に応用しているユーザの一つなので、Godotは"
"「ドッグフーディング」しています。"

msgid ""
"This custom UI toolkit :ref:`can't be used as a library "
"<doc_faq_use_godot_as_library>`, but you can still :ref:`use Godot to create "
"non-game applications by using the editor <doc_faq_non_game_applications>`."
msgstr ""
"このカスタムUIツールキットを\\ :ref:`ライブラリとして使用することはできませ"
"ん <doc_faq_use_godot_as_library>`\\ が、しかしエディタを使えばGodotで\\ :"
"ref:`ゲーム以外のアプリケーションを作成する "
"<doc_faq_non_game_applications>`\\ ことはできます。"

msgid "Why does Godot use the SCons build system?"
msgstr "なぜGodotはSConsビルドシステムを使うのですか？"

msgid ""
"Godot uses the `SCons <https://www.scons.org/>`__ build system. There are no "
"plans to switch to a different build system in the near future. There are "
"many reasons why we have chosen SCons over other alternatives. For example:"
msgstr ""
"Godotはビルドするために `SCons <https://www.scons.org/>`__ を使用しています。"
"私たちはSconsが大好きなので、他のものに変えるつもりはありません。他のビルドシ"
"ステムがGodotのビルドに適しているかどうかさえ、確信がありません。ビルドシステ"
"ムをCMakeやVisual Studioに変更してほしいというリクエストをよく受けますが、起"
"こり得ないことです。他のシステムではなくSConsを選ぶのには、多くの理由がありま"
"す。例えば:"

msgid ""
"Godot can be compiled for a dozen different platforms: all PC platforms, all "
"mobile platforms, many consoles, and WebAssembly."
msgstr ""
"Godotは十種類以上のプラットフォームを対象にコンパイルできます: すべてのPCプ"
"ラットフォーム、すべてのモバイルプラットフォーム、多くのコンソール機、および"
"WebAssembly。"

msgid ""
"Developers often need to compile for several of the platforms **at the same "
"time**, or even different targets of the same platform. They can't afford "
"reconfiguring and rebuilding the project each time. SCons can do this with "
"no sweat, without breaking the builds."
msgstr ""
"開発者は、多くの場合、複数のプラットフォームを\\ **同時に**\\ コンパイルする"
"必要があります、または同じプラットフォームの異なるターゲットをコンパイルする"
"必要があります。毎回プロジェクトを再構成して再構築する余裕はありません。SCons"
"は、ビルドを壊すことなく、労なくこれを行うことができます。"

msgid ""
"SCons will *never* break a build no matter how many changes, configurations, "
"additions, removals etc."
msgstr ""
"どれほど変更・設定・追加・削除などがあったにせよ、SConsはビルドを中断すること"
"は\\ *ありません*\\ 。"

msgid ""
"Godot's build process is not simple. Several files are generated by code "
"(binders), others are parsed (shaders), and others need to offer "
"customization (:ref:`modules <doc_custom_modules_in_cpp>`). This requires "
"complex logic which is easier to write in an actual programming language "
"(like Python) rather than using a mostly macro-based language only meant for "
"building."
msgstr ""
"Godotビルドプロセスは簡単ではありません。いくつかのファイルはコードによって生"
"成され（バインダー）、他のファイルはパースされ（シェーダー）、他のファイルは"
"カスタマイズを提供する必要があります( :ref:`modules "
"<doc_custom_modules_in_cpp>` )。これには、ビルドのみを意図したマクロベースの"
"言語を使用するのではなく、実際のプログラミング言語（Pythonなど）で記述する方"
"が簡単な複雑なロジックが必要です。"

#, fuzzy
msgid ""
"Godot's build process makes heavy use of cross-compiling tools. Each "
"platform has a specific detection process, and all these must be handled as "
"specific cases with special code written for each."
msgstr ""
"Godotのビルド処理はクロスコンパイル ツールを多用しています。それぞれのプラッ"
"トフォームには専用の検査処理があり、またそれらすべてを個別の問題として、専用"
"のコードでもって対処しなければなりません。"

msgid ""
"Please try to keep an open mind and get at least a little familiar with "
"SCons if you are planning to build Godot yourself."
msgstr ""
"ですので、もしGodotを自分でビルドすることを計画している場合は、オープンマイン"
"ドを持って、SConsに多少は触れてみてください。"

msgid "Why does Godot not use STL (Standard Template Library)?"
msgstr "なぜGodotはSTL (Standard Template Library)を使わないのですか？"

#, fuzzy
msgid ""
"Like many other libraries (Qt as an example), Godot does not make use of STL "
"(with a few exceptions such as threading primitives). We believe STL is a "
"great general-purpose library, but we had special requirements for Godot."
msgstr ""
"他のライブラリのように(例えばQt)、GodotはSTLを使いません。私たちはSTLが素晴ら"
"しい標準的な目的のためのライブラリだと信じています、しかし、私たちはGodotのた"
"めに特に必要とはしていません。"

msgid ""
"STL templates create very large symbols, which results in huge debug "
"binaries. We use few templates with very short names instead."
msgstr ""
"STLテンプレートは非常に大きなシンボルを作ります、そして巨大のデバッグバイナ"
"リーを結果として生じます。私たちは、代わりにいくつかのテンプレートをとても短"
"い名前と共に使います。"

msgid ""
"Most of our containers cater to special needs, like Vector, which uses copy "
"on write and we use to pass data around, or the RID system, which requires "
"O(1) access time for performance. Likewise, our hash map implementations are "
"designed to integrate seamlessly with internal engine types."
msgstr ""
"私たちのコンテナのほとんどは、コピーオンライトを使用していてデータの受け渡し"
"に使うベクターや、必要とするアクセス時間が O(1) のみであるパフォーマンス重視"
"なRIDシステムなど、特別なニーズに対応しています。同様に、ハッシュマップの実装"
"は、内部エンジンタイプとシームレスに統合するように設計されています。"

msgid ""
"Our containers have memory tracking built-in, which helps better track "
"memory usage."
msgstr ""
"コンテナにはメモリトラッキングが組み込まれているため、メモリ使用量を追跡でき"
"ます。"

msgid ""
"For large arrays, we use pooled memory, which can be mapped to either a "
"preallocated buffer or virtual memory."
msgstr ""
"大規模な配列の場合、プールメモリを使用します。これは、事前に割り当てられた"
"バッファまたは仮想メモリのいずれかにマップできます。"

msgid ""
"We use our custom String type, as the one provided by STL is too basic and "
"lacks proper internationalization support."
msgstr ""
"私たちはカスタムString型を使用しています。STLが提供するものは基本的すぎて、適"
"切な国際化サポートが不足しているためです。"

msgid "Why does Godot not use exceptions?"
msgstr "なぜGodotは例外処理を使わないのですか？"

msgid ""
"We believe games should not crash, no matter what. If an unexpected "
"situation happens, Godot will print an error (which can be traced even to "
"script), but then it will try to recover as gracefully as possible and keep "
"going."
msgstr ""
"私たちは、ゲームが何であれ、クラッシュすべきではないと考えています。予期しな"
"い状況が発生した場合、Godotはエラーを出力します(スクリプトまでトレース可能)"
"が、その後、可能な限り正常に回復し、動き続けます。"

#, fuzzy
msgid ""
"Additionally, exceptions significantly increase the binary size for the "
"executable and result in increased compile times."
msgstr ""
"さらに、例外を処理する機能の分、実行ファイルのバイナリサイズが大幅に増加しま"
"す。"

msgid "Does Godot use an ECS (Entity Component System)?"
msgstr ""
"GodotはECS（エンティティ・コンポーネント・システム）を使用していますか？"

msgid ""
"Godot does **not** use an ECS and relies on inheritance instead. While there "
"is no universally better approach, we found that using an inheritance-based "
"approach resulted in better usability while still being fast enough for most "
"use cases."
msgstr ""
"GodotはECSを使用して**おらず**、代わりに継承に依存しています。普遍的に他より"
"良いアプローチというものはありませんが、私たちは継承ベースのアプローチをする"
"ことが、結果として多くの使われ方において十分にすばやく、より良いユーザビリ"
"ティをもたらすと気づきました。"

msgid ""
"That said, nothing prevents you from making use of composition in your "
"project by creating child Nodes with individual scripts. These nodes can "
"then be added and removed at run-time to dynamically add and remove "
"behaviors."
msgstr ""
"それはつまり、個々のスクリプトによって子ノードを作成する際に、プロジェクト内"
"でコンポジションを利用するのを妨げるものがないということです。これらのノード"
"はランタイムに動的に、追加したり取り除いたりすることができます。"

msgid ""
"More information about Godot's design choices can be found in `this article "
"<https://godotengine.org/article/why-isnt-godot-ecs-based-game-engine>`__."
msgstr ""
"Godotの設計に関する詳細については、`この記事 <https://godotengine.org/"
"article/why-isnt-godot-ecs-based-game-engine>`__を参照してください。"

msgid "Why does Godot not force users to implement DOD (Data-Oriented Design)?"
msgstr "GodotがユーザーにDOD(データ指向設計)の実装を強制しないのはなぜですか？"

msgid ""
"While Godot internally attempts to use cache coherency as much as possible, "
"we believe users don't need to be forced to use DOD practices."
msgstr ""
"Godotは内部的に可能な限りキャッシュコヒーレンシーを使用しようとしますが、ほと"
"んどのユーザーにとってDODプラクティスを強制される必要はないと考えています。"

msgid ""
"DOD is mostly a cache coherency optimization that can only provide "
"significant performance improvements when dealing with dozens of thousands "
"of objects which are processed every frame with little modification. That "
"is, if you are moving a few hundred sprites or enemies per frame, DOD won't "
"result in a meaningful improvement in performance. In such a case, you "
"should consider a different approach to optimization."
msgstr ""
"DODは主にキャッシュコヒーレンシー最適化であり、何十万ものオブジェクト(ほとん"
"ど変更なしでフレームごとに処理される)を処理する場合にのみ、大幅なパフォーマン"
"スの向上が得られます。たとえば、フレームごとに数百のスプライトまたは敵を移動"
"する場合、DODは役に立ちません。最適化の別のアプローチを検討する必要がありま"
"す。"

msgid ""
"The vast majority of games do not need this and Godot provides handy helpers "
"to do the job for most cases when you do."
msgstr ""
"ゲームの大部分はこれを必要としません。そして、あなたがそのような仕事を必要と"
"する時には、殆どの場合Godotは便利なヘルパーを提供します。"

msgid ""
"If a game needs to process such a large amount of objects, our "
"recommendation is to use C++ and GDExtensions for performance-heavy tasks "
"and GDScript (or C#) for the rest of the game."
msgstr ""
"このような大量のオブジェクトを本当に処理する必要がある場合、推奨されるのは、"
"高性能部分にはC++とGDNativeを、残りのゲームにはGDScript(またはC#)を使用するこ"
"とです。"

msgid "How can I support Godot development or contribute?"
msgstr "Godotの開発をサポートしたり、貢献したりするにはどうすればいいですか?"

msgid "See :ref:`doc_ways_to_contribute`."
msgstr ":ref:`doc_ways_to_contribute`\\ をご覧ください。"

msgid "Who is working on Godot? How can I contact you?"
msgstr "Godotには誰が関わっているのですか？どうしたら連絡が取れますか？"

msgid ""
"See the corresponding page on the `Godot website <https://godotengine.org/"
"contact>`_."
msgstr ""
"`Godot webサイト <https://godotengine.org/contact>`_\\ の対応するページをご覧"
"ください。"

msgid "Translation status"
msgstr "翻訳ステータス"
