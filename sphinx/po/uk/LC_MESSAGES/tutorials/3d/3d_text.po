# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "3D text"
msgstr "3D текст"

msgid "Introduction"
msgstr "Вступ"

#, fuzzy
msgid ""
"In a project, there may be times when text needs to be created as part of a "
"3D scene and not just in the HUD. Godot provides 2 methods to do this: the "
"Label3D node and the TextMesh *resource* for a MeshInstance3D node."
msgstr ""
"У проекті можуть бути випадки, коли текст потрібно створити як частину 3D-"
"сцени, а не тільки в інтерфейсі. Godot надає для цього два методи. Вузол "
"Label3D *(Мітка3D)* і меш тексту для вузла MeshInstance."

msgid ""
"Additionally, Godot makes it possible to position Control nodes according to "
"a 3D point's position on the camera. This can be used as an alternative to "
"\"true\" 3D text in situations where Label3D and TextMesh aren't flexible "
"enough."
msgstr ""

#, fuzzy
msgid ""
"You can see 3D text in action using the `3D Labels and Texts demo project "
"<https://github.com/godotengine/godot-demo-projects/tree/master/3d/"
"labels_and_texts>`__."
msgstr ""
"Окрім цієї документації, ви також можете поглянути на різні `демонстраційні "
"проєкти \"Godot\" <https://github.com/godotengine/godot-demo-projects>`_."

#, fuzzy
msgid ""
"This page does **not** cover how to display a GUI scene within a 3D "
"environment. For information on how to achieve that, see the `GUI in 3D "
"<https://github.com/godotengine/godot-demo-projects/tree/master/viewport/"
"gui_in_3d>`__ demo project."
msgstr ""
"На цій сторінці **не** описано, як відобразити графічний інтерфейс сцени в "
"3D середовищі. Інформацію про те, як це зробити, дивіться в `цьому<https://"
"github.com/godotengine/godot-demo-projects/tree/master/viewport/2d_in_3d>`__ "
"демонстраційному проекті."

msgid "Label3D"
msgstr "Вузол Label3D"

#, fuzzy
msgid ""
"Label3D behaves like a Label node, but in 3D space. Unlike the Label node, "
"this Label3D node does **not** inherit properties of a GUI theme. However, "
"its look remains customizable and uses the same font subresource as Control "
"nodes (including support for :abbr:`MSDF (Multi-channel Signed Distance "
"Font)` font rendering)."
msgstr ""
"Label3D поводиться як вузол мітки, але в 3D-просторі. На відміну від вузла "
"мітки цей не може успадкувати властивості теми графічного інтерфейсу. Однак "
"його зовнішній вигляд залишається настроюваним і використовує ті самі "
"DynamicFont і BitmapFont."

msgid "Advantages"
msgstr "Переваги"

msgid ""
"Label3D is faster to generate than TextMesh. While both use a caching "
"mechanism to only render new glyphs once, Label3D will still be faster to "
"(re)generate, especially for long text. This can avoid stuttering during "
"gameplay on low-end CPUs or mobile."
msgstr ""

msgid ""
"Label3D can use bitmap fonts and dynamic fonts (with and without :abbr:`MSDF "
"(Multi-channel Signed Distance Font)` or mipmaps). This makes it more "
"flexible on that aspect compared to TextMesh, especially for rendering fonts "
"with self-intersecting outlines."
msgstr ""

msgid ""
"See :ref:`doc_gui_using_fonts` for guidelines on configuring font imports."
msgstr ""

msgid "Limitations"
msgstr "Обмеження"

#, fuzzy
msgid ""
"By default, Label3D has limited interaction with a 3D environment. It can be "
"occluded by geometry and lit by light sources if the **Shaded** flag is "
"enabled. However, it will not cast shadows even if **Cast Shadow** is set to "
"**On** in the Label3D's GeometryInstance3D properties. This is because the "
"node internally generates a quad mesh (one glyph per quad) with transparent "
"textures and has the same limitations as Sprite3D. Transparency sorting "
"issues can also become apparent when several Label3Ds overlap, especially if "
"they have outlines."
msgstr ""
"Label3D має мінімальну взаємодію з 3D-середовищем, його можна освітити і "
"затінити джерелами світла, якщо галочка затінення включена, але він не кине "
"тінь навіть при включеній тіні на вузлах GeometryInstance3D. Це пояснюється "
"тим, що вузол являє собою чотириярусний меш (один гліф на квадрат) з "
"прозорими текстурами і має ті самі обмеження, що й Sprite3D. Дивіться :ref:"
"`цю сторінку<doc_3d_rendering_limitations_transparency_sorting>` для "
"отримання додаткової інформації."

msgid ""
"This can be mitigated by setting the Label3D's transparency mode to **Alpha "
"Cut**, at the cost of less smooth text rendering. The **Opaque Pre-Pass** "
"transparency mode can preserve text smoothness while allowing the Label3D to "
"cast shadows, but some transparency sorting issues will remain."
msgstr ""

msgid ""
"See :ref:`Transparency sorting "
"<doc_3d_rendering_limitations_transparency_sorting>` section in the 3D "
"rendering limitations page for more information."
msgstr ""

#, fuzzy
msgid "TextMesh"
msgstr "Меш тексту"

#, fuzzy
msgid ""
"The TextMesh resource has similarities to Label3D. They both display text in "
"a 3D scene, and will use the same font subresource. However, instead of "
"generating transparent quads, TextMesh generates 3D geometry that represents "
"the glyphs' contours and has the properties of a mesh. As a result, a "
"TextMesh is shaded by default and automatically casts shadows onto the "
"environment. A TextMesh can also have a material applied to it (including "
"custom shaders)."
msgstr ""
"Меші тексту мають схожість з Label3D. Вони відображають текст у 3D сцени, і "
"будуть використовувати той же підресурс DynamicFont. Однак текст є 3D і має "
"властивості меша. Меш тексту відкидає тіні на навколишнє середовище і може "
"мати доданий до нього матеріал. Ось приклад текстури і як він наноситься на "
"меш."

msgid ""
"Here is an example of a texture and how it's applied to the mesh. You can "
"use the texture below as a reference for the generated mesh's UV map:"
msgstr ""

msgid "TextMesh has a few advantages over Label3D:"
msgstr ""

msgid "TextMesh can use a texture to modify text color on a per-side basis."
msgstr ""

msgid "TextMesh geometry can have actual depth to it, giving glyphs a 3D look."
msgstr ""

msgid "TextMesh can use custom shaders, unlike Label3D."
msgstr ""

#, fuzzy
msgid "There are some limitations to TextMesh:"
msgstr "Тут слід зазначити таке:"

msgid ""
"No built-in outline support, unlike Label3D. This can be simulated using "
"custom shaders though."
msgstr ""

msgid ""
"Only dynamic fonts are supported (``.ttf``, ``.otf``, ``.woff``, ``."
"woff2``). Bitmap fonts in the ``.fnt`` or ``.font`` formats are **not** "
"supported."
msgstr ""

msgid ""
"Fonts with self-intersecting outlines will not render correctly. If you "
"notice rendering issues on fonts downloaded from websites such as Google "
"Fonts, try downloading the font from the font author's official website "
"instead."
msgstr ""

msgid "Projected Label node (or any other Control)"
msgstr ""

msgid ""
"There is a last solution that is more complex to set up, but provides the "
"most flexibility: projecting a 2D node onto 3D space. This can be achieved "
"using the return value of :ref:"
"`unproject_position<class_Camera3D_method_unproject_position>` method on a "
"Camera3D node in a script's ``_process()`` function. This return value "
"should then be used to set the ``position`` property of a Control node."
msgstr ""

#, fuzzy
msgid ""
"See the `3D waypoints <https://github.com/godotengine/godot-demo-projects/"
"tree/master/3d/waypoints>`__ demo for an example of this."
msgstr ""
"Окрім цієї документації, ви також можете поглянути на різні `демонстраційні "
"проєкти \"Godot\" <https://github.com/godotengine/godot-demo-projects>`_."

msgid ""
"Any Control node can be used, including Label, RichTextLabel or even nodes "
"such as Button. This allows for powerful formatting and GUI interaction."
msgstr ""

msgid ""
"The script-based approach allows for complete freedom in positioning. For "
"example, this makes it considerably easier to pin Controls to the screen's "
"edges when they go off-screen (for in-game 3D markers)."
msgstr ""

msgid ""
"Control theming is obeyed. This allows for easier customization that "
"globally applies to the project."
msgstr ""

msgid ""
"Projected Controls cannot be occluded by 3D geometry in any way. You can use "
"a RayCast to fully hide the control if its target position is occluded by a "
"collider, but this doesn't allow for partially hiding the control behind a "
"wall."
msgstr ""

msgid ""
"Changing text size depending on distance by adjusting the Control's "
"``scale`` property is possible, but it needs to be done manually. Label3D "
"and TextMesh automatically take care of this, at the cost of less "
"flexibility (can't set a minimum/maximum text size in pixels)."
msgstr ""

msgid ""
"Handling resolution and aspect ratio changes must be taken into account in "
"the script, which can be challenging."
msgstr ""

msgid "Should I use Label3D, TextMesh or a projected Control?"
msgstr ""

msgid ""
"In most scenarios, Label3D is recommended as it's easier to set up and "
"provides higher rendering quality (especially if 3D antialiasing is "
"disabled)."
msgstr ""

msgid ""
"For advanced use cases, TextMesh is more flexible as it allows styling the "
"text with custom shaders. Custom shaders allow for modifying the final "
"geometry, such as curving the text along a surface. Since the text is actual "
"3D geometry, the text can optionally have depth to it and can also "
"contribute to global illumination."
msgstr ""

msgid ""
"If you need features such as BBCode or Control theming support, then using a "
"projected RichTextLabel node is the only way to go."
msgstr ""

msgid "Translation status"
msgstr "Стан перекладу"
