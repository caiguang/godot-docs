# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "GDScript reference"
msgstr "Налаштування даних"

#, fuzzy
msgid ""
":ref:`GDScript<doc_gdscript>` is a high-level, `object-oriented <https://en."
"wikipedia.org/wiki/Object-oriented_programming>`_, `imperative <https://en."
"wikipedia.org/wiki/Imperative_programming>`_, and `gradually typed <https://"
"en.wikipedia.org/wiki/Gradual_typing>`_ programming language built for "
"Godot. It uses an indentation-based syntax similar to languages like `Python "
"<https://en.wikipedia.org/wiki/Python_%28programming_language%29>`_. Its "
"goal is to be optimized for and tightly integrated with Godot Engine, "
"allowing great flexibility for content creation and integration."
msgstr ""
"*GDScript* - мова програмування високого рівня динамічного типу, що "
"використовується для створення контенту. Вона використовує синтаксис, схожий "
"на `Python <https://en.wikipedia.org/wiki/"
"Python_%28programming_language%29>`_ (блоки засновані на відступах, і багато "
"ключових слів, схожі). Її мета - оптимізація та тісна інтеграція з Godot "
"Engine, що забезпечує велику гнучкість для створення та інтеграції контенту."

msgid "GDScript is entirely independent from Python and is not based on it."
msgstr ""

msgid "History"
msgstr "Історія"

msgid ""
"Documentation about GDScript's history has been moved to the :ref:"
"`Frequently Asked Questions <doc_faq_what_is_gdscript>`."
msgstr ""
"Документація про історію GDScript була переміщена до :ref:`FAQ "
"<doc_faq_what_is_gdscript>`."

msgid "Example of GDScript"
msgstr "Зразок GDScript"

#, fuzzy
msgid ""
"Some people can learn better by taking a look at the syntax, so here's an "
"example of how GDScript looks."
msgstr ""
"Деякі люди можуть краще навчитися, поглянувши на синтаксис, тому ось простий "
"приклад того, як виглядає GDScript."

msgid ""
"If you have previous experience with statically typed languages such as C, C+"
"+, or C# but never used a dynamically typed one before, it is advised you "
"read this tutorial: :ref:`doc_gdscript_more_efficiently`."
msgstr ""
"Якщо у вас є досвід роботи зі статично типізованими мовами, такими як C, C+"
"+, або C#, але раніше ви ніколи не використовували динамічно типізовані, "
"радимо прочитати цей урок: :ref:`doc_gdscript_more_efficiently`."

msgid "Language"
msgstr "Мова"

msgid ""
"In the following, an overview is given to GDScript. Details, such as which "
"methods are available to arrays or other objects, should be looked up in the "
"linked class descriptions."
msgstr ""
"Далі йде швидкий огляд GDScript. Деталі, наприклад, які методи доступні для "
"масивів, чи інших об'єктів, слід шукати в описах пов'язаних класів."

msgid "Identifiers"
msgstr "Ідентифікатори"

msgid ""
"Any string that restricts itself to alphabetic characters (``a`` to ``z`` "
"and ``A`` to ``Z``), digits (``0`` to ``9``) and ``_`` qualifies as an "
"identifier. Additionally, identifiers must not begin with a digit. "
"Identifiers are case-sensitive (``foo`` is different from ``FOO``)."
msgstr ""
"Будь-який рядок, що обмежується алфавітними символами ( від ``a`` до ``z`` і "
"від ``A`` до ``Z``), цифрами (від ``0`` до ``9``) і ``_`` кваліфікується як "
"ідентифікатор. Крім того, ідентифікатори не повинні починатися з цифри. "
"Ідентифікатори залежать від регістру (``foo`` відрізняється від ``FOO``)."

msgid ""
"Identifiers may also contain most Unicode characters part of `UAX#31 "
"<https://www.unicode.org/reports/tr31/>`__. This allows you to use "
"identifier names written in languages other than English. Unicode characters "
"that are considered \"confusable\" for ASCII characters and emoji are not "
"allowed in identifiers."
msgstr ""

msgid "Keywords"
msgstr "Ключові слова"

msgid ""
"The following is the list of keywords supported by the language. Since "
"keywords are reserved words (tokens), they can't be used as identifiers. "
"Operators (like ``in``, ``not``, ``and`` or ``or``) and names of built-in "
"types as listed in the following sections are also reserved."
msgstr ""
"Далі наведено список ключових слів, які підтримуються мовою. Оскільки "
"ключові слова є зарезервованими словами (лексемами), їх не можна "
"використовувати як ідентифікатори. Оператори (такі як ``in``, ``not``, "
"``and``, або ``or``) і імена вбудованих типів, перерахованих в наступних "
"розділах, також зарезервовані."

msgid ""
"Keywords are defined in the `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ in "
"case you want to take a look under the hood."
msgstr ""
"Ключові слова визначаються в `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_, "
"якщо ви хочете зазирнути під капот."

msgid "Keyword"
msgstr "Ключове слово"

msgid "Description"
msgstr "Опис"

msgid "if"
msgstr "if"

msgid "See `if/else/elif`_."
msgstr "Дивіться `if/else/elif`_."

msgid "elif"
msgstr "Єлиф"

msgid "else"
msgstr "інакше"

msgid "for"
msgstr "for"

msgid "See for_."
msgstr "Дивіться for_."

msgid "while"
msgstr "доки"

msgid "See while_."
msgstr "Дивіться while_."

msgid "match"
msgstr "збіг"

msgid "See match_."
msgstr "Дивіться match_."

msgid "break"
msgstr "перерва"

msgid "Exits the execution of the current ``for`` or ``while`` loop."
msgstr "Перериває виконання поточного циклу ``for``, або ``while``."

msgid "continue"
msgstr "продовжити"

msgid ""
"Immediately skips to the next iteration of the ``for`` or ``while`` loop."
msgstr "Негайний перехід до наступної ітерації циклу ``for``, або ``while``."

msgid "pass"
msgstr "pass"

msgid ""
"Used where a statement is required syntactically but execution of code is "
"undesired, e.g. in empty functions."
msgstr ""
"Використовується там, де, за правилами синтаксису, обов'язкова наявність "
"інструкції (коду), але виконання коду небажане, наприклад, у порожніх "
"функціях."

msgid "return"
msgstr "return"

msgid "Returns a value from a function."
msgstr "Повертає значення з функції."

msgid "class"
msgstr "клас"

#, fuzzy
msgid "Defines an inner class. See `Inner classes`_."
msgstr "Внутрішнього класу всередині іншого файла класу."

msgid "class_name"
msgstr "Ім'я_класу"

msgid ""
"Defines the script as a globally accessible class with the specified name. "
"See `Registering named classes`_."
msgstr ""

msgid "extends"
msgstr "поширюється"

msgid "Defines what class to extend with the current class."
msgstr "Визначає який клас розширити поточним класом."

msgid "is"
msgstr "is"

msgid ""
"Tests whether a variable extends a given class, or is of a given built-in "
"type."
msgstr ""
"Тестує, чи змінна поширюється на заданий клас, чи на даний вбудований тип."

#, fuzzy
msgid "in"
msgstr "Знайти"

msgid ""
"Tests whether a value is within a string, array, range, dictionary, or node. "
"When used with ``for``, it iterates through them instead of testing."
msgstr ""

msgid "as"
msgstr "as"

msgid "Cast the value to a given type if possible."
msgstr "Якщо можливо, то переводить значення в заданий тип."

msgid "self"
msgstr "себе"

msgid "Refers to current class instance."
msgstr "Посилається на поточний екземпляр класу."

msgid "signal"
msgstr "сигнал"

msgid "Defines a signal."
msgstr "Визначає (оголошує) сигнал."

msgid "func"
msgstr "функція"

msgid "Defines a function."
msgstr "Визначає (оголошує) функцію."

msgid "static"
msgstr "статичний"

#, fuzzy
msgid "Defines a static function or a static member variable."
msgstr "Визначає статичну функцію. Статичні змінні члена не надані."

msgid "const"
msgstr "константа"

msgid "Defines a constant."
msgstr "Визначає константу."

msgid "enum"
msgstr "enum"

msgid "Defines an enum."
msgstr "Визначає перерахунок."

msgid "var"
msgstr "var"

msgid "Defines a variable."
msgstr "Визначає змінну."

msgid "breakpoint"
msgstr "точка зупинки"

msgid ""
"Editor helper for debugger breakpoints. Unlike breakpoints created by "
"clicking in the gutter, ``breakpoint`` is stored in the script itself. This "
"makes it persistent across different machines when using version control."
msgstr ""

msgid "preload"
msgstr "пре завантаження"

msgid "Preloads a class or variable. See `Classes as resources`_."
msgstr ""
"Попередньо завантажує клас, чи змінну. Дивіться `Classes as resources`_."

msgid "await"
msgstr ""

msgid ""
"Waits for a signal or a coroutine to finish. See `Awaiting for signals or "
"coroutines`_."
msgstr ""

msgid "yield"
msgstr "вихід"

msgid "Previously used for coroutines. Kept as keyword for transition."
msgstr ""

msgid "assert"
msgstr "стверджувати"

msgid ""
"Asserts a condition, logs error on failure. Ignored in non-debug builds. See "
"`Assert keyword`_."
msgstr ""
"Затверджує умову, реєструє помилку під час збою. Ігнорується в не-"
"налагоджених збірках. Дивіться `Assert keyword`_."

#, fuzzy
msgid "void"
msgstr "**void**"

msgid "Used to represent that a function does not return any value."
msgstr ""

msgid "PI"
msgstr "PI"

msgid "PI constant."
msgstr "Константа Пі (π)."

msgid "TAU"
msgstr "TAU"

msgid "TAU constant."
msgstr "Константа Тау (τ)."

msgid "INF"
msgstr "INF"

#, fuzzy
msgid "Infinity constant. Used for comparisons and as result of calculations."
msgstr "Константа нескінченності. Використовується для порівняння."

msgid "NAN"
msgstr "NAN"

#, fuzzy
msgid ""
"NAN (not a number) constant. Used as impossible result from calculations."
msgstr ""
"Константа NAN (not a number - не число). Використовується для порівнянь."

msgid "Operators"
msgstr "Оператори"

msgid "The following is the list of supported operators and their precedence."
msgstr "Далі наведено список підтримуваних операторів та їх пріоритет."

msgid "**Operator**"
msgstr "**Оператор**"

msgid "**Description**"
msgstr "**Опис**"

#, fuzzy
msgid "``(`` ``)``"
msgstr "``<<`` ``>>``"

#, fuzzy
msgid "Grouping (highest priority)"
msgstr "Підписка (найвищий пріоритет)"

msgid ""
"Parentheses are not really an operator, but allow you to explicitly specify "
"the precedence of an operation."
msgstr ""

msgid "``x[index]``"
msgstr "``x[індекс]``"

#, fuzzy
msgid "Subscription"
msgstr "Опис"

msgid "``x.attribute``"
msgstr "``x.attribute``"

msgid "Attribute reference"
msgstr "Посилання на атрибут"

msgid "``foo()``"
msgstr "``foo()``"

msgid "Function call"
msgstr "Виклик функції"

msgid "``await x``"
msgstr ""

msgid "`Awaiting for signals or coroutines`_"
msgstr ""

#, fuzzy
msgid "``x is Node``"
msgstr "node"

#, fuzzy
msgid "Type checking"
msgstr "Тестування"

msgid ""
"See also :ref:`is_instance_of() <class_@GDScript_method_is_instance_of>` "
"function."
msgstr ""

msgid "``x ** y``"
msgstr ""

msgid "Power"
msgstr ""

msgid ""
"Multiplies ``x`` by itself ``y`` times, similar to calling :ref:`pow() "
"<class_@GlobalScope_method_pow>` function."
msgstr ""

msgid ""
"**Note:** In GDScript, the ``**`` operator is `left-associative <https://en."
"wikipedia.org/wiki/Operator_associativity>`_. See a detailed note after the "
"table."
msgstr ""

msgid "``~x``"
msgstr ""

msgid "Bitwise NOT"
msgstr "Побітове NOT (НЕ)"

msgid "``+x``"
msgstr ""

msgid "``-x``"
msgstr "``-x``"

#, fuzzy
msgid "Identity / Negation"
msgstr "Відступ"

msgid "``x * y``"
msgstr ""

msgid "``x / y``"
msgstr ""

msgid "``x % y``"
msgstr ""

msgid "Multiplication / Division / Remainder"
msgstr "Множення/Ділення/Залишок ділення"

msgid ""
"The ``%`` operator is additionally used for :ref:`format strings "
"<doc_gdscript_printf>`."
msgstr ""

msgid ""
"**Note:** These operators have the same behavior as C++, which may be "
"unexpected for users coming from Python, JavaScript, etc. See a detailed "
"note after the table."
msgstr ""

msgid "``x + y``"
msgstr ""

msgid "``x - y``"
msgstr ""

#, fuzzy
msgid "Addition (or Concatenation) / Subtraction"
msgstr "Додавання / Об'єднання масивів"

msgid "``x << y``"
msgstr ""

msgid "``x >> y``"
msgstr ""

msgid "Bit shifting"
msgstr "Побітовий зсув (зміщення)"

msgid "``x & y``"
msgstr ""

msgid "Bitwise AND"
msgstr "Побітове AND (І)"

msgid "``x ^ y``"
msgstr ""

msgid "Bitwise XOR"
msgstr "Побітове XOR (Виключене АБО)"

msgid "``x | y``"
msgstr ""

msgid "Bitwise OR"
msgstr "Побітове OR (АБО)"

msgid "``x == y``"
msgstr ""

msgid "``x != y``"
msgstr ""

msgid "``x < y``"
msgstr ""

msgid "``x > y``"
msgstr ""

msgid "``x <= y``"
msgstr ""

msgid "``x >= y``"
msgstr ""

#, fuzzy
msgid "Comparison"
msgstr "Порівняння"

msgid "See a detailed note after the table."
msgstr ""

msgid "``x in y``"
msgstr ""

msgid "``x not in y``"
msgstr ""

#, fuzzy
msgid "Inclusion checking"
msgstr "Режим перешкоди"

msgid "``in`` is also used with the for_ keyword as part of the syntax."
msgstr ""

#, fuzzy
msgid "``not x``"
msgstr "node"

msgid "``!x``"
msgstr ""

msgid "Boolean NOT and its :ref:`unrecommended <boolean_operators>` alias"
msgstr ""

msgid "``x and y``"
msgstr ""

msgid "``x && y``"
msgstr ""

msgid "Boolean AND and its :ref:`unrecommended <boolean_operators>` alias"
msgstr ""

msgid "``x or y``"
msgstr ""

msgid "``x || y``"
msgstr ""

msgid "Boolean OR and its :ref:`unrecommended <boolean_operators>` alias"
msgstr ""

msgid "``true_expr if cond else false_expr``"
msgstr ""

msgid "Ternary if/else"
msgstr "Потрійне if/else (якщо/інакше)"

#, fuzzy
msgid "``x as Node``"
msgstr "node"

#, fuzzy
msgid "`Type casting <casting_>`_"
msgstr "Перетворення типів і кастинг"

msgid "``x = y``"
msgstr ""

msgid "``x += y``"
msgstr ""

msgid "``x -= y``"
msgstr ""

msgid "``x *= y``"
msgstr ""

msgid "``x /= y``"
msgstr ""

msgid "``x **= y``"
msgstr ""

msgid "``x %= y``"
msgstr ""

msgid "``x &= y``"
msgstr ""

msgid "``x |= y``"
msgstr ""

msgid "``x ^= y``"
msgstr ""

msgid "``x <<= y``"
msgstr ""

msgid "``x >>= y``"
msgstr ""

msgid "Assignment (lowest priority)"
msgstr "Присвоювання значення, найнижчий пріоритет"

msgid "You cannot use an assignment operator inside an expression."
msgstr ""

msgid "The behavior of some operators may differ from what you expect:"
msgstr ""

msgid ""
"If both operands of the ``/`` operator are :ref:`int <class_int>`, then "
"integer division is performed instead of fractional. For example ``5 / 2 == "
"2``, not ``2.5``. If this is not desired, use at least one :ref:`float "
"<class_float>` literal (``x / 2.0``), cast (``float(x) / y``), or multiply "
"by ``1.0`` (``x * 1.0 / y``)."
msgstr ""

msgid ""
"The ``%`` operator is only available for ints, for floats use the :ref:"
"`fmod() <class_@GlobalScope_method_fmod>` function."
msgstr ""

msgid ""
"For negative values, the ``%`` operator and ``fmod()`` use `truncation "
"<https://en.wikipedia.org/wiki/Truncation>`_ instead of rounding towards "
"negative infinity. This means that the remainder has a sign. If you need the "
"remainder in a mathematical sense, use the :ref:`posmod() "
"<class_@GlobalScope_method_posmod>` and :ref:`fposmod() "
"<class_@GlobalScope_method_fposmod>` functions instead."
msgstr ""

msgid ""
"The ``**`` operator is `left-associative <https://en.wikipedia.org/wiki/"
"Operator_associativity>`_. This means that ``2 ** 2 ** 3`` is equal to ``(2 "
"** 2) ** 3``. Use parentheses to explicitly specify precedence you need, for "
"example ``2 ** (2 ** 3)``."
msgstr ""

msgid ""
"The ``==`` and ``!=`` operators sometimes allow you to compare values of "
"different types (for example, ``1 == 1.0`` is true), but in other cases it "
"can cause a runtime error. If you're not sure about the types of the "
"operands, you can safely use the :ref:`is_same() "
"<class_@GlobalScope_method_is_same>` function (but note that it is more "
"strict about types and references). To compare floats, use the :ref:"
"`is_equal_approx() <class_@GlobalScope_method_is_equal_approx>` and :ref:"
"`is_zero_approx() <class_@GlobalScope_method_is_zero_approx>` functions "
"instead."
msgstr ""

msgid "Literals"
msgstr "Літерали"

#, fuzzy
msgid "**Example(s)**"
msgstr "**Приклад**"

#, fuzzy
msgid "``null``"
msgstr "null"

#, fuzzy
msgid "Null value"
msgstr "значення"

#, fuzzy
msgid "``false``, ``true``"
msgstr "``-e``, ``--editor``"

#, fuzzy
msgid "Boolean values"
msgstr "Логічне «або»"

msgid "``45``"
msgstr "``45``"

msgid "Base 10 integer"
msgstr "Ціле число за десятковою системою числення"

msgid "``0x8f51``"
msgstr "``0x8f51``"

msgid "Base 16 (hexadecimal) integer"
msgstr "Ціле число на основі шістнадцяткової системи числення"

msgid "``0b101010``"
msgstr "``0b101010``"

msgid "Base 2 (binary) integer"
msgstr "Ціле число в двійковій (бінарній) системі числення"

msgid "``3.14``, ``58.1e-10``"
msgstr "``3.14``, ``58.1e-10``"

msgid "Floating-point number (real)"
msgstr "Число з рухомою комою (дійсне)"

#, fuzzy
msgid "``\"Hello\"``, ``'Hi'``"
msgstr "``\"Hello\"``, ``\"Привіт\"``"

#, fuzzy
msgid "Regular strings"
msgstr "|regular| Трохи"

#, fuzzy
msgid "``\"\"\"Hello\"\"\"``, ``'''Hi'''``"
msgstr "``\"Hello\"``, ``\"Привіт\"``"

msgid "Triple-quoted regular strings"
msgstr ""

#, fuzzy
msgid "``r\"Hello\"``, ``r'Hi'``"
msgstr "``\"Hello\"``, ``\"Привіт\"``"

#, fuzzy
msgid "Raw strings"
msgstr "текст"

#, fuzzy
msgid "``r\"\"\"Hello\"\"\"``, ``r'''Hi'''``"
msgstr "``\"Hello\"``, ``\"Привіт\"``"

#, fuzzy
msgid "Triple-quoted raw strings"
msgstr "Форматований текст GDScript"

#, fuzzy
msgid "``&\"name\"``"
msgstr "Назва"

#, fuzzy
msgid ":ref:`StringName <class_StringName>`"
msgstr ":ref:`String <class_String>`"

#, fuzzy
msgid "``^\"Node/Label\"``"
msgstr "``@\"Node/Label\"``"

msgid ":ref:`NodePath <class_NodePath>`"
msgstr ":ref:`NodePath <class_NodePath>`"

msgid ""
"There are also two constructs that look like literals, but actually are not:"
msgstr ""

msgid "**Example**"
msgstr "**Приклад**"

msgid "``$NodePath``"
msgstr "``$NodePath``"

msgid "Shorthand for ``get_node(\"NodePath\")``"
msgstr "Скорочення для ``get_node(\"NodePath\")``"

#, fuzzy
msgid "``%UniqueNode``"
msgstr "node"

#, fuzzy
msgid "Shorthand for ``get_node(\"%UniqueNode\")``"
msgstr "Скорочення для ``get_node(\"NodePath\")``"

msgid ""
"Integers and floats can have their numbers separated with ``_`` to make them "
"more readable. The following ways to write numbers are all valid::"
msgstr ""
"Цілі та десяткові числа можуть розділятись символом ``_`` для кращої "
"читабельності. Усі наступні способи запису чисел є дійсними:"

msgid "**Regular string literals** can contain the following escape sequences:"
msgstr ""

msgid "**Escape sequence**"
msgstr "**Escape послідовності**"

msgid "**Expands to**"
msgstr "**Розширюються**"

msgid "``\\n``"
msgstr "``\\n``"

msgid "Newline (line feed)"
msgstr "Новий рядок (перенесення рядка)"

msgid "``\\t``"
msgstr "``\\t``"

msgid "Horizontal tab character"
msgstr "Горизонтальний символ табуляції"

msgid "``\\r``"
msgstr "``\\r``"

msgid "Carriage return"
msgstr "Повернення каретки"

msgid "``\\a``"
msgstr "``\\a``"

msgid "Alert (beep/bell)"
msgstr "Попередження (звуковий сигнал/дзвінок)"

msgid "``\\b``"
msgstr "``\\b``"

msgid "Backspace"
msgstr "Стерти"

msgid "``\\f``"
msgstr "``\\f``"

msgid "Formfeed page break"
msgstr ""

msgid "``\\v``"
msgstr "``\\v``"

msgid "Vertical tab character"
msgstr "Вертикальний символ табуляції"

msgid "``\\\"``"
msgstr "``\\\"``"

msgid "Double quote"
msgstr "Подвійні лапки"

msgid "``\\'``"
msgstr "``\\'``"

msgid "Single quote"
msgstr "Одинарні лапки"

msgid "``\\\\``"
msgstr "``\\\\``"

msgid "Backslash"
msgstr "Зворотний слеш"

msgid "``\\uXXXX``"
msgstr "``\\uXXXX``"

#, fuzzy
msgid "UTF-16 Unicode codepoint ``XXXX`` (hexadecimal, case-insensitive)"
msgstr "Символ Unicode ``XXXX`` (шіснадцятковий, без урахування регістру)"

#, fuzzy
msgid "``\\UXXXXXX``"
msgstr "``\\uXXXX``"

#, fuzzy
msgid "UTF-32 Unicode codepoint ``XXXXXX`` (hexadecimal, case-insensitive)"
msgstr "Символ Unicode ``XXXX`` (шіснадцятковий, без урахування регістру)"

#, fuzzy
msgid ""
"There are two ways to represent an escaped Unicode character above "
"``0xFFFF``:"
msgstr "Є два способи експорту проєкту на сервер:"

msgid ""
"as a `UTF-16 surrogate pair <https://en.wikipedia.org/wiki/"
"UTF-16#Code_points_from_U+010000_to_U+10FFFF>`_ ``\\uXXXX\\uXXXX``."
msgstr ""

msgid "as a single UTF-32 codepoint ``\\UXXXXXX``."
msgstr ""

msgid ""
"Also, using ``\\`` followed by a newline inside a string will allow you to "
"continue it in the next line, without inserting a newline character in the "
"string itself."
msgstr ""

msgid ""
"A string enclosed in quotes of one type (for example ``\"``) can contain "
"quotes of another type (for example ``'``) without escaping. Triple-quoted "
"strings allow you to avoid escaping up to two consecutive quotes of the same "
"type (unless they are adjacent to the string edges)."
msgstr ""

msgid ""
"**Raw string literals** always encode the string as it appears in the source "
"code. This is especially useful for regular expressions. Raw strings do not "
"process escape sequences, but you can \"escape\" a quote or backslash (they "
"replace themselves)."
msgstr ""

#, fuzzy
msgid "GDScript also supports :ref:`format strings <doc_gdscript_printf>`."
msgstr "GDScript також підтримує :ref:`doc_gdscript_printf`."

#, fuzzy
msgid "Annotations"
msgstr "Відступ"

msgid ""
"There are some special tokens in GDScript that act like keywords but are "
"not, they are *annotations* instead. Every annotation start with the ``@`` "
"character and is specified by a name. A detailed description and example for "
"each annotation can be found inside the :ref:`GDScript class reference "
"<class_@GDScript>`."
msgstr ""

msgid ""
"Annotations affect how the script is treated by external tools and usually "
"don't change the behavior."
msgstr ""

msgid "For instance, you can use it to export a value to the editor::"
msgstr ""

#, fuzzy
msgid ""
"For more information about exporting properties, read the :ref:`GDScript "
"exports <doc_gdscript_exports>` article."
msgstr "Документація про експорт переміщена до :ref:`doc_gdscript_exports`."

msgid ""
"Any constant expression compatible with the required argument type can be "
"passed as an annotation argument value::"
msgstr ""

msgid ""
"Annotations can be specified one per line or all in the same line. They "
"affect the next statement that isn't an annotation. Annotations can have "
"arguments sent between parentheses and separated by commas."
msgstr ""

msgid "Both of these are the same::"
msgstr ""

msgid "``@onready`` annotation"
msgstr ""

msgid ""
"When using nodes, it's common to desire to keep references to parts of the "
"scene in a variable. As scenes are only warranted to be configured when "
"entering the active scene tree, the sub-nodes can only be obtained when a "
"call to ``Node._ready()`` is made."
msgstr ""
"При використанні вузлів бажання зберігати посилання на частини сцени в "
"змінній цілком нормальне. Оскільки сцени можуть бути налаштовані лише під "
"час входу в дерево активних сцен, під-вузли можна отримати лише тоді, коли "
"здійснюється виклик ``Node._ready()``."

#, fuzzy
msgid ""
"This can get a little cumbersome, especially when nodes and external "
"references pile up. For this, GDScript has the ``@onready`` annotation, that "
"defers initialization of a member variable until ``_ready()`` is called. It "
"can replace the above code with a single line::"
msgstr ""
"Це може стати трохи громіздким, особливо коли вузли та зовнішні посилання "
"накопичуються. Для цього у GDScript є ключове слово ``onready``, яке "
"відкладає ініціалізацію змінної члена до виклику ``_ready()``. Воно може "
"замінити вищевказаний код одним рядком:"

msgid ""
"Applying ``@onready`` and any ``@export`` annotation to the same variable "
"doesn't work as you might expect. The ``@onready`` annotation will cause the "
"default value to be set after the ``@export`` takes effect and will override "
"it::"
msgstr ""

msgid ""
"Therefore, the ``ONREADY_WITH_EXPORT`` warning is generated, which is "
"treated as an error by default. We do not recommend disabling or ignoring it."
msgstr ""

msgid "Comments"
msgstr "Коментарі"

msgid ""
"Anything from a ``#`` to the end of the line is ignored and is considered a "
"comment."
msgstr ""
"Все що знаходиться після символа ``#``, і до кінця рядка, ігнорується і "
"вважається коментарем."

msgid ""
"In the Godot script editor, special keywords are highlighted within comments "
"to bring the user's attention to specific comments:"
msgstr ""

msgid ""
"**Critical** *(appears in red)*: ``ALERT``, ``ATTENTION``, ``CAUTION``, "
"``CRITICAL``, ``DANGER``, ``SECURITY``"
msgstr ""

msgid ""
"**Warning** *(appears in yellow)*: ``BUG``, ``DEPRECATED``, ``FIXME``, "
"``HACK``, ``TASK``, ``TBD``, ``TODO``, ``WARNING``"
msgstr ""

msgid ""
"**Notice** *(appears in green)*: ``INFO``, ``NOTE``, ``NOTICE``, ``TEST``, "
"``TESTING``"
msgstr ""

msgid ""
"These keywords are case-sensitive, so they must be written in uppercase for "
"them to be recognized:"
msgstr ""

msgid ""
"The list of highlighted keywords and their colors can be changed in the "
"**Text Editor > Theme > Comment Markers** section of the Editor Settings."
msgstr ""

msgid "Code regions"
msgstr "Кодові регіони"

msgid ""
"Code regions are special types of comments that the script editor "
"understands as *foldable regions*. This means that after writing code region "
"comments, you can collapse and expand the region by clicking the arrow that "
"appears at the left of the comment. This arrow appears within a purple "
"square to be distinguishable from standard code folding."
msgstr ""

#, fuzzy
msgid "The syntax is as follows:"
msgstr "Цей текст заявляє наступне:"

msgid ""
"To create a code region quickly, select several lines in the script editor, "
"right-click the selection then choose **Create Code Region**. The region "
"description will be selected automatically for editing."
msgstr ""

msgid "It is possible to nest code regions within other code regions."
msgstr ""

#, fuzzy
msgid "Here's a concrete usage example of code regions:"
msgstr "Є багато типів переходів:"

msgid ""
"This can be useful to organize large chunks of code into easier to "
"understand sections. However, remember that external editors generally don't "
"support this feature, so make sure your code is easy to follow even when not "
"relying on folding code regions."
msgstr ""

msgid ""
"Individual functions and indented sections (such as ``if`` and ``for``) can "
"*always* be collapsed in the script editor. This means you should avoid "
"using a code region to contain a single function or indented section, as it "
"won't bring much of a benefit. Code regions work best when they're used to "
"group multiple elements together."
msgstr ""

msgid "Line continuation"
msgstr "Продовження лінії"

msgid ""
"A line of code in GDScript can be continued on the next line by using a "
"backslash (``\\``). Add one at the end of a line and the code on the next "
"line will act like it's where the backslash is. Here is an example:"
msgstr ""

msgid "A line can be continued multiple times like this:"
msgstr ""

msgid "Built-in types"
msgstr "Вбудовані типи"

msgid ""
"Built-in types are stack-allocated. They are passed as values. This means a "
"copy is created on each assignment or when passing them as arguments to "
"functions. The exceptions are ``Object``, ``Array``, ``Dictionary``, and "
"packed arrays (such as ``PackedByteArray``), which are passed by reference "
"so they are shared. All arrays, ``Dictionary``, and some objects (``Node``, "
"``Resource``) have a ``duplicate()`` method that allows you to make a copy."
msgstr ""
"Вбудовані типи розміщуються в стеку. Вони передаються як значення. Це "
"означає, що копія створюється при кожному присвоюванні або при передачі їх "
"як аргументів у функції. Виняток становлять ``Object``, ``Array``, "
"``Dictionary`` та упаковані масиви (такі як ``PackedByteArray``), які "
"передаються за посиланням, тому вони є спільними. Всі масиви, ``Dictionary`` "
"і деякі об'єкти (``Node``, ``Resource``) мають метод ``duplicate()``, який "
"дозволяє зробити копію."

msgid "Basic built-in types"
msgstr "Базові вбудовані типи"

msgid "A variable in GDScript can be assigned to several built-in types."
msgstr "Змінна в GDScript може бути призначена декільком вбудованим типам."

msgid "null"
msgstr "нуль"

msgid ""
"``null`` is an empty data type that contains no information and can not be "
"assigned any other value."
msgstr ""
"``null`` це порожній тип даних, який не містить інформації та не може "
"приймати інші значення."

msgid ":ref:`bool <class_bool>`"
msgstr ":ref:`bool <class_bool>` (логічні)"

msgid "Short for \"boolean\", it can only contain ``true`` or ``false``."
msgstr "Скорочене для \"boolean\", може містити лише ``true``, або ``false``."

msgid ":ref:`int <class_int>`"
msgstr ":ref:`int <class_int>`"

#, fuzzy
msgid ""
"Short for \"integer\", it stores whole numbers (positive and negative). It "
"is stored as a 64-bit value, equivalent to ``int64_t`` in C++."
msgstr ""
"Скорочене від \"integer\" (\"ціле число\"), воно зберігає цілі числа "
"(позитивні та негативні). Воно зберігається як 64-бітове значення, "
"еквівалент \"int64_t\" в C ++."

msgid ":ref:`float <class_float>`"
msgstr ":ref:`float <class_float>`"

#, fuzzy
msgid ""
"Stores real numbers, including decimals, using floating-point values. It is "
"stored as a 64-bit value, equivalent to ``double`` in C++. Note: Currently, "
"data structures such as ``Vector2``, ``Vector3``, and ``PackedFloat32Array`` "
"store 32-bit single-precision ``float`` values."
msgstr ""
"Зберігає дійсні числа, включаючи десяткові дроби, використовуючи значення з "
"рухомою комою. Зберігається як 64-бітове значення, еквівалентне \"double\" в "
"C ++. Примітка: В даний час структури даних, такі як Vector2, Vector3 і "
"PoolRealArray, зберігають 32-бітні одноточні значення \"float\"."

msgid ":ref:`String <class_String>`"
msgstr ":ref:`String <class_String>`"

msgid ""
"A sequence of characters in `Unicode format <https://en.wikipedia.org/wiki/"
"Unicode>`_."
msgstr ""
"Послідовність символів у форматі `Unicode <https://en.wikipedia.org/wiki/"
"Unicode>`_."

msgid ""
"An immutable string that allows only one instance of each name. They are "
"slower to create and may result in waiting for locks when multithreading. In "
"exchange, they're very fast to compare, which makes them good candidates for "
"dictionary keys."
msgstr ""

msgid ""
"A pre-parsed path to a node or a node property.  It can be easily assigned "
"to, and from, a String. They are useful to interact with the tree to get a "
"node, or affecting properties like with :ref:`Tweens <class_Tween>`."
msgstr ""

msgid "Vector built-in types"
msgstr "Векторні вбудовані типи"

msgid ":ref:`Vector2 <class_Vector2>`"
msgstr ":ref:`Vector2 <class_Vector2>`"

msgid ""
"2D vector type containing ``x`` and ``y`` fields. Can also be accessed as an "
"array."
msgstr ""
"2D векторний тип містить поля ``x`` і ``y``. Також можна отримати доступ до "
"масиву."

#, fuzzy
msgid ":ref:`Vector2i <class_Vector2i>`"
msgstr ":ref:`Vector2 <class_Vector2>`"

msgid ""
"Same as a Vector2 but the components are integers. Useful for representing "
"items in a 2D grid."
msgstr ""

msgid ":ref:`Rect2 <class_Rect2>`"
msgstr ":ref:`Rect2 <class_Rect2>`"

msgid ""
"2D Rectangle type containing two vectors fields: ``position`` and ``size``. "
"Also contains an ``end`` field which is ``position + size``."
msgstr ""
"Тип Прямокутник 2D, містить два векторних поля: ``position`` і ``size``. "
"Також містить поле ``end``, яке є ``.position + size``."

msgid ":ref:`Vector3 <class_Vector3>`"
msgstr ":ref:`Vector3 <class_Vector3>`"

msgid ""
"3D vector type containing ``x``, ``y`` and ``z`` fields. This can also be "
"accessed as an array."
msgstr ""
"Тип 3D вектора, містить поля ``x``, ``y`` і ``z``. Його також можна отримати "
"як масив."

#, fuzzy
msgid ":ref:`Vector3i <class_Vector3i>`"
msgstr ":ref:`Vector3 <class_Vector3>`"

msgid ""
"Same as Vector3 but the components are integers. Can be use for indexing "
"items in a 3D grid."
msgstr ""

msgid ":ref:`Transform2D <class_Transform2D>`"
msgstr ":ref:`Transform2D <class_Transform2D>`"

msgid "3×2 matrix used for 2D transforms."
msgstr "3 × 2 матриця, що використовується для 2D перетворень."

msgid ":ref:`Plane <class_Plane>`"
msgstr ":ref:`Plane <class_Plane>`"

msgid ""
"3D Plane type in normalized form that contains a ``normal`` vector field and "
"a ``d`` scalar distance."
msgstr ""
"Тип 3D площини в нормалізованому вигляді, містить векторне поле ``normal`` і "
"скалярну відстань ``d``."

#, fuzzy
msgid ":ref:`Quaternion <class_Quaternion>`"
msgstr ":ref:`Quat <class_Quat>`"

msgid ""
"Quaternion is a datatype used for representing a 3D rotation. It's useful "
"for interpolating rotations."
msgstr ""
"Quaternion - це тип даних, який використовується для представлення "
"тривимірного обертання. Корисний для інтерполяції обертів."

msgid ":ref:`AABB <class_AABB>`"
msgstr ":ref:`AABB <class_AABB>`"

msgid ""
"Axis-aligned bounding box (or 3D box) contains 2 vectors fields: "
"``position`` and ``size``. Also contains an ``end`` field which is "
"``position + size``."
msgstr ""
"Вісь вирівняна обмежувальною коробкою (або 3D коробкою) містить 2 векторних "
"поля: ``position`` і ``size``. Також містить поле ``end``, яке є ``position "
"+ size``."

msgid ":ref:`Basis <class_Basis>`"
msgstr ":ref:`Basis <class_Basis>`"

msgid ""
"3x3 matrix used for 3D rotation and scale. It contains 3 vector fields "
"(``x``, ``y`` and ``z``) and can also be accessed as an array of 3D vectors."
msgstr ""
"Матриця 3x3, використовується для 3D обертання та масштабування. Вона "
"містить 3 векторних полів (``x``, ``y`` і ``z``) , а також може бути "
"доступна в вигляді масиву 3D векторів."

#, fuzzy
msgid ":ref:`Transform3D <class_Transform3D>`"
msgstr ":ref:`Transform2D <class_Transform2D>`"

msgid ""
"3D Transform contains a Basis field ``basis`` and a Vector3 field ``origin``."
msgstr ""
"3D перетворення містить поле Basis (Основа) ``basis``та поле Vector3 "
"``origin``."

msgid "Engine built-in types"
msgstr "Вбудовані типи движка"

msgid ":ref:`Color <class_Color>`"
msgstr ":ref:`Color <class_Color>`"

msgid ""
"Color data type contains ``r``, ``g``, ``b``, and ``a`` fields. It can also "
"be accessed as ``h``, ``s``, and ``v`` for hue/saturation/value."
msgstr ""
"Color (Колір) тип даних містить поля ``r``, ``g``, ``b`` і ``a``. Також "
"можуть бути доступні ``h``, ``s`` і ``v`` для hue(відтінок)/ "
"saturation(насиченість) / value(значення)."

msgid ":ref:`RID <class_RID>`"
msgstr ":ref:`RID <class_RID>`"

msgid "Resource ID (RID). Servers use generic RIDs to reference opaque data."
msgstr ""
"Ідентифікатор ресурсу (RID). Сервери використовують загальні RID для "
"посилання непрозорих даних."

msgid ":ref:`Object <class_Object>`"
msgstr ":ref:`Object <class_Object>`"

msgid "Base class for anything that is not a built-in type."
msgstr "Базовий клас для всього, що не є вбудованим типом."

msgid "Container built-in types"
msgstr "Вбудовані типи контейнерів"

msgid ":ref:`Array <class_Array>`"
msgstr ":ref:`Array <class_Array>`"

msgid ""
"Generic sequence of arbitrary object types, including other arrays or "
"dictionaries (see below). The array can resize dynamically. Arrays are "
"indexed starting from index ``0``. Negative indices count from the end."
msgstr ""
"Масиви - це послідовність об'єктів довільних типів, включаючи інші масиви, "
"чи словники (дивіться нижче). Масив може динамічно змінювати розмір. Масиви "
"індексуються, починаючи з індексу ``0``. Негативні показники рахуються з "
"кінця."

#, fuzzy
msgid "Typed arrays"
msgstr "Масив дотичних"

msgid ""
"Godot 4.0 added support for typed arrays. On write operations, Godot checks "
"that element values match the specified type, so the array cannot contain "
"invalid values. The GDScript static analyzer takes typed arrays into "
"account, however array methods like ``front()`` and ``back()`` still have "
"the ``Variant`` return type."
msgstr ""

msgid ""
"Typed arrays have the syntax ``Array[Type]``, where ``Type`` can be any "
"``Variant`` type, native or user class, or enum. Nested array types (like "
"``Array[Array[int]]``) are not supported."
msgstr ""

msgid "``Array`` and ``Array[Variant]`` are the same thing."
msgstr ""

msgid ""
"Arrays are passed by reference, so the array element type is also an "
"attribute of the in-memory structure referenced by a variable in runtime. "
"The static type of a variable restricts the structures that it can reference "
"to. Therefore, you **cannot** assign an array with a different element type, "
"even if the type is a subtype of the required type."
msgstr ""

msgid ""
"If you want to *convert* a typed array, you can create a new array and use "
"the :ref:`Array.assign() <class_Array_method_assign>` method::"
msgstr ""

msgid ""
"The only exception was made for the ``Array`` (``Array[Variant]``) type, for "
"user convenience and compatibility with old code. However, operations on "
"untyped arrays are considered unsafe."
msgstr ""

#, fuzzy
msgid "Packed arrays"
msgstr "Масив поверхні"

msgid ""
"GDScript arrays are allocated linearly in memory for speed. Large arrays "
"(more than tens of thousands of elements) may however cause memory "
"fragmentation. If this is a concern, special types of arrays are available. "
"These only accept a single data type. They avoid memory fragmentation and "
"use less memory, but are atomic and tend to run slower than generic arrays. "
"They are therefore only recommended to use for large data sets:"
msgstr ""
"Масиви GDScript розподіляються в пам'яті лінійно для швидкості. Однак великі "
"масиви (на більше десятків тисяч елементів) можуть спричинити фрагментацію "
"пам'яті. Якщо це викликає занепокоєння, доступні спеціальні типи масивів. "
"Вони приймають лише один тип даних. Вони уникають фрагментації пам'яті і "
"використовують менше пам'яті, але є атомними і мають тенденцію працювати "
"повільніше, ніж загальні масиви. Тому їх рекомендується використовувати лише "
"для великих наборів даних:"

#, fuzzy
msgid ""
":ref:`PackedByteArray <class_PackedByteArray>`: An array of bytes (integers "
"from 0 to 255)."
msgstr ""
":ref:`PoolByteArray <class_PoolByteArray>`: масив з байтів (цілих чисел від "
"0 до 255)."

#, fuzzy
msgid ""
":ref:`PackedInt32Array <class_PackedInt32Array>`: An array of 32-bit "
"integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>`: масив з цілих чисел."

#, fuzzy
msgid ""
":ref:`PackedInt64Array <class_PackedInt64Array>`: An array of 64-bit "
"integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>`: масив з цілих чисел."

#, fuzzy
msgid ""
":ref:`PackedFloat32Array <class_PackedFloat32Array>`: An array of 32-bit "
"floats."
msgstr ""
":ref:`PoolRealArray <class_PoolRealArray>`: масив з чисел із рухомою крапкою."

#, fuzzy
msgid ""
":ref:`PackedFloat64Array <class_PackedFloat64Array>`: An array of 64-bit "
"floats."
msgstr ""
":ref:`PoolRealArray <class_PoolRealArray>`: масив з чисел із рухомою крапкою."

#, fuzzy
msgid ""
":ref:`PackedStringArray <class_PackedStringArray>`: An array of strings."
msgstr ":ref:`PoolStringArray <class_PoolStringArray>`: масив з рядків."

#, fuzzy
msgid ""
":ref:`PackedVector2Array <class_PackedVector2Array>`: An array of :ref:"
"`Vector2 <class_Vector2>` values."
msgstr ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: Масив з об'єктів :ref:"
"`Vector2 <class_Vector2>`."

#, fuzzy
msgid ""
":ref:`PackedVector3Array <class_PackedVector3Array>`: An array of :ref:"
"`Vector3 <class_Vector3>` values."
msgstr ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: Масив з об'єктів :ref:"
"`Vector3 <class_Vector3>`."

#, fuzzy
msgid ""
":ref:`PackedColorArray <class_PackedColorArray>`: An array of :ref:`Color "
"<class_Color>` values."
msgstr ""
":ref:`PoolColorArray <class_PoolColorArray>`: Масив з об'єктів :ref:`Color "
"<class_Color>`."

msgid ":ref:`Dictionary <class_Dictionary>`"
msgstr ":ref:`Dictionary <class_Dictionary>`"

msgid "Associative container which contains values referenced by unique keys."
msgstr ""
"Асоціативний контейнер, який містить значення, на які посилаються унікальні "
"ключі."

#, fuzzy
msgid ""
"Lua-style table syntax is also supported. Lua-style uses ``=`` instead of ``:"
"`` and doesn't use quotes to mark string keys (making for slightly less to "
"write). However, keys written in this form can't start with a digit (like "
"any GDScript identifier), and must be string literals."
msgstr ""
"Також підтримується синтаксис таблиць в стилі Lua. Стиль Lua використовує "
"``=`` замість ``:`` і не використовує лапки для позначення ключів (що "
"дозволяє писати трохи менше). Однак, ключі, записані у цій формі, не можуть "
"починатися з цифри (як і будь-який ідентифікатор GDScript)."

msgid ""
"To add a key to an existing dictionary, access it like an existing key and "
"assign to it::"
msgstr ""
"Щоб додати ключ до наявного словника, використовуйте ім'я словника, ім'я "
"нового ключа та призначте ключу значення:"

msgid ""
"The bracket syntax can be used to access properties of any :ref:"
"`class_Object`, not just Dictionaries. Keep in mind it will cause a script "
"error when attempting to index a non-existing property. To avoid this, use "
"the :ref:`Object.get() <class_Object_method_get>` and :ref:`Object.set() "
"<class_Object_method_set>` methods instead."
msgstr ""
"Синтаксис дужок може використовуватися для доступу до властивостей будь-"
"якого :ref:`class_Object`, а не лише до словників. Майте на увазі, що спроба "
"індексувати неіснуючу властивість спричинить помилку скрипту . Щоб цього "
"уникнути, використовуйте методи :ref:`Object.get() "
"<class_Object_method_get>` та :ref:`Object.set() <class_Object_method_set>`."

#, fuzzy
msgid ":ref:`Signal <class_Signal>`"
msgstr ":ref:`int <class_int>`"

msgid ""
"A signal is a message that can be emitted by an object to those who want to "
"listen to it. The Signal type can be used for passing the emitter around."
msgstr ""

msgid ""
"Signals are better used by getting them from actual objects, e.g. ``$Button."
"button_up``."
msgstr ""

#, fuzzy
msgid ":ref:`Callable <class_Callable>`"
msgstr ":ref:`Plane <class_Plane>`"

msgid ""
"Contains an object and a function, which is useful for passing functions as "
"values (e.g. when connecting to signals)."
msgstr ""

msgid ""
"Getting a method as a member returns a callable. ``var x = $Sprite2D."
"rotate`` will set the value of ``x`` to a callable with ``$Sprite2D`` as the "
"object and ``rotate`` as the method."
msgstr ""

msgid "You can call it using the ``call`` method: ``x.call(PI)``."
msgstr ""

msgid "Data"
msgstr "Дані"

msgid "Variables"
msgstr "Змінні"

msgid ""
"Variables can exist as class members or local to functions. They are created "
"with the ``var`` keyword and may, optionally, be assigned a value upon "
"initialization."
msgstr ""
"Змінні можуть існувати як члени класу, або як локальні для функцій. Вони "
"створюються за допомогою ключового слова ``var`` і, за бажання, їм можна "
"присвоювати значення після ініціалізації."

msgid ""
"Variables can optionally have a type specification. When a type is "
"specified, the variable will be forced to have always that same type, and "
"trying to assign an incompatible value will raise an error."
msgstr ""
"Змінні, не обов'язково, але можуть мати специфікацію типу. Коли тип "
"вказаний, змінна буде змушена завжди мати один і той самий тип, а спроба "
"призначити несумісне значення призведе до помилки."

msgid ""
"Types are specified in the variable declaration using a ``:`` (colon) symbol "
"after the variable name, followed by the type."
msgstr ""
"Типи задаються при створенні змінної з використанням символа ``:`` "
"(двокрапка) після імені змінної, за яким вказується тип."

msgid ""
"If the variable is initialized within the declaration, the type can be "
"inferred, so it's possible to omit the type name::"
msgstr ""
"Якщо змінна ініціалізована при створенні, тип можна призначити опустивши "
"ім'я типу:"

msgid ""
"Type inference is only possible if the assigned value has a defined type, "
"otherwise it will raise an error."
msgstr ""
"Таке визначення типу можливе лише в тому випадку, якщо призначене значення "
"має визначений тип, інакше виникне помилка."

msgid "Valid types are:"
msgstr "Підтримувані типи:"

msgid "Built-in types (Array, Vector2, int, String, etc.)."
msgstr "Вбудовані типи (Array, Vector2, int, String, тощо)."

msgid "Engine classes (Node, Resource, Reference, etc.)."
msgstr "Класи движка (Node, Resource, Reference, тощо)."

msgid ""
"Constant names if they contain a script resource (``MyScript`` if you "
"declared ``const MyScript = preload(\"res://my_script.gd\")``)."
msgstr ""
"Імена констант, якщо вони містять ресурс скрипту (``MyScript`` якщо ви "
"визначили ``const MyScript = preload(\"res://my_script.gd\")``)."

msgid ""
"Other classes in the same script, respecting scope (``InnerClass."
"NestedClass`` if you declared ``class NestedClass`` inside the ``class "
"InnerClass`` in the same scope)."
msgstr ""
"Інші класи в тому ж скрипті, з дотриманням меж застосування (``InnerClass."
"NestedClass`` якщо ви визначили ``class NestedClass`` всередині ``class "
"InnerClass`` в тих самих межах)."

msgid "Script classes declared with the ``class_name`` keyword."
msgstr "Класи скриптів, оголошені за допомогою ключового слова ``class_name``."

msgid "Autoloads registered as singletons."
msgstr ""

msgid ""
"While ``Variant`` is a valid type specification, it's not an actual type. It "
"only means there's no set type and is equivalent to not having a static type "
"at all. Therefore, inference is not allowed by default for ``Variant``, "
"since it's likely a mistake."
msgstr ""

msgid ""
"You can turn off this check, or make it only a warning, by changing it in "
"the project settings. See :ref:`doc_gdscript_warning_system` for details."
msgstr ""

#, fuzzy
msgid "Initialization order"
msgstr "Приклад ініціалізації:"

#, fuzzy
msgid "Member variables are initialized in the following order:"
msgstr ""
"Наведене вище зображення було створено за допомогою наступного скрипта:"

msgid ""
"Depending on the variable's static type, the variable is either ``null`` "
"(untyped variables and objects) or has a default value of the type (``0`` "
"for ``int``, ``false`` for ``bool``, etc.)."
msgstr ""

msgid ""
"The specified values are assigned in the order of the variables in the "
"script, from top to bottom. - *(Only for ``Node``-derived classes)* If the "
"``@onready`` annotation is applied to a variable, its initialization is "
"deferred to step 5."
msgstr ""

msgid "If defined, the ``_init()`` method is called."
msgstr ""

msgid ""
"When instantiating scenes and resources, the exported values are assigned."
msgstr ""

msgid ""
"*(Only for ``Node``-derived classes)* ``@onready`` variables are initialized."
msgstr ""

msgid ""
"*(Only for ``Node``-derived classes)* If defined, the ``_ready()`` method is "
"called."
msgstr ""

msgid ""
"You can specify a complex expression as a variable initializer, including "
"function calls. Make sure the variables are initialized in the correct "
"order, otherwise your values may be overwritten. For example::"
msgstr ""

#, fuzzy
msgid "Will print::"
msgstr "Буде виведено:"

msgid ""
"To fix this, move the ``_data`` variable definition above the ``a`` "
"definition or remove the empty dictionary assignment (``= {}``)."
msgstr ""

#, fuzzy
msgid "Static variables"
msgstr "Редагування екземплярів"

msgid "A class member variable can be declared static::"
msgstr ""

msgid ""
"Static variables belong to the class, not instances. This means that static "
"variables share values between multiple instances, unlike regular member "
"variables."
msgstr ""

msgid ""
"From inside a class, you can access static variables from any function, both "
"static and non-static. From outside the class, you can access static "
"variables using the class or an instance (the second is not recommended as "
"it is less readable)."
msgstr ""

msgid ""
"The ``@export`` and ``@onready`` annotations cannot be applied to a static "
"variable. Local variables cannot be static."
msgstr ""

msgid ""
"The following example defines a ``Person`` class with a static variable "
"named ``max_id``. We increment the ``max_id`` in the ``_init()`` function. "
"This makes it easy to keep track of the number of ``Person`` instances in "
"our game."
msgstr ""

msgid ""
"In this code, we create two instances of our ``Person`` class and check that "
"the class and every instance have the same ``max_id`` value, because the "
"variable is static and accessible to every instance."
msgstr ""

msgid "Static variables can have type hints, setters and getters::"
msgstr ""

msgid "A base class static variable can also be accessed via a child class::"
msgstr ""

msgid "``@static_unload`` annotation"
msgstr ""

msgid ""
"Since GDScript classes are resources, having static variables in a script "
"prevents it from being unloaded even if there are no more instances of that "
"class and no other references left. This can be important if static "
"variables store large amounts of data or hold references to other project "
"resources, such as scenes. You should clean up this data manually, or use "
"the :ref:`@static_unload <class_@GDScript_annotation_@static_unload>` "
"annotation if static variables don't store important data and can be reset."
msgstr ""

msgid ""
"Currently, due to a bug, scripts are never freed, even if ``@static_unload`` "
"annotation is used."
msgstr ""

msgid ""
"Note that ``@static_unload`` applies to the entire script (including inner "
"classes) and must be placed at the top of the script, before ``class_name`` "
"and ``extends``::"
msgstr ""

msgid "See also `Static functions`_ and `Static constructor`_."
msgstr ""

msgid "Casting"
msgstr ""

msgid ""
"Values assigned to typed variables must have a compatible type. If it's "
"needed to coerce a value to be of a certain type, in particular for object "
"types, you can use the casting operator ``as``."
msgstr ""
"Значення, присвоєні типізованим змінним, повинні мати сумісний тип. Якщо "
"потрібно примусити значення бути певного типу, зокрема для типів об'єктів, "
"ви можете використовувати оператор ``as``."

msgid ""
"Casting between object types results in the same object if the value is of "
"the same type or a subtype of the cast type."
msgstr ""
"Оператор спрацює вірно, якщо тип присвоєного об'єкта збігається з типом "
"змінної, або є підтипом її типу."

msgid ""
"If the value is not a subtype, the casting operation will result in a "
"``null`` value."
msgstr ""
"Якщо значення не є підтипом, ця операція призведе до значення ``null``."

msgid ""
"For built-in types, they will be forcibly converted if possible, otherwise "
"the engine will raise an error."
msgstr ""
"Вбудовані типи будуть примусово перетворені, якщо це можливо, в противному "
"випадку движок видасть помилку."

msgid ""
"Casting is also useful to have better type-safe variables when interacting "
"with the scene tree::"
msgstr ""

msgid "Constants"
msgstr "Константи"

msgid ""
"Constants are values you cannot change when the game is running. Their value "
"must be known at compile-time. Using the ``const`` keyword allows you to "
"give a constant value a name. Trying to assign a value to a constant after "
"it's declared will give you an error."
msgstr ""
"Константи - це значення, які ви не можете змінити під час роботи гри. Їх "
"значення має бути відоме під час компіляції. Використання ключового слова "
"``const`` дозволяє надати значенню константи назву. Спроба присвоїти "
"значення константі після її оголошення буде давати вам помилку."

msgid "We recommend using constants whenever a value is not meant to change."
msgstr ""
"Ми рекомендуємо використовувати константи для значень які не призначені для "
"зміни."

msgid ""
"Although the type of constants is inferred from the assigned value, it's "
"also possible to add explicit type specification::"
msgstr ""
"Хоча тип констант виводиться із призначеного значення, також можна додати "
"явну специфікацію типу:"

msgid "Assigning a value of an incompatible type will raise an error."
msgstr "Призначення значення несумісного типу призведе до помилки."

msgid ""
"You can also create constants inside a function, which is useful to name "
"local magic values."
msgstr ""

#, fuzzy
msgid ""
"Since objects, arrays and dictionaries are passed by reference, constants "
"are \"flat\". This means that if you declare a constant array or dictionary, "
"it can still be modified afterwards. They can't be reassigned with another "
"value though."
msgstr ""
"Оскільки масиви та словники передаються за посиланням, константи є "
"\"плоскими\". Це означає, що якщо ви оголосите в якості константи масив, чи "
"словник, його все ще можна буде змінити згодом. Однак їх не можна замінити "
"іншим значенням."

msgid "Enums"
msgstr "Переліки"

msgid ""
"Enums are basically a shorthand for constants, and are pretty useful if you "
"want to assign consecutive integers to some constant."
msgstr ""
"Переліки - це, в основному, скорочення для констант, і вони дуже корисні, "
"якщо ви хочете призначити послідовні цілі числа якимось константам."

#, fuzzy
msgid ""
"If you pass a name to the enum, it will put all the keys inside a constant :"
"ref:`Dictionary <class_Dictionary>` of that name. This means all constant "
"methods of a dictionary can also be used with a named enum."
msgstr ""
"Якщо ви передасте ім'я до переліку, він помістить усі ключі всередину "
"постійного словника цього імені."

#, fuzzy
msgid ""
"Keys in a named enum are not registered as global constants. They should be "
"accessed prefixed by the enum's name (``Name.KEY``)."
msgstr ""
"У Godot 3.1, і пізніших версіях, ключі в названому переліку не реєструються "
"як глобальні константи. До них слід звертатися з префіксом імені переліку "
"(``Ім'я.КЛЮЧ``); дивіться приклад нижче."

msgid "Functions"
msgstr "Функції"

msgid ""
"Functions always belong to a `class <Classes_>`_. The scope priority for "
"variable look-up is: local → class member → global. The ``self`` variable is "
"always available and is provided as an option for accessing class members, "
"but is not always required (and should *not* be sent as the function's first "
"argument, unlike Python)."
msgstr ""
"Функції завжди належать до `класу<Classes_>`_. Пріоритет області для пошуку "
"змінних: локальний → член класу → глобальний. Змінна ``self`` завжди "
"доступна і надаються в якості опції для доступу до членів класу, хоча й не "
"завжди потрібна (і, на відміну від Python, *не* повинна передаватися в "
"якості першого аргументу функції)."

msgid ""
"A function can ``return`` at any point. The default return value is ``null``."
msgstr ""
"Функція може повертати значення (``return``) в будь-якій точці. За "
"замовчуванням повертається - ``null``."

msgid ""
"If a function contains only one line of code, it can be written on one line::"
msgstr ""

msgid ""
"Functions can also have type specification for the arguments and for the "
"return value. Types for arguments can be added in a similar way to "
"variables::"
msgstr ""
"Функції можуть також мати специфікацію типу для аргументів та для значення, "
"яке повертається. Типи аргументів можуть бути додані аналогічно змінним:"

msgid ""
"If a function argument has a default value, it's possible to infer the type::"
msgstr ""
"Якщо аргумент функції має значення за замовчуванням, то можна визначити тип:"

msgid ""
"The return type of the function can be specified after the arguments list "
"using the arrow token (``->``)::"
msgstr ""
"Тип повернення функції можна вказати після списку аргументів, використовуючи "
"символ стрілки ( ``->``):"

msgid ""
"Functions that have a return type **must** return a proper value. Setting "
"the type as ``void`` means the function doesn't return anything. Void "
"functions can return early with the ``return`` keyword, but they can't "
"return any value."
msgstr ""
"Функції, що мають тип повернення, **повинні** повертати значення "
"відповідного типу. Тип ``void`` означає, що функція нічого не повертає. "
"Функції можуть використовувати ключове слово ``return``, але вони не можуть "
"повертати ніякого значення."

msgid ""
"Non-void functions must **always** return a value, so if your code has "
"branching statements (such as an ``if``/``else`` construct), all the "
"possible paths must have a return. E.g., if you have a ``return`` inside an "
"``if`` block but not after it, the editor will raise an error because if the "
"block is not executed, the function won't have a valid value to return."
msgstr ""
"Функції, які повертають інший тип, **завжди** повинні повертати якесь "
"значення, тому якщо у вашому коді є операції розгалуження (наприклад "
"конструкцію ``if``/``else``), усі можливі шляхи повинні мати повернення. "
"Наприклад, якщо у вас ``return`` всередині блоку ``if``, але не після нього, "
"редактор викличе помилку, оскільки якщо умова блоку не буде виконана, "
"функція не матиме значення для повернення."

msgid "Referencing functions"
msgstr "Посилання на функції"

msgid ""
"Functions are first-class items in terms of the :ref:`Callable "
"<class_Callable>` object. Referencing a function by name without calling it "
"will automatically generate the proper callable. This can be used to pass "
"functions as arguments."
msgstr ""

msgid ""
"Callables **must** be called with the ``call`` method. You cannot use the "
"``()`` operator directly. This behavior is implemented to avoid performance "
"issues on direct function calls."
msgstr ""

#, fuzzy
msgid "Lambda functions"
msgstr "Функції випадковості"

msgid ""
"Lambda functions allow you to declare functions that do not belong to a "
"class. Instead a :ref:`Callable <class_Callable>` object is created and "
"assigned to a variable directly. This can be useful to create Callables to "
"pass around without polluting the class scope."
msgstr ""

msgid "Lambda functions can be named for debugging purposes::"
msgstr ""

msgid ""
"Note that if you want to return a value from a lambda, an explicit "
"``return`` is required (you can't omit ``return``)::"
msgstr ""

msgid ""
"Lambda functions capture the local environment. Local variables are passed "
"by value, so they won't be updated in the lambda if changed in the local "
"function::"
msgstr ""

msgid ""
"The values of the outer scope behave like constants. Therefore, if you "
"declare an array or dictionary, it can still be modified afterwards."
msgstr ""

msgid "Static functions"
msgstr "Статичні функції"

#, fuzzy
msgid ""
"A function can be declared static. When a function is static, it has no "
"access to the instance member variables or ``self``. A static function has "
"access to static variables. Also static functions are useful to make "
"libraries of helper functions::"
msgstr ""
"Функція може бути оголошена статичною. Коли функція статична, вона не має "
"доступу до змінних членів екземпляра (instance), або ``self``. Це в "
"основному корисно для створення бібліотек допоміжних функцій:"

msgid "Lambdas cannot be declared static."
msgstr ""

msgid "See also `Static variables`_ and `Static constructor`_."
msgstr ""

msgid "Statements and control flow"
msgstr "Оператори і управління потоком"

msgid ""
"Statements are standard and can be assignments, function calls, control flow "
"structures, etc (see below). ``;`` as a statement separator is entirely "
"optional."
msgstr ""
"Оператори є стандартними і можуть бути призначеннями, викликами функцій, "
"структурами контрольного потоку тощо (дивіться нижче). Роздільник ``;`` "
"абсолютно необов'язковий."

#, fuzzy
msgid "Expressions"
msgstr "Expression Node (Вузол виразу)"

msgid ""
"Expressions are sequences of operators and their operands in orderly "
"fashion. An expression by itself can be a statement too, though only calls "
"are reasonable to use as statements since other expressions don't have side "
"effects."
msgstr ""

msgid ""
"Expressions return values that can be assigned to valid targets. Operands to "
"some operator can be another expression. An assignment is not an expression "
"and thus does not return any value."
msgstr ""

#, fuzzy
msgid "Here are some examples of expressions::"
msgstr "Є багато типів переходів:"

msgid ""
"Identifiers, attributes, and subscripts are valid assignment targets. Other "
"expressions cannot be on the left side of an assignment."
msgstr ""

msgid "if/else/elif"
msgstr "якщо/інакше/якщо-інакше (ельіф)"

msgid ""
"Simple conditions are created by using the ``if``/``else``/``elif`` syntax. "
"Parenthesis around conditions are allowed, but not required. Given the "
"nature of the tab-based indentation, ``elif`` can be used instead of "
"``else``/``if`` to maintain a level of indentation."
msgstr ""
"Прості умови створюються за допомогою синтаксису ``if``/``else``/``elif``. "
"Дужки навколо умов дозволені, але не обов'язкові. Враховуючи характер "
"відступів на основі табуляції, ``elif`` можна використовувати замість "
"``else``/``if`` для підтримки рівня відступу."

msgid "Short statements can be written on the same line as the condition::"
msgstr "Короткі вирази можна записати на тому ж рядку, що і умова:"

msgid ""
"Sometimes, you might want to assign a different initial value based on a "
"boolean expression. In this case, ternary-if expressions come in handy::"
msgstr ""
"Іноді, можливо, ви захочете призначити інше початкове значення на основі "
"булевого виразу. У цьому випадку стають у нагоді потрійні вирази:"

msgid ""
"Ternary-if expressions can be nested to handle more than 2 cases. When "
"nesting ternary-if expressions, it is recommended to wrap the complete "
"expression over multiple lines to preserve readability::"
msgstr ""

msgid ""
"You may also wish to check if a value is contained within something. You can "
"use an ``if`` statement combined with the ``in`` operator to accomplish "
"this::"
msgstr ""

#, fuzzy
msgid ""
"Simple loops are created by using ``while`` syntax. Loops can be broken "
"using ``break`` or continued using ``continue`` (which skips to the next "
"iteration of the loop without executing any further code in the current "
"iteration):"
msgstr ""
"Прості цикли створюються за допомогою синтаксису ``while``. Цикли можуть "
"бути перервані, з допомогою ``break``, або продовжені з ``continue``:"

msgid ""
"To iterate through a range, such as an array or table, a *for* loop is used. "
"When iterating over an array, the current array element is stored in the "
"loop variable. When iterating over a dictionary, the *key* is stored in the "
"loop variable."
msgstr ""
"Для повторення (ітерації) діапазону, наприклад масиву, або таблиці, "
"використовується цикл *for*. Під час ітерації над масивом поточний елемент "
"масиву зберігається у змінній циклу. Під час ітерації над словником у "
"змінній циклу зберігається індекс."

msgid ""
"If you want to assign values on an array as it is being iterated through, it "
"is best to use ``for i in array.size()``."
msgstr ""

msgid ""
"The loop variable is local to the for-loop and assigning to it will not "
"change the value on the array. Objects passed by reference (such as nodes) "
"can still be manipulated by calling methods on the loop variable."
msgstr ""

msgid ""
"A ``match`` statement is used to branch execution of a program. It's the "
"equivalent of the ``switch`` statement found in many other languages, but "
"offers some additional features."
msgstr ""
"Оператор використовується для гілкування. Це еквівалент оператора "
"``switch``, який можна знайти в багатьох інших мовах, але``match`` пропонує "
"деякі додаткові функції."

msgid ""
"``match`` is more type strict than the ``==`` operator. For example ``1`` "
"will **not** match ``1.0``. The only exception is ``String`` vs "
"``StringName`` matching: for example, the String ``\"hello\"`` is considered "
"equal to the StringName ``&\"hello\"``."
msgstr ""

msgid "Basic syntax"
msgstr "Основний синтаксис"

msgid "Crash-course for people who are familiar with switch statements"
msgstr "Експрес-курс для тих, хто знайомий з операторами перемикання"

msgid "Replace ``switch`` with ``match``."
msgstr "Замініть ``switch`` на ``match``."

msgid "Remove ``case``."
msgstr "Видаліть ``case``."

#, fuzzy
msgid "Remove any ``break``\\ s."
msgstr "Видаліть ``case``."

msgid "Change ``default`` to a single underscore."
msgstr "Змініть ``default`` на одне підкреслення."

msgid "Control flow"
msgstr "Контрольний потік"

#, fuzzy
msgid ""
"The patterns are matched from top to bottom. If a pattern matches, the first "
"corresponding block will be executed. After that, the execution continues "
"below the ``match`` statement."
msgstr ""
"Шаблони перевіряються зверху вниз. Якщо шаблон відповідає, відповідний блок "
"буде виконаний. Після цього виконання продовжується нижче оператора "
"``match``. Ви можете скористатися ``continue`` для зупинки виконання в "
"поточному блоці і перевірки на наявність додаткового збігу в шаблонах під "
"ним."

msgid ""
"The special ``continue`` behavior in ``match`` supported in 3.x was removed "
"in Godot 4.0."
msgstr ""

#, fuzzy
msgid "The following pattern types are available:"
msgstr "Доступні кілька типів кореневих вузлів у ``AnimationTree``:"

#, fuzzy
msgid "Literal pattern"
msgstr "Шаблон масиву"

msgid "Matches a `literal <Literals_>`_::"
msgstr ""

#, fuzzy
msgid "Expression pattern"
msgstr "Обробка"

msgid ""
"Matches a constant expression, an identifier, or an attribute access (``A."
"B``)::"
msgstr ""

msgid "Wildcard pattern"
msgstr "Шаблон Wildcard"

msgid "This pattern matches everything. It's written as a single underscore."
msgstr "Цей шаблон відповідає усьому. Він прописаний як окреме підкреслення."

msgid ""
"It can be used as the equivalent of the ``default`` in a ``switch`` "
"statement in other languages::"
msgstr ""
"Він може бути використаний в якості еквівалента ``default`` в ``switch`` з "
"інших мов:"

msgid "Binding pattern"
msgstr "Зв'язувальний шаблон"

msgid ""
"A binding pattern introduces a new variable. Like the wildcard pattern, it "
"matches everything - and also gives that value a name. It's especially "
"useful in array and dictionary patterns::"
msgstr ""
"Зв'язувальний шаблон вводить нову змінну. Як і шаблон wildcard, він "
"відповідає всім - а також надає цьому значенню ім'я. Це особливо корисно для "
"моделей масивів та словників:"

msgid "Array pattern"
msgstr "Шаблон масиву"

#, fuzzy
msgid ""
"Matches an array. Every single element of the array pattern is a pattern "
"itself, so you can nest them."
msgstr ""
"Відповідає масиву. Кожен окремий елемент масиву шаблона є самим шаблоном, "
"тому ви можете вкласти їх."

msgid ""
"The length of the array is tested first, it has to be the same size as the "
"pattern, otherwise the pattern doesn't match."
msgstr ""
"Спочатку тестується довжина масиву, він повинен бути того ж розміру, що і "
"шаблон, інакше шаблон не збігатиметься."

msgid ""
"**Open-ended array**: An array can be bigger than the pattern by making the "
"last subpattern ``..``."
msgstr ""
"**Масив відкритого типу**: Масив може стати більшим за шаблон, під час "
"виконання останнього під-шаблону ``..``."

msgid "Every subpattern has to be comma-separated."
msgstr "Кожен під-шаблон повинен бути розділений комою."

msgid "Dictionary pattern"
msgstr "Словниковий шаблон"

msgid ""
"Works in the same way as the array pattern. Every key has to be a constant "
"pattern."
msgstr ""
"Працює так само, як і шаблон масиву. Кожен ключ повинен бути постійним "
"шаблоном."

msgid ""
"The size of the dictionary is tested first, it has to be the same size as "
"the pattern, otherwise the pattern doesn't match."
msgstr ""
"Спочатку тестується розмір словника, він повинен бути того ж розміру, що і "
"шаблон, інакше шаблон не співладе."

msgid ""
"**Open-ended dictionary**: A dictionary can be bigger than the pattern by "
"making the last subpattern ``..``."
msgstr ""
"**Відкритий словник**: Словник може стати більшим за шаблон при виконанні "
"останнього підшаблону ``..``."

msgid "Every subpattern has to be comma separated."
msgstr "Кожен під-шаблон повинен бути відокремлений комою."

msgid ""
"If you don't specify a value, then only the existence of the key is checked."
msgstr "Якщо значення не вказано, перевіряється лише наявність ключа."

msgid "A value pattern is separated from the key pattern with a ``:``."
msgstr "Шаблон значення відокремлений від основного шаблону ``:``."

msgid "Multiple patterns"
msgstr "Кілька шаблонів"

msgid ""
"You can also specify multiple patterns separated by a comma. These patterns "
"aren't allowed to have any bindings in them."
msgstr ""
"Ви також можете вказати кілька шаблонів, розділених комою. Ці шаблони не "
"можуть мати ніяких прив'язок у них."

#, fuzzy
msgid "Pattern guards"
msgstr "Східномарійська (Росія)"

msgid ""
"Only one branch can be executed per ``match``. Once a branch is chosen, the "
"rest are not checked. If you want to use the same pattern for multiple "
"branches or to prevent choosing a branch with too general pattern, you can "
"specify a guard expression after the list of patterns with the ``when`` "
"keyword::"
msgstr ""

msgid ""
"If there is no matching pattern for the current branch, the guard expression "
"is **not** evaluated and the patterns of the next branch are checked."
msgstr ""

msgid "If a matching pattern is found, the guard expression is evaluated."
msgstr ""

msgid ""
"If it's true, then the body of the branch is executed and ``match`` ends."
msgstr ""

#, fuzzy
msgid "If it's false, then the patterns of the next branch are checked."
msgstr "Якщо значення не вказано, перевіряється лише наявність ключа."

msgid "Classes"
msgstr "Класи"

msgid ""
"By default, all script files are unnamed classes. In this case, you can only "
"reference them using the file's path, using either a relative or an absolute "
"path. For example, if you name a script file ``character.gd``::"
msgstr ""
"За замовчуванням всі файли скриптів є класами без назви. У цьому випадку ви "
"можете посилатися на них лише за допомогою шляху до файлу, використовуючи "
"або відносний, або абсолютний шлях. Наприклад, якщо ви назвали файл скрипту "
"``character.gd``:"

#, fuzzy
msgid "Registering named classes"
msgstr "Реєстрація скриптів в якості класів"

#, fuzzy
msgid ""
"You can give your class a name to register it as a new type in Godot's "
"editor. For that, you use the ``class_name`` keyword. You can optionally use "
"the ``@icon`` annotation with a path to an image, to use it as an icon. Your "
"class will then appear with its new icon in the editor::"
msgstr ""
"Натомість ви можете дати ім'я своєму класу, щоб зареєструвати його як новий "
"тип у редакторі Godot. Для цього ви використовуєте ключове слово "
"``class_name``. Ви можете додати необов'язкову кому, а потім шлях до "
"зображення, щоб використовувати його як піктограму. Потім ваш клас з’явиться "
"з новою піктограмою в редакторі:"

msgid ""
"SVG images that are used as custom node icons should have the **Editor > "
"Scale With Editor Scale** and **Editor > Convert Icons With Editor Theme** :"
"ref:`import options <doc_importing_images_editor_import_options>` enabled. "
"This allows icons to follow the editor's scale and theming settings if the "
"icons are designed with the same color palette as Godot's own icons."
msgstr ""

msgid "Here's a class file example:"
msgstr "Ось зразок файла класу:"

msgid ""
"If you want to use ``extends`` too, you can keep both on the same line::"
msgstr ""

#, fuzzy
msgid ""
"Godot initializes non-static variables every time you create an instance, "
"and this includes arrays and dictionaries. This is in the spirit of thread "
"safety, since scripts can be initialized in separate threads without the "
"user knowing."
msgstr ""
"Синтаксис класів Godot є компактним: він може містити лише змінні, або "
"функції. Ви можете використовувати статичні функції, але не статичні змінні. "
"Таким же чином, движок ініціалізує змінні щоразу, коли ви створюєте "
"екземпляр, і це включає масиви та словники. Це в дусі безпеки потоку, "
"оскільки скрипти можна ініціалізувати в окремих потоках."

msgid "Inheritance"
msgstr "Успадкування"

msgid "A class (stored as a file) can inherit from:"
msgstr "Клас (зберігається як файл) може успадковувати від:"

msgid "A global class."
msgstr "Глобального класу."

msgid "Another class file."
msgstr "Іншого класу."

msgid "An inner class inside another class file."
msgstr "Внутрішнього класу всередині іншого файла класу."

msgid "Multiple inheritance is not allowed."
msgstr "Багаторазове успадкування неможливе."

msgid "Inheritance uses the ``extends`` keyword::"
msgstr "При успадкуванні використовується ключове слово ``extends``:"

msgid ""
"If inheritance is not explicitly defined, the class will default to "
"inheriting :ref:`class_RefCounted`."
msgstr ""

msgid ""
"To check if a given instance inherits from a given class, the ``is`` keyword "
"can be used::"
msgstr ""
"Щоб перевірити, чи певний екземпляр успадковує певний клас, можна "
"використовувати ключове слово ``is``:"

#, fuzzy
msgid ""
"To call a function in a *super class* (i.e. one ``extend``-ed in your "
"current class), use the ``super`` keyword::"
msgstr ""
"Щоб викликати функцію з *батьківського класу* (який успадкований за "
"допомогою ``extend`` у вашому поточному класі), використовуйте ``.`` "
"(крапку) та ім'я функції:"

#, fuzzy
msgid ""
"This is especially useful because functions in extending classes replace "
"functions with the same name in their super classes. If you still want to "
"call them, you can use ``super``::"
msgstr ""
"Це особливо корисно, оскільки функції в розширених класах замінюють функції "
"своїх батьківських класів з тим самим іменем. Якщо ви все ще хочете "
"викликати їх, ви можете встановивши їм префікс ``.`` (крапку) (це як ключове "
"слово ``super`` в інших мовах):"

msgid ""
"If you need to call a different function from the super class, you can "
"specify the function name with the attribute operator::"
msgstr ""

msgid ""
"One of the common misconceptions is trying to override *non-virtual* engine "
"methods such as ``get_class()``, ``queue_free()``, etc. This is not "
"supported for technical reasons."
msgstr ""

msgid ""
"In Godot 3, you can *shadow* engine methods in GDScript, and it will work if "
"you call this method in GDScript. However, the engine will **not** execute "
"your code if the method is called inside the engine on some event."
msgstr ""

msgid ""
"In Godot 4, even shadowing may not always work, as GDScript optimizes native "
"method calls. Therefore, we added the ``NATIVE_METHOD_OVERRIDE`` warning, "
"which is treated as an error by default. We strongly advise against "
"disabling or ignoring the warning."
msgstr ""

msgid ""
"Note that this does not apply to virtual methods such as ``_ready()``, "
"``_process()`` and others (marked with the ``virtual`` qualifier in the "
"documentation and the names start with an underscore). These methods are "
"specifically for customizing engine behavior and can be overridden in "
"GDScript. Signals and notifications can also be useful for these purposes."
msgstr ""

msgid "Class constructor"
msgstr "Конструктор класу"

msgid ""
"The class constructor, called on class instantiation, is named ``_init``. If "
"you want to call the base class constructor, you can also use the ``super`` "
"syntax. Note that every class has an implicit constructor that it's always "
"called (defining the default values of class variables). ``super`` is used "
"to call the explicit constructor::"
msgstr ""

msgid "This is better explained through examples. Consider this scenario::"
msgstr "Це краще пояснюється на прикладах. Розглянемо цей скрипт:"

msgid "There are a few things to keep in mind here:"
msgstr "Тут слід зазначити таке:"

#, fuzzy
msgid ""
"If the inherited class (``state.gd``) defines a ``_init`` constructor that "
"takes arguments (``e`` in this case), then the inheriting class (``idle."
"gd``) *must* define ``_init`` as well and pass appropriate parameters to "
"``_init`` from ``state.gd``."
msgstr ""
"Якщо успадкований клас (предок) (``State.gd``) визначає конструктор "
"``_init``, який приймає аргументи (в даному випадку ``e``), то спадковий "
"клас (нащадок) (``Idle.gd``) повинен також визначити ``_init`` і передати "
"відповідні параметри в ``_init`` з ``State.gd``."

#, fuzzy
msgid ""
"``idle.gd`` can have a different number of arguments than the base class "
"``state.gd``."
msgstr ""
"``Idle.gd`` може мати іншу кількість аргументів, ніж батьківський клас "
"``State.gd``."

#, fuzzy
msgid ""
"In the example above, ``e`` passed to the ``state.gd`` constructor is the "
"same ``e`` passed in to ``idle.gd``."
msgstr ""
"У наведеному вище прикладі ``e`` передане конструктору ``State.gd`` те саме, "
"що й ``e`` передане в ``Idle.gd``."

#, fuzzy
msgid ""
"If ``idle.gd``'s ``_init`` constructor takes 0 arguments, it still needs to "
"pass some value to the ``state.gd`` base class, even if it does nothing. "
"This brings us to the fact that you can pass expressions to the base "
"constructor as well, not just variables, e.g.::"
msgstr ""
"Якщо ``_init`` конструктор в ``Idle.gd`` приймає 0 аргументів, він все одно "
"потребує якогось значення для батьківського класу ``State.gd``, навіть якщо "
"нічого з ним не робить. Це приводить нас до того, що ви можете передавати "
"літерали в базовий конструктор, а не лише змінні. Наприклад:"

#, fuzzy
msgid "Static constructor"
msgstr "Конструктор класу"

msgid ""
"A static constructor is a static function ``_static_init`` that is called "
"automatically when the class is loaded, after the static variables have been "
"initialized::"
msgstr ""

msgid ""
"A static constructor cannot take arguments and must not return any value."
msgstr ""

msgid "Inner classes"
msgstr "Внутрішні класи"

msgid ""
"A class file can contain inner classes. Inner classes are defined using the "
"``class`` keyword. They are instanced using the ``ClassName.new()`` function."
msgstr ""
"Файл класу може містити внутрішні класи. Внутрішні класи визначаються за "
"допомогою ключового слова ``class``. Вони встановлені за допомогою функції "
"``ClassName.new()``."

msgid "Classes as resources"
msgstr "Класи як ресурси"

msgid ""
"Classes stored as files are treated as :ref:`resources <class_GDScript>`. "
"They must be loaded from disk to access them in other classes. This is done "
"using either the ``load`` or ``preload`` functions (see below). Instancing "
"of a loaded class resource is done by calling the ``new`` function on the "
"class object::"
msgstr ""
"Класи, що зберігаються як файли, розглядаються як :ref:`ресурси "
"<class_GDScript>`. Вони повинні завантажуватися з диска, щоб до них був "
"доступ в інших класах. Це робиться за допомогою функцій ``load``, або "
"``preload``(дивіться нижче). Створення екземпляра завантаженого ресурсу "
"класу здійснюється викликом функції ``new`` на об'єкті класу:"

msgid "Exports"
msgstr "Експорт"

msgid ""
"Documentation about exports has been moved to :ref:`doc_gdscript_exports`."
msgstr "Документація про експорт переміщена до :ref:`doc_gdscript_exports`."

#, fuzzy
msgid "Properties (setters and getters)"
msgstr "Властивості (встановити/отримати)"

#, fuzzy
msgid ""
"Sometimes, you want a class' member variable to do more than just hold data "
"and actually perform some validation or computation whenever its value "
"changes. It may also be desired to encapsulate its access in some way."
msgstr ""
"Часто корисно знати, коли змінна класу змінюється з будь-якої причини. Також "
"можливо їх треба буде інкапсулювати."

msgid ""
"For this, GDScript provides a special syntax to define properties using the "
"``set`` and ``get`` keywords after a variable declaration. Then you can "
"define a code block that will be executed when the variable is accessed or "
"assigned."
msgstr ""

#, fuzzy
msgid "Example::"
msgstr "Приклад:"

msgid ""
"Unlike ``setget`` in previous Godot versions, the properties setter and "
"getter are **always** called (except as noted below), even when accessed "
"inside the same class (with or without prefixing with ``self.``). This makes "
"the behavior consistent. If you need direct access to the value, use another "
"variable for direct access and make the property code use that name."
msgstr ""

#, fuzzy
msgid "Alternative syntax"
msgstr "Внутрішні вершини"

msgid ""
"Also there is another notation to use existing class functions if you want "
"to split the code from the variable declaration or you need to reuse the "
"code across multiple properties (but you can't distinguish which property "
"the setter/getter is being called for)::"
msgstr ""

#, fuzzy
msgid "This can also be done in the same line::"
msgstr "Це можна зробити за допомогою наступних кроків:"

msgid ""
"The setter and getter must use the same notation, mixing styles for the same "
"variable is not allowed."
msgstr ""

msgid ""
"You cannot specify type hints for *inline* setters and getters. This is done "
"on purpose to reduce the boilerplate. If the variable is typed, then the "
"setter's argument is automatically of the same type, and the getter's return "
"value must match it. Separated setter/getter functions can have type hints, "
"and the type must match the variable's type or be a wider type."
msgstr ""

msgid "When setter/getter is not called"
msgstr ""

msgid ""
"When a variable is initialized, the value of the initializer will be written "
"directly to the variable. Including if the ``@onready`` annotation is "
"applied to the variable."
msgstr ""

msgid ""
"Using the variable's name to set it inside its own setter or to get it "
"inside its own getter will directly access the underlying member, so it "
"won't generate infinite recursion and saves you from explicitly declaring "
"another variable::"
msgstr ""

msgid "This also applies to the alternative syntax::"
msgstr ""

msgid ""
"The exception does **not** propagate to other functions called in the setter/"
"getter. For example, the following code **will** cause an infinite "
"recursion::"
msgstr ""

msgid "Tool mode"
msgstr "Режим інструмента"

#, fuzzy
msgid ""
"By default, scripts don't run inside the editor and only the exported "
"properties can be changed. In some cases, it is desired that they do run "
"inside the editor (as long as they don't execute game code or manually avoid "
"doing so). For this, the ``@tool`` annotation exists and must be placed at "
"the top of the file::"
msgstr ""
"За замовчуванням скрипти не запускаються всередині редактора, і можна "
"змінити лише експортовані властивості. У деяких випадках бажано, щоб вони "
"запускалися всередині редактора (до тих пір, поки вони не виконують ігровий "
"код або уникають цього вручну). Для цього існує ключове слово ``tool`` і "
"воно має бути розміщене у верхній частині файлу:"

msgid "See :ref:`doc_running_code_in_the_editor` for more information."
msgstr "Додаткову інформацію дивіться в :ref:`doc_running_code_in_the_editor`."

msgid ""
"Be cautious when freeing nodes with ``queue_free()`` or ``free()`` in a tool "
"script (especially the script's owner itself). As tool scripts run their "
"code in the editor, misusing them may lead to crashing the editor."
msgstr ""
"Будьте обережні, звільняючи вузли за допомогою ``queue_free()``, або "
"``free()``, в скрипті інструмента (особливо самого власника скрипту). "
"Оскільки скрипти інструментів виконують свій код у редакторі, неправильне "
"використання може призвести до збою редактора."

msgid "Memory management"
msgstr "Управління пам'яттю"

msgid ""
"Godot implements reference counting to free certain instances that are no "
"longer used, instead of a garbage collector, or requiring purely manual "
"management. Any instance of the :ref:`class_RefCounted` class (or any class "
"that inherits it, such as :ref:`class_Resource`) will be freed automatically "
"when no longer in use. For an instance of any class that is not a :ref:"
"`class_RefCounted` (such as :ref:`class_Node` or the base :ref:"
"`class_Object` type), it will remain in memory until it is deleted with "
"``free()`` (or ``queue_free()`` for Nodes)."
msgstr ""

msgid ""
"If a :ref:`class_Node` is deleted via ``free()`` or ``queue_free()``, all of "
"its children will also recursively be deleted."
msgstr ""

msgid ""
"To avoid reference cycles that can't be freed, a :ref:`class_WeakRef` "
"function is provided for creating weak references, which allow access to the "
"object without preventing a :ref:`class_RefCounted` from freeing. Here is an "
"example:"
msgstr ""

msgid ""
"Alternatively, when not using references, the "
"``is_instance_valid(instance)`` can be used to check if an object has been "
"freed."
msgstr ""
"Крім того, коли не використовуються посилання, "
"``is_instance_valid(instance)`` можуть бути використані для перевірки, чи "
"об'єкт звільнений."

msgid "Signals"
msgstr "Сигнали"

msgid ""
"Signals are a tool to emit messages from an object that other objects can "
"react to. To create custom signals for a class, use the ``signal`` keyword."
msgstr ""
"Сигнали - це інструмент для передачі повідомлень від об'єкта, на який можуть "
"реагувати інші об'єкти. Щоб створити спеціальні сигнали для класу, "
"використовуйте ключове слово ``signal``."

msgid ""
"Signals are a `Callback <https://en.wikipedia.org/wiki/"
"Callback_(computer_programming)>`_ mechanism. They also fill the role of "
"Observers, a common programming pattern. For more information, read the "
"`Observer tutorial <https://gameprogrammingpatterns.com/observer.html>`_ in "
"the Game Programming Patterns ebook."
msgstr ""
"Сигнали - це механізм `Callback <https://en.wikipedia.org/wiki/"
"Callback_(computer_programming)>`_ . Вони також виконують роль "
"спостерігачів, загальна схема програмування. Для отримання додаткової "
"інформації читайте `Observer tutorial <https://gameprogrammingpatterns.com/"
"observer.html>`_ у книзі \"Шаблони програмування ігор\"."

#, fuzzy
msgid ""
"You can connect these signals to methods the same way you connect built-in "
"signals of nodes like :ref:`class_Button` or :ref:`class_RigidBody3D`."
msgstr ""
"Ви можете підключити ці сигнали до методів так само, як ви підключаєте "
"вбудовані сигнали вузлів, таких як :ref:`class_Button`, або :ref:"
"`class_RigidBody`."

#, fuzzy
msgid ""
"In the example below, we connect the ``health_depleted`` signal from a "
"``Character`` node to a ``Game`` node. When the ``Character`` node emits the "
"signal, the game node's ``_on_character_health_depleted`` is called::"
msgstr ""
"У наведеному нижче прикладі ми підключаємо сигнал ``health_depleted`` від "
"вузла ``Character`` до вузла . Коли вузол ``Character`` випромінює сигнал, з "
"вузла ``Game`` викликається ``_on_Character_health_depleted``:"

msgid "You can emit as many arguments as you want along with a signal."
msgstr "Ви можете передати скільки завгодно аргументів разом із сигналом."

msgid ""
"Here is an example where this is useful. Let's say we want a life bar on "
"screen to react to health changes with an animation, but we want to keep the "
"user interface separate from the player in our scene tree."
msgstr ""
"Ось приклад, коли це корисно. Скажімо, ми хочемо, щоб панель життя на екрані "
"реагувала на зміни здоров'я за допомогою анімації, але ми хочемо, щоб "
"інтерфейс користувача був окремим від гравця в нашому дереві сцен."

#, fuzzy
msgid ""
"In our ``character.gd`` script, we define a ``health_changed`` signal and "
"emit it with :ref:`Signal.emit() <class_Signal_method_emit>`, and from a "
"``Game`` node higher up our scene tree, we connect it to the ``Lifebar`` "
"using the :ref:`Signal.connect() <class_Signal_method_connect>` method::"
msgstr ""
"У нашому скрипті ``Character.gd`` ми визначаємо сигнал ``health_changed`` і "
"випромінюємо його за допомогою :ref:`Object.emit_signal() "
"<class_Object_method_emit_signal>`, а з вузла ``Game`` вище нашого дерева "
"сцени ми підключаємо його до ``Lifebar`` за допомогою методу :ref:`Object."
"connect() <class_Object_method_connect>`:"

msgid ""
"In the ``Game`` node, we get both the ``Character`` and ``Lifebar`` nodes, "
"then connect the character, that emits the signal, to the receiver, the "
"``Lifebar`` node in this case."
msgstr ""
"У вузлі ``Game`` ми отримуємо вузли ``Character`` і ``Lifebar``, і "
"підключаємо вузол, який випромінює сигнал, до приймача, у цьому випадку "
"вузол ``Lifebar``."

msgid ""
"This allows the ``Lifebar`` to react to health changes without coupling it "
"to the ``Character`` node."
msgstr ""
"Це дозволяє ``Lifebar`` реагувати на зміни стану здоров’я, без з'єднання з "
"вузлом ``Character``."

msgid ""
"You can write optional argument names in parentheses after the signal's "
"definition::"
msgstr ""
"Ви можете записати необов'язкові імена аргументів у дужки після визначення "
"сигналу::"

msgid ""
"These arguments show up in the editor's node dock, and Godot can use them to "
"generate callback functions for you. However, you can still emit any number "
"of arguments when you emit signals; it's up to you to emit the correct "
"values."
msgstr ""
"Ці аргументи відображаються на панелі вузла редактора, і Godot може "
"використовувати їх для створення функцій зворотного виклику для вас. Однак "
"ви можете випромінювати будь-яку кількість аргументів, коли ви випромінюєте "
"сигнали; Ви повинні випромінювати правильні значення."

msgid ""
"GDScript can bind an array of values to connections between a signal and a "
"method. When the signal is emitted, the callback method receives the bound "
"values. These bound arguments are unique to each connection, and the values "
"will stay the same."
msgstr ""
"GDScript може прив'язувати масив значень до з'єднань між сигналом та "
"методом. Коли сигнал випромінюється, метод зворотного виклику отримує "
"зв'язані значення. Ці пов'язані аргументи є унікальними для кожного "
"з'єднання, і значення залишаться тими самими."

msgid ""
"You can use this array of values to add extra constant information to the "
"connection if the emitted signal itself doesn't give you access to all the "
"data that you need."
msgstr ""
"Ви можете використовувати цей масив значень, щоб додати додаткову постійну "
"інформацію до з'єднання, якщо сам випромінений сигнал не надає вам доступ до "
"всіх необхідних вам даних."

msgid ""
"Building on the example above, let's say we want to display a log of the "
"damage taken by each character on the screen, like ``Player1 took 22 damage."
"``. The ``health_changed`` signal doesn't give us the name of the character "
"that took damage. So when we connect the signal to the in-game console, we "
"can add the character's name in the binds array argument::"
msgstr ""
"Зіпремось на наведений вище приклад, скажімо, ми хочемо відобразити на "
"екрані журнал пошкоджень, заподіяних кожним персонажем, як ``Гравець_1 "
"отримав 22 пошкодження.``. Сигнал не дає нам ім'я персонажа , який отримав "
"пошкодження. Отже, коли ми підключаємо сигнал ``health_changed`` до ігрової "
"консолі, ми можемо додати ім'я персонажа в аргументі поєднаного масиву:"

msgid ""
"Our ``BattleLog`` node receives each element in the binds array as an extra "
"argument::"
msgstr ""
"Наш вузол ``BattleLog`` отримує кожен елемент прив'язаного масиву, як "
"додатковий аргумент:"

#, fuzzy
msgid "Awaiting for signals or coroutines"
msgstr "Створення просторових елементів"

msgid ""
"The ``await`` keyword can be used to create `coroutines <https://en."
"wikipedia.org/wiki/Coroutine>`_ which wait until a signal is emitted before "
"continuing execution. Using the ``await`` keyword with a signal or a call to "
"a function that is also a coroutine will immediately return the control to "
"the caller. When the signal is emitted (or the called coroutine finishes), "
"it will resume execution from the point on where it stopped."
msgstr ""

msgid ""
"For example, to stop execution until the user presses a button, you can do "
"something like this::"
msgstr ""

msgid ""
"In this case, the ``wait_confirmation`` becomes a coroutine, which means "
"that the caller also needs to await for it::"
msgstr ""

msgid ""
"Note that requesting a coroutine's return value without ``await`` will "
"trigger an error::"
msgstr ""

msgid ""
"However, if you don't depend on the result, you can just call it "
"asynchronously, which won't stop execution and won't make the current "
"function a coroutine::"
msgstr ""

msgid ""
"If you use await with an expression that isn't a signal nor a coroutine, the "
"value will be returned immediately and the function won't give the control "
"back to the caller::"
msgstr ""

msgid ""
"This also means that returning a signal from a function that isn't a "
"coroutine will make the caller await on that signal::"
msgstr ""

msgid ""
"Unlike ``yield`` in previous Godot versions, you cannot obtain the function "
"state object. This is done to ensure type safety. With this type safety in "
"place, a function cannot say that it returns an ``int`` while it actually "
"returns a function state object during runtime."
msgstr ""

msgid "Assert keyword"
msgstr "Ключове слово Assert"

msgid ""
"The ``assert`` keyword can be used to check conditions in debug builds. "
"These assertions are ignored in non-debug builds. This means that the "
"expression passed as argument won't be evaluated in a project exported in "
"release mode. Due to this, assertions must **not** contain expressions that "
"have side effects. Otherwise, the behavior of the script would vary "
"depending on whether the project is run in a debug build."
msgstr ""
"Ключове слово ``assert`` може бути використано для перевірки умов в "
"налагоджувальних збірках. Ці твердження ігноруються у не налагоджуваних "
"збірках. Це означає, що вираз, переданий як аргумент, не буде оцінено в "
"проєкті, експортованому в режимі випуску. Через це твердження повинні **не** "
"містити виразів, які мають побічні ефекти. В іншому випадку поведінка "
"скрипту може змінюватись залежно від того в якій збірці запускається проєкт."

msgid ""
"When running a project from the editor, the project will be paused if an "
"assertion error occurs."
msgstr ""
"Під час запуску проєкту з редактора проєкт буде призупинено, якщо станеться "
"помилка твердження."

msgid ""
"You can optionally pass a custom error message to be shown if the assertion "
"fails::"
msgstr ""

msgid "Translation status"
msgstr "Стан перекладу"
