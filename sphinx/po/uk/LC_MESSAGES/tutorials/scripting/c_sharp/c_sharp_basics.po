# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# basics"
msgstr "Основи C#"

msgid "Introduction"
msgstr "Вступ"

#, fuzzy
msgid ""
"This page provides a brief introduction to C#, both what it is and how to "
"use it in Godot. Afterwards, you may want to look at :ref:`how to use "
"specific features <doc_c_sharp_features>`, read about the :ref:`differences "
"between the C# and the GDScript API <doc_c_sharp_differences>`, and "
"(re)visit the :ref:`Scripting section <doc_scripting>` of the step-by-step "
"tutorial."
msgstr ""
"На цій сторінці подано короткий вступ до C#, що це таке, та як його "
"використовувати в Godot. Після цього, можливо, ви захочете ознайомитись із :"
"ref:`використанням конкретних функцій <doc_c_sharp_features>`, прочитати "
"про :ref:`відмінності між C# та API GDScript<doc_c_sharp_differences>` та "
"(повторно) переглянути :ref:`розділ створення скриптів<doc_scripting>` "
"покрокового підручника."

msgid ""
"C# is a high-level programming language developed by Microsoft. In Godot, it "
"is implemented with .NET 6.0."
msgstr ""

msgid ""
"Projects written in C# using Godot 4 currently cannot be exported to the web "
"platform. To use C# on the web platform, consider Godot 3 instead. Android "
"and iOS platform support is available as of Godot 4.2, but is experimental "
"and :ref:`some limitations apply <doc_c_sharp_platforms>`."
msgstr ""

msgid ""
"This is **not** a full-scale tutorial on the C# language as a whole. If you "
"aren't already familiar with its syntax or features, see the `Microsoft C# "
"guide <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ or look for a "
"suitable introduction elsewhere."
msgstr ""
"Це **не** повномасштабний підручник з мови C#. Якщо ви ще не знайомі з її "
"синтаксисом, або можливостями, перегляньте `посібник Microsoft C# <https://"
"docs.microsoft.com/en-us/dotnet/csharp/index>`_ або знайдіть відповідний "
"вступ у іншому місці."

msgid "Prerequisites"
msgstr "Передумови"

#, fuzzy
msgid ""
"Godot bundles the parts of .NET needed to run already compiled games. "
"However, Godot does not bundle the tools required to build and compile "
"games, such as MSBuild and the C# compiler. These are included in the .NET "
"SDK, and need to be installed separately."
msgstr ""
"Godot поєднує в собі частини Mono, необхідні для запуску вже складених ігор, "
"однак Godot не включає інструменти, необхідні для побудови та компіляції "
"ігор, такі як MSBuild. Ці інструменти потрібно встановлювати окремо. "
"Потрібні інструменти входять до складу .NET Core SDK. MSBuild також входить "
"до складу Mono SDK, але він не може створювати проєкти C# з новим форматом "
"``csproj``, тому для Godot 3.2.3+ потрібен .NET Core SDK."

#, fuzzy
msgid ""
"In summary, you must have installed the .NET SDK **and** the .NET-enabled "
"version of Godot."
msgstr ""
"В результаті, ви повинні встановити .NET Core SDK **та** версію Godot, що "
"підтримує Mono."

#, fuzzy
msgid ""
"Download and install the latest stable version of the SDK from the `.NET "
"download page <https://dotnet.microsoft.com/download>`__."
msgstr ""
"Встановіть останню стабільну версію `.NET Core SDK <https://dotnet.microsoft."
"com/download/dotnet-core>`__ (3.1 на момент написання)."

msgid ""
"Be sure to install the 64-bit version of the SDK(s) if you are using the 64-"
"bit version of Godot."
msgstr ""
"Обов’язково встановіть 64-бітну версію SDK, якщо ви використовуєте 64-бітну "
"версію Godot."

#, fuzzy
msgid ""
"If you are building Godot from source, make sure to follow the steps to "
"enable .NET support in your build as outlined in the :ref:"
"`doc_compiling_with_dotnet` page."
msgstr ""
"Якщо ви монтуєте Godot із джерела, встановіть останню стабільну версію `Mono "
"<https://www.mono-project.com/download/stable/>`__, та дотримуйтесь "
"інструкцій, щоб увімкнути підтримку Mono у вашій збірці, як зазначено на "
"сторінці :ref:`doc_compiling_with_mono`."

msgid "Configuring an external editor"
msgstr "Налаштування зовнішнього редактора"

#, fuzzy
msgid ""
"C# support in Godot's built-in script editor is minimal. Consider using an "
"external IDE or editor, such as  `Visual Studio Code <https://code."
"visualstudio.com/>`__ or MonoDevelop. These provide autocompletion, "
"debugging, and other useful features for C#. To select an external editor in "
"Godot, click on **Editor → Editor Settings** and scroll down to **Dotnet**. "
"Under **Dotnet**, click on **Editor**, and select your external editor of "
"choice. Godot currently supports the following external editors:"
msgstr ""
"Підтримка C# в редакторі скриптів Godot мінімальна. Подумайте про "
"використання зовнішнього IDE, або редактора, наприклад `Visual Studio "
"Code<https://code.visualstudio.com/>`_ або MonoDevelop. Вони забезпечують "
"автоматичне завершення, налагодження та інші корисні функції для C#. Щоб "
"вибрати зовнішній редактор у Godot, натисніть **Редактор → Параметри "
"редактора** та прогорніть униз до **Mono**. У розділі **Mono** натисніть на "
"**Editor**(Редактор) та виберіть зовнішній редактор на вибір. На даний "
"момент Godot підтримує такі зовнішні редактори:"

#, fuzzy
msgid "Visual Studio 2022"
msgstr "Visual Studio 2019"

msgid "Visual Studio Code"
msgstr "Visual Studio або VS Code"

msgid "MonoDevelop"
msgstr "МоноДевелопмент"

msgid "Visual Studio for Mac"
msgstr "Visual Studio для Mac"

msgid "JetBrains Rider"
msgstr ""

msgid "See the following sections for how to configure an external editor:"
msgstr ""
"Перегляньте наступні розділи, щоб дізнатися, як налаштувати зовнішній "
"редактор:"

msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`JetBrains Rider <https://www.jetbrains.com/rider/download>`__."
msgstr ""
"Прочитавши розділ \"Передумови\", ви можете завантажити та встановити "
"`JetBrains Rider <https://www.jetbrains.com/rider/download>`__."

msgid "In Godot's **Editor → Editor Settings** menu:"
msgstr "В меню Godot **Редактор → Параметри редактора**:"

#, fuzzy
msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **JetBrains Rider**."
msgstr ""
"Встановіть **Mono** -> **Editor** -> **External Editor** на **JetBrains "
"Rider**."

msgid "In Rider:"
msgstr "В Rider:"

msgid "Set **MSBuild version** to **.NET Core**."
msgstr "Встановіть **MSBuild version** на **.NET Core**."

msgid "Install the **Godot support** plugin."
msgstr "Встановіть плагін **Godot support**."

msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`Visual Studio Code <https://code.visualstudio.com/download>`__ (aka VS "
"Code)."
msgstr ""
"Прочитавши розділ \"Передумови\", ви можете завантажити та встановити "
"`Visual Studio Code <https://code.visualstudio.com/download>`__ (він же VS "
"Code)."

#, fuzzy
msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **Visual Studio "
"Code**."
msgstr ""
"Встановіть **Mono** -> **Editor** -> **External Editor**на **Visual Studio "
"Code**."

msgid "In Visual Studio Code:"
msgstr "В Visual Studio Code:"

msgid ""
"Install the `C# <https://marketplace.visualstudio.com/items?itemName=ms-"
"dotnettools.csharp>`__ extension."
msgstr ""
"Встановіть розширення `C# <https://marketplace.visualstudio.com/items?"
"itemName=ms-dotnettools.csharp>`__."

msgid ""
"If you are using Linux you need to install the `Mono SDK <https://www.mono-"
"project.com/download/stable/#download-lin>`__ for the C# tools plugin to "
"work."
msgstr ""

msgid ""
"To configure a project for debugging, you need a ``tasks.json`` and ``launch."
"json`` file in the ``.vscode`` folder with the necessary configuration. An "
"example configuration can be found `here <https://github.com/godotengine/"
"godot-csharp-vscode/issues/43#issuecomment-1258321229>`__ . In the ``launch."
"json`` file, make sure the ``program`` parameter in the relevant "
"configuration points to your Godot executable, either by changing it to the "
"path of the executable or by defining a ``GODOT4`` environment variable that "
"points to the executable. Now, when you start the debugger in Visual Studio "
"Code, your Godot project will run."
msgstr ""

msgid "Visual Studio (Windows only)"
msgstr "Visual Studio (тільки Windows)"

msgid ""
"Download and install the latest version of `Visual Studio <https://"
"visualstudio.microsoft.com/downloads/>`__. Visual Studio will include the "
"required SDKs if you have the correct workloads selected, so you don't need "
"to manually install the things listed in the \"Prerequisites\" section."
msgstr ""
"Завантажте та встановіть останню версію `Visual Studio <https://visualstudio."
"microsoft.com/downloads/>`__. Visual Studio включатиме необхідні пакети SDK, "
"якщо ви вибрали правильні робочі навантаження, тому вам не потрібно вручну "
"встановлювати речі, перелічені в розділі \"Передумови\"."

#, fuzzy
msgid "While installing Visual Studio, select this workload:"
msgstr "Під час встановлення Visual Studio виберіть такі робочі навантаження:"

#, fuzzy
msgid ".NET desktop development"
msgstr "Розробка"

#, fuzzy
msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **Visual Studio**."
msgstr ""
"Встановіть **Mono** -> **Editor** -> **External Editor** на **Visual "
"Studio**."

msgid ""
"If you see an error like \"Unable to find package Godot.NET.Sdk\", your "
"NuGet configuration may be incorrect and need to be fixed."
msgstr ""

msgid ""
"A simple way to fix the NuGet configuration file is to regenerate it. In a "
"file explorer window, go to ``%AppData%\\NuGet``. Rename or delete the "
"``NuGet.Config`` file. When you build your Godot project again, the file "
"will be automatically created with default values."
msgstr ""

msgid "Creating a C# script"
msgstr "Створення скрипту C#"

msgid ""
"After you successfully set up C# for Godot, you should see the following "
"option when selecting **Attach Script** in the context menu of a node in "
"your scene:"
msgstr ""
"Після того, як ви успішно налаштували C# для Godot, ви повинні побачити "
"наступну опцію при виборі **Attach Script** у контекстному меню вузла на "
"вашій сцені:"

#, fuzzy
msgid ""
"Note that while some specifics change, most concepts work the same when "
"using C# for scripting. If you're new to Godot, you may want to follow the "
"tutorials on :ref:`doc_scripting` at this point. While some documentation "
"pages still lack C# examples, most notions can be transferred from GDScript."
msgstr ""
"Зауважте, що хоча деякі специфіки змінилися, більшість концепцій, при "
"використанні C# для скриптів, залишаються тими самими. Якщо ви новачок у "
"Godot, ви, можливо, захочете познайомитися із уроками :ref:`doc_scripting`. "
"Хоча в деяких місцях документації ще не вистачає прикладів C#, більшість "
"концепцій можна легко перенести з GDScript."

msgid "Project setup and workflow"
msgstr "Налаштування проєкту та робочий процес"

#, fuzzy
msgid ""
"When you create the first C# script, Godot initializes the C# project files "
"for your Godot project. This includes generating a C# solution (``.sln``) "
"and a project file (``.csproj``), as well as some utility files and folders "
"(``.godot/mono``). All of these but ``.godot/mono`` are important and should "
"be committed to your version control system. Everything under ``.godot`` can "
"be safely added to the ignore list of your VCS. When troubleshooting, it can "
"sometimes help to delete the ``.godot/mono`` folder and let it regenerate."
msgstr ""
"Під час створення першого скрипту C# Godot ініціалізує файли проєкту C# для "
"вашого проєкту Godot. Сюди входить генерація рішення C# (``.sln``) та файлу "
"проєкту (``.csproj``), а також деякі утилітні файли та папки (``.mono`` та "
"``Properties/AssemblyInfo.cs``). Все це, але ``.mono`` важливе і має бути "
"присвячене вашій системі контролю версій. ``.mono`` можна безпечно додати до "
"списку ігнорування вашого VCS. Під час усунення несправностей іноді може "
"допомогти видалення папки ``.mono``, вона мала б само-відновитись."

msgid "Example"
msgstr "Приклад"

msgid ""
"Here's a blank C# script with some comments to demonstrate how it works."
msgstr ""
"Ось порожній скрипт C# з деякими коментарями, щоб продемонструвати, як він "
"працює."

#, fuzzy
msgid ""
"As you can see, functions normally in global scope in GDScript like Godot's "
"``print`` function are available in the ``GD`` static class which is part of "
"the ``Godot`` namespace. For a full list of methods in the ``GD`` class, see "
"the class reference pages for :ref:`@GDScript <class_@gdscript>` and :ref:"
"`@GlobalScope <class_@globalscope>`."
msgstr ""
"Як бачите, звичайні функції з глобальною областю в GDScript, такі як функція "
"``print``, доступні в класі ``GD``, який є частиною простору імен Godot. Щоб "
"переглянути список методів у класі ``GD``, див. Довідкові сторінки класів "
"для :ref:`@GDScript<class_@gdscript>` та :ref:`@GlobalScope "
"<class_@globalscope>`."

msgid ""
"Keep in mind that the class you wish to attach to your node should have the "
"same name as the ``.cs`` file. Otherwise, you will get the following error:"
msgstr ""
"Майте на увазі, що клас, який ви хочете приєднати до вашого вузла, повинен "
"мати ту саму назву, що й файл ``.cs``. В іншому випадку ви отримаєте "
"наступну помилку:"

msgid "*\"Cannot find class XXX for script res://XXX.cs\"*"
msgstr ""

msgid "General differences between C# and GDScript"
msgstr "Основні відмінності між C# і GDScript"

msgid ""
"The C# API uses ``PascalCase`` instead of ``snake_case`` in GDScript/C++. "
"Where possible, fields and getters/setters have been converted to "
"properties. In general, the C# Godot API strives to be as idiomatic as is "
"reasonably possible."
msgstr ""
"API C# використовує ``PascalCase`` замість ``snake_case`` в GDScript/C ++. "
"Там де можливо, поля та гетери/сетери були перетворені у властивості. "
"Взагалі API C# Godot прагне бути максимально ідіоматичним, наскільки це "
"можливо."

msgid "For more information, see the :ref:`doc_c_sharp_differences` page."
msgstr ""
"Для отримання додаткової інформації дивіться сторінку :ref:"
"`doc_c_sharp_differences`."

#, fuzzy
msgid ""
"You need to (re)build the project assemblies whenever you want to see new "
"exported variables or signals in the editor. This build can be manually "
"triggered by clicking the **Build** button in the top right corner of the "
"editor."
msgstr ""
"Якщо ви використовуєте C#, вам потрібно (пере)будувати збірки проєктів, коли "
"ви хочете бачити нові змінні експорту, чи сигнали. Цю збірку можна вручну "
"запустити, натиснувши слово \"Mono\" внизу вікна редактора, щоб відкрити "
"панель Mono, а потім натиснути кнопку \"Build Project\"."

msgid ""
"You will also need to rebuild the project assemblies to apply changes in "
"\"tool\" scripts."
msgstr ""
"Вам також потрібно буде перезбирувати збірки проєктів, щоб застосувати зміни "
"в скриптах \"інструментів\"."

msgid "Current gotchas and known issues"
msgstr "Поточні обмеження та відомі проблеми"

#, fuzzy
msgid ""
"As C# support is quite new in Godot, there are some growing pains and things "
"that need to be ironed out. Below is a list of the most important issues you "
"should be aware of when diving into C# in Godot, but if in doubt, also take "
"a look over the official `issue tracker for .NET issues <https://github.com/"
"godotengine/godot/labels/topic%3Adotnet>`_."
msgstr ""
"Оскільки підтримка C# є абсолютно новою у Godot, є деякі дитячі болячки та "
"речі, які потрібно випрасувати. Нижче наведено перелік найважливіших "
"проблем, про які слід пам'ятати при використанні C# в Godot, але якщо ви "
"сумніваєтесь, перегляньте офіційний `випуск трекера для випусків Mono "
"<https://github.com/godotengine/godot/labels/topic%3Amono>`_."

msgid ""
"Writing editor plugins is possible, but it is currently quite convoluted."
msgstr "Написання плагінів редактора можливе, але наразі це досить складно."

msgid ""
"State is currently not saved and restored when hot-reloading, with the "
"exception of exported variables."
msgstr ""
"Наразі стан не зберігається та не відновлюється під час гарячого "
"перезавантаження, за винятком експортованих змінних."

msgid ""
"Attached C# scripts should refer to a class that has a class name that "
"matches the file name."
msgstr ""
"Вкладені скрипти C# повинні стосуватися класу, який має ім'я класу, яке "
"відповідає імені файлу."

#, fuzzy
msgid ""
"There are some methods such as ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` and signal connection method ``Connect()`` that rely on "
"Godot's ``snake_case`` API naming conventions. So when using e.g. "
"``CallDeferred(\"AddChild\")``, ``AddChild`` will not work because the API "
"is expecting the original ``snake_case`` version ``add_child``. However, you "
"can use any custom properties or methods without this limitation. Prefer "
"using the exposed ``StringName`` in the ``PropertyName``, ``MethodName`` and "
"``SignalName`` to avoid extra ``StringName`` allocations and worrying about "
"snake_case naming."
msgstr ""
"Існують деякі методи, такі як ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` і метод з'єднання сигналів ``Connect()``, які "
"покладаються на умови іменування API Godot ``snake_case``. Тому при "
"використанні, наприклад ``CallDeferred(\"AddChild\")``, ``AddChild`` не буде "
"працювати, оскільки API очікує версію ``snake_case``, тобто ``add_child``. "
"Однак ви можете використовувати будь-які власні властивості, або методи, без "
"цього обмеження."

#, fuzzy
msgid ""
"As of Godot 4.0, exporting .NET projects is supported for desktop platforms "
"(Linux, Windows and macOS). Other platforms will gain support in future 4.x "
"releases."
msgstr ""
"Експорт проєктів Mono підтримується лише для настільних платформ (Linux, "
"Windows та macOS), Android, HTML5 та iOS. Тільки UWP наразі ще не "
"підтримується."

#, fuzzy
msgid "Common pitfalls"
msgstr "Коментарі"

msgid ""
"You might encounter the following error when trying to modify some values in "
"Godot objects, e.g. when trying to change the X coordinate of a ``Node2D``:"
msgstr ""

msgid ""
"This is perfectly normal. Structs (in this example, a ``Vector2``) in C# are "
"copied on assignment, meaning that when you retrieve such an object from a "
"property or an indexer, you get a copy of it, not the object itself. "
"Modifying said copy without reassigning it afterwards won't achieve anything."
msgstr ""

msgid ""
"The workaround is simple: retrieve the entire struct, modify the value you "
"want to modify, and reassign the property."
msgstr ""

msgid ""
"Since C# 10, it is also possible to use `with expressions <https://learn."
"microsoft.com/en-us/dotnet/csharp/language-reference/operators/with-"
"expression>`_ on structs, allowing you to do the same thing in a single line."
msgstr ""

msgid ""
"You can read more about this error on the `C# language reference <https://"
"learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/"
"cs1612>`_."
msgstr ""

msgid "Performance of C# in Godot"
msgstr "Продуктивність C# у Godot"

#, fuzzy
msgid ""
"According to some preliminary `benchmarks <https://github.com/cart/godot3-"
"bunnymark>`_, the performance of C# in Godot — while generally in the same "
"order of magnitude — is roughly **~4×** that of GDScript in some naive "
"cases. C++ is still a little faster; the specifics are going to vary "
"according to your use case. GDScript is likely fast enough for most general "
"scripting workloads."
msgstr ""
"Згідно з деякими попередніми `benchmarks <https://github.com/cart/godot3-"
"bunnymark>`_, ефективність C# в Godot - хоча в цілому тої самої величини - в "
"деяких наївних випадках приблизно в 4-ри рази вище, ніж у GDScript. C++ все "
"ще трохи швидший; характеристики залежать від Вашого випадку використання. "
"GDScript, ймовірно, досить швидкий для більшості загальних скриптів. C# "
"швидше, але вимагає дорогого марширування в діалозі з Godot."

msgid ""
"Most properties of Godot C# objects that are based on ``GodotObject`` (e.g. "
"any ``Node`` like ``Control`` or ``Node3D`` like ``Camera3D``) require "
"native (interop) calls as they talk to Godot's C++ core. Consider assigning "
"values of such properties into a local variable if you need to modify or "
"read them multiple times at a single code location:"
msgstr ""

msgid ""
"Passing raw arrays (such as ``byte[]``) or ``string`` to Godot's C# API "
"requires marshalling which is comparatively pricey."
msgstr ""

msgid ""
"The implicit conversion from ``string`` to ``NodePath`` or ``StringName`` "
"incur both the native interop and marshalling costs as the ``string`` has to "
"be marshalled and passed to the respective native constructor."
msgstr ""

msgid "Using NuGet packages in Godot"
msgstr "Використання пакетів Nuget у Godot"

msgid ""
"`NuGet <https://www.nuget.org/>`_ packages can be installed and used with "
"Godot, as with any C# project. Many IDEs are able to add packages directly. "
"They can also be added manually by adding the package reference in the ``."
"csproj`` file located in the project root:"
msgstr ""
"Пакети `NuGet<https://www.nuget.org/>`_ можна встановлювати та "
"використовувати з Godot, як і будь-який проєкт C#. Багато IDE можуть "
"додавати пакети безпосередньо. Їх також можна додати вручну, додавши "
"посилання на пакет у файл ``.csproj``, що знаходиться в корені проєкту:"

msgid ""
"As of Godot 3.2.3, Godot automatically downloads and sets up newly added "
"NuGet packages the next time it builds the project."
msgstr ""
"Від Godot 3.2.3, Godot автоматично завантажує та налаштовує нещодавно додані "
"пакети NuGet під час наступного створення проєкту."

msgid "Profiling your C# code"
msgstr "Профілювання коду C #"

msgid ""
"The following tools may be used for performance and memory profiling of your "
"managed code:"
msgstr ""

msgid "JetBrains Rider with dotTrace/dotMemory plugin."
msgstr ""

msgid "Standalone JetBrains dotTrace/dotMemory."
msgstr ""

msgid "Visual Studio."
msgstr "Візуальна Studio."

msgid ""
"Profiling managed and unmanaged code at once is possible with both JetBrains "
"tools and Visual Studio, but limited to Windows."
msgstr ""

msgid "Translation status"
msgstr "Стан перекладу"
