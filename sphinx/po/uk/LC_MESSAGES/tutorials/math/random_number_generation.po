# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Random number generation"
msgstr "Генерація випадкових чисел"

msgid ""
"Many games rely on randomness to implement core game mechanics. This page "
"guides you through common types of randomness and how to implement them in "
"Godot."
msgstr ""
"Багато ігор покладаються на випадковість для реалізації основної механіки "
"гри. Ця сторінка допоможе вам ознайомитися з поширеними типами випадковості "
"та тим, як їх реалізувати в Godot."

#, fuzzy
msgid ""
"After giving you a brief overview of useful functions that generate random "
"numbers, you will learn how to get random elements from arrays, "
"dictionaries, and how to use a noise generator in GDScript. Lastly, we'll "
"take a look at cryptographically secure random number generation and how it "
"differs from typical random number generation."
msgstr ""
"Після знайомства з корисними функціями, які генерують випадкові числа, ви "
"дізнаєтеся, як отримати випадкові елементи з масивів, словників, і як "
"використовувати генератор шуму в GDScript."

msgid ""
"Computers cannot generate \"true\" random numbers. Instead, they rely on "
"`pseudorandom number generators <https://en.wikipedia.org/wiki/"
"Pseudorandom_number_generator>`__ (PRNGs)."
msgstr ""
"Комп'ютери не можуть генерувати \"справжні\" випадкові числа. Замість цього "
"вони покладаються на `генератори псевдовипадкових чисел<https://en.wikipedia."
"org/wiki/Pseudorandom_number_generator>`__ (PRNG-и)."

msgid ""
"Godot internally uses the `PCG Family <https://www.pcg-random.org/>`__ of "
"pseudorandom number generators."
msgstr ""

msgid "Global scope versus RandomNumberGenerator class"
msgstr "Глобальна область та клас RandomNumberGenerator"

msgid ""
"Godot exposes two ways to generate random numbers: via *global scope* "
"methods or using the :ref:`class_RandomNumberGenerator` class."
msgstr ""
"Godot пропонує два способи генерації випадкових чисел: за допомогою "
"застосування методів *глобальної області*, або за допомогою класу :ref:"
"`class_RandomNumberGenerator` *(Генератор Випадкових Чисел)*."

msgid ""
"Global scope methods are easier to set up, but they don't offer as much "
"control."
msgstr ""
"Глобальні методи легше налаштувати, але вони не пропонують багато контролю."

msgid ""
"RandomNumberGenerator requires more code to use, but allows creating "
"multiple instances, each with their own seed and state."
msgstr ""

msgid ""
"This tutorial uses global scope methods, except when the method only exists "
"in the RandomNumberGenerator class."
msgstr ""
"Ця стаття використовує методи глобальної області, за винятком випадків, коли "
"метод існує лише в класі RandomNumberGenerator."

msgid "The randomize() method"
msgstr "Метод randomize()"

msgid ""
"Since Godot 4.0, the random seed is automatically set to a random value when "
"the project starts. This means you don't need to call ``randomize()`` in "
"``_ready()`` anymore to ensure that results are random across project runs. "
"However, you can still use ``randomize()`` if you want to use a specific "
"seed number, or generate it using a different method."
msgstr ""

#, fuzzy
msgid ""
"In global scope, you can find a :ref:`randomize() "
"<class_@GlobalScope_method_randomize>` method. **This method should be "
"called only once when your project starts to initialize the random seed.** "
"Calling it multiple times is unnecessary and may impact performance "
"negatively."
msgstr ""
"У глобальній області можна знайти метод :ref:`randomize() "
"<class_@GDScript_method_randomize>`. **Цей метод слід викликати тільки один "
"раз, коли ваш проект починає ініціалізувати випадкове початкове значення.** "
"Викликати його кілька разів непотрібно, це може негативно вплинути на "
"продуктивність."

msgid ""
"Putting it in your main scene script's ``_ready()`` method is a good choice:"
msgstr ""
"Найкраще буде розмістити його в скрипті головної сцени в методі ``_ready()``:"

#, fuzzy
msgid ""
"You can also set a fixed random seed instead using :ref:`seed() "
"<class_@GlobalScope_method_seed>`. Doing so will give you *deterministic* "
"results across runs:"
msgstr ""
"Ви також можете встановити фіксоване випадкове початкове значення "
"використовуючи :ref:`seed() <class_@GDScript_method_seed>`. Це дасть вам "
"*детерміновані* результати для всіх запусків:"

msgid ""
"When using the RandomNumberGenerator class, you should call ``randomize()`` "
"on the instance since it has its own seed:"
msgstr ""
"Використовуючи клас RandomNumberGenerator, ви повинні викликати "
"``randomize()`` на екземплярі, оскільки він має власне початкове значення:"

msgid "Getting a random number"
msgstr "Отримання випадкового числа"

msgid ""
"Let's look at some of the most commonly used functions and methods to "
"generate random numbers in Godot."
msgstr ""
"Давайте розглянемо деякі з найбільш часто використовуваних функцій і методів "
"для генерування випадкових чисел у Godot."

#, fuzzy
msgid ""
"The function :ref:`randi() <class_@GlobalScope_method_randi>` returns a "
"random number between 0 and 2^32-1. Since the maximum value is huge, you "
"most likely want to use the modulo operator (``%``) to bound the result "
"between 0 and the denominator:"
msgstr ""
"Функція :ref:`randi() <class_@GDScript_method_randi>` повертає випадкове "
"число від 0 до 2^32-1. Оскільки максимальне значення величезне, ви, швидше "
"за все, захочете використовувати оператор модуля (``%``), щоб зв’язати "
"результат між 0 і знаменником:"

#, fuzzy
msgid ""
":ref:`randf() <class_@GlobalScope_method_randf>` returns a random floating-"
"point number between 0 and 1. This is useful to implement a :ref:"
"`doc_random_number_generation_weighted_random_probability` system, among "
"other things."
msgstr ""
":ref:`randf() <class_@GDScript_method_randf>` повертає випадкове число з "
"десятковою комою від 0 до 1. Це корисно для реалізації системи :ref:"
"`doc_random_number_generation_weighted_random_probability`."

msgid ""
":ref:`randfn() <class_RandomNumberGenerator_method_randfn>` returns a random "
"floating-point number following a `normal distribution <https://en.wikipedia."
"org/wiki/Normal_distribution>`__. This means the returned value is more "
"likely to be around the mean (0.0 by default), varying by the deviation (1.0 "
"by default):"
msgstr ""
":ref:`randfn() <class_RandomNumberGenerator_method_randfn>` повертає "
"випадкове число з десятковою комою після `нормального розподілу<https://en."
"wikipedia.org/wiki/Normal_distribution>`__. Це означає, що повернуте "
"значення, швидше за все, буде приблизно середнього значення (0,0 за "
"замовчуванням), варійованим в межах відхилення (1,0 за замовчуванням):"

#, fuzzy
msgid ""
":ref:`randf_range() <class_@GlobalScope_method_randf_range>` takes two "
"arguments ``from`` and ``to``, and returns a random floating-point number "
"between ``from`` and ``to``:"
msgstr ""
":ref:`rand_range() <class_@GDScript_method_rand_range>` приймає два "
"аргументи ``from`` і ``to``, і повертає випадкове число з десятковою комою "
"між ``from`` і ``to``:"

msgid ""
":ref:`RandomNumberGenerator.randi_range() "
"<class_RandomNumberGenerator_method_randi_range>` takes two arguments "
"``from`` and ``to``, and returns a random integer between ``from`` and "
"``to``:"
msgstr ""
":ref:`RandomNumberGenerator.randi_range() "
"<class_RandomNumberGenerator_method_randi_range>` приймає два аргументи "
"``from`` і ``to``, і повертає випадкове ціле число між ``from`` і ``to``:"

msgid "Get a random array element"
msgstr "Отримання випадкового елемента масиву"

msgid ""
"We can use random integer generation to get a random element from an array:"
msgstr ""
"Ми можемо використовувати генерацію випадкових цілих чисел, щоб отримати "
"випадковий елемент із масиву:"

msgid ""
"To prevent the same fruit from being picked more than once in a row, we can "
"add more logic to this method:"
msgstr ""
"Щоб той самий фрукт не обирався більше одного разу поспіль, ми можемо додати "
"більше логіки до цього методу:"

msgid ""
"This approach can be useful to make random number generation feel less "
"repetitive. Still, it doesn't prevent results from \"ping-ponging\" between "
"a limited set of values. To prevent this, use the :ref:`shuffle bag "
"<doc_random_number_generation_shuffle_bags>` pattern instead."
msgstr ""
"Цей підхід може допомогти зробити генерацію випадкових чисел менш "
"повторюваною. Тим не менш, це не перешкоджає результатам з \"пінг-понгом\" "
"між обмеженим набором значень. Щоб запобігти цьому, використовуйте натомість "
"шаблон :ref:`перемішування<doc_random_number_generation_shuffle_bags>`."

msgid "Get a random dictionary value"
msgstr "Отримання випадкового значення словника"

msgid "We can apply similar logic from arrays to dictionaries as well:"
msgstr "Ми також можемо застосувати подібну логіку від масивів до словників:"

msgid "Weighted random probability"
msgstr "Зважена випадкова ймовірність"

#, fuzzy
msgid ""
"The :ref:`randf() <class_@GlobalScope_method_randf>` method returns a "
"floating-point number between 0.0 and 1.0. We can use this to create a "
"\"weighted\" probability where different outcomes have different likelihoods:"
msgstr ""
"Метод :ref:`randf() <class_@GDScript_method_randf>` повертає число з "
"десятковою комою між 0,0 і 1,0. Ми можемо використовувати його для створення "
"\"зваженої\" ймовірності, де різні результати мають різні ймовірності:"

msgid "\"Better\" randomness using shuffle bags"
msgstr "\"Краща\" випадковість за допомогою перемішування сумки"

msgid ""
"Taking the same example as above, we would like to pick fruits at random. "
"However, relying on random number generation every time a fruit is selected "
"can lead to a less *uniform* distribution. If the player is lucky (or "
"unlucky), they could get the same fruit three or more times in a row."
msgstr ""
"Візьмемо наведений вище приклад, ми хочемо вибирати фрукти навмання. Однак, "
"при генерації випадкових чисел щоразу, коли вибирається фрукт, можна "
"отримати менш *рівномірний* розподіл. Якщо гравцеві пощастить (або не "
"пощастить), він може отримати один і той же фрукт три, або більше, рази "
"поспіль."

msgid ""
"You can accomplish this using the *shuffle bag* pattern. It works by "
"removing an element from the array after choosing it. After multiple "
"selections, the array ends up empty. When that happens, you reinitialize it "
"to its default value::"
msgstr ""
"Ви можете зробити це за допомогою шаблону *перемішування сумки*. Його робота "
"базується на видаленні елемента з масиву після його вибору. Після кількох "
"вибірок масив виявляється порожнім. Коли це станеться, ви повторно "
"ініціалізуєте його до значення за замовчуванням:"

msgid ""
"When running the above code, there is a chance to get the same fruit twice "
"in a row. Once we picked a fruit, it will no longer be a possible return "
"value unless the array is now empty. When the array is empty, we reset it "
"back to its default value, making it possible to have the same fruit again, "
"but only once."
msgstr ""
"Під час виконання наведеного вище коду є шанс отримати один і той же фрукт "
"двічі поспіль. Після того, як ми виберемо фрукти, масив стане порожнім і не "
"зможе нічого повертати. Коли масив порожній, ми вертаємо його до значення за "
"замовчуванням, завдяки чому можна знову отримати той самий фрукт, але лише "
"один раз."

msgid "Random noise"
msgstr "Випадковий шум"

msgid ""
"The random number generation shown above can show its limits when you need a "
"value that *slowly* changes depending on the input. The input can be a "
"position, time, or anything else."
msgstr ""
"Генерація випадкових чисел, показана вище, може показати свої межі, коли вам "
"потрібно значення, яке *повільно* змінюється залежно від введення. Введенням "
"може бути позиція, час, або будь-що інше."

#, fuzzy
msgid ""
"To achieve this, you can use random *noise* functions. Noise functions are "
"especially popular in procedural generation to generate realistic-looking "
"terrain. Godot provides :ref:`class_fastnoiselite` for this, which supports "
"1D, 2D and 3D noise. Here's an example with 1D noise:"
msgstr ""
"Для цього можна використовувати функції випадкового *шуму*. Функції шуму "
"особливо популярні в процедурній генерації для створення реалістичного "
"ландшафту. Godot надає для цього :ref:`class_opensimplexnoise`, який "
"підтримує 1D, 2D, 3D і 4D шум. Ось приклад із шумом 1D:"

msgid "Cryptographically secure pseudorandom number generation"
msgstr ""

msgid ""
"So far, the approaches mentioned above are **not** suitable for "
"*cryptographically secure* pseudorandom number generation (CSPRNG). This is "
"fine for games, but this is not sufficient for scenarios where encryption, "
"authentication or signing is involved."
msgstr ""

msgid ""
"Godot offers a :ref:`class_Crypto` class for this. This class can perform "
"asymmetric key encryption/decryption, signing/verification, while also "
"generating cryptographically secure random bytes, RSA keys, HMAC digests, "
"and self-signed :ref:`class_X509Certificate`\\ s."
msgstr ""

msgid ""
"The downside of :abbr:`CSPRNG (Cryptographically secure pseudorandom number "
"generation)` is that it's much slower than standard pseudorandom number "
"generation. Its API is also less convenient to use. As a result, :abbr:"
"`CSPRNG (Cryptographically secure pseudorandom number generation)` should be "
"avoided for gameplay elements."
msgstr ""

msgid ""
"Example of using the Crypto class to generate 2 random integers between "
"``0`` and ``2^32 - 1`` (inclusive):"
msgstr ""

msgid ""
"See :ref:`class_PackedByteArray`'s documentation for other methods you can "
"use to decode the generated bytes into various types of data, such as "
"integers or floats."
msgstr ""

msgid "Translation status"
msgstr "Стан перекладу"
