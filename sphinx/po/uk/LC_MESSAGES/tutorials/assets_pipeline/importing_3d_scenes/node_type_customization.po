# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Node type customization using name suffixes"
msgstr ""

msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr ""
"Часто під час редагування сцени виникають загальні потреби, які потрібно "
"виконати після експорту:"

msgid "Adding collision detection to objects."
msgstr "Додати виявлення зіткнень до об'єктів."

msgid "Setting objects as navigation meshes."
msgstr "Встановити об'єкти як навігаційні сітки."

#, fuzzy
msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modeling)."
msgstr ""
"Видалити вузли, які не використовуються в ігровому движку (наприклад "
"специфічні світильники, що використовуються для моделювання)."

#, fuzzy
msgid ""
"To simplify this workflow, Godot offers several suffixes that can be added "
"to the names of the objects in your 3D modeling software. When imported, "
"Godot will detect suffixes in object names and will perform actions "
"automatically."
msgstr ""
"Щоб спростити цей робочий процес, Godot пропонує кілька суфіксів, які можна "
"додати до назв об'єктів у вашому програмному забезпеченні для 3D "
"моделювання. При імпорті Godot виявить їх і виконає дії автоматично."

#, fuzzy
msgid "All the suffixes described below are **case-sensitive**."
msgstr "Всі описані нижче суфікси *чутливі до регістру*."

msgid "Remove nodes (-noimp)"
msgstr "Вилучити вузли (-noimp)"

msgid ""
"Objects that have the ``-noimp`` suffix will be removed at import-time no "
"matter what their type is. They will not appear in the imported scene."
msgstr ""
"Імена вузлів, з суфіксом ``-noimp``, будуть видалені під час імпорту, "
"незалежно від їх типу. Вони не з’являться на імпортованій сцені."

msgid ""
"This is equivalent to enabling **Skip Import** for a node in the Advanced "
"Import Settings dialog."
msgstr ""

msgid "Create collisions (-col, -convcol, -colonly, -convcolonly)"
msgstr "Створення зіткнень (-col, -colonly, -convcolonly)"

msgid ""
"The option ``-col`` will work only for Mesh objects. If it is detected, a "
"child static collision node will be added, using the same geometry as the "
"mesh. This will create a triangle mesh collision shape, which is a slow, but "
"accurate option for collision detection. This option is usually what you "
"want for level geometry (but see also ``-colonly`` below)."
msgstr ""
"Параметр ``-col`` працюватиме лише для об’єктів Mesh. Якщо він виявлений, "
"буде додано дочірній вузол статичного зіткнення, що використовує ту ж "
"геометрію, що і меш (сітка). Буде створена побудована з трикутників форма "
"зіткнення, яка є повільним, але точним варіантом виявлення зіткнень. Цей "
"варіант, як правило, потрібен для геометрії рівня (але дивіться також ``-"
"colonly`` нижче)."

#, fuzzy
msgid ""
"The option ``-convcol`` will create a :ref:`class_ConvexPolygonShape3D` "
"instead of a :ref:`class_ConcavePolygonShape3D`. Unlike triangle meshes "
"which can be concave, a convex shape can only accurately represent a shape "
"that doesn't have any concave angles (a pyramid is convex, but a hollow box "
"is concave). Due to this, convex collision shapes are generally not suited "
"for level geometry. When representing simple enough meshes, convex collision "
"shapes can result in better performance compared to a triangle collision "
"shape. This option is ideal for simple or dynamic objects that require "
"mostly-accurate collision detection."
msgstr ""
"Опція ``-convcol`` створить :ref:`class_convexpolygonshape` замість :ref:"
"`class_concavepolygonshape`. На відміну від побудованих з трикутників сіток, "
"які можуть бути увігнутими, опукла форма може точно представляти лише "
"фігуру, яка не має жодного увігнутого кута (піраміда опукла, а порожниста "
"коробка увігнута). Через це опуклі форми зіткнення, як правило, не підходять "
"для геометрії рівня. Представляючи досить прості сітки, опуклі форми "
"зіткнення можуть призвести до кращих показників порівняно з формою зіткнення "
"трикутникових сіток. Цей варіант ідеально підходить для простих або "
"динамічних об'єктів, які вимагають здебільшого точного виявлення зіткнень."

msgid ""
"However, in both cases, the visual geometry may be too complex or not smooth "
"enough for collisions. This can create physics glitches and slow down the "
"engine unnecessarily."
msgstr ""
"Однак в обох випадках візуальна геометрія може бути занадто складною, або "
"недостатньо гладкою для зіткнень. Це може спричинити збої у фізиці та без "
"потреб уповільнити роботу движка."

#, fuzzy
msgid ""
"To solve this, the ``-colonly`` modifier exists. It will remove the mesh "
"upon importing and will create a :ref:`class_StaticBody3D` collision "
"instead. This helps the visual mesh and actual collision to be separated."
msgstr ""
"Для вирішення цієї проблеми існує модифікатор ``-colonly``. Він видалить "
"сітку (меш) під час імпорту та створить зіткнення :ref:`class_staticbody`. "
"Це допомагає відокремити візуальну сітку (меш) та фактичне зіткнення."

#, fuzzy
msgid ""
"The option ``-convcolonly`` works in a similar way, but will create a :ref:"
"`class_ConvexPolygonShape3D` instead using convex decomposition."
msgstr ""
"Параметр ``-convcolonly`` працює подібним чином, але замість нього буде "
"створено :ref:`class_convexpolygonshape`."

#, fuzzy
msgid ""
"With Collada files, the option ``-colonly`` can also be used with Blender's "
"empty objects. On import, it will create a :ref:`class_StaticBody3D` with a "
"collision node as a child. The collision node will have one of a number of "
"predefined shapes, depending on Blender's empty draw type:"
msgstr ""
"Параметр ``-colonly`` також може використовуватися з порожніми об'єктами "
"Blender. При імпорті він створить :ref:`class_staticbody` з вузлом зіткнення "
"в якості нащадка. Вузол зіткнення матиме одну з заздалегідь визначених форм, "
"залежно від типу порожнього об'єкта Blender:"

msgid "Choosing a draw type for an Empty on creation in Blender"
msgstr ""

#, fuzzy
msgid "Single arrow will create a :ref:`class_SeparationRayShape3D`."
msgstr "Просто стрілка створить форму :ref:`class_rayshape`."

#, fuzzy
msgid "Cube will create a :ref:`class_BoxShape3D`."
msgstr "Куб створить :ref:`class_boxshape`."

#, fuzzy
msgid "Image will create a :ref:`class_WorldBoundaryShape3D`."
msgstr "Зображення створить форму :ref:`class_planeshape`."

#, fuzzy
msgid ""
"Sphere (and the others not listed) will create a :ref:`class_SphereShape3D`."
msgstr ""
"Сфера (та інші, які не перераховані) створить форму :ref:`class_sphereshape`."

msgid ""
"When possible, **try to use a few primitive collision shapes** instead of "
"triangle mesh or convex shapes. Primitive shapes often have the best "
"performance and reliability."
msgstr ""
"По можливості, **намагайтеся використовувати кілька примітивних форм "
"зіткнень** замість побудованої з трикутників сітки або опуклих фігур. "
"Первісні форми часто мають найкращі характеристики та надійність."

#, fuzzy
msgid ""
"For better visibility on Blender's editor, you can set the \"X-Ray\" option "
"on collision empties and set some distinct color for them by changing **Edit "
"> Preferences > Themes > 3D Viewport > Empty**."
msgstr ""
"Для кращої видимості в редакторі Blender користувач може встановити параметр "
"\"X-Ray\" на порожніх об'єктах зіткнення та встановити для них певний колір "
"у розділі **Налаштування користувача > Теми > 3D Перегляд > Порожняки "
"(Empty)**."

msgid ""
"If using Blender 2.79 or older, follow these steps instead: **User "
"Preferences > Themes > 3D View > Empty**."
msgstr ""

msgid ""
"See :ref:`doc_collision_shapes_3d` for a comprehensive overview of collision "
"shapes."
msgstr ""
"Дивіться :ref:`doc_collision_shapes_3d` для детального огляду форм зіткнення."

msgid "Create Occluder (-occ, -occonly)"
msgstr ""

msgid ""
"If a mesh is imported with the ``-occ`` suffix an :ref:`class_occluder3D` "
"node will be created based on the geometry of the mesh, it does not replace "
"the mesh. A mesh node with the ``-occonly`` suffix will be converted to an :"
"ref:`class_occluder3D` on import."
msgstr ""

msgid "Create navigation (-navmesh)"
msgstr "Створити навігацію (-navmesh)"

msgid ""
"A mesh node with the ``-navmesh`` suffix will be converted to a navigation "
"mesh. The original Mesh object will be removed at import-time."
msgstr ""
"Вузол сітки (меша) з суфіксом ``-navmesh`` буде перетворений у навігаційну "
"сітку. Оригінальний об'єкт Mesh буде видалено під час імпорту."

msgid "Create a VehicleBody (-vehicle)"
msgstr "Створити VehicleBody (-vehicle)"

#, fuzzy
msgid ""
"A mesh node with the ``-vehicle`` suffix will be imported as a child to a :"
"ref:`class_VehicleBody3D` node."
msgstr ""
"Вузол сітки з суфіксом ``-vehicle`` буде імпортований в якості нащадка "
"вузла :ref:`class_VehicleBody`."

msgid "Create a VehicleWheel (-wheel)"
msgstr "Створити VehicleWheel (-wheel)"

#, fuzzy
msgid ""
"A mesh node with the ``-wheel`` suffix will be imported as a child to a :ref:"
"`class_VehicleWheel3D` node."
msgstr ""
"Вузол сітки з суфіксом ``-wheel`` буде імпортований в якості нащадка вузла :"
"ref:`class_VehicleWheel`."

msgid "Rigid Body (-rigid)"
msgstr "Тверде тіло (-rigid)"

#, fuzzy
msgid ""
"A mesh node with the ``-rigid`` suffix will be imported as a :ref:"
"`class_RigidBody3D`."
msgstr ""
"Вузол сітки з суфіксом ``-rigid`` буде імпортований як :ref:"
"`class_RigidBody`."

msgid "Animation loop (-loop, -cycle)"
msgstr "Цикл анімації (-loop, -cycle)"

#, fuzzy
msgid ""
"Animation clips in the source 3D file that start or end with the token "
"``loop`` or ``cycle`` will be imported as a Godot :ref:`class_Animation` "
"with the loop flag set. **Unlike the other suffixes described above, this "
"does not require a hyphen.**"
msgstr ""
"Анімаційні кліпи в документі COLLADA, які починаються, або закінчуються "
"приставкою ``loop`` чи ``cycle``, будуть імпортовані як анімація Godot з "
"встановленою галочкою циклу. **На відміну від інших суфіксів, описаних вище, "
"для цих не потрібен дефіс.**"

msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the ``loop`` or ``cycle`` prefix or suffix."
msgstr ""
"Для Blender це вимагає використання редактора NLA та іменування дії (Action) "
"з префіксом, або суфіксом, ``loop`` чи ``cycle``."

msgid "Translation status"
msgstr "Стан перекладу"
