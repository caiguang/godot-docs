# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating your first script"
msgstr "Створення першого сценарію"

msgid ""
"In this lesson, you will code your first script to make the Godot icon turn "
"in circles using GDScript. As we mentioned :ref:`in the introduction <toc-"
"learn-introduction>`, we assume you have programming foundations. The "
"equivalent C# code has been included in another tab for convenience."
msgstr ""
"У цьому уроці ви напишете свій перший сценарій на GDScript, що буде обертати "
"піктограму Godot по колу. Як ми вже згадували :ref:`у вступі <toc-learn-"
"introduction>`, ми припускаємо, що ви володієте основами програмування. Для "
"зручності еквівалентний C# код знахолиться в іншій вкладці."

msgid ""
"To learn more about GDScript, its keywords, and its syntax, head to the :ref:"
"`GDScript reference<doc_gdscript>`."
msgstr ""
"Щоб дізнатися більше про GDScript, його ключові слова та синтаксис, "
"перейдіть до :ref:`Посилання на GDScript<doc_gdscript>`."

msgid ""
"To learn more about C#, head to the :ref:`C# basics <doc_c_sharp>` page."
msgstr ""
"Щоб дізнатися більше про C#, перегляньте :ref:`основи C# <doc_c_sharp>`."

msgid "Project setup"
msgstr "Налаштування проєкту"

msgid ""
"Please :ref:`create a new project <doc_creating_and_importing_projects>` to "
"start with a clean slate. Your project should contain one picture: the Godot "
"icon, which we often use for prototyping in the community."
msgstr ""
"Будь ласка, створіть новий проект <doc_creating_and_importing_projects>, щоб "
"почати з чистого аркуша. Ваш проект має містити одне зображення: іконку "
"Годо, яку ми часто використовуємо для створення прототипів у спільноті."

msgid ""
"We need to create a Sprite2D node to display it in the game. In the Scene "
"dock, click the Other Node button."
msgstr ""
"Нам потрібно створити Sprite2D-вузол, щоб відобразити його у грі. У док-"
"станції Сцена (Scene) натисніть кнопку Інший вузол (Other Node)."

msgid ""
"Type \"Sprite2D\" in the search bar to filter nodes and double-click on "
"Sprite2D to create the node."
msgstr ""
"Введіть \"Sprite2D\" у рядку пошуку, щоб відфільтрувати вузли, і двічі "
"клацніть на Sprite2D, щоб створити вузол."

msgid "Your Scene tab should now only have a Sprite2D node."
msgstr "На вкладці Сцена тепер має бути лише вузол Sprite2D."

msgid ""
"A Sprite2D node needs a texture to display. In the Inspector on the right, "
"you can see that the Texture property says \"[empty]\". To display the Godot "
"icon, click and drag the file ``icon.svg`` from the FileSystem dock onto the "
"Texture slot."
msgstr ""
"Вузол Sprite2D потребує текстури для відображення. У інспекторі праворуч ви "
"можете побачити, що властивість Texture має значення \"[empty]\". Щоб "
"відобразити піктограму Годо, клацніть і перетягніть файл ``icon.svg`` з док-"
"станції FileSystem до слоту Texture (Текстура)."

msgid ""
"You can create Sprite2D nodes automatically by dragging and dropping images "
"on the viewport."
msgstr ""
"Ви можете створювати вузли Sprite2D автоматично, перетягуючи зображення на "
"область перегляду."

msgid ""
"Then, click and drag the icon in the viewport to center it in the game view."
msgstr ""
"Потім клацніть і перетягніть піктограму у вікні перегляду, щоб відцентрувати "
"її в області перегляду гри."

msgid "Creating a new script"
msgstr "Створення нового сценарію"

msgid ""
"To create and attach a new script to our node, right-click on Sprite2D in "
"the scene dock and select \"Attach Script\"."
msgstr ""
"Щоб створити і прикріпити новий скрипт до нашого вузла, клацніть правою "
"кнопкою миші на Sprite2D в док-станції сцени і виберіть \"Прикріпити "
"скрипт\"."

msgid ""
"The Attach Node Script window appears. It allows you to select the script's "
"language and file path, among other options."
msgstr ""
"З’явиться вікно Долучити скрипт вузла. Воно дозволяє вибрати мову скрипта та "
"шлях до файлу, серед інших параметрів."

msgid ""
"Change the Template field from \"Node: Default\" to \"Object: Empty\" to "
"start with a clean file. Leave the other options set to their default values "
"and click the Create button to create the script."
msgstr ""
"Змініть поле Шаблон з \"Вузол: Default\" на \"Object: Порожній\", щоб почати "
"з чистого файлу. Залиште інші параметри за замовчуванням і натисніть кнопку "
"Створити, щоб створити скрипт."

msgid ""
"C# script names need to match their class name. In this case, you should "
"name the file ``MySprite2D.cs``."
msgstr ""

#, fuzzy
msgid ""
"The Script workspace should appear with your new ``sprite_2d.gd`` file open "
"and the following line of code:"
msgstr ""
"Робоча область Script має з’явитися з відкритим новим файлом ``Sprite.gd`` і "
"таким рядком коду:"

#, fuzzy
msgid ""
"Every GDScript file is implicitly a class. The ``extends`` keyword defines "
"the class this script inherits or extends. In this case, it's ``Sprite2D``, "
"meaning our script will get access to all the properties and functions of "
"the Sprite2D node, including classes it extends, like ``Node2D``, "
"``CanvasItem``, and ``Node``."
msgstr ""
"Кожен файл GDScript є неявно класом. Ключове слово ``extends`` визначає "
"клас, який успадковує або розширює цей сценарій. У цьому випадку це "
"``Sprite``, що означає, що наш скрипт отримає доступ до всіх властивостей і "
"функцій вузла Sprite, включаючи класи, які він розширює, наприклад, "
"``Node2D``, ``CanvasItem`` і ``Node` ``."

#, fuzzy
msgid ""
"In GDScript, if you omit the line with the ``extends`` keyword, your class "
"will implicitly extend :ref:`RefCounted <class_RefCounted>`, which Godot "
"uses to manage your application's memory."
msgstr ""
"У GDScript, якщо ви пропустите рядок із ключовим словом ``extends``, ваш "
"клас неявно розширить клас :ref:`Reference <class_Reference>`, який Godot "
"використовує для керування пам’яттю вашої програми."

msgid ""
"Inherited properties include the ones you can see in the Inspector dock, "
"like our node's ``texture``."
msgstr ""
"Успадковані властивості включають ті, які ви можете побачити в панелі "
"Інспектор, як-от ``texture`` нашого вузла."

msgid ""
"By default, the Inspector displays a node's properties in \"Title Case\", "
"with capitalized words separated by a space. In GDScript code, these "
"properties are in \"snake_case\", which is lowercase with words separated by "
"an underscore."
msgstr ""
"За замовчуванням Інспектор відображає властивості вузла з великої літери, "
"розділені проміжком (\"Title Case\"). У коді GDScript ці властивості "
"позначаються у нижньому регістрі та розділені символом підкреслення "
"(\"snake_case\")."

#, fuzzy
msgid ""
"You can hover over any property's name in the Inspector to see a description "
"and its identifier in code."
msgstr ""
"Ви можете навести курсор на назву будь-якої властивості в Інспекторі, щоб "
"побачити опис та її ідентифікатор у коді."

msgid "Hello, world!"
msgstr "Привіт, всесвіт!"

msgid ""
"Our script currently doesn't do anything. Let's make it print the text "
"\"Hello, world!\" to the Output bottom panel to get started."
msgstr ""
"Наш скрипт наразі нічого не робить. Давайте змусимо його надрукувати текст "
"\"Привіт, світ!\" до нижньої панелі виводу, щоб почати."

msgid "Add the following code to your script:"
msgstr "Додайте наступний код до свого сценарію:"

msgid ""
"Let's break it down. The ``func`` keyword defines a new function named "
"``_init``. This is a special name for our class's constructor. The engine "
"calls ``_init()`` on every object or node upon creating it in memory, if you "
"define this function."
msgstr ""
"Давайте розберемо його. Ключове слово ``func`` визначає нову функцію під "
"назвою ``_init``. Це спеціальна назва для конструктора нашого класу. Движок "
"викликає ``_init()`` для кожного об'єкта або вузла після його створення в "
"пам'яті, якщо ви визначаєте цю функцію."

msgid ""
"GDScript is an indent-based language. The tab at the start of the line that "
"says ``print()`` is necessary for the code to work. If you omit it or don't "
"indent a line correctly, the editor will highlight it in red and display the "
"following error message: \"Indented block expected\"."
msgstr ""
"GDScript — мова, базована на відступах. Табуляція на початку рядка "
"``print()``необхідниа для роботи коду. Якщо ви пропустите її або зробите не "
"правильний відступ, редактор виділить його червоним кольором і відобразить "
"повідомлення про помилку: \"Неочікуваний відступ\"."

#, fuzzy
msgid ""
"Save the scene as ``sprite_2d.tscn`` if you haven't already, then press :kbd:"
"`F6` (:kbd:`Cmd + R` on macOS) to run it. Look at the **Output** bottom "
"panel that expands. It should display \"Hello, world!\"."
msgstr ""
"Збережіть сцену, якщо ви ще цього не зробили, та натисніть :kbd:`F6` (:kbd:"
"`Cmd + R` на macOS), щоб запустити її. Погляньте на нижню панель **Вивід**, "
"яка розгорнеться. На ній має відображатися \"Привіт, світ!\"."

#, fuzzy
msgid ""
"Delete the ``_init()`` function, so you're only left with the line ``extends "
"Sprite2D``."
msgstr ""
"Видаліть функцію ``_init()``, щоб у вас залишився лише рядок ``extends "
"Sprite``."

msgid "Turning around"
msgstr "Обертання"

#, fuzzy
msgid ""
"It's time to make our node move and rotate. To do so, we're going to add two "
"member variables to our script: the movement speed in pixels per second and "
"the angular speed in radians per second.  Add the following after the "
"``extends Sprite2D`` line."
msgstr ""
"Настав час змусити наш вузол рухатися і обертатися. Для цього ми збираємося "
"додати до нашого сценарію дві змінні-члени: швидкість руху в пікселях за "
"секунду і кутову швидкість в радіанах за секунду."

msgid ""
"Member variables sit near the top of the script, after any \"extends\" "
"lines, but before functions. Every node instance with this script attached "
"to it will have its own copy of the ``speed`` and ``angular_speed`` "
"properties."
msgstr ""
"Змінні-члени розташовані у верхній частині скрипту, після всіх \"extends\", "
"але перед функціями. Кожен екземпляр вузла з цим скриптом матиме власну "
"копію властивостей ``speed`` та ``angular_speed``."

msgid ""
"Angles in Godot work in radians by default, but you have built-in functions "
"and properties available if you prefer to calculate angles in degrees "
"instead."
msgstr ""
"Кути в Godot за замовчуванням вказуються в радіанах, але ви маєте вбудовані "
"функції та властивості, якщо ви віддаєте перевагу обчислюванню кутів в "
"градусах."

#, fuzzy
msgid ""
"To move our icon, we need to update its position and rotation every frame in "
"the game loop. We can use the ``_process()`` virtual function of the "
"``Node`` class. If you define it in any class that extends the Node class, "
"like Sprite2D, Godot will call the function every frame and pass it an "
"argument named ``delta``, the time elapsed since the last frame."
msgstr ""
"Щоб перемістити нашу іконку, нам потрібно оновити її положення та обертати "
"кожен кадр у ігровому циклі. Ми можемо використовувати віртуальну функцію "
"``_process()`` класу ``Node``. Якщо ви визначите її в будь-якому класі, який "
"розширює клас Node, як-от Sprite, Godot буде викликати функцію кожен кадр і "
"передасть їй аргумент під назвою ``delta``, тобто час, що минув з моменту "
"останнього кадру."

msgid ""
"Games work by rendering many images per second, each called a frame, and "
"they do so in a loop. We measure the rate at which a game produces images in "
"Frames Per Second (FPS). Most games aim for 60 FPS, although you might find "
"figures like 30 FPS on slower mobile devices or 90 to 240 for virtual "
"reality games."
msgstr ""
"Ігри працюють, відтворюючи багато зображень за секунду, кожне з яких "
"називається кадром, і роблять це циклічно. Ми вимірюємо швидкість, з якою "
"гра створює зображення в кадрах за секунду (FPS). Більшість ігор націлені на "
"60 FPS, хоча ви можете знайти і 30 FPS на повільних мобільних пристроях або "
"від 90 до 240 для ігор віртуальної реальності."

msgid ""
"The engine and game developers do their best to update the game world and "
"render images at a constant time interval, but there are always small "
"variations in frame render times. That's why the engine provides us with "
"this delta time value, making our motion independent of our framerate."
msgstr ""
"Розробники рушія та ігор роблять усе можливе, щоб оновлювати ігровий світ і "
"відтворювати зображення через постійний проміжок часу, але завжди є невеликі "
"зміни в часі візуалізації кадрів. Ось чому рушій надає нам це значення "
"дельта-часу, завдяки чому наш рух не залежить від частоти кадрів."

msgid "At the bottom of the script, define the function:"
msgstr "У нижній частині скрипту визначте функцію:"

msgid ""
"The ``func`` keyword defines a new function. After it, we have to write the "
"function's name and arguments it takes in parentheses. A colon ends the "
"definition, and the indented blocks that follow are the function's content "
"or instructions."
msgstr ""
"Ключове слово ``func`` визначає нову функцію. Після нього ми повинні "
"написати ім’я функції та аргументи, які вона приймає, у дужках. Двокрапка "
"закінчує визначення, а наступні блоки з відступом є вмістом або інструкціями "
"функції."

msgid ""
"Notice how ``_process()``, like ``_init()``, starts with a leading "
"underscore. By convention, Godot's virtual functions, that is to say, built-"
"in functions you can override to communicate with the engine, start with an "
"underscore."
msgstr ""
"Зверніть увагу, що як ``_process()``, так і ``_init()``, починається з "
"підкреслення. За домовленістю, віртуальні функції Godot, тобто вбудовані "
"функції, які ви можете замінити для зв’язку з рушієм, починаються з "
"підкреслення."

#, fuzzy
msgid ""
"The line inside the function, ``rotation += angular_speed * delta``, "
"increments our sprite's rotation every frame. Here, ``rotation`` is a "
"property inherited from the class ``Node2D``, which ``Sprite2D`` extends. It "
"controls the rotation of our node and works with radians."
msgstr ""
"Рядок всередині функції, ``rotation += angular_speed * delta``, збільшує "
"обертання нашого спрайта кожен кадр. Тут ``rotation`` є властивістю, "
"успадкованою від класу ``Node2D``, який розширює ``Sprite``. Він контролює "
"обертання нашого вузла і працює з радіанами."

msgid ""
"In the code editor, you can ctrl-click on any built-in property or function "
"like ``position``, ``rotation``, or ``_process`` to open the corresponding "
"documentation in a new tab."
msgstr ""
"У редакторі коду ви можете клацнути, утримуючи клавішу ctrl, будь-яку "
"вбудовану властивість або функцію, як-от ``position``, ``rotation`` або "
"``_process``, щоб відкрити відповідну документацію у новій вкладці."

msgid "Run the scene to see the Godot icon turn in-place."
msgstr "Запустіть сцену, щоб побачити, як значок Godot повертається на місці."

msgid ""
"In C#, notice how the ``delta`` argument taken by ``_Process()`` is a "
"``double``. We therefore need to convert it to ``float`` when we apply it to "
"the rotation."
msgstr ""

msgid "Moving forward"
msgstr "Рухатися вперед"

#, fuzzy
msgid ""
"Let's now make the node move. Add the following two lines inside of the "
"``_process()`` function, ensuring the new lines are indented the same way as "
"the ``rotation += angular_speed * delta`` line before them."
msgstr ""
"Тепер змусимо вузол рухатися. Додайте наступні два рядки до функції "
"``_process()``, переконавшись, що нові рядки мають відступ так само, як і "
"попередній."

msgid ""
"As we already saw, the ``var`` keyword defines a new variable. If you put it "
"at the top of the script, it defines a property of the class. Inside a "
"function, it defines a local variable: it only exists within the function's "
"scope."
msgstr ""
"Як ми вже бачили, ключове слово ``var`` визначає нову змінну. Якщо "
"розмістити його у верхній частині сценарію, він визначає властивість класу. "
"Усередині функції він визначає локальну змінну: вона існує лише в межах "
"функції."

#, fuzzy
msgid ""
"We define a local variable named ``velocity``, a 2D vector representing both "
"a direction and a speed. To make the node move forward, we start from the "
"Vector2 class's constant ``Vector2.UP``, a vector pointing up, and rotate it "
"by calling the Vector2 method ``rotated()``. This expression, ``Vector2.UP."
"rotated(rotation)``, is a vector pointing forward relative to our icon. "
"Multiplied by our ``speed`` property, it gives us a velocity we can use to "
"move the node forward."
msgstr ""
"Ми визначаємо локальну змінну з назвою ``velocity``, двовимірний вектор, що "
"представляє і напрямок, і швидкість. Щоб змусити вузол рухатися вперед, ми "
"починаємо з константи Vector2.UP класу Vector2, вектора, спрямованого вгору, "
"і повертаємо його, викликаючи метод ``Vector2.rotated()``. Цей вираз, "
"``Vector2.UP.rotated(rotation)``, є вектором, спрямованим вперед відносно "
"нашої піктограми. Помножений на нашу властивість ``speed``, дає нам "
"швидкість, яку ми можемо використовувати для переміщення вузла вперед."

msgid ""
"We add ``velocity * delta`` to the node's ``position`` to move it. The "
"position itself is of type :ref:`Vector2 <class_Vector2>`, a built-in type "
"in Godot representing a 2D vector."
msgstr ""
"Ми додаємо ``velocity * delta`` до ``position`` вузла, щоб перемістити його. "
"Сама позиція має тип :ref:`Vector2 <class_Vector2>`, вбудований у Godot "
"тип , що представляє 2D вектор."

msgid "Run the scene to see the Godot head run in circles."
msgstr "Запустіть сцену, щоб побачити, як голова Godot рухається по колу."

msgid ""
"Moving a node like that does not take into account colliding with walls or "
"the floor. In :ref:`doc_your_first_2d_game`, you will learn another approach "
"to moving objects while detecting collisions."
msgstr ""
"Переміщення такого вузла не враховує зіткнення зі стінами або підлогою. У :"
"ref:`doc_your_first_2d_game` ви дізнаєтеся про інший підхід до рухомих "
"об’єктів під час виявлення зіткнень."

#, fuzzy
msgid ""
"Our node currently moves by itself. In the next part, :ref:"
"`doc_scripting_player_input`, we'll use player input to control it."
msgstr ""
"Зараз наш вузол рухається сам. У наступній частині :ref:"
"`doc_scripting_player_input`, ми надамо гравцю можливість керувати ним."

msgid "Complete script"
msgstr "Завершений скрипт"

#, fuzzy
msgid "Here is the complete ``sprite_2d.gd`` file for reference."
msgstr "Ось повний файл ``Sprite.gd`` для порівняння."

msgid "Translation status"
msgstr "Стан перекладу"
