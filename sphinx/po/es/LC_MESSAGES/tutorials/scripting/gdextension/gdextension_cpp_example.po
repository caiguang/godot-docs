# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "GDExtension C++ example"
msgstr "GDNative C++ ejemplo"

msgid "Introduction"
msgstr "Introducción"

#, fuzzy
msgid ""
"The C++ bindings for GDExtension are built on top of the C GDExtension API "
"and provide a nicer way to \"extend\" nodes and other built-in classes in "
"Godot using C++. This new system allows the extension of Godot to nearly the "
"same level as statically linked C++ modules."
msgstr ""
"Las ligaduras de C++ para GDNative son construidas en base de la API de "
"NativeScript GDNative y proveen una manera más agradable de «extender» nodos "
"en Godot usando C++. Lo que equivale a escribir scripts en GDScript, pero "
"con C++ en su lugar."

#, fuzzy
msgid ""
"You can download the included example in the test folder of the godot-cpp "
"repository `on GitHub <https://github.com/godotengine/godot-cpp>`__."
msgstr ""
"una copia del `repositorio godot-cpp <https://github.com/GodotNativeTools/"
"godot-cpp>`__."

msgid "Setting up the project"
msgstr "Configurando el proyecto"

msgid "There are a few prerequisites you'll need:"
msgstr "Hay algunos requisitos previos que necesitarás:"

#, fuzzy
msgid "a Godot 4 executable,"
msgstr "un ejecutable de Godot3.x,"

msgid "a C++ compiler,"
msgstr "un compilador de C++,"

msgid "SCons as a build tool,"
msgstr "SCons como una herramienta de compilación,"

msgid ""
"a copy of the `godot-cpp repository <https://github.com/godotengine/godot-"
"cpp>`__."
msgstr ""
"una copia del `repositorio godot-cpp <https://github.com/GodotNativeTools/"
"godot-cpp>`__."

msgid ""
"See also :ref:`Compiling <toc-devel-compiling>` as the build tools are "
"identical to the ones you need to compile Godot from source."
msgstr ""
"También ve :ref:`Compilando<toc-devel-compiling>`ya que las herramientas de "
"compilación son idénticas a las que necesitas para compilar Godot desde su "
"código fuente."

#, fuzzy
msgid ""
"You can download the `godot-cpp repository <https://github.com/godotengine/"
"godot-cpp>`__ from GitHub or let Git do the work for you. Note that this "
"repository has different branches for different versions of Godot. "
"GDExtensions will not work in older versions of Godot (only Godot 4 and up) "
"and vice versa, so make sure you download the correct branch."
msgstr ""
"Puedes descargar estos depósitos desde Github o dejar que Git lo haga por "
"ti. Hay que hacer nota que estos depósitos tienen varias ramas hoy día para "
"diferentes versiones de Godot. Los módulos escritos para versiones "
"anteriores de GDNative funcionarán en versiones más nuevas (con la excepción "
"de una ruptura en las interfaces de ARVR entre las versiones 3.0 y 3.1) pero "
"no al revés, así que asegúrate de descargar la rama apropiada. También date "
"cuenta de que la versión que uses para generar el ``api.json`` se convertirá "
"en tu versión mínima."

#, fuzzy
msgid ""
"To use `GDExtension <https://godotengine.org/article/introducing-gd-"
"extensions>`__ you need to use the godot-cpp branch that matches the version "
"of Godot that you are targeting. For example, if you're targeting Godot 4.1, "
"use the ``4.1`` branch, which is what is shown through out this tutorial."
msgstr ""
"`GDExtension <https://godotengine.org/article/introducing-gd-extensions>`__ "
"ha sido fusionado en la rama ``master`` de godot-cpp, pero solo es "
"compatible con la próxima versión Godot 4.0. Por lo tanto, necesitas usar la "
"rama ``3.x`` de godot-cpp para usar GDNative y seguir este ejemplo."

msgid ""
"The ``master`` branch is the development branch which is updated regularly "
"to work with Godot's ``master`` branch."
msgstr ""

msgid ""
"Our long-term goal is that GDExtensions targeting an earlier version of "
"Godot will work in later minor versions, but not vice-versa. For example, a "
"GDExtension targeting Godot 4.2 should work just fine in Godot 4.3, but one "
"targeting Godot 4.3 won't work in Godot 4.2."
msgstr ""

msgid ""
"However, GDExtension is currently *experimental*, which means that we may "
"break compatibility in order to fix major bugs or include critical features. "
"For example, GDExtensions created for Godot 4.0 aren't compatible with Godot "
"4.1 (see :ref:`updating_your_gdextension_for_godot_4_1`)."
msgstr ""

#, fuzzy
msgid ""
"If you are versioning your project using Git, it is recommended to add it as "
"a Git submodule:"
msgstr ""
"Si estás creando versiones de tu proyecto por medio de Git, es una buena "
"idea agregarlos como submódulos de Git:"

msgid "Alternatively, you can also clone it to the project folder:"
msgstr ""

#, fuzzy
msgid ""
"If you decide to download the repository or clone it into your folder, make "
"sure to keep the folder layout the same as we've setup here. Much of the "
"code we'll be showcasing here assumes the project has this layout."
msgstr ""
"Si decides sólo descargar los depósitos o clonarlos en tu carpeta de "
"proyecto, asegúrate de mantener la estructura del proyecto idéntica al "
"descrito aquí, ya que gran parte del código que enseñaremos asume que el "
"proyecto seguirá esa estructura."

msgid ""
"If you cloned the example from the link specified in the introduction, the "
"submodules are not automatically initialized. You will need to execute the "
"following commands:"
msgstr ""
"Si clonaste el ejemplo del enlace especificado en la introducción, los "
"submódulos no son inicializados automáticamente. Tendrás que ejecutar los "
"siguientes comandos:"

#, fuzzy
msgid "This will initialize the repository in your project folder."
msgstr "Esto clonará ambos depósitos en tu carpeta de proyecto."

msgid "Building the C++ bindings"
msgstr "Compilando las ligaduras de C++"

msgid ""
"Now that we've downloaded our prerequisites, it is time to build the C++ "
"bindings."
msgstr ""
"Ya que descargamos los prerequisitos, es hora de compilar las ligaduras de C+"
"+."

msgid ""
"The repository contains a copy of the metadata for the current Godot "
"release, but if you need to build these bindings for a newer version of "
"Godot, simply call the Godot executable:"
msgstr ""
"El depósito contiene una copia de los metadatos de la versión actual de "
"Godot, pero si quieres compilar las ligaduras para una versión más nueva de "
"Godot, simplemente llama el ejecutable de Godot:"

#, fuzzy
msgid ""
"The resulting ``extension_api.json`` file will be created in the "
"executable's directory. Copy it to the project folder and add "
"``custom_api_file=<PATH_TO_FILE>`` to the scons command below."
msgstr ""
"Coloca el archivo ``api.json`` resultante en la carpeta del proyecto y "
"agrega ``use_custom_apt_file=yes custom_api_file=../api.json`` al comando "
"scons inferior."

#, fuzzy
msgid ""
"To generate and compile the bindings, use this command (replacing "
"``<platform>`` with ``windows``, ``linux`` or ``macos`` depending on your "
"OS):"
msgstr ""
"Para generar y compilar las ligaduras, usa este comando (remplazando "
"``<platform>`` con ``windows``, ``linux`` o ``osx`` dependiendo de tu "
"sistema operativo):"

msgid ""
"The build process automatically detects the number of CPU threads to use for "
"parallel builds. To specify a number of CPU threads to use, add ``-jN`` at "
"the end of the SCons command line where ``N`` is the number of CPU threads "
"to use."
msgstr ""

msgid ""
"This step will take a while. When it is completed, you should have static "
"libraries that can be compiled into your project stored in ``godot-cpp/bin/"
"``."
msgstr ""
"Este paso tomará tiempo en finalizar, una vez completo, deberías de tener "
"unas bibliotecas estáticas que pueden ser compiladas dentro de tu proyecto "
"guardado en ``godot-cpp/bin/``."

msgid "You may need to add ``bits=64`` to the command on Windows or Linux."
msgstr ""
"Es posible que necesites agregar ``bits=64`` al comando en Windows o Linux."

msgid "Creating a simple plugin"
msgstr "Creación de un simple plugin"

msgid ""
"Now it's time to build an actual plugin. We'll start by creating an empty "
"Godot project in which we'll place a few files."
msgstr ""
"Es hora de hacer un plugin real. Iniciaremos creando un proyecto de Godot "
"vacío en el que colocaremos unos cuantos archivos."

#, fuzzy
msgid ""
"Open Godot and create a new project. For this example, we will place it in a "
"folder called ``demo`` inside our GDExtension's folder structure."
msgstr ""
"Abre Godot y crea un nuevo proyecto. Para este ejemplo, lo colocaremos en "
"una carpeta llamada ``demo`` dentro de la estructura de la carpeta de "
"nuestro módulo de GDNative."

msgid ""
"In our demo project, we'll create a scene containing a Node called \"Main\" "
"and we'll save it as ``main.tscn``. We'll come back to that later."
msgstr ""
"En nuestro proyecto demo, crearemos una escena que contendrá un Nodo llamado "
"\"Main\" y lo guardaremos como ``main.tscn``. Volveremos a esto más tarde."

#, fuzzy
msgid ""
"Back in the top-level GDExtension module folder, we're also going to create "
"a subfolder called ``src`` in which we'll place our source files."
msgstr ""
"De vuelta en la carpeta del módulo GDNative de alto nivel, crearemos una sub-"
"carpeta llamada ``src`` en la que colocaremos nuestros archivos fuente."

#, fuzzy
msgid ""
"You should now have ``demo``, ``godot-cpp``, and ``src`` directories in your "
"GDExtension module."
msgstr ""
"Ahora deberías tener los directorios ``demo``, ``godot-cpp``, ``godot-"
"headers`` y ``src`` en tu módulo GDNative."

#, fuzzy
msgid "Your folder structure should now look like this:"
msgstr "Tu escena debería verse así:"

#, fuzzy
msgid ""
"In the ``src`` folder, we'll start with creating our header file for the "
"GDExtension node we'll be creating. We will name it ``gdexample.h``:"
msgstr ""
"En la carpeta ``src`` comenzaremos con la creación de nuestro archivo "
"principal para el nodo GDNative que estaremos creando. Lo llamaremos "
"``gdexample.h``:"

#, fuzzy
msgid ""
"There are a few things of note to the above. We include ``sprite2d.hpp`` "
"which contains bindings to the Sprite2D class. We'll be extending this class "
"in our module."
msgstr ""
"Hay algunas cosas a destacar de lo anterior. Estamos incluyendo ``Godot."
"hpp`` el cuál contiene todas nuestras definiciones básicas. Después de esto, "
"incluimos ``Sprite.hpp`` el cual contiene enlaces a la clase Sprite."

#, fuzzy
msgid ""
"We're using the namespace ``godot``, since everything in GDExtension is "
"defined within this namespace."
msgstr ""
"Usamos el espacio de nombre (namespace) ``godot``, ya que todo en GDNative "
"es definido dentro de este espacio de nombre."

#, fuzzy
msgid ""
"Then we have our class definition, which inherits from our Sprite2D through "
"a container class. We'll see a few side effects of this later on. The "
"``GDCLASS`` macro sets up a few internal things for us."
msgstr ""
"Entonces tenemos nuestra definición de clase, el cual se hereda de nuestro "
"Sprite a través de una clase contenedor. Veremos algunos efectos secundarios "
"de esto más adelante. El macro ``GODOT_CLASS`` establece algunas cosas "
"internas por nosotros."

msgid "After that, we declare a single member variable called ``time_passed``."
msgstr ""
"Después de eso declaramos una sola variable de miembro llamada "
"``time_passed``."

#, fuzzy
msgid ""
"In the next block we're defining our methods, we have our constructor and "
"destructor defined, but there are two other functions that will likely look "
"familiar to some, and one new method."
msgstr ""
"En el siguiente bloque, definimos nuestros métodos, obviamente tenemos "
"nuestro constructor y destructor ya definidos, pero hay otras dos funciones "
"que probablemente les resultarán familiares a algunos, y un nuevo método."

#, fuzzy
msgid ""
"The first is ``_bind_methods``, which is a static function that Godot will "
"call to find out which methods can be called and which properties it "
"exposes. The second is our ``_process`` function, which will work exactly "
"the same as the ``_process`` function you're used to in GDScript."
msgstr ""
"La primera es ``_register_methods``, que es una función estática que Godot "
"llamará para averiguar qué métodos pueden ser llamados en nuestro "
"NativeScript y cuáles propiedades expone. La segunda es nuestra función "
"``_process``, la cual funcionará exactamente igual que la función "
"``_process`` de GDScript a la que estamos acostumbrados. La tercera es "
"nuestra función ``_init``, la cual es llamada una vez que Godot ha creado "
"nuestro objeto adecuadamente. Es necesario que exista incluso si no tiene "
"código adentro."

msgid "Let's implement our functions by creating our ``gdexample.cpp`` file:"
msgstr ""
"Implementemos nuestras funciones creando nuestro archivo `gdexample.cpp``:"

msgid ""
"This one should be straightforward. We're implementing each method of our "
"class that we defined in our header file."
msgstr ""

msgid ""
"Note our ``_process`` function, which keeps track of how much time has "
"passed and calculates a new position for our sprite using a sine and cosine "
"function."
msgstr ""

#, fuzzy
msgid ""
"There is one more C++ file we need; we'll name it ``register_types.cpp``. "
"Our GDExtension plugin can contain multiple classes, each with their own "
"header and source file like we've implemented ``GDExample`` up above. What "
"we need now is a small bit of code that tells Godot about all the classes in "
"our GDExtension plugin."
msgstr ""
"Todavía hay un archivo de C++ más que necesitamos; lo llamaremos ``gdlibrary."
"cpp``. Nuestro plugin de GDNative puede contener múltiples NativeScripts, "
"cada uno con su propia cabecera y archivo fuente como lo hemos implementado "
"en ``GDExample`` más arriba. Lo que necesitamos ahora es pequeño fragmento "
"de código que le diga a Godot acerca de todos los NativeScripts en nuestro "
"plugin."

#, fuzzy
msgid ""
"The ``initialize_example_module`` and ``uninitialize_example_module`` "
"functions get called respectively when Godot loads our plugin and when it "
"unloads it. All we're doing here is parse through the functions in our "
"bindings module to initialize them, but you might have to set up more things "
"depending on your needs. We call the function ``register_class`` for each of "
"our classes in our library."
msgstr ""
"Las funciones ``godot_gdnative_init`` y ``godot_gdnative_terminate`` son "
"llamadas respectivamente cuando Godot carga nuestro plugin y cuando lo "
"descarga. Todo lo que tenemos que hacemos aquí es analizar a través de estas "
"funciones en nuestro módulo de enlaces para inicializarlo, pero podrías "
"tener que configurar más cosas dependiendo de tus necesidades."

#, fuzzy
msgid ""
"The important function is the third function called "
"``example_library_init``. We first call a function in our bindings library "
"that creates an initialization object. This object registers the "
"initialization and termination functions of the GDExtension. Furthermore, it "
"sets the level of initialization (core, servers, scene, editor, level)."
msgstr ""
"La función importante aquí es la tercera llamada "
"``godot_nativescript_init``. Primero llamamos una función en nuestra "
"librería de enlaces que hace su trabajo habitual, llamamos a la función "
"```register_class`` por cada una de nuestras clases en la librería."

msgid ""
"At last, we need the header file for the ``register_types.cpp`` named "
"``register_types.h``."
msgstr ""

msgid "Compiling the plugin"
msgstr "Compilando el plugin"

msgid ""
"We cannot easily write by hand a ``SConstruct`` file that SCons would use "
"for building. For the purpose of this example, just use :download:`this "
"hardcoded SConstruct file <files/cpp_example/SConstruct>` we've prepared. "
"We'll cover a more customizable, detailed example on how to use these build "
"files in a subsequent tutorial."
msgstr ""
"No podemos escribir fácilmente un archivo ``SConstruct`` a mano que SCons "
"pueda usar para construir. Por propósito de este ejemplo, sólo :descarga: "
"`este archivo SConstruct <files/cpp_example/SConstruct>` que hemos "
"preparado. Cubriremos un ejemplo más personalizable y detallado de cómo usar "
"estos archivos en próximos tutoriales."

#, fuzzy
msgid ""
"This ``SConstruct`` file was written to be used with the latest ``godot-"
"cpp`` master, you may need to make small changes using it with older "
"versions or refer to the ``SConstruct`` file in the Godot 4.0 documentation."
msgstr ""
"Este archivo ``SConstruct`` ha sido escrito para ser usado con la ultima "
"versión de ``godot-cpp`` master, puedes necesitar hacer algunos cambios para "
"usarlo en versiones más antiguas o revisar en la documentación de Godot 3.0 "
"acerca del archivo ``SConstruct``."

#, fuzzy
msgid ""
"Once you've downloaded the ``SConstruct`` file, place it in your GDExtension "
"folder structure alongside ``godot-cpp``, ``src`` and ``demo``, then run:"
msgstr ""
"Una vez que hayas descargado el archivo ``SConstruct``, colócalo en la "
"carpeta de tu módulo GDNative junto a ``godot-cpp``, ``godot-headers`` y "
"``demo``, luego ejecuta:"

msgid "You should now be able to find the module in ``demo/bin/<platform>``."
msgstr "Ahora deberías poder encontrar el módulo en ``demo/bin/<platform>``."

#, fuzzy
msgid ""
"Here, we've compiled both godot-cpp and our gdexample library as debug "
"builds. For optimized builds, you should compile them using the "
"``target=template_release`` switch."
msgstr ""
"Aquí hemos compilado tanto godot-cpp y nuestro gdxample como versiones de "
"debug. Para versiones optimizadas, deberías compilarlos usando el "
"interruptor``target=realease``."

#, fuzzy
msgid "Using the GDExtension module"
msgstr "Usando el módulo de GDNative"

#, fuzzy
msgid ""
"Before we jump back into Godot, we need to create one more file in ``demo/"
"bin/``."
msgstr ""
"Antes de que podamos volver a Godot, necesitamos crear dos archivos más en "
"``demo/bin/``. Ambos pueden ser creados usando el editor de Godot, pero sera "
"más crearlos directamente."

#, fuzzy
msgid ""
"This file lets Godot know what dynamic libraries should be loaded for each "
"platform and the entry function for the module. It is called ``gdexample."
"gdextension``."
msgstr ""
"El primer archivo es el que le permite a Godot saber qué bibliotecas "
"dinámicas deben cargarse para cada plataforma y se llama ``gdexample."
"gdnlib``."

msgid ""
"This file contains a ``configuration`` section that controls the entry "
"function of the module. You should also set the minimum compatible Godot "
"version with ``compatability_minimum``, which prevents older version of "
"Godot from trying to load your extension."
msgstr ""

#, fuzzy
msgid ""
"The ``libraries`` section is the important bit: it tells Godot the location "
"of the dynamic library in the project's filesystem for each supported "
"platform. It will also result in *just* that file being exported when you "
"export the project, which means the data pack won't contain libraries that "
"are incompatible with the target platform."
msgstr ""
"La sección ``entry`` es la parte importante: le indica a Godot la ubicación "
"de la biblioteca dinámica en el sistema de archivos del proyecto para cada "
"plataforma admitida. Esto también resultará en que *solo* ese archivo se "
"exporte cuando exportes el proyecto, lo que significa que el paquete de "
"datos no contendrá bibliotecas incompatibles con la plataforma objetivo."

#, fuzzy
msgid ""
"Finally, the ``dependencies`` section allows you to name additional dynamic "
"libraries that should be included as well. This is important when your "
"GDExtension plugin implements someone else's library and requires you to "
"supply a third-party dynamic library with your project."
msgstr ""
"Por último, la sección ``dependencies`` te permite nombrar bibliotecas "
"dinámicas adicionales que también deben incluirse. Esto es importante cuando "
"tu complemento GDNative implementa la biblioteca de otra persona y requiere "
"que suministres una biblioteca dinámica de terceros con tu proyecto."

msgid "Here is another overview to check the correct file structure:"
msgstr ""

#, fuzzy
msgid ""
"Time to jump back into Godot. We load up the main scene we created way back "
"in the beginning and now add a newly available GDExample node to the scene:"
msgstr ""
"Es hora de volver a Godot. Cargamos la escena principal que creamos al "
"principio y ahora agregamos un Sprite a nuestra escena:"

#, fuzzy
msgid ""
"We're going to assign the Godot logo to this node as our texture, disable "
"the ``centered`` property:"
msgstr ""
"Vamos a asignar el logotipo de Godot a este sprite como nuestra textura, "
"deshabilitar la propiedad ``centered`` y arrastrar nuestro archivo "
"``gdexample.gdns`` sobre la propiedad ``script`` del sprite:"

msgid "We're finally ready to run the project:"
msgstr "Finalmente, estamos listos para ejecutar el proyecto:"

#, fuzzy
msgid "Custom editor icon"
msgstr "Añadir iconos de editor personalizados"

msgid ""
"By default, Godot uses the node icon in the scene dock for GDExtension "
"nodes. The custom icon can be added via the ``gdextension`` file. The node's "
"icon is set by reference to its name and resource path of an SVG file."
msgstr ""

msgid "For example:"
msgstr "Por ejemplo:"

msgid ""
"The path should point to a 16 by 16 pixel SVG image. Read the guide for :ref:"
"`creating icons <doc_editor_icons>` for more information."
msgstr ""

msgid "Adding properties"
msgstr "Agregando propiedades"

#, fuzzy
msgid ""
"GDScript allows you to add properties to your script using the ``export`` "
"keyword. In GDExtension you have to register the properties with a getter "
"and setter function or directly implement the ``_get_property_list``, "
"``_get`` and ``_set`` methods of an object (but that goes far beyond the "
"scope of this tutorial)."
msgstr ""
"Hay una tercera opción, al igual que en GDScript, puedes implementar "
"directamente los métodos ``_get_property_list``, ``_get`` y ``_set`` de un "
"objeto, pero esto va mucho más allá del alcance de este tutorial. Es una "
"opción más avanzada y compleja que puede ser útil en casos específicos, pero "
"no la cubriremos aquí."

#, fuzzy
msgid ""
"Lets add a property that allows us to control the amplitude of our wave."
msgstr ""
"Examinaremos ambos, comenzando con la vinculación directa. Vamos a agregar "
"una propiedad que nos permita controlar la amplitud de nuestra onda."

#, fuzzy
msgid ""
"In our ``gdexample.h`` file we need to add a member variable and getter and "
"setter functions:"
msgstr ""
"En nuestro archivo ``gdexample.h``, simplemente necesitamos agregar una "
"variable miembro de la siguiente manera:"

msgid ""
"In our ``gdexample.cpp`` file we need to make a number of changes, we will "
"only show the methods we end up changing, don't remove the lines we're "
"omitting:"
msgstr ""
"En nuestro archivo ``gdexample.cpp``, necesitaremos realizar una serie de "
"cambios. Solo mostraremos los métodos que terminamos modificando, sin "
"eliminar las líneas que estamos omitiendo:"

msgid ""
"Once you compile the module with these changes in place, you will see that a "
"property has been added to our interface. You can now change this property "
"and when you run your project, you will see that our Godot icon travels "
"along a larger figure."
msgstr ""
"Una vez que compiles el módulo con estos cambios implementados, verás que se "
"ha agregado una propiedad a nuestra interfaz. Ahora puedes cambiar esta "
"propiedad y, cuando ejecutes tu proyecto, notarás que el ícono de Godot se "
"desplaza a lo largo de una figura más grande."

msgid ""
"Let's do the same but for the speed of our animation and use a setter and "
"getter function. Our ``gdexample.h`` header file again only needs a few more "
"lines of code:"
msgstr ""
"Hagamos lo mismo, pero para la velocidad de nuestra animación y usemos una "
"función setter y getter. Nuestro archivo de encabezado ``gdexample.h`` solo "
"necesita unas pocas líneas más de código:"

msgid ""
"This requires a few more changes to our ``gdexample.cpp`` file, again we're "
"only showing the methods that have changed so don't remove anything we're "
"omitting:"
msgstr ""
"Esto requiere algunos cambios adicionales en nuestro archivo ``gdexample."
"cpp``. Nuevamente, solo mostraremos los métodos que han cambiado, así que no "
"eliminaré nada de lo que estamos omitiendo:"

#, fuzzy
msgid ""
"Now when the project is compiled, we'll see another property called speed. "
"Changing its value will make the animation go faster or slower. Furthermore, "
"we added a property range which describes in which range the value can be. "
"The first two arguments are the minimum and maximum value and the third is "
"the step size."
msgstr ""
"Ahora, cuando el proyecto se compila, veremos otra propiedad llamada "
"``speed``. Cambiar su valor hará que la animación vaya más rápido o más "
"lento."

#, fuzzy
msgid ""
"For simplicity, we've only used the hint_range of the property method. There "
"are a lot more options to choose from. These can be used to further "
"configure how properties are displayed and set on the Godot side."
msgstr ""
"Para simplificar, hemos omitido los parámetros opcionales en la llamada al "
"método `register_property<class, type>`. Estos parámetros son ``rpc_mode``, "
"``usage``, ``hint`` y ``hint_string``. Estos se pueden utilizar para "
"configurar aún más cómo se muestran y establecen las propiedades en el lado "
"de Godot."

msgid "Signals"
msgstr "Señales"

#, fuzzy
msgid ""
"Last but not least, signals fully work in GDExtension as well. Having your "
"extension react to a signal given out by another object requires you to call "
"``connect`` on that object. We can't think of a good example for our "
"wobbling Godot icon, we would need to showcase a far more complete example."
msgstr ""
"Por último, pero no menos importante, las señales (signals) también "
"funcionan completamente en GDNative. Para que tu módulo reaccione a una "
"señal emitida por otro objeto, debes llamar a ``connect`` en ese objeto. No "
"se nos ocurre un buen ejemplo para nuestro icono de Godot tembloroso; "
"necesitaríamos mostrar un ejemplo mucho más completo."

msgid "This is the required syntax:"
msgstr "Esta es la sintaxis requerida:"

msgid ""
"To connect our signal ``the_signal`` from some other node with our method "
"``my_method``, we need to provide the ``connect`` method with the name of "
"the signal and a ``Callable``. The ``Callable`` holds information about an "
"object on which a method can be called. In our case, it associates our "
"current object instance ``this`` with the method ``my_method`` of the "
"object. Then the ``connect`` method will add this to the observers of "
"``the_signal``. Whenever ``the_signal`` is now emitted, Godot knows which "
"method of which object it needs to call."
msgstr ""

#, fuzzy
msgid ""
"Note that you can only call ``my_method`` if you've previously registered it "
"in your ``_bind_methods`` method. Otherwise Godot will not know about the "
"existence of ``my_method``."
msgstr ""
"Ten en cuenta que solo puedes llamar a ``my_method`` si previamente lo has "
"registrado en tu método ``_register_methods``."

msgid ""
"To learn more about ``Callable``, check out the class reference here: :ref:"
"`Callable <class_Callable>`."
msgstr ""

msgid ""
"Having your object sending out signals is more common. For our wobbling "
"Godot icon, we'll do something silly just to show how it works. We're going "
"to emit a signal every time a second has passed and pass the new location "
"along."
msgstr ""
"Enviar señales desde tu objeto es más común. Para nuestro icono de Godot "
"tembloroso, haremos algo simple solo para mostrar cómo funciona. Emitiremos "
"una señal cada vez que pase un segundo y pasaremos la nueva ubicación a lo "
"largo de ella."

msgid ""
"In our ``gdexample.h`` header file, we need to define a new member "
"``time_emit``:"
msgstr ""
"En nuestro archivo de encabezado ``gdexample.h``, necesitamos definir un "
"nuevo miembro llamado ``time_emit``:"

msgid ""
"This time, the changes in ``gdexample.cpp`` are more elaborate. First, "
"you'll need to set ``time_emit = 0.0;`` in either our ``_init`` method or in "
"our constructor. We'll look at the other 2 needed changes one by one."
msgstr ""
"Esta vez, los cambios en ``gdexample.cpp`` son más elaborados. Primero, "
"necesitarás establecer ``time_emit = 0.0;`` ya sea en nuestro método "
"``_init`` o en nuestro constructor. Veremos los otros 2 cambios necesarios "
"uno por uno."

#, fuzzy
msgid ""
"In our ``_bind_methods`` method, we need to declare our signal. This is done "
"as follows:"
msgstr ""
"En nuestro método ``_register_methods``, debemos declarar nuestra señal. "
"Esto se hace de la siguiente manera:"

msgid ""
"Here, our ``ADD_SIGNAL`` macro can be a single call with a ``MethodInfo`` "
"argument. ``MethodInfo``'s first parameter will be the signal's name, and "
"its remaining parameters are ``PropertyInfo`` types which describe the "
"essentials of each of the method's parameters. ``PropertyInfo`` parameters "
"are defined with the data type of the parameter, and then the name that the "
"parameter will have by default."
msgstr ""

msgid ""
"So here, we add a signal, with a ``MethodInfo`` which names the signal "
"\"position_changed\". The ``PropertyInfo`` parameters describe two essential "
"arguments, one of type ``Object``, the other of type ``Vector2``, "
"respectively named \"node\" and \"new_pos\"."
msgstr ""

msgid "Next, we'll need to change our ``_process`` method:"
msgstr "A continuación, necesitaremos cambiar nuestro método ``_process``:"

msgid ""
"After a second has passed, we emit our signal and reset our counter. We can "
"add our parameter values directly to ``emit_signal``."
msgstr ""
"Después de haber pasado un segundo, emitimos nuestra señal y reiniciamos "
"nuestro contador. Podemos agregar los valores de los parámetros directamente "
"a ``emit_signal``."

#, fuzzy
msgid ""
"Once the GDExtension library is compiled, we can go into Godot and select "
"our sprite node. In the **Node** dock, we can find our new signal and link "
"it up by pressing the **Connect** button or double-clicking the signal. "
"We've added a script on our main node and implemented our signal like this:"
msgstr ""
"Una vez que la biblioteca GDNative esté compilada, podemos ir a Godot y "
"seleccionar nuestro nodo sprite. En el área de **Nodos** (Node), podemos "
"encontrar nuestra nueva señal y vincularla presionando el botón **Conectar** "
"o haciendo doble clic en la señal. Hemos agregado un script en nuestro nodo "
"principal e implementado nuestra señal de la siguiente manera:"

msgid "Every second, we output our position to the console."
msgstr "Cada segundo, mostramos nuestra posición en la consola."

msgid "Next steps"
msgstr "Siguientes pasos"

#, fuzzy
msgid ""
"We hope the above example showed you the basics. You can build upon this "
"example to create full-fledged scripts to control nodes in Godot using C++."
msgstr ""
"Lo anterior es solo un ejemplo simple, pero esperamos que te muestre los "
"conceptos básicos. Puedes desarrollar a partir de este ejemplo para crear "
"scripts completos que controlen nodos en Godot utilizando C++."

msgid "Translation status"
msgstr "Estado de traducción"
