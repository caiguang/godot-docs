# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Using CharacterBody2D/3D"
msgstr "Usando KinematicBody2D"

msgid "Introduction"
msgstr "Introducción"

#, fuzzy
msgid ""
"Godot offers several collision objects to provide both collision detection "
"and response. Trying to decide which one to use for your project can be "
"confusing. You can avoid problems and simplify development if you understand "
"how each of them works and what their pros and cons are. In this tutorial, "
"we'll look at the :ref:`CharacterBody2D <class_CharacterBody2D>` node and "
"show some examples of how to use it."
msgstr ""
"Godot ofrece una variedad de objetos de colisión para proveer detección y "
"respuesta a colisiones. Tratar de decidir cuál usar para tu proyecto puede "
"ser confuso. Puedes evitar problemas y simplificar el desarrollo si "
"comprendes cómo funciona cada uno de ellos y cuáles son sus pros y contras. "
"En este tutorial, veremos el nodo :ref:`KinematicBody2D "
"<class_KinematicBody2D>` y mostraremos algunos ejemplos de cómo usarlos."

msgid ""
"While this document uses ``CharacterBody2D`` in its examples, the same "
"concepts apply in 3D as well."
msgstr ""

#, fuzzy
msgid "What is a character body?"
msgstr "¿Qué es RigidBody?"

#, fuzzy
msgid ""
"``CharacterBody2D`` is for implementing bodies that are controlled via code. "
"Character bodies detect collisions with other bodies when moving, but are "
"not affected by engine physics properties, like gravity or friction. While "
"this means that you have to write some code to create their behavior, it "
"also means you have more precise control over how they move and react."
msgstr ""
"``KinematicBody2D`` está para implementar cuerpos que serán controlados por "
"código. Pueden detectar colisiones con otros cuerpos cuando se mueven, pero "
"no son afectados por propiedades del motor de físicas como la gravedad o "
"fricción. Esto quiere decir que deberás escribir algo de código para crear "
"su comportamiento, pero también significa que podrás tener un control más "
"preciso sobre cómo se mueven y reaccionan."

#, fuzzy
msgid ""
"This document assumes you're familiar with Godot's various physics bodies. "
"Please read :ref:`doc_physics_introduction` first, for an overview of the "
"physics options."
msgstr ""
"Este documento asume que los varios cuerpos físicos de Godot te son "
"familiares. Por favor lee primero :ref:`doc_physics_introduction`."

#, fuzzy
msgid ""
"A `CharacterBody2D` can be affected by gravity and other forces, but you "
"must calculate the movement in code. The physics engine will not move a "
"`CharacterBody2D`."
msgstr ""
"Un `KinematicBody2D` puede ser afectado por la gravedad y otras fuerzas, "
"pero deberás calcular su movimiento por código. El motor de física no moverá "
"un `KinematicBody2D`."

msgid "Movement and collision"
msgstr "Movimiento y Colisión"

#, fuzzy
msgid ""
"When moving a ``CharacterBody2D``, you should not set its ``position`` "
"property directly. Instead, you use the ``move_and_collide()`` or "
"``move_and_slide()`` methods. These methods move the body along a given "
"vector and detect collisions."
msgstr ""
"Cuando mueves un ``KinematicBody2D`` no debes cambiar su propiedad "
"``position`` directamente. En lugar de eso , debes usar los métodos "
"``move_And_collide()`` o ``move_and_slide()``. Estos métodos mueven el "
"cuerpo a lo largo de un vector dado y se detendrán inmediatamente si se "
"detecta una colisión con otro cuerpo. Luego de que un KinematicBody2D ha "
"colisionado, cualquier *respuesta a colisión* deberá ser manejada "
"manualmente."

#, fuzzy
msgid ""
"You should handle physics body movement in the ``_physics_process()`` "
"callback."
msgstr ""
"Sólo debes hacer el movimiento del Kinematic Body en la llamada de "
"``_physics_process()``."

msgid ""
"The two movement methods serve different purposes, and later in this "
"tutorial, you'll see examples of how they work."
msgstr ""
"Ambos métodos de movimiento tienen diferentes propósitos, y más adelante se "
"mostrarán ejemplos de cómo funcionan."

#, fuzzy
msgid "move_and_collide"
msgstr "``move_and_collide``"

#, fuzzy
msgid ""
"This method takes one required parameter: a :ref:`Vector2 <class_Vector2>` "
"indicating the body's relative movement. Typically, this is your velocity "
"vector multiplied by the frame timestep (``delta``). If the engine detects a "
"collision anywhere along this vector, the body will immediately stop moving. "
"If this happens, the method will return a :ref:`KinematicCollision2D "
"<class_KinematicCollision2D>` object."
msgstr ""
"Este método toma un sólo parámetro: un :ref:`Vector2 <class_Vector2>` que "
"indica el movimiento relativo del cuerpo. Típicamente, este es tu vector "
"velocidad multiplicado por el timestep del frame actual (``delta``). Si el "
"motor detecta una colisión en cualquier parte del trayecto indicado por el "
"vector, el cuerpo se detendrá inmediatamente. Si esto sucede, el método "
"retorna un objeto :ref:`KinematicCollision2D <class_KinematicCollision2D>`."

msgid ""
"``KinematicCollision2D`` is an object containing data about the collision "
"and the colliding object. Using this data, you can calculate your collision "
"response."
msgstr ""
"``KinematicCollision2D`` es un objeto que contiene datos sobre la colisión y "
"el objeto con el cual se colisiona. Utiliza estos datos para calcular la "
"respuesta a la colisión."

msgid ""
"``move_and_collide`` is most useful when you just want to move the body and "
"detect collision, but don't need any automatic collision response. For "
"example, if you need a bullet that ricochets off a wall, you can directly "
"change the angle of the velocity when you detect a collision. See below for "
"an example."
msgstr ""

#, fuzzy
msgid "move_and_slide"
msgstr "``move_and_slide``"

msgid ""
"The ``move_and_slide()`` method is intended to simplify the collision "
"response in the common case where you want one body to slide along the "
"other. It is especially useful in platformers or top-down games, for example."
msgstr ""
"El método ``move_and_slide()`` tiene como objetivo simplificar la respuesta "
"a colisiones en el caso común donde quieres que un cuerpo se deslice sobre "
"otro. Este es particularmente útil en juegos de plataformas o de vista "
"superior, por ejemplo."

msgid ""
"When calling ``move_and_slide()``, the function uses a number of node "
"properties to calculate its slide behavior. These properties can be found in "
"the Inspector, or set in code."
msgstr ""

#, fuzzy
msgid "``velocity`` - *default value:* ``Vector2( 0, 0 )``"
msgstr "``up_direction`` - *valor por defecto:* ``Vector2( 0, 0 )``"

msgid ""
"This property represents the body's velocity vector in pixels per second. "
"``move_and_slide()`` will modify this value automatically when colliding."
msgstr ""

#, fuzzy
msgid "``motion_mode`` - *default value:* ``MOTION_MODE_GROUNDED``"
msgstr "``max_slides`` - *valor por defecto:* ``4``"

#, fuzzy
msgid ""
"This property is typically used to distinguish between side-scrolling and "
"top-down movement. When using the default value, you can use the "
"``is_on_floor()``, ``is_on_wall()``, and ``is_on_ceiling()`` methods to "
"detect what type of surface the body is in contact with, and the body will "
"interact with slopes. When using ``MOTION_MODE_FLOATING``, all collisions "
"will be considered \"walls\"."
msgstr ""
"Este parámetro permite definir qué superficies debe considerar como suelo el "
"motor de físicas. Al establecerlo puedes utilizar los métodos "
"``is_on_floor()`` (si está en el suelo), ``is_on_wall()`` (si está en la "
"pared) , y ``is_on_ceiling()`` (si está en el techo) para detectar el tipo "
"de superficie con la que hay contacto. El valor por defecto significa que "
"todas las superficies son consideradas paredes."

#, fuzzy
msgid "``up_direction`` - *default value:* ``Vector2( 0, -1 )``"
msgstr "``up_direction`` - *valor por defecto:* ``Vector2( 0, 0 )``"

#, fuzzy
msgid ""
"This property allows you to define what surfaces the engine should consider "
"being the floor. Its value lets you use the ``is_on_floor()``, "
"``is_on_wall()``, and ``is_on_ceiling()`` methods to detect what type of "
"surface the body is in contact with. The default value means that the top "
"side of horizontal surfaces will be considered \"ground\"."
msgstr ""
"Este parámetro permite definir qué superficies debe considerar como suelo el "
"motor de físicas. Al establecerlo puedes utilizar los métodos "
"``is_on_floor()`` (si está en el suelo), ``is_on_wall()`` (si está en la "
"pared) , y ``is_on_ceiling()`` (si está en el techo) para detectar el tipo "
"de superficie con la que hay contacto. El valor por defecto significa que "
"todas las superficies son consideradas paredes."

#, fuzzy
msgid "``floor_stop_on_slope`` - *default value:* ``true``"
msgstr "``stop_on_slope`` - *valor por defecto:* ``false``"

msgid ""
"This parameter prevents a body from sliding down slopes when standing still."
msgstr ""
"Este parámetro evita que un cuerpo se deslice por las pendientes cuando está "
"detenido."

#, fuzzy
msgid ""
"``wall_min_slide_angle`` - *default value:* ``0.261799`` (in radians, "
"equivalent to ``15`` degrees)"
msgstr ""
"``floor_max_angle`` - *valor por defecto:* ``0.785398`` (en radianes, "
"equivalente a ``45`` grados)"

msgid ""
"This is the minimum angle where the body is allowed to slide when it hits a "
"slope."
msgstr ""

msgid ""
"``floor_max_angle`` - *default value:* ``0.785398`` (in radians, equivalent "
"to ``45`` degrees)"
msgstr ""
"``floor_max_angle`` - *valor por defecto:* ``0.785398`` (en radianes, "
"equivalente a ``45`` grados)"

msgid ""
"This parameter is the maximum angle before a surface is no longer considered "
"a \"floor.\""
msgstr ""
"Es el ángulo máximo antes de que una superficie deje de ser considerada un "
"\"suelo.\""

msgid ""
"There are many other properties that can be used to modify the body's "
"behavior under specific circumstances. See the :ref:`CharacterBody2D "
"<class_CharacterBody2D>` docs for full details."
msgstr ""

msgid "Detecting collisions"
msgstr "Detectando colisiones"

msgid ""
"When using ``move_and_collide()`` the function returns a "
"``KinematicCollision2D`` directly, and you can use this in your code."
msgstr ""
"Al usar ``move_and_collide()`` la función retorna un "
"``KinematicCollision2D`` directamente, y puedes usarlo en tu código."

#, fuzzy
msgid ""
"When using ``move_and_slide()`` it's possible to have multiple collisions "
"occur, as the slide response is calculated. To process these collisions, use "
"``get_slide_collision_count()`` and ``get_slide_collision()``:"
msgstr ""
"Al usar ``move_and_slide()`` es posible que se produzcan múltiples "
"colisiones, ya que es calculada la respuesta al deslizamiento. Para procesar "
"estas colisiones, utiliza ``get_slide_count()`` y ``get_slide_collision()``:"

#, fuzzy
msgid ""
"`get_slide_collision_count()` only counts times the body has collided and "
"changed direction."
msgstr ""
"`get_slide_count()` sólo cuenta las veces que el cuerpo ha chocado y "
"cambiado de dirección."

msgid ""
"See :ref:`KinematicCollision2D <class_KinematicCollision2D>` for details on "
"what collision data is returned."
msgstr ""
"Mira :ref:`KinematicCollision2D <class_KinematicCollision2D>` para más "
"detalles sobre que datos de colisión son retornados."

msgid "Which movement method to use?"
msgstr "¿Cuál método de movimiento hay que usar?"

#, fuzzy
msgid ""
"A common question from new Godot users is: \"How do you decide which "
"movement function to use?\" Often, the response is to use "
"``move_and_slide()`` because it seems simpler, but this is not necessarily "
"the case. One way to think of it is that ``move_and_slide()`` is a special "
"case, and ``move_and_collide()`` is more general. For example, the following "
"two code snippets result in the same collision response:"
msgstr ""
"Una duda común para los usuarios nuevos de Godot es: \"¿Cómo decidir qué "
"función de movimiento usar?\". Frecuentemente, la respuesta es usar "
"``move_and_slide()`` porque es más \"simple\", pero esto no quiere decir que "
"siempre sea así. Un modo de verlo es que ``move_and_slide()`` es un caso "
"especial, y ``move_and_collide()`` es más general. Para poner un ejemplo, "
"los siguientes dos fragmentos de código producen la misma respuesta a "
"colisiones:"

msgid ""
"Anything you do with ``move_and_slide()`` can also be done with "
"``move_and_collide()``, but it might take a little more code. However, as "
"we'll see in the examples below, there are cases where ``move_and_slide()`` "
"doesn't provide the response you want."
msgstr ""
"Cualquier cosa hecha con ``move_and_slide()`` se puede hacer también con "
"``move_and_collide()``, pero puede requerir un poco más de código. Sin "
"embargo, como veremos en los siguientes ejemplos, hay casos en los que "
"``move_and_slide()`` no provee la respuesta deseada."

#, fuzzy
msgid ""
"In the example above, ``move_and_slide()`` automatically alters the "
"``velocity`` variable. This is because when the character collides with the "
"environment, the function recalculates the speed internally to reflect the "
"slowdown."
msgstr ""
"En el ejemplo de arriba, asignamos la velocidad que retorna "
"``move_and_slide()`` a la variable ``velocity``. Esto se debe a que cuando "
"el personaje colisiona con el entorno, la función internamente vuelve a "
"calcular la velocidad para reflejar la desaceleración."

msgid ""
"For example, if your character fell on the floor, you don't want it to "
"accumulate vertical speed due to the effect of gravity. Instead, you want "
"its vertical speed to reset to zero."
msgstr ""
"Por ejemplo, si tu personaje se cae al suelo, no quieres que este acumule "
"velocidad vertical por efecto de la gravedad. En vez de eso, quieres que su "
"velocidad vertical sea restablecida a cero."

#, fuzzy
msgid ""
"``move_and_slide()`` may also recalculate the kinematic body's velocity "
"several times in a loop as, to produce a smooth motion, it moves the "
"character and collides up to five times by default. At the end of the "
"process, the character's new velocity is available for use on the next frame."
msgstr ""
"``move_and_slide()`` también puede recalcular la velocidad del cuerpo "
"cinemático varias veces en un bucle ya que, para producir un movimiento "
"suave, mueve al personaje y colisiona hasta cinco veces por defecto. Al "
"final del proceso, la función devuelve la nueva velocidad del personaje que "
"podemos almacenar en nuestra variable ``velocity``, y usarla en el siguiente "
"frame."

msgid "Examples"
msgstr "Ejemplos"

msgid ""
"To see these examples in action, download the sample project: "
"`character_body_2d_starter.zip <https://github.com/godotengine/godot-docs-"
"project-starters/releases/download/latest-4.x/character_body_2d_starter."
"zip>`_"
msgstr ""

msgid "Movement and walls"
msgstr "Movimiento y paredes"

#, fuzzy
msgid ""
"If you've downloaded the sample project, this example is in \"basic_movement."
"tscn\"."
msgstr ""
"Si has descargado el proyecto, este ejemplo está en la escena "
"\"BasicMovement.tscn\"."

#, fuzzy
msgid ""
"For this example, add a ``CharacterBody2D`` with two children: a "
"``Sprite2D`` and a ``CollisionShape2D``. Use the Godot \"icon.svg\" as the "
"Sprite2D's texture (drag it from the Filesystem dock to the *Texture* "
"property of the ``Sprite2D``). In the ``CollisionShape2D``'s *Shape* "
"property, select \"New RectangleShape2D\" and size the rectangle to fit over "
"the sprite image."
msgstr ""
"Para este ejemplo, añade un ``KinematicBody2D`` con dos hijos: un ``Sprite`` "
"y un ``CollisionShape2D``. Usa el \"icon.png\" de Godot como textura del "
"Sprite (arrástralo desde el panel de Sistema de Archivos a la propiedad "
"*Texture* del ``Sprite``). En la propiedad *Shape* de ``CollisionShape2D``, "
"selecciona \"Nuevo RectangleShape2D\" y redimensiona el rectángulo para que "
"quepa sobre la imagen del sprite."

msgid ""
"See :ref:`doc_2d_movement` for examples of implementing 2D movement schemes."
msgstr ""
"Ver :ref:`doc_2d_movement` para más ejemplos de técnicas para implementar "
"movimiento en 2D."

#, fuzzy
msgid "Attach a script to the CharacterBody2D and add the following code:"
msgstr "Anexa un script al KinematicBody2D y agrega el siguiente código:"

#, fuzzy
msgid ""
"Run this scene and you'll see that ``move_and_collide()`` works as expected, "
"moving the body along the velocity vector. Now let's see what happens when "
"you add some obstacles. Add a :ref:`StaticBody2D <class_StaticBody2D>` with "
"a rectangular collision shape. For visibility, you can use a Sprite2D, a "
"Polygon2D, or turn on \"Visible Collision Shapes\" from the \"Debug\" menu."
msgstr ""
"Ejecuta esta escena y verás que ``move_And_collide()`` funciona como es "
"esperado, moviendo el cuerpo a lo largo de lo indicado por el vector "
"velocidad. Ahora veamos qué sucede cuando agregas algunos obstáculos. Coloca "
"un :ref:`StaticBody2D <class_StaticBody2D>` con una CollisionShape2D "
"rectangular. Para visualizarlo puedes utilizar un Sprite, un Polygon2D o "
"activa la opción \"Ver Formas de Colisión\" del menú \"Depurar\"."

#, fuzzy
msgid ""
"Run the scene again and try moving into the obstacle. You'll see that the "
"``CharacterBody2D`` can't penetrate the obstacle. However, try moving into "
"the obstacle at an angle and you'll find that the obstacle acts like glue - "
"it feels like the body gets stuck."
msgstr ""
"Ejecuta la escena nuevamente e intenta moverte contra el obstáculo, verás "
"que el ``KinematicBody2D`` no puede penetrarlo. Ahora intenta moverte contra "
"un obstáculo con la superficie en ángulo y verás que se \"adhiere\" en el "
"obstáculo, como si estuviese atascado."

msgid ""
"This happens because there is no *collision response*. "
"``move_and_collide()`` stops the body's movement when a collision occurs. We "
"need to code whatever response we want from the collision."
msgstr ""
"Esto sucede porque no hay *respuesta a la colisión*, ``move_and_collide()`` "
"detiene el movimiento cuando ocurre una colisión. Tenemos que programar la "
"respuesta que queremos cuando eso sucede."

#, fuzzy
msgid "Try changing the function to ``move_and_slide()`` and running again."
msgstr ""
"Intenta cambiar la función a ``move_and_slide(velocity)`` y ejecútala "
"nuevamente. Notar que se ha quitado ``delta`` del cálculo del parámetro "
"velocity."

msgid ""
"``move_and_slide()`` provides a default collision response of sliding the "
"body along the collision object. This is useful for a great many game types, "
"and may be all you need to get the behavior you want."
msgstr ""
"``move_and_slide()`` provee una respuesta a colisión por defecto haciendo "
"que el cuerpo se deslice a lo largo del objeto impactado. Esto es útil para "
"muchos tipos de juegos y puede que sea todo lo necesario para obtener el "
"comportamiento deseado."

msgid "Bouncing/reflecting"
msgstr "Rebote/reflejo"

#, fuzzy
msgid ""
"What if you don't want a sliding collision response? For this example "
"(\"bounce_and_collide.tscn\" in the sample project), we have a character "
"shooting bullets and we want the bullets to bounce off the walls."
msgstr ""
"¿Qué sucede si no quieres una respuesta a colisión tipo deslizar? Para este "
"ejemplo (ver \"BounceandCollide.tscn\" en el mismo proyecto), tenemos un "
"personaje disparando balas y queremos que las balas reboten al golpear las "
"paredes."

msgid ""
"This example uses three scenes. The main scene contains the Player and "
"Walls. The Bullet and Wall are separate scenes so that they can be instanced."
msgstr ""
"Este ejemplo utiliza tres escenas, la escena principal contiene el Player "
"(jugador) y las Walls (paredes), las Bullet (balas) y paredes son escenas "
"separadas que pueden ser instanciadas."

#, fuzzy
msgid ""
"The Player is controlled by the ``w`` and ``s`` keys for forward and back. "
"Aiming uses the mouse pointer. Here is the code for the Player, using "
"``move_and_slide()``:"
msgstr ""
"Player es controlado con las teclas `w` y `s` para moverse hacia adelante y "
"hacia atrás, se apunta con el puntero del ratón. Este es el código de "
"Player, usando ``move_and_slide()``:"

msgid "And the code for the Bullet:"
msgstr "Y el código para Bullet:"

#, fuzzy
msgid ""
"The action happens in ``_physics_process()``. After using "
"``move_and_collide()``, if a collision occurs, a ``KinematicCollision2D`` "
"object is returned (otherwise, the return is ``null``)."
msgstr ""
"La acción sucede en ``_physics_process()``. Si sucede una colisión después "
"de utilizar ``move_and_collide()``, la función retornará un objeto "
"``KinematicCollision2D`` (de otro modo retornará ``null``)."

msgid ""
"If there is a returned collision, we use the ``normal`` of the collision to "
"reflect the bullet's ``velocity`` with the ``Vector2.bounce()`` method."
msgstr ""
"Si retorna un objeto, usaremos la ``normal`` de la colisión para reflejar la "
"``velocity`` de Bullet con le método ``Vector2.bounce()``."

msgid ""
"If the colliding object (``collider``) has a ``hit`` method, we also call "
"it. In the example project, we've added a flashing color effect to the Wall "
"to demonstrate this."
msgstr ""
"Si el objeto que colisiona tiene un método ``hit`` también lo llamaremos. En "
"el proyecto agregamos un efecto de destello de color a Wall para demostrar "
"esto."

msgid "Platformer movement"
msgstr "Movimiento de juego de plataformas"

#, fuzzy
msgid ""
"Let's try one more popular example: the 2D platformer. ``move_and_slide()`` "
"is ideal for quickly getting a functional character controller up and "
"running. If you've downloaded the sample project, you can find this in "
"\"platformer.tscn\"."
msgstr ""
"Intentemos hacer un ejemplo más popular: El juego de plataformas 2D. "
"``move_and_slide()`` es ideal para tener rápidamente un controlador de "
"personaje funcional. Si has descargado el proyecto de ejemplo, lo podrás "
"encontrar en \"Platformer.tscn\"."

#, fuzzy
msgid ""
"For this example, we'll assume you have a level made of one or more "
"``StaticBody2D`` objects. They can be any shape and size. In the sample "
"project, we're using :ref:`Polygon2D <class_Polygon2D>` to create the "
"platform shapes."
msgstr ""
"Para este ejemplo, asumiremos que tienes un nivel hecho de objetos "
"``StaticBody2D``, estos pueden ser de cualquier forma y tamaño. En el "
"proyecto utilizamos :ref:`Polygon2D <class_Polygon2D>` para crear las "
"figuras de las plataformas."

msgid "Here's the code for the player body:"
msgstr "Este es el código para el jugador:"

msgid ""
"In this code we're using ``move_and_slide()`` as described above - to move "
"the body along its velocity vector, sliding along any collision surfaces "
"such as the ground or a platform. We're also using ``is_on_floor()`` to "
"check if a jump should be allowed. Without this, you'd be able to \"jump\" "
"in midair; great if you're making Flappy Bird, but not for a platformer game."
msgstr ""

msgid ""
"There is a lot more that goes into a complete platformer character: "
"acceleration, double-jumps, coyote-time, and many more. The code above is "
"just a starting point. You can use it as a base to expand into whatever "
"movement behavior you need for your own projects."
msgstr ""

msgid "Translation status"
msgstr "Estado de traducción"
