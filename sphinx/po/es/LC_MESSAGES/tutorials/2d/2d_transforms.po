# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Viewport and canvas transforms"
msgstr "Transformación de Viewport y Canvas"

msgid "Introduction"
msgstr "Introducción"

msgid ""
"This is an overview of the 2D transforms going on for nodes from the moment "
"they draw their content locally to the time they are drawn onto the screen. "
"This overview discusses very low level details of the engine."
msgstr ""
"Esto es un resumen de lo que sucede con las matrices de transformación 2D en "
"los nodos desde el momento en que dibujan su contenido localmente hasta el "
"momento en que se muestran en pantalla. Aquí se mostrarán detalles de muy "
"bajo nivel de el motor."

msgid ""
"The goal of this tutorial is to teach a way for feeding input events to the "
"Input with a position in the correct coordinate system."
msgstr ""

msgid ""
"A more extensive description of all coordinate systems and 2d transforms is "
"available in :ref:`doc_2d_coordinate_systems`."
msgstr ""

msgid "Canvas transform"
msgstr "Transformación del canvas"

msgid ""
"As mentioned in the previous tutorial, :ref:`doc_canvas_layers`, every "
"CanvasItem node (remember that Node2D and Control based nodes use CanvasItem "
"as their common root) will reside in a *Canvas Layer*. Every canvas layer "
"has a transform (translation, rotation, scale, etc.) that can be accessed as "
"a :ref:`Transform2D <class_Transform2D>`."
msgstr ""
"Como se mencionó en el tutorial anterior, :ref:`doc_canvas_layers`, cada "
"nodo CanvasItem (recuerda que los nodos basados en Node2D y Control usan "
"CanvasItem como su raíz común) residirá en una *Canvas Layer*. Cada canvas "
"layer tiene una transformación (translation, rotation, scale, etc.) a la que "
"se puede acceder mediante :ref:`Transform2D <class_Transform2D>`."

msgid ""
"Also covered in the previous tutorial, nodes are drawn by default in Layer "
"0, in the built-in canvas. To put nodes in a different layer, a :ref:"
"`CanvasLayer <class_CanvasLayer>` node can be used."
msgstr ""
"Esto también está cubierto por el tutorial anterior, los nodos son dibujados "
"por defecto en Layer (capa) 0, en el \"built-in canvas\" (el canvas por "
"defecto del viewport). Para colocar nodos en una capa distinta, se debe "
"utilizar una :ref:`CanvasLayer <class_CanvasLayer>`."

msgid "Global canvas transform"
msgstr "Transformación global del canvas"

#, fuzzy
msgid ""
"Viewports also have a Global Canvas transform (also a :ref:`Transform2D "
"<class_Transform2D>`). This is the master transform and affects all "
"individual *Canvas Layer* transforms. Generally, this is primarily used in "
"Godot's CanvasItem Editor."
msgstr ""
"Los Viewports también tienen una transformación Global Canvas (también un :"
"ref:`Transform2D <class_Transform2D>`). Esta es la transformación principal "
"y afecta a todas las transformaciones individuales de *Canvas Layer*. "
"Generalmente esta transformación no es de mucha utilidad, pero se usa en el "
"Editor de CanvasItem del editor de Godot."

msgid "Stretch transform"
msgstr "Transformación de estiramiento"

msgid ""
"Finally, viewports have a *Stretch Transform*, which is used when resizing "
"or stretching the screen. This transform is used internally (as described "
"in :ref:`doc_multiple_resolutions`), but can also be manually set on each "
"viewport."
msgstr ""
"Por último, los Viewports tienen un *Stretch Transform*, que se utiliza al "
"cambiar de tamaño o estirar la pantalla. Esta transformación se utiliza "
"internamente (como se describe en :ref:`doc_multiple_resolutions`) pero "
"también se puede configurar manualmente en cada Viewport."

#, fuzzy
msgid ""
"Input events are multiplied by this transform but lack the ones above. To "
"convert InputEvent coordinates to local CanvasItem coordinates, the :ref:"
"`CanvasItem.make_input_local() <class_CanvasItem_method_make_input_local>` "
"function was added for convenience."
msgstr ""
"Eventos de entrada (Input events) recibidos en el callback de :ref:`MainLoop."
"_input_event() <class_MainLoop_method__input_event>` son multiplicados por "
"este transform, pero carecen de los presentados anteriormente. Para "
"convertir fácilmente coordenadas de InputEvent a coordenadas locales de "
"CanvasItem, se agregó la función :ref:`CanvasItem.make_input_local() "
"<class_CanvasItem_method_make_input_local>`."

#, fuzzy
msgid "Window transform"
msgstr "transformación"

msgid ""
"The root viewport is a :ref:`Window <class_Window>`. In order to scale and "
"position the *Window's* content as described in :ref:"
"`doc_multiple_resolutions`, each :ref:`Window <class_Window>` contains a "
"*window transform*. It is for example responsible for the black bars at the "
"*Window's* sides so that the *Viewport* is displayed with a fixed aspect "
"ratio."
msgstr ""

msgid "Transform order"
msgstr "Orden de Transform"

#, fuzzy
msgid ""
"To convert a CanvasItem local coordinate to an actual screen coordinate, the "
"following chain of transforms must be applied:"
msgstr ""
"Para que un sistema de coordenadas locales en CanvasItem se convierta en "
"coordenadas de pantalla, se debe aplicar la siguiente secuencia de "
"transforms:"

msgid "Transform functions"
msgstr "Funciones de Transform"

msgid ""
"The above graphic shows some available transform functions. All transforms "
"are directed from right to left, this means multiplying a transform with a "
"coordinate results in a coordinate system further to the left, multiplying "
"the :ref:`affine inverse <class_Transform2D_method_affine_inverse>` of a "
"transform results in a coordinate system further to the right:"
msgstr ""

msgid ""
"Finally, then, to convert a CanvasItem local coordinates to screen "
"coordinates, just multiply in the following order:"
msgstr ""
"Finalmente, para convertir un CanvasItem de coordenadas locales a "
"coordenadas de pantalla, utilizar el siguiente orden:"

msgid ""
"Keep in mind, however, that it is generally not desired to work with screen "
"coordinates. The recommended approach is to simply work in Canvas "
"coordinates (``CanvasItem.get_global_transform()``), to allow automatic "
"screen resolution resizing to work properly."
msgstr ""
"Tener en cuenta que esto no es aconsejable para trabajar en coordenadas de "
"pantalla. Lo recomendable es simplemente trabajar en coordenadas de Canvas "
"(``CanvasItem.get_global_transform()``), para permitir que el cambio de "
"tamaño/ajuste de resolución funcione de la manera adecuada."

msgid "Feeding custom input events"
msgstr "Generando eventos de entrada personalizados"

#, fuzzy
msgid ""
"It is often desired to feed custom input events to the game. With the above "
"knowledge, to correctly do this in the focused window, it must be done the "
"following way:"
msgstr ""
"Usualmente es deseable crear eventos de entradas personalizados para enviar "
"al árbol de escenas. Para hacer esto correctamente, se debe hacer de la "
"siguiente manera:"

msgid "Translation status"
msgstr "Estado de traducción"
