# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating script templates"
msgstr "创建脚本模板"

msgid ""
"Godot provides a way to use script templates as seen in the ``Script Create "
"Dialog`` while creating a new script:"
msgstr ""
"Godot 提供了一种在创建新脚本时使用脚本模板的方法， 在 ``脚本创建对话框`` 中可"
"以看到："

#, fuzzy
msgid ""
"A set of built-in script templates are provided with the editor, but it is "
"also possible to create new ones and set them by default, both per project "
"and at editor scope."
msgstr ""
"默认提供一组默认脚本模板, 但也可以针对每个项目和编辑器修改现有脚本模板并创建"
"新模板."

msgid ""
"Templates are linked to a specific node type, so when you create a script "
"you will only see the templates corresponding to that particular node, or "
"one of its parent types. For example, if you are creating a script for a "
"CharacterBody3D, you will only see templates defined for CharacterBody3Ds, "
"Node3Ds or Nodes."
msgstr ""

msgid "Locating the templates"
msgstr "模板所在位置"

msgid "There are two places where templates can be managed."
msgstr "有两个地方可以管理模板."

msgid "Editor-defined templates"
msgstr "编辑器定义的模板"

msgid ""
"These are available globally throughout any project. The location of these "
"templates are determined per each OS:"
msgstr "这些在任何项目中都可以全局使用. 这些模板的位置是根据操作系统而确定的:"

msgid "Windows: ``%APPDATA%\\Godot\\script_templates\\``"
msgstr "Windows: ``%APPDATA%\\Godot\\script_templates\\``"

msgid "Linux: ``$HOME/.config/godot/script_templates/``"
msgstr "Linux: ``$HOME/.config/godot/script_templates/``"

msgid "macOS: ``$HOME/Library/Application Support/Godot/script_templates/``"
msgstr "macOS: ``$HOME/Library/Application Support/Godot/script_templates/``"

msgid ""
"If no ``script_templates`` is detected, Godot will create a default set of "
"built-in templates automatically, so this logic can be used to reset the "
"default templates in case you've accidentally overwritten them."
msgstr ""
"如果未检测到 ``script_templates`` ,Godot将自动创建一组默认的内置模板. 在默认"
"模板被意外覆盖的时候可以用这个方法重置."

msgid "Project-defined templates"
msgstr "项目定义的模板"

msgid ""
"The default path to search for templates is the ``res://script_templates/`` "
"directory. The path can be changed by configuring the ``editor/"
"script_templates_search_path`` setting in the :ref:`ProjectSettings "
"<class_ProjectSettings>`, both via code and the editor."
msgstr ""
"搜索模板的默认路径是 ``res://script_templates/`` 文件夹. 可以通过代码和编辑器"
"在 :ref:`项目设置 <class_ProjectSettings>` 中配置 ``editor/"
"script_templates_search_path`` 设置来更改路径."

msgid ""
"If no ``script_templates`` directory is found within a project, it is simply "
"ignored."
msgstr "如果在项目中未找到 ``script_templates`` 文件夹, 则将其忽略."

#, fuzzy
msgid "Template organization and naming"
msgstr "类型转换和强制转换"

msgid ""
"Both editor and project defined templates are organized in the following way:"
msgstr ""

msgid "where:"
msgstr "位置:"

msgid ""
"``template_path`` is one of the 2 locations discussed in the previous two "
"sections"
msgstr ""

msgid ""
"``node_type`` is the node it will apply to (for example, :ref:`Node "
"<class_Node>`, or :ref:`CharacterBody3D <class_CharacterBody3D>`)"
msgstr ""

msgid ""
"``file`` is the custom name you can chose for the template (for example: "
"``platformer_movement`` or ``smooth_camera``)"
msgstr ""

msgid ""
"``extension``: will indicate which language the template will apply to (it "
"should be ``gd`` for GDScript or ``cs`` for C#)"
msgstr ""

msgid "For example:"
msgstr "例如："

msgid "``template_scripts/Node/smooth_camera.gd``"
msgstr "``template_scripts/Node/smooth_camera.gd``"

msgid "``template_scripts/CharacterBody3D/platformer_movement.gd``"
msgstr "``template_scripts/CharacterBody3D/platformer_movement.gd``"

msgid "Default behaviour and overriding it"
msgstr "默认行为与覆盖"

msgid "By default:"
msgstr "默认："

msgid ""
"the template's name is the same as the file name (minus the extension, "
"prettyfied)"
msgstr ""

msgid "the description is empty"
msgstr "下面是这些选项的说明"

msgid "the space indent is set to 4"
msgstr ""

msgid "the template will not be set as the default for the given node"
msgstr "在这个演示中, 所有这些选项都可以保持默认值"

msgid ""
"It is possible to customize this behaviour by adding meta headers at the "
"start of your file, like this:"
msgstr ""

msgid ""
"In this case, the name will be set to \"Platformer movement\", with the "
"given custom description, and it will be set as the default template for the "
"node in which directory it has been saved."
msgstr ""

msgid ""
"This is an example of utilizing custom templates at editor and project level:"
msgstr ""

msgid ""
"The script templates have the same extension as the regular script files. "
"This may lead to an issue of a script parser treating those templates as "
"actual scripts within a project. To avoid this, make sure to ignore the "
"directory containing them by creating an empty ``.gdignore`` file. The "
"directory won't be visible throughout the project's filesystem anymore, yet "
"the templates can be modified by an external text editor anytime."
msgstr ""
"脚本模板与常规脚本文件具有相同的扩展名。脚本解析器将这些模板视为项目中的实际"
"脚本，这可能会导致问题。为了避免这种情况，创建空的 .gdignore 文件以忽略包含它"
"的目录。该目录在整个项目的文件系统中不可见，但模板仍可以通过外部文本编辑器进"
"行修改。"

msgid ""
"By default, every C# file inside the project directory is included in the "
"compilation. Script templates must be manually excluded from the C# project "
"to avoid build errors. See `Exclude files from the build <https://learn."
"microsoft.com/en-us/visualstudio/msbuild/how-to-exclude-files-from-the-"
"build>`_ in the Microsoft documentation."
msgstr ""

msgid ""
"It is possible to create editor-level templates that have the same level as "
"a project-specific templates, and also that have the same name as a built-in "
"one, all will be shown on the new script dialog."
msgstr ""

msgid "Default template"
msgstr "默认模板"

msgid ""
"To override the default template, create a custom template at editor or "
"project level inside a ``Node`` directory (or a more specific type, if only "
"a subtype wants to be overridden) and start the file with the ``meta-"
"default: true`` header."
msgstr ""

msgid ""
"Only one template can be set as default at the same time for the same node "
"type."
msgstr ""

msgid ""
"The ``Default`` templates for basic Nodes, for both GDScript and C#, are "
"shown here so you can use these as the base for creating other templates:"
msgstr ""
"``默认`` 模板总是根据每种语言动态生成，并且不能配置也不能覆盖，但是你可以使用"
"它们作为创建其他模板的基础："

msgid ""
"The Godot editor provides a set of useful built-in node-specific templates, "
"such as ``basic_movement`` for both :ref:`CharacterBody2D "
"<class_CharacterBody2D>` and :ref:`CharacterBody3D <class_CharacterBody3D>` "
"and ``plugin`` for :ref:`EditorPlugin <class_EditorPlugin>`."
msgstr ""

msgid "List of template placeholders"
msgstr "模板占位符"

msgid ""
"The following describes the complete list of built-in template placeholders "
"which are currently implemented."
msgstr "下面列出当前已实现的所有模板占位符."

msgid "Base placeholders"
msgstr "基本占位符"

msgid "Placeholder"
msgstr "占位符"

msgid "Description"
msgstr "描述"

msgid "``_BINDINGS_NAMESPACE_``"
msgstr "``_BINDINGS_NAMESPACE_``"

#, fuzzy
msgid "The name of the Godot namespace (used in C# only)."
msgstr "新建类的名称(只在 C# 中使用)."

msgid "``_CLASS_``"
msgstr "``_CLASS_``"

msgid "The name of the new class (used in C# only)."
msgstr "新建类的名称(只在 C# 中使用)."

msgid "``_BASE_``"
msgstr "``_BASE_``"

msgid "The base type a new script inherits from."
msgstr "新建脚本的基类型."

msgid "``_TS_``"
msgstr "``_TS_``"

#, fuzzy
msgid ""
"Indentation placeholder. The exact type and number of whitespace characters "
"used for indentation is determined by the ``text_editor/indent/type`` and "
"``text_editor/indent/size`` settings in the :ref:`EditorSettings "
"<class_EditorSettings>` respectively. Can be overridden by the ``meta-space-"
"indent`` header on the template."
msgstr ""
"缩进占位符. 缩进字符的类型和数量分别由 :ref:`EditorSettings "
"<class_EditorSettings>` 中的 ``text_editor/indent/type`` 和 ``text_editor/"
"indent/size`` 两个设置决定."

msgid "Type placeholders"
msgstr "类型占位符"

msgid ""
"There used to be, in Godot 3.x, placeholders for GDScript type hints that "
"would get replaced whenever a template was used to create a new script, such "
"as: ``%INT_TYPE%``, ``%STRING_TYPE%``, ``%FLOAT_TYPE%`` or ``%VOID_RETURN%``."
msgstr ""

msgid ""
"The placeholders no longer work for Godot 4.x, but if the setting "
"``text_editor/completion/add_type_hints`` from :ref:`EditorSettings "
"<class_EditorSettings>` is disabled, type hints for parameters and return "
"types will be automatically removed for a few base types:"
msgstr ""

msgid "``int``"
msgstr "``int``"

msgid "``String``"
msgstr "``String``"

msgid "``Array[String]``"
msgstr "``Array[String]``"

msgid "``float``"
msgstr "``float``"

msgid "``void``"
msgstr "``void``"

msgid "``:=`` will be transformed into ``=``"
msgstr ""

msgid "Translation status"
msgstr "翻译状态"
