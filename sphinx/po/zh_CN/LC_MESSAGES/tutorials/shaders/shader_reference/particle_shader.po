# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Particle shaders"
msgstr "粒子着色器"

#, fuzzy
msgid ""
"Particle shaders are a special type of shader that runs before the object is "
"drawn. They are used for calculating material properties such as color, "
"position, and rotation. They are drawn with any regular material for "
"CanvasItem or Spatial, depending on whether they are 2D or 3D."
msgstr ""
"粒子着色器是一种特殊类型的顶点着色器, 在物体被绘制之前运行. 它们用于计算材质"
"属性, 如颜色, 位置和旋转. 它们与CanvasItem或Spatial的任何常规材质一起绘制, 这"
"取决于它们是2D还是3D."

#, fuzzy
msgid ""
"Particle shaders are unique because they are not used to draw the object "
"itself; they are used to calculate particle properties, which are then used "
"by a CanvasItem or Spatial shader. They contain two processor functions: "
"``start()`` and ``process()``."
msgstr ""
"粒子着色器是独特的, 因为它们不用于绘制对象本身；被用来计算粒子的性质, 然后由"
"空间着色器的画布组件使用. 它们只包含一个顶点处理器函数, 输出多个属性的内置函"
"数(见下文)."

msgid ""
"Unlike other shader types, particle shaders keep the data that was output "
"the previous frame. Therefore, particle shaders can be used for complex "
"effects that take place over multiple frames."
msgstr ""

#, fuzzy
msgid ""
"Particle shaders are only available with GPU-based particle nodes (:ref:"
"`class_GPUParticles2D` and :ref:`class_GPUParticles3D`)."
msgstr ""
"粒子着色器仅在 GLES3 后端中可用。如果您需要在 GLES2 中使用粒子系统，请使用 :"
"ref:`CPUParticles <class_CPUParticles>`\\ 。"

msgid ""
"CPU-based particle nodes (:ref:`class_CPUParticles2D` and :ref:"
"`class_CPUParticles3D`) are *rendered* on the GPU (which means they can use "
"custom CanvasItem or Spatial shaders), but their motion is *simulated* on "
"the CPU."
msgstr ""

msgid "Render modes"
msgstr "渲染模式"

msgid "Render mode"
msgstr "渲染模式"

msgid "Description"
msgstr "描述"

msgid "**keep_data**"
msgstr "**keep_data**"

msgid "Do not clear previous data on restart."
msgstr "不要在重启时清除以前的数据."

msgid "**disable_force**"
msgstr "**disable_force**"

msgid "Disable attractor force."
msgstr ""

msgid "**disable_velocity**"
msgstr "**disable_velocity**"

msgid "Ignore **VELOCITY** value."
msgstr "忽略 **VELOCITY** 值."

#, fuzzy
msgid "**collision_use_scale**"
msgstr "collision_layer"

msgid "Scale the particle's size for collisions."
msgstr "为进行碰撞而缩放粒子的大小。"

msgid "Built-ins"
msgstr "内置"

msgid ""
"Values marked as \"in\" are read-only. Values marked as \"out\" are for "
"optional writing and will not necessarily contain sensible values. Values "
"marked as \"inout\" provide a sensible default value, and can optionally be "
"written to. Samplers are not subjects of writing and they are not marked."
msgstr ""
"标记为 \"in\" 的值是只读的. 标记为 \"out\" 的值是可以选择写入的, 不一定包含合"
"理的值. 标记为 \"inout\" 的值提供一个合理的默认值, 并且可以选择写入. 采样器不"
"是写入的对象, 它们没有被标记."

msgid "Global built-ins"
msgstr "全局内置"

msgid "Global built-ins are available everywhere, including custom functions."
msgstr "全局内置的功能随处可见, 包括自定义功能."

msgid "Built-in"
msgstr "内置"

msgid "in float **TIME**"
msgstr "in float **TIME**"

msgid "Global time, in seconds."
msgstr "全球时间, 以秒为单位."

msgid "in float **PI**"
msgstr "in float **PI**"

msgid ""
"A ``PI`` constant (``3.141592``). A ration of circle's circumference to its "
"diameter and amount of radians in half turn."
msgstr ""

msgid "in float **TAU**"
msgstr "in float **TAU**"

msgid ""
"A ``TAU`` constant (``6.283185``). An equivalent of ``PI * 2`` and amount of "
"radians in full turn."
msgstr ""

msgid "in float **E**"
msgstr "in float **E**"

msgid ""
"A ``E`` constant (``2.718281``). Euler's number and a base of the natural "
"logarithm."
msgstr ""

#, fuzzy
msgid "Start and Process built-ins"
msgstr "顶点内置"

#, fuzzy
msgid ""
"These properties can be accessed from both the ``start()`` and ``process()`` "
"functions."
msgstr ""
"接下来，设置您的 ``vertex`` 函数。粒子着色器只包含一个顶点函数，不包含其他函"
"数。"

msgid "Function"
msgstr "函数"

msgid "in float **LIFETIME**"
msgstr "in float **LIFETIME**"

msgid "Particle lifetime."
msgstr "粒子寿命。"

msgid "in float **DELTA**"
msgstr "in float **DELTA**"

msgid "Delta process time."
msgstr "处理时间差。"

msgid "in uint **NUMBER**"
msgstr "in uint **NUMBER**"

msgid "Unique number since emission start."
msgstr "发射开始后的唯一编号。"

msgid "in uint **INDEX**"
msgstr "in uint **INDEX**"

msgid "Particle index (from total particles)."
msgstr "粒子索引（在所有粒子范围内）。"

msgid "in mat4 **EMISSION_TRANSFORM**"
msgstr "in mat4 **EMISSION_TRANSFORM**"

msgid "Emitter transform (used for non-local systems)."
msgstr "发射器变换（用于非本地坐标系）。"

msgid "in uint **RANDOM_SEED**"
msgstr "in uint **RANDOM_SEED**"

msgid "Random seed used as base for random."
msgstr "随机种子，是随机的基础。"

msgid "inout bool **ACTIVE**"
msgstr "inout bool **ACTIVE**"

#, fuzzy
msgid "``true`` when the particle is active, can be set ``false``."
msgstr "当粒子被激活时为 ``true`` , 可以设置为 ``false`` ."

msgid "inout vec4 **COLOR**"
msgstr "inout vec4 **COLOR**"

msgid ""
"Particle color, can be written to and accessed in mesh's vertex function."
msgstr "粒子的颜色, 可以写入Mesh的顶点函数中, 也可以访问."

msgid "inout vec3 **VELOCITY**"
msgstr "inout vec3 **VELOCITY**"

msgid "Particle velocity, can be modified."
msgstr "粒子速度, 可以修改."

msgid "inout mat4 **TRANSFORM**"
msgstr "inout mat4 **TRANSFORM**"

msgid "Particle transform."
msgstr "粒子变换。"

msgid "inout vec4 **CUSTOM**"
msgstr "inout vec4 **CUSTOM**"

msgid ""
"Custom particle data. Accessible from shader of mesh as **INSTANCE_CUSTOM**."
msgstr "自定义粒子数据。网格的着色器可以使用 **INSTANCE_CUSTOM** 访问。"

msgid "inout float **MASS**"
msgstr "inout float **MASS**"

msgid ""
"Particle mass, intended to be used with attractors. Equals ``1.0`` by "
"default."
msgstr ""

msgid "in vec4 **USERDATAX**"
msgstr "in vec4 **USERDATAX**"

msgid ""
"Vector that enables the integration of supplementary user-defined data into "
"the particle process shader. ``USERDATAX`` are six built-ins identified by "
"number, ``X`` can be numbers between 1 and 6."
msgstr ""

msgid "in uint **FLAG_EMIT_POSITION**"
msgstr "in uint **FLAG_EMIT_POSITION**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle`` function to "
"assign a position to a new particle's transform."
msgstr ""

msgid "in uint **FLAG_EMIT_ROT_SCALE**"
msgstr "in uint **FLAG_EMIT_ROT_SCALE**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle`` function to "
"assign the rotation and scale to a new particle's transform."
msgstr ""

msgid "in uint **FLAG_EMIT_VELOCITY**"
msgstr "in uint **FLAG_EMIT_VELOCITY**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle`` function to "
"assign a velocity to a new particle."
msgstr ""

msgid "in uint **FLAG_EMIT_COLOR**"
msgstr "in uint **FLAG_EMIT_COLOR**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle`` function to "
"assign a color to a new particle."
msgstr ""

msgid "in uint **FLAG_EMIT_CUSTOM**"
msgstr "in uint **FLAG_EMIT_CUSTOM**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle`` function to "
"assign a custom data vector to a new particle."
msgstr ""

#, fuzzy
msgid "in vec3 **EMITTER_VELOCITY**"
msgstr "inout vec3 **VELOCITY**"

#, fuzzy
msgid "Velocity of the Particles node."
msgstr "将它连接到 *Main* 节点。"

#, fuzzy
msgid "in float **INTERPOLATE_TO_END**"
msgstr "in float **ATTENUATION**"

msgid "Value of ``interp_to_end`` property of Particles node."
msgstr ""

#, fuzzy
msgid "in uint **AMOUNT_RATIO**"
msgstr "in uint **FLAG_EMIT_POSITION**"

msgid "Value of ``amount_ratio`` property of Particles node."
msgstr ""

#, fuzzy
msgid ""
"In order to use the ``COLOR`` variable in a StandardMaterial3D, set "
"``vertex_color_use_as_albedo`` to ``true``. In a ShaderMaterial, access it "
"with the ``COLOR`` variable."
msgstr ""
"为了在SpatialMaterial中使用 ``COLOR`` 变量, 将 ``use_vertex_as_albedo`` 设置"
"为 ``true`` . 在ShaderMaterial中, 用 ``COLOR`` 变量访问它."

#, fuzzy
msgid "Start built-ins"
msgstr "顶点内置"

msgid "in bool **RESTART_POSITION**"
msgstr "in bool **RESTART_POSITION**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom position (i."
"e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_POSITION`` flag)."
msgstr ""

msgid "in bool **RESTART_ROT_SCALE**"
msgstr "in bool **RESTART_ROT_SCALE**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom rotation or "
"scale (i.e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_ROT_SCALE`` flag)."
msgstr ""

msgid "in bool **RESTART_VELOCITY**"
msgstr "in bool **RESTART_VELOCITY**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom velocity (i."
"e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_VELOCITY`` flag)."
msgstr ""

msgid "in bool **RESTART_COLOR**"
msgstr "in bool **RESTART_COLOR**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom color (i.e. "
"this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_COLOR`` flag)."
msgstr ""

msgid "in bool **RESTART_CUSTOM**"
msgstr "in bool **RESTART_CUSTOM**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom property (i."
"e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_CUSTOM`` flag)."
msgstr ""

#, fuzzy
msgid "Process built-ins"
msgstr "顶点内置"

msgid "in bool **RESTART**"
msgstr "in bool **RESTART**"

#, fuzzy
msgid "``true`` if the current process frame is first for the particle."
msgstr "``true`` , 如果当前面是正面."

msgid "in bool **COLLIDED**"
msgstr "in bool **COLLIDED**"

#, fuzzy
msgid "``true`` when the particle has collided with a particle collider."
msgstr "``true`` 当粒子必须重新启动时(生命周期循环)."

msgid "in vec3 **COLLISION_NORMAL**"
msgstr "in vec3 **COLLISION_NORMAL**"

msgid ""
"A normal of the last collision. If there is no collision detected it is "
"equal to ``vec3(0.0)``."
msgstr ""

msgid "in float **COLLISION_DEPTH**"
msgstr "in float **COLLISION_DEPTH**"

msgid ""
"A length of normal of the last collision. If there is no collision detected "
"it is equal to ``0.0``."
msgstr ""

msgid "in vec3 **ATTRACTOR_FORCE**"
msgstr "in vec3 **ATTRACTOR_FORCE**"

msgid "A combined force of the attractors at the moment on that particle."
msgstr ""

#, fuzzy
msgid "Process functions"
msgstr "处理器函数"

msgid ""
"``emit_subparticle`` is currently the only custom function supported by "
"particles shaders. It allows users to add a new particle with specified "
"parameters from a sub-emitter. The newly created particle will only use the "
"properties that match the ``flags`` parameter. For example, the following "
"code will emit a particle with a specified position, velocity, and color, "
"but unspecified rotation, scale, and custom value:"
msgstr ""

msgid ""
"bool **emit_subparticle** (mat4 xform, vec3 velocity, vec4 color, vec4 "
"custom, uint flags)"
msgstr ""
"bool **emit_subparticle** (mat4 xform, vec3 velocity, vec4 color, vec4 "
"custom, uint flags)"

msgid "Emits a particle from a sub-emitter."
msgstr ""

msgid "Translation status"
msgstr "翻译状态"
