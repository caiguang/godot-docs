# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "3D antialiasing"
msgstr "3D 抗锯齿"

msgid ""
"Godot also supports antialiasing in 2D rendering. This is covered on the :"
"ref:`doc_2d_antialiasing` page."
msgstr ""
"Godot 还支持在 2D 渲染中的抗锯齿。这部分在 :ref:`doc_2d_antialiasing` 页面中"
"进行了介绍。"

msgid "Introduction"
msgstr "前言"

msgid ""
"Due to their limited resolution, scenes rendered in 3D can exhibit aliasing "
"artifacts. These artifacts commonly manifest as a \"staircase\" effect on "
"surface edges (edge aliasing) and as flickering and/or sparkles on "
"reflective surfaces (specular aliasing)."
msgstr ""
"由于分辨率有限，以 3D 渲染的场景可能会出现锯齿伪影。 这些伪影通常表现为表面边"
"缘上的“阶梯（staircase）”效应（边缘锯齿）以及反射表面上的闪烁和/或闪烁（镜面"
"锯齿）。"

msgid ""
"In the example below, you can notice how edges have a blocky appearance. The "
"vegetation is also flickering in and out, and thin lines on top of the box "
"have almost disappeared:"
msgstr ""
"在下面的示例中，你可以注意到边缘如何具有块状外观。 植被也在闪烁，盒子顶部的细"
"线几乎消失了："

msgid ""
"Image is scaled by 2× with nearest-neighbor filtering to make aliasing more "
"noticeable."
msgstr "图像缩放 2 倍并进行近邻滤波，使混叠现象更加明显。"

msgid ""
"To combat this, various antialiasing techniques can be used in Godot. These "
"are detailed below."
msgstr ""
"为了解决这个问题，Godot 中可以使用多种抗锯齿技术。 下面详细介绍这些内容。"

msgid ""
"You can compare antialiasing algorithms in action using the `3D Antialiasing "
"demo project <https://github.com/godotengine/godot-demo-projects/tree/"
"master/3d/antialiasing>`__."
msgstr ""
"你可以使用 `3D 抗锯齿演示项目 <https://github.com/godotengine/godot-demo-"
"projects/tree/master/3d/antialiasing>`__ 比较实际的抗锯齿算法。"

msgid "Multisample antialiasing (MSAA)"
msgstr "多重采样抗锯齿（MSAA）"

msgid ""
"This technique is the \"historical\" way of dealing with aliasing. MSAA is "
"very effective on geometry edges (especially at higher levels). MSAA does "
"not introduce any blurriness whatsoever."
msgstr ""
"这种技术是处理别名效应的“历史”方法。多重采样抗锯齿（MSAA）在几何边缘上非常有"
"效（尤其是在较高级别上）。MSAA不会引入任何模糊。"

msgid ""
"MSAA is available in 3 levels: 2×, 4×, 8×. Higher levels are more effective "
"at antialiasing edges, but are significantly more demanding. In games with "
"modern visuals, sticking to 2× or 4× MSAA is highly recommended as 8× MSAA "
"is usually too demanding."
msgstr ""
"MSAA有三个级别可供选择：2×、4×、8×。较高级别在抗锯齿边缘方面更有效，但要求更"
"高。在具有现代视觉效果的游戏中，强烈建议使用2×或4×的MSAA，因为8×的MSAA通常要"
"求过高。"

msgid ""
"The downside of MSAA is that it only operates on edges. This is because MSAA "
"increases the number of *coverage* samples, but not the number of *color* "
"samples. However, since the number of color samples did not increase, "
"fragment shaders are still run for each pixel only once. Therefore, MSAA "
"does not reduce transparency aliasing for materials using the **Alpha "
"Scissor** transparency mode (1-bit transparency). MSAA is also ineffective "
"on specular aliasing."
msgstr ""
"MSAA 的缺点是它仅在边缘上运行。 这是因为 MSAA 增加了 *覆盖率* 样本的数量，但"
"没有增加 *颜色* 样本的数量。 然而，由于颜色样本的数量没有增加，片段着色器仍然"
"只为每个像素运行一次。 因此，MSAA 不会减少使用 **Alpha Scissor** 透明度模式"
"（1 位透明度）的材质的透明度锯齿。 此外，MSAA 对镜面反射锯齿也无效。"

msgid ""
"To mitigate aliasing on alpha scissor materials, :ref:`alpha antialiasing "
"<doc_standard_material_3d_alpha_antialiasing>` (also called *alpha to "
"coverage*) can be enabled on specific materials in the StandardMaterial3D or "
"ORMMaterial3D properties. Alpha to coverage has a moderate performance cost, "
"but it's effective at reducing aliasing on transparent materials without "
"introducing any blurriness."
msgstr ""
"为了减轻 Alpha 裁剪材质上的锯齿，可以在 StandardMaterial3D 或 ORMMaterial3D "
"属性中的特定材质上启用 :ref:`Alpha 抗锯齿 "
"<doc_standard_material_3d_alpha_antialiasing>`\\ （也称为 *Alpha 覆盖范围"
"*\\ ）。Alpha 覆盖范围具有适中的性能成本，但它可以有效减少透明材质上的锯齿，"
"而且不会引入任何模糊。"

msgid ""
"MSAA can be enabled in the Project Settings by changing the value of the "
"**Rendering > Anti Aliasing > Quality > MSAA 3D** setting. It's important to "
"change the value of the **MSAA 3D** setting and not **MSAA 2D**, as these "
"are entirely separate settings."
msgstr ""
"通过更改 **渲染 > 抗锯齿 > 质量 > MSAA 3D** 设置的值，可以在项目设置中启用 "
"MSAA。 更改 **MSAA 3D** 设置的值而不是 **MSAA 2D** 非常重要，因为这些是完全独"
"立的设置。"

msgid ""
"Comparison between no antialiasing (left) and various MSAA levels (right). "
"Note that alpha antialiasing is not used here:"
msgstr ""
"无抗锯齿（左）与不同 MSAA 级别（右）之间的比较。 请注意，此处未使用 alpha 抗"
"锯齿："

msgid "Temporal antialiasing (TAA)"
msgstr "时间抗锯齿（TAA）"

msgid ""
"*This is only available in the Clustered Forward backend, not the Forward "
"Mobile or Compatibility backends.*"
msgstr "*该功能仅适用于集群 Forward 后端，不适用于 Forward 移动或兼容性后端。*"

msgid ""
"Temporal antialiasing works by *converging* the result of previously "
"rendered frames into a single, high-quality frame. This is a continuous "
"process that works by jittering the position of all vertices in the scene "
"every frame. This jittering is done to capture sub-pixel detail and should "
"be unnoticeable except in extreme situations."
msgstr ""
"时间抗锯齿（Temporal antialiasing）的工作原理是将先前渲染帧的结果 *聚合* 成单"
"个高质量帧。 这是一个连续的过程，通过在每帧抖动场景中所有顶点的位置来工作。 "
"这种抖动是为了捕捉子像素细节，除非在极端情况下，否则（抖动）应该是不明显的。"

msgid ""
"This technique is commonly used in modern games, as it provides the most "
"effective form of antialiasing against specular aliasing and other shader-"
"induced artifacts. TAA also provides full support for transparency "
"antialiasing."
msgstr ""
"此技术在现代游戏中常用，因为它提供了针对镜面反射锯齿和其他着色器引起的伪影的"
"最有效的抗锯齿方式。 此外，TAA 还全面支持透明度抗锯齿。"

msgid ""
"TAA introduces a small amount of blur when enabled in still scenes, but this "
"blurring effect becomes more pronounced when the camera is moving. Another "
"downside of TAA is that it can exhibit *ghosting* artifacts behind moving "
"objects. Rendering at a higher framerate will allow TAA to converge faster, "
"therefore making those ghosting artifacts less visible."
msgstr ""
"在静止场景中启用 TAA 会产生少量模糊，而当相机移动时，这种模糊效果会变得更加明"
"显。 TAA 的另一个缺点是它可能会在移动物体后面呈现 *重影（ghosting）* 伪影。 "
"以更高的帧速率进行渲染将使 TAA 收敛得更快，从而使这些重影伪像变得不那么明显。"

msgid ""
"Temporal antialiasing can be enabled in the Project Settings by changing the "
"value of the **Rendering > Anti Aliasing > Quality > Use TAA** setting."
msgstr ""
"通过在项目设置中更改 **渲染 > 抗锯齿 > 质量 > 使用 TAA** 的配置，可以启用时间"
"抗锯齿功能。"

msgid "Comparison between no antialiasing (left) and TAA (right):"
msgstr "无抗锯齿（左）和 TAA（右）之间的比较："

msgid "AMD FidelityFX Super Resolution 2.2 (FSR2)"
msgstr "AMD FidelityFX Super Resolution 2.2 （FSR2）"

msgid ""
"Since Godot 4.2, there is built-in support for `AMD FidelityFX Super "
"Resolution <https://www.amd.com/en/technologies/fidelityfx-super-"
"resolution>`__ 2.2. This is an :ref:`upscaling method "
"<doc_resolution_scaling>` compatible with all recent GPUs from any vendor. "
"FSR2 is normally designed to improve performance by lowering the internal 3D "
"rendering resolution, then upscaling to the output resolution."
msgstr ""
"自 Godot 4.2 起，内置了对 `AMD FidelityFX Super Resolution <https://www.amd."
"com/zh-hans/technologies/fidelityfx-super-resolution>`__ 2.2 的支持。这是一种"
"与任何供应商的所有最新 GPU 兼容的 :ref:`放大方法 <doc_resolution_scaling>`。 "
"FSR2 旨在通过降低内部的 3D 渲染分辨率，然后放大到输出分辨率来提高性能。"

msgid ""
"However, unlike FSR1, FSR2 also provides temporal antialiasing. This means "
"FSR2 can be used at native resolution for high-quality antialiasing, with "
"the input resolution being equal to the output resolution. In this "
"situation, enabling FSR2 will actually *decrease* performance, but it will "
"significantly improve rendering quality."
msgstr ""
"然而，与 FSR1 不同的是，FSR2 有时间抗锯齿功能。这意味着 FSR2 可以在原始分辨率"
"下使用，以获得高质量的抗锯齿效果，并且输入分辨率等于输出分辨率。在这种情况"
"下，启用 FSR2 实际上会 *降低* 性能，但会显着提高渲染质量。"

msgid ""
"Using FSR2 at native resolution is more demanding than using TAA at native "
"resolution, so its use is only recommended if you have significant GPU "
"headroom. On the bright side, FSR2 provides better antialiasing coverage "
"with less blurriness compared to TAA, especially in motion."
msgstr ""
"在原始分辨率下使用 FSR2 比在原始分辨率下使用 TAA 要求更高，因此，仅在你有足够"
"大的 GPU 显存空间时才建议使用它。从好的方面来说，与 TAA 相比，FSR2 提供了更好"
"的抗锯齿覆盖范围和更少的模糊度，尤其是在运动画面中。"

msgid ""
"Comparison between no antialiasing (left) and FSR2 at native resolution "
"(right):"
msgstr "无抗锯齿（左）和原始分辨率下的 FSR2（右）之间的比较："

msgid ""
"By default, the **FSR Sharpness** project setting is set to ``0.2`` (higher "
"values result in less sharpening). For the purposes of comparison, FSR "
"sharpening has been disabled by setting it to ``2.0`` on the above "
"screenshot."
msgstr ""
"默认情况下， **FSR 锐度** 项目设置设置为 ``0.2`` （值越高，锐化程度越低）。为"
"了进行比较，在以上的屏幕截图中，FSR 锐度被设置为 ``2.0`` ，从而禁用了 FSR 锐"
"化。"

msgid "Fast approximate antialiasing (FXAA)"
msgstr "快速近似抗锯齿（FXAA）"

msgid ""
"*This is only available in the Clustered Forward and Forward Mobile "
"backends, not the Compatibility backend.*"
msgstr "*该功能仅适用于集群 Forward 和 Forward 移动后端，不适用于兼容性后端。*"

msgid ""
"Fast approximate antialiasing is a post-processing antialiasing solution. It "
"is faster to run than any other antialiasing technique and also supports "
"antialiasing transparency. However, since it lacks temporal information, it "
"will not do much against specular aliasing."
msgstr ""
"快速近似抗锯齿是一种后期处理抗锯齿解决方案。 它的运行速度比任何其他抗锯齿技术"
"都要快，并且还支持抗锯齿透明度。 然而，由于它缺乏时间信息，因此它对于防止镜面"
"反射锯齿没有多大作用。"

msgid ""
"This technique is still sometimes used in mobile games. However, on desktop "
"platforms, FXAA generally fell out of fashion in favor of temporal "
"antialiasing, which is much more effective against specular aliasing. "
"Nonetheless, exposing FXAA as an in-game option may still be worthwhile for "
"players with low-end GPUs."
msgstr ""
"这种技术有时仍会在手机游戏中使用。 然而，在桌面平台上，FXAA 通常已经是过时"
"的，取而代之的是时间抗锯齿，后者对于对抗镜面反射锯齿更为有效。 尽管如此，对于"
"只有低端 GPU 的玩家来说，将 FXAA 作为游戏内选项可能仍然是值得的。"

msgid ""
"FXAA introduces a moderate amount of blur when enabled (more than TAA when "
"still, but less than TAA when the camera is moving)."
msgstr ""
"FXAA 启用后会产生适度的模糊（静止时比 TAA 多，但相机移动时比 TAA 少）。"

msgid ""
"FXAA can be enabled in the Project Settings by changing the value of the "
"**Rendering > Anti Aliasing > Quality > Screen Space AA** setting to "
"**FXAA**."
msgstr ""
"可以在项目设置中启用 FXAA，方法是将 **渲染 > 抗锯齿 > 质量 > 屏幕空间 AA** 设"
"置的值更改为 **FXAA** 。"

msgid "Comparison between no antialiasing (left) and FXAA (right):"
msgstr "无抗锯齿（左）和 FXAA（右）之间的对比："

msgid "Supersample antialiasing (SSAA)"
msgstr "超采样抗锯齿（SSAA）"

msgid ""
"Supersampling provides the highest quality of antialiasing possible, but "
"it's also the most expensive. It works by shading every pixel in the scene "
"multiple times. This allows SSAA to antialias edges, transparency *and* "
"specular aliasing at the same time, without introducing potential ghosting "
"artifacts."
msgstr ""
"超采样可以提供最高质量的抗锯齿效果，但它也是成本最贵的。 它的工作原理是多次对"
"场景中的每个像素进行着色。 这允许 SSAA 同时抗锯齿边缘、透明度 *和* 镜面反射锯"
"齿，而不会引入潜在的重影伪影。"

msgid ""
"The downside of SSAA is its *extremely* high cost. This cost generally makes "
"SSAA difficult to use for game purposes, but you may still find "
"supersampling useful for :ref:`offline rendering <doc_creating_movies>`."
msgstr ""
"SSAA 的缺点是其 *极高* 的成本。 这种成本通常会使 SSAA 难以用于游戏目的，但你"
"可能仍会发现超采样对于 :ref:`离线渲染 <doc_creating_movies>` 很有用。"

msgid ""
"Supersample antialiasing is performed by increasing the **Rendering > "
"Scaling 3D > Scale** advanced project setting above ``1.0`` while ensuring "
"**Rendering > Scaling 3D > Mode** is set to **Bilinear** (the default). "
"Since the scale factor is defined per-axis, a scale factor of ``1.5`` will "
"result in 2.25× SSAA while a scale factor of ``2.0`` will result in 4× SSAA. "
"Since Godot uses the hardware's own bilinear filtering to perform the "
"downsampling, the result will look crisper at integer scale factors (namely, "
"``2.0``)."
msgstr ""
"超采样抗锯齿是通过将高级项目设置中 **渲染 > 缩放 3D > 缩放** 的设置增加到 "
"``1.0`` 以上来执行的，同时确保 **渲染 > 缩放 3D > 模式** 设置为 **Bilinear** "
"（默认） 。 由于比例因子是按轴定义的，比例因子 ``1.5`` 将导致 2.25× SSAA，而"
"比例因子 ``2.0`` 将导致 4× SSAA。由于 Godot 使用硬件自身的双线性过滤来执行降"
"采样，因此结果在整数的比例因子（即 ``2.0`` ）下看起来会更清晰。"

msgid ""
"Comparison between no antialiasing (left) and various SSAA levels (right):"
msgstr "无抗锯齿（左）与不同 SSAA 级别（右）之间的比较："

msgid ""
"Supersampling also has high video RAM requirements, since it needs to render "
"in the target resolution then *downscale* to the window size. For example, "
"displaying a project in 3840×2160 (4K resolution) with 4× SSAA will require "
"rendering the scene in 7680×4320 (8K resolution), which is 4 times more "
"pixels."
msgstr ""
"超采样还有很高的视频 RAM （即显存）要求，因为它需要以目标分辨率渲染，然后 *缩"
"小* 到窗口大小。 例如，使用 4× SSAA 显示 3840×2160（4K 分辨率）的项目需要以 "
"7680×4320（8K 分辨率）渲染场景，这是原像素数的 4 倍。"

msgid ""
"If you are using a high window size such as 4K, you may find that increasing "
"the resolution scale past a certain value will cause a heavy slowdown (or "
"even a crash) due to running out of VRAM."
msgstr ""
"如果你使用较大的窗口大小（例如 4K），你可能会发现将分辨率比例增加到超过特定值"
"时，会因 VRAM 耗尽而导致严重减速（甚至崩溃）。"

msgid "Screen-space roughness limiter"
msgstr "屏幕空间粗糙度限制器"

msgid ""
"This is not an edge antialiasing method, but it is a way of reducing "
"specular aliasing in 3D."
msgstr "这并不是一种边缘抗锯齿方法，而是减少 3D 镜面反射锯齿的一种方法。"

msgid ""
"The screen-space roughness limiter works best on detailed geometry. While it "
"has an effect on roughness map rendering itself, its impact is limited there."
msgstr ""
"屏幕空间粗糙度限制器最适合详细的几何形状。 虽然它对粗糙度图渲染本身有影响，但"
"其影响有限。"

msgid ""
"The screen-space roughness limiter is enabled by default; it doesn't require "
"any manual setup. It has a small performance impact, so consider disabling "
"it if your project isn't affected by specular aliasing much."
msgstr ""
"屏幕空间粗糙度限制器默认启用； 它不需要任何手动设置。 它对性能影响很小，因此"
"如果你的项目不受镜面反射锯齿影响太多，请考虑禁用它。"

msgid "Texture roughness limiter on import"
msgstr "导入时的纹理粗糙度限制器"

msgid ""
"Like the screen-space roughness limiter, this is not an edge antialiasing "
"method, but it is a way of reducing specular aliasing in 3D."
msgstr ""
"与屏幕空间粗糙度限制器一样，这也不是一种边缘抗锯齿方法，而是减少 3D 镜面反射"
"锯齿的一种方法。"

msgid ""
"Roughness limiting on import works by specifying a normal map to use as a "
"guide for limiting roughness. This is done by selecting the roughness map in "
"the FileSystem dock, then going to the Import dock and setting **Roughness > "
"Mode** to the color channel the roughness map is stored in (typically "
"**Green**), then setting the path to the material's normal map. Remember to "
"click **Reimport** at the bottom of the Import dock after setting the path "
"to the normal map."
msgstr ""
"通过指定法线贴图来限制导入的粗糙度，以用作限制粗糙度的指导。 这是通过在文件系"
"统面板中选择粗糙度图来完成的，然后转到导入面板并将 **粗糙度>模式** 设置为存储"
"粗糙度图的颜色通道（通常为 **绿色** ），然后设置材质法线贴图的路径。 在设置法"
"线贴图的路径后，请别忘记单击导入面板底部的 **重新导入** 。"

msgid ""
"Since this processing occurs purely on import, it has no performance cost "
"whatsoever. However, its visual impact is limited. Limiting roughness on "
"import only helps reduce specular aliasing within textures, not the aliasing "
"that occurs on geometry edges on detailed meshes."
msgstr ""
"由于此处理仅在导入时进行，因此没有任何性能成本。 但其视觉效果改善有限。 限制"
"导入时的粗糙度仅有助于减少纹理内的镜面反射锯齿，而无助于减少详细网格上的几何"
"边缘上发生的锯齿。"

msgid "Which antialiasing technique should I use?"
msgstr "我应该使用哪种抗锯齿技术？"

msgid ""
"**There is no \"one size fits all\" antialiasing technique.** Since "
"antialiasing is often demanding on the GPU or can introduce unwanted "
"blurriness, you'll want to add a setting to allow players to disable "
"antialiasing."
msgstr ""
"**没有“一招鲜”的抗锯齿技术** 。 由于抗锯齿通常对 GPU 要求很高，或者可能会引入"
"不必要的模糊，因此你需要添加一个设置以允许玩家禁用抗锯齿。"

msgid ""
"For projects with a photorealistic art direction, TAA is generally the most "
"suitable option. While TAA can introduce ghosting artifacts, there is no "
"other technique that combats specular aliasing as well as TAA does. The "
"screen-space roughness limiter helps a little, but is far less effective "
"against specular aliasing overall. If you have spare GPU power, you can use "
"FSR2 at native resolution for a better-looking form of temporal antialiasing "
"compared to standard TAA."
msgstr ""
"对于具有照片级拟真艺术目标的项目，通常来说 TAA 是最合适的选择。虽然 TAA 会引"
"入重影伪像，但没有其他技术能像 TAA 那样对抗镜面反射锯齿。屏幕空间粗糙度限制器"
"也有点用，但总体上对镜面反射锯齿的效果要差得多。如果你的 GPU 性能不错，则可以"
"在原始分辨率下使用 FSR2，以获得比标准 TAA 更好的时间抗锯齿。"

msgid ""
"For projects with a low amount of reflective surfaces (such as a cartoon "
"artstyle), MSAA can work well. MSAA is also a good option if avoiding "
"blurriness and temporal artifacts is important, such as in competitive games."
msgstr ""
"对于反射表面较少的项目（例如卡通艺术风格），MSAA 可以表现很好。如果（对项目而"
"言）避免模糊和时域伪影很重要，例如在竞技游戏中，MSAA 也是一个不错的选择。"

msgid ""
"When targeting low-end platforms such as mobile or integrated graphics, FXAA "
"is usually the only viable option. 2× MSAA may be usable in some "
"circumstances, but higher MSAA levels are unlikely to run smoothly on mobile "
"GPUs."
msgstr ""
"在针对移动或集成显卡等低端平台时，FXAA 通常是唯一可行的选择。2× MSAA 在某些情"
"况下可能可用，但更高的 MSAA 级别不太可能在移动 GPU 上流畅运行。"

msgid ""
"Godot allows using multiple antialiasing techniques at the same time. This "
"is usually unnecessary, but it can provide better visuals on high-end GPUs "
"or for :ref:`non-real-time rendering <doc_creating_movies>`. For example, to "
"make moving edges look better when TAA is enabled, you can also enable MSAA "
"at the same time."
msgstr ""
"Godot 允许同时使用多种抗锯齿技术。这通常是不必要的，但在高端 GPU 上或在 :ref:"
"`非实时渲染 <doc_creating_movies>` 中可以提供更好的视觉效果。例如，为了在启"
"用 TAA 时让移动边缘看起来更好，还可以同时启用 MSAA。"

msgid "Translation status"
msgstr "翻译状态"
