# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Faking global illumination"
msgstr "伪造全局光照"

msgid "Why fake global illumination?"
msgstr "为什么要伪造全局光照？"

msgid ""
"Godot provides several global illumination (GI) techniques, all with their "
"advantages and drawbacks. Nonetheless, it remains possible to avoid using "
"any GI technique and use a handmade approach instead. There are a few "
"reasons for using a \"handmade\" approach to global illumination instead of "
"VoxelGI, SDFGI or baked lightmaps:"
msgstr ""
"Godot 提供了多种全局照明 (GI) 技术，各有其优点和缺点。 尽管如此，仍然可以避免"
"使用任何 GI 技术并使用手工制作的方法。 使用“手工”方法进行全局照明而不是 "
"VoxelGI、SDFGI 或烘焙光照贴图，有几个原因："

msgid ""
"You need to have good rendering performance, but can't afford going through "
"a potentially cumbersome lightmap baking process."
msgstr "你需要具有良好的渲染性能，但无法承受潜在的繁琐的光照贴图烘焙过程。"

msgid ""
"You need an approach to GI that is fully real-time *and* works in "
"procedurally generated levels."
msgstr "你需要一种完全实时 *且* 可在程序生成的关卡中工作的 GI 方法。"

msgid ""
"You need an approach to GI that is fully real-time *and* does not suffer "
"from significant light leaks."
msgstr "你需要一种完全实时的 GI 方法 *并且* 不会出现明显的漏光问题。"

msgid ""
"The approaches described below only cover indirect diffuse lighting, not "
"specular lighting. For specular lighting, consider using ReflectionProbes "
"which are usually cheap enough to be used in conjunction with this fake GI "
"approach."
msgstr ""
"下面描述的方法仅涵盖间接漫反射照明，而不涵盖镜面反射照明。 对于镜面反射照明，"
"请考虑使用 ReflectionProbes，它通常足够便宜，且可以与这种假 GI 方法结合使用。"

msgid ""
"Not sure if faking global illumination with lights is suited to your needs? "
"See :ref:`doc_introduction_to_global_illumination_comparison` for a "
"comparison of GI techniques available in Godot 4."
msgstr ""
"不确定用灯光伪造全局照明是否适合你的需求？ 请参阅 :ref:"
"`doc_introduction_to_global_Illumination_comparison` 以了解 Godot 4 中可用的 "
"GI 技术的比较。"

msgid "Faking DirectionalLight3D global illumination"
msgstr "伪造 DirectionalLight3D 的全局光照"

msgid ""
"While the sky provides its own directional lighting, the scene's main "
"DirectionalLight3D node typically emits a large amount of light. When using "
"a GI technique, this light would be reflected on solid surfaces and would "
"bounce back on most outdoors shaded surfaces."
msgstr ""
"虽然天空会提供自己的定向照明，但场景的主要 DirectionalLight3D 节点通常会发出"
"大量的光。 当使用 GI 技术时，这种光会在固体表面上反射，并会在大多数户外阴影表"
"面上反射回来。"

msgid ""
"We can fake this by adding a second DirectionalLight3D node with the "
"following changes:"
msgstr ""
"我们可以通过添加第二个 DirectionalLight3D 节点来伪造这一点，并进行以下更改："

msgid ""
"Rotate the light by 180 degrees. This allows it to represent lighting "
"bounced by the main DirectionalLight3D node."
msgstr ""
"将灯光旋转 180 度。 这使得它能够表现由主 DirectionalLight3D 节点反射的光照。"

msgid ""
"Set **Shadows** to **Off**. This reduces the secondary light's performance "
"burden while also allowing shaded areas to receive *some* lighting (which is "
"what we want here)."
msgstr ""
"将 **阴影（Shadows）** 设置为 **关闭** 。这减少了辅助光源的性能负担，同时也允"
"许阴影区域接收 *一些* 光照（这正是我们想要的）。"

msgid ""
"Set **Energy** to 10-40% of the original value. There is no \"perfect\" "
"value, so experiment with various energy values depending on the light and "
"your typical material colors."
msgstr ""
"将 **能量（Energy）** 设置为原始值的 10-40% 。没有 \"完美的\" 值，所以请根据"
"光线和你特有的材质颜色，尝试各种能量值。"

msgid ""
"Set **Specular** to ``0.0``. Indirect lighting shouldn't emit visible "
"specular lobes, so we need to disable specular lighting entirely for the "
"secondary light."
msgstr ""
"将 **镜面反射（Specular）** 设置为 ``0.0`` 。间接光照不应发出可见的镜面反射波"
"瓣，因此我们需要完全禁用辅助光的镜面反射光照。"

msgid ""
"This approach works best in scenes that are mostly outdoors. When going "
"indoors, the secondary DirectionalLight3D's light will still be visible as "
"this light has shadows disabled."
msgstr ""
"这种方法最适合大多数户外场景。 当进入室内时，辅助 DirectionalLight3D 的灯光仍"
"然可见，因为该灯光禁用了阴影。"

msgid ""
"This can be worked around by smoothly decreasing the secondary "
"DirectionalLight3D's energy when entering an indoor area (and doing the "
"opposite when leaving the indoor area). For instance, this can be achieved "
"using an Area3D node and AnimationPlayer."
msgstr ""
"这可以通过在进入室内区域时，平滑地减少辅助 DirectionalLight3D 的能量（并在离"
"开室内区域时执行相反的操作）来解决。 例如，可以使用 Area3D 节点和 "
"AnimationPlayer 来实现。"

msgid "Faking positional light global illumination"
msgstr "伪造位置灯光的全局光照"

msgid ""
"It's possible to follow the same approach as DirectionalLight3D for "
"positional lights (OmniLight3D and SpotLight3D). However, this will require "
"more manual work as this operation needs to be repeated for every positional "
"light node in the scene to look good."
msgstr ""
"对于位置光源（OmniLight3D 和 SpotLight3D），可以采用与 DirectionalLight3D 相"
"同的方法。 然而，这将需要更多的手动处理，因为该方法需要对场景中的每个位置光照"
"节点重复此操作，才能让效果看起来不错。"

msgid ""
"In an ideal scenario, additional OmniLight3Ds should be added at every "
"location where a significant amount of light hits a bright enough surface. "
"However, due to time constraints, this isn't always easily feasible "
"(especially when performing procedural level generation)."
msgstr ""
"在理想情况下，应在大量光线照射到足够明亮表面的每个位置，都添加额外的 "
"OmniLight3D。 然而，由于时间限制，这个设想并不总是容易实现（特别是在执行程序"
"关卡生成时）。"

msgid ""
"If you're in a hurry, you can place a secondary OmniLight3D node at the same "
"position as the main OmniLight3D node. You can add this node as a child of "
"the main OmniLight3D node to make it easy to move and hide both nodes at the "
"same time."
msgstr ""
"如果你赶时间，可以将辅助 OmniLight3D 节点放置在与主 OmniLight3D 节点相同的位"
"置。 你可以将此节点添加为主 OmniLight3D 节点的子节点，以便轻松同时移动和隐藏"
"这两个节点。"

msgid "In the secondary OmniLight3D node, perform the following changes:"
msgstr "在辅助 OmniLight3D 节点上执行以下修改："

msgid ""
"Increase the light's **Range** by 25-50%. This allows the secondary light to "
"lighten what was previously not lit by the original light."
msgstr ""
"将灯光的 **范围** 提高25-50%。这使辅助光能够照亮原先的光线所未照亮的区域。"

msgid ""
"Set **Energy** to 10-40% of the original value. There is no \"perfect\" "
"value, so experiment with various energy values depending on the light and "
"its surroundings."
msgstr ""
"将 **能量** 设置为原先值的 10-40%。不存在“完美”值，因此请根据光线及其周围环境"
"尝试各种能量值。"

msgid ""
"Set **Specular** to 0. Indirect lighting shouldn't emit visible specular "
"lobes, so we need to disable specular lighting entirely for the secondary "
"light."
msgstr ""
"将 **镜面反射** 设置为0。间接照明不应发出可见的镜面光波瓣（lobe），因此我们需"
"要完全禁用辅助光的镜面照明。"

msgid ""
"For SpotLight3D, the same trick can be used. In this case, the secondary "
"OmniLight3D should be placed in a way that reflects where *most* light will "
"be bounced. This is usually close to the SpotLight3D's primary impact "
"location."
msgstr ""
"对于 SpotLight3D，可以使用相同的技巧。 在这种情况下，辅助 OmniLight3D 的放置"
"方式应能够反射 *大多数* 光线将被反射的位置。 这通常是靠近 SpotLight3D 的主要"
"影响位置。"

msgid ""
"In the example below, a SpotLight3D node is used to light up the room's "
"floor. However, since there is no indirect lighting, the rest of the room "
"remains entirely dark. In real life, the room's walls and ceiling would be "
"lit up by light bouncing around. Using an OmniLight3D node positioned "
"between the SpotLight3D's origin and the floor allows simulating this effect:"
msgstr ""
"在下面的示例中，SpotLight3D 节点用于照亮房间的地板。 然而，由于没有间接照明，"
"房间的其余部分仍然完全黑暗。 在现实生活中，房间的墙壁和天花板会被周围反射的光"
"照亮。 使用位于 SpotLight3D 的原点和地板之间的 OmniLight3D 节点可以模拟此效"
"果："

msgid "Translation status"
msgstr "翻译状态"
