# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to global illumination"
msgstr "全局光照简介"

msgid "What is global illumination?"
msgstr "什么是全局光照？"

msgid ""
"*Global illumination* is a catch-all term used to describe a system of "
"lighting that uses both direct light (light that comes directly from a light "
"source) and indirect light (light that bounces from a surface). In a 3D "
"rendering engine, global illumination is one of the most important elements "
"to achieving realistic lighting. Global illumination aims to mimic how light "
"behaves in real life, such as light bouncing on surfaces and light being "
"emitted from emissive materials."
msgstr ""
"*全局光照* 是一个综合性术语，用于描述一种使用直接光（直接来自光源的光线）和间"
"接光（从表面反射的光线）的照明系统。在3D渲染引擎中，全局光照是实现逼真照明的"
"最重要要素之一。全局光照旨在模拟现实生活中光线的行为，例如光线在表面上反射以"
"及从自发光材料中发出的光线。"

msgid ""
"In the example below, the entire scene is illuminated by an emissive "
"material (the white square at the top). The white wall and ceiling on the "
"back is tinted red and green close to the walls, as the light bouncing on "
"the colored walls is being reflected back onto the rest of the scene."
msgstr ""
"在下面的示例中，整个场景由自发光材质（顶部的白色方块）照亮。背面的白色墙壁和"
"天花板在靠近墙壁的地方被染成红色和绿色，因为彩色墙壁上反射的光线正在反射回场"
"景的其余部分。"

msgid "Global illumination is composed of several key concepts:"
msgstr "全局光照由以下几个关键概念组成："

msgid "Indirect diffuse lighting"
msgstr "间接漫反射光照"

msgid ""
"This is the lighting that does not change depending on the camera's angle. "
"There are two main sources of indirect diffuse lighting:"
msgstr "这种光照不会因为相机的角度而改变。间接漫反射光照有两个主要来源："

msgid ""
"Light *bouncing* on surfaces. This bounced lighting is multiplied with the "
"material's albedo color. The bounced lighting can then be reflected by other "
"surfaces, with decreasing impact due to light attenuation. In real life, "
"light bounces an infinite number of times. However, for performance reasons, "
"this can't be simulated in a game engine. Instead, the number of bounces is "
"typically limited to 1 or 2 (or up to 16 when baking lightmaps). A greater "
"number of bounces will lead to more realistic light falloff in shaded areas, "
"at the cost of lower performance or greater bake times."
msgstr ""
"光*弹跳*在表面上。这种反射光照会与材质的反照率颜色相乘。然后，反射的照明可以"
"被其他表面反射，由于光衰减，影响会减小。在现实生活中，光线会反射无数次。但是"
"出于性能原因，无法在游戏引擎中模拟。相反，退回次数通常限制为 1 或 2（烘焙光照"
"贴图时最多限制为 16）。更多的反弹将导致阴影区域更真实的光线衰减，而代价是导致"
"性能较低或烘烤时间更长。"

msgid ""
"Emissive materials can also emit light that can be bounced on surfaces. This "
"acts as a form of *area lighting*. Instead of having an infinitely small "
"point emit light using an OmniLight3D or SpotLight3D node, an area of a "
"determined size will emit light using its own surface."
msgstr ""
"自发光材质还可以发出可以在表面上反弹的光。这充当 *区域照明* 的一种形式。与使"
"用 OmniLight3D 或 SpotLight3D 节点发光不同，确定大小的区域将使用自己的表面发"
"光。"

msgid ""
"Direct diffuse lighting is already handled by the light nodes themselves, "
"which means that global illumination algorithms only try to represent "
"indirect lighting."
msgstr ""
"直接漫反射光照已经由灯光节点本身处理，这意味着全局光照算法只尝试表示间接光"
"照。"

msgid ""
"Different global illumination techniques offer varying levels of accuracy to "
"represent indirect diffuse lighting. See the comparison table at the bottom "
"of this page for more information."
msgstr ""
"不同的全局光照技术提供不同级别的精度来表示间接漫反射光照。有关详细信息请参阅"
"本页底部的比较表。"

msgid ""
"To provide more accurate ambient occlusion for small objects, screen-space "
"ambient occlusion (SSAO) can be enabled in the :ref:`environment "
"<doc_environment_and_post_processing>` settings. SSAO has a significant "
"performance cost, so make sure to disable it when targeting low-end hardware."
msgstr ""
"为较小的对象提供更精确的环境光遮蔽，屏幕空间环境光遮蔽（SSAO）可以在\\ :ref:`"
"环境 <doc_environment_and_post_processing>`\\ 设置中启用。SSAO 具有较大的性能"
"开销，因此在针对低端硬件时请确保禁用它。"

msgid ""
"Indirect diffuse lighting may be a source of color banding in scenes with no "
"detailed textures. This results in light gradients not being smooth, but "
"having a visible \"stepping\" effect instead. See the :ref:"
"`doc_3d_rendering_limitations_color_banding` section in the 3D rendering "
"limitations documentation for ways to reduce this effect."
msgstr ""
"间接漫反射照明可能是没有细节纹理的场景中色带的来源。这导致光线梯度不平滑，而"
"是具有可见的“步进”效果。减少这种效果的方法见 :ref:"
"`doc_3d_rendering_limitations_color_banding` 部分。"

msgid "Specular lighting"
msgstr "镜面反射光效果"

msgid ""
"Specular lighting is also referred to as *reflections*. This is the lighting "
"that changes in intensity depending on the camera's angle. This specular "
"lighting can be *direct* or *indirect*."
msgstr ""
"镜面反射照明也被称为 *反射* 。这是根据摄像机角度而变化强度的照明。这种镜面照"
"明可以是 *直接* 或 *间接* 。"

msgid ""
"Most global illumination techniques offer a way to render specular lighting. "
"However, the degree of accuracy at which specular lighting is rendered "
"varies greatly from technique to technique. See the comparison table at the "
"bottom of this page for more information."
msgstr ""
"大多数全局光照技术都提供了一种渲染镜面反射光照的方法。然而，不同技术渲染镜面"
"反射光照的精度差异很大。有关详细信息，请参阅本页底部的比较表。"

msgid ""
"To provide more accurate reflections for small objects, screen-space "
"reflections (SSR) can be enabled in the :ref:`environment "
"<doc_environment_and_post_processing>` settings. SSR has a significant "
"performance cost (even more so than SSAO), so make sure to disable it when "
"targeting low-end hardware."
msgstr ""
"为了给较小的对象提供更准确的反射，可以在\\ :ref:`环境 "
"<doc_environment_and_post_processing>`\\ 设置中启用屏幕空间反射（SSR）。SSR "
"的性能开销很大（甚至比 SSAO 更高），因此在针对低端硬件时一定要禁用它。"

msgid "Which global illumination technique should I use?"
msgstr "我应该使用哪种全局光照技术？"

msgid ""
"When determining a global illumination (GI) technique to use, there are "
"several criteria to keep in mind:"
msgstr "在确定要使用全局光照（GI）技术时，需要记住以下几个准则："

msgid ""
"**Performance.** Real-time GI techniques are usually more expensive compared "
"to semi-real-time or baked techniques. Note that most of the cost in GI "
"rendering is spent on the GPU, rather than the CPU."
msgstr ""
"**性能。** 与半实时或烘焙技术相比，实时 GI 技术通常开销更大。请注意，GI 渲染"
"的大部分开销都花在了 GPU 上，而非 CPU 上。"

msgid ""
"**Visuals.** On top of not performing the best, real-time GI techniques "
"generally don't provide the best visual output. This is especially the case "
"in a mostly static scene where the dynamic nature of real-time GI is not "
"easily noticeable. If maximizing visual quality is your goal, baked "
"techniques will often look better and will result in fewer light leaks."
msgstr ""
"**视觉效果。** 除了不能达到最佳效果外，实时 GI 技术通常不能提供最佳的视觉输"
"出。尤其是在大多数静态场景中，其中实时 GI 的动态特性不容易被注意到。如果你的"
"目标是最大限度地提高视觉质量，那么烘焙技术通常会看起来更好，并且会减少漏光。"

msgid ""
"**Real-time ability.** Some GI techniques are fully real-time, whereas "
"others are only semi-real-time or aren't real-time at all. Semi-real-time "
"techniques have restrictions that fully real-time techniques don't. For "
"instance, dynamic objects may not contribute emissive lighting to the scene. "
"Non-real-time techniques do not support *any* form of dynamic GI, so it must "
"be faked using other techniques if needed (such as placing positional lights "
"near emissive surfaces). Real-time ability also affects the GI technique's "
"viability in procedurally generated levels."
msgstr ""
"**实时能力。** 一些 GI 技术是完全实时的，而其他技术只是半实时的或根本不是实时"
"的。半实时技术有完全实时技术没有的限制。例如，动态对象可能不会为场景提供自发"
"光照明。非实时技术不支持任何形式的动态 GI ，因此如果需要，必须使用其他技术进"
"行伪造（例如在发射表面附近放置定位灯）。实时能力也会影响 GI 技术在程序化生成"
"关卡上的可行性。"

msgid ""
"**User work needed.** Some GI techniques are fully automatic, whereas others "
"require careful planning and manual work on the user's side. Depending on "
"your time budget, some GI techniques may be preferable to others."
msgstr ""
"**需要用户工作。** 一些 GI 技术是完全自动的，而另一些则需要用户仔细规划和手动"
"操作。根据你的时间预算，某些 GI 技术可能比其他技术更可取。"

msgid ""
"Here's a comparison of all the global illumination techniques available in "
"Godot:"
msgstr "以下是 Godot 中可用的所有全局光照技术的比较："

msgid "Performance"
msgstr "性能"

msgid "In order of performance from fastest to slowest:"
msgstr "按照性能从最快到最慢的顺序："

msgid "**ReflectionProbe:**"
msgstr "**反射探针：**"

msgid ""
"ReflectionProbes with their update mode set to **Always** are much more "
"expensive than probes with their update mode set to **Once** (the default). "
"Suited for integrated graphics when using the **Once** update mode. "
"*Available when using the Forward Mobile backend. Will be available in the "
"Compatibility backend in later releases.*"
msgstr ""
"更新模式设置为 **总是** 的反射探针比更新模式设置为 **一次**（默认值）的探针贵"
"得多。适用于使用 **一次** 更新模式时的集成图形。*使用转发移动后端时可用。将在"
"更高版本的兼容性后端中提供。*"

msgid "**LightmapGI:**"
msgstr "**LightmapGI:**"

msgid ""
"Lights can be baked with indirect lighting only, or fully baked on a per-"
"light basis to further improve performance. Hybrid setups can be used (such "
"as having a real-time directional light and fully baked positional lights). "
"Directional information can be enabled before baking to improve visuals at a "
"small performance cost (and at the cost of larger file sizes). Suited for "
"integrated graphics. *Available when using the Forward Mobile backend. Will "
"be available in the Compatibility backend in later releases.*"
msgstr ""
"灯光可以仅使用间接照明进行烘焙，也可以基于每个灯光进行完全烘焙，以进一步提高"
"性能。 也可以使用混合设置（例如具有实时平行光和完全烘焙的位置光）。 可以在烘"
"焙之前启用方向信息，以较小的性能成本（并且以较大的文件大小为代价）改善视觉效"
"果。 适合集成显卡。 *使用 Forward Mobile 后端时可用。 将在以后版本的兼容性后"
"端中提供。*"

msgid "**VoxelGI:**"
msgstr "**VoxelGI:**"

msgid ""
"The bake's number of subdivisions can be adjusted to balance between "
"performance and quality. The VoxelGI rendering quality can be adjusted in "
"the Project Settings. The rendering can optionally be performed at half "
"resolution (and then linearly scaled) to improve performance significantly. "
"**Not available** *when using the Forward Mobile or Compatibility backends.*"
msgstr ""
"可以调整烘焙的细分数量以平衡性能和质量。 VoxelGI 渲染质量可以在项目设置中调"
"整。 渲染可以选择以半分辨率执行（然后线性缩放）以显着提高性能。 **不可用于** "
"*使用 Forward Mobile 或兼容性后端时。*"

msgid "**Screen-space indirect lighting (SSIL):**"
msgstr "**屏幕空间间接照明（Screen-space indirect lighting, SSIL）：**"

msgid ""
"The SSIL quality and number of blur passes can be adjusted in the Project "
"Settings. By default, SSIL rendering is performed at half resolution (and "
"then linearly scaled) to ensure a reasonable performance level. **Not "
"available** *when using the Forward Mobile or Compatibility backends.*"
msgstr ""
"以在项目设置中调整 SSIL 质量和模糊通道数量。 默认情况下，SSIL 渲染以一半分辨"
"率执行（然后线性缩放）以确保合理的性能水平。 **不可用于** *使用 Forward "
"Mobile 或兼容性后端时。*"

msgid "**SDFGI:**"
msgstr "**SDFGI:**"

msgid ""
"The number of cascades can be adjusted to balance performance and quality. "
"The number of rays thrown per frame can be adjusted in the Project Settings. "
"The rendering can optionally be performed at half resolution (and then "
"linearly scaled) to improve performance significantly. **Not available** "
"*when using the Forward Mobile or Compatibility backends.*"
msgstr ""
"可以调整级联的数量以平衡性能和质量。 每帧投射的光线数量可以在“项目设置”中调"
"整。 渲染可以选择以半分辨率执行（然后线性缩放）以显着提高性能。 **不可用于** "
"*使用 Forward Mobile 或兼容性后端时。*"

msgid "Visuals"
msgstr "Visuals"

msgid ""
"For comparison, here's a 3D scene with no global illumination options used:"
msgstr "为了进行比较，这里有一个未使用全局照明选项的 3D 场景："

msgid ""
"A 3D scene without any form of global illumination (only constant "
"environment lighting). The box and sphere near the camera are both dynamic "
"objects."
msgstr ""
"没有使用任何形式的全局照明的 3D 场景（只有恒定的环境照明）。 相机附近的盒子和"
"球体都是动态对象。"

msgid "Here's how Godot's various global illumination techniques compare:"
msgstr "以下是 Godot 的各种全局照明技术的比较："

msgid ""
"**VoxelGI:** |average| Good reflections and indirect lighting, but beware of "
"leaks."
msgstr "**VoxelGI：** |average| 良好的反射和间接照明，但要小心泄漏。"

msgid "average"
msgstr "average"

msgid ""
"Due to its voxel-based nature, VoxelGI will exhibit light leaks if walls and "
"floors are too thin. It's recommended to make sure all solid surfaces are at "
"least as thick as one voxel."
msgstr ""
"由于其基于体素的性质，如果墙壁和地板太薄，VoxelGI 将出现漏光。 建议确保所有实"
"体表面至少与一个体素一样厚。"

msgid ""
"Streaking artifacts may also be visible on sloped surfaces. In this case, "
"tweaking the bias properties or rotating the VoxelGI node can help combat "
"this."
msgstr ""
"在倾斜的表面上也可能会看到条纹伪影（streaking artifacts）。 在这种情况下，调"
"整偏置属性或旋转 VoxelGI 节点可以对解决这个问题有帮助。"

msgid "VoxelGI in action."
msgstr "VoxelGI 的实际应用。"

msgid ""
"**SDFGI:** |average| Good reflections and indirect lighting, but beware of "
"leaks and visible cascade shifts."
msgstr ""
"**SDFGI：** |average| 良好的反射和间接照明，但要注意泄漏和可见的级联偏移。"

msgid ""
"GI level of detail varies depending on the distance between the camera and "
"surface."
msgstr "GI 细节层次（LOD）根据相机与表面之间的距离而变化。"

msgid ""
"Leaks can be reduced significantly by enabling the **Use Occlusion** "
"property. This has a small performance cost, but it often results in fewer "
"leaks compared to VoxelGI."
msgstr ""
"通过启用 **使用遮挡（Use Occlusion）** 属性可以显着减少泄漏。 这具有较小的性"
"能成本，但与 VoxelGI 相比，它通常会导致更少的泄漏。"

msgid ""
"Cascade shifts may be visible when the camera moves fast. This can be made "
"less noticeable by adjusting the cascade sizes or using fog."
msgstr ""
"当相机快速移动时，可能会看到级联移位（cascade shifts）。 通过调整级联大小或使"
"用雾可以使这种情况变得不那么明显。"

msgid "SDFGI in action."
msgstr "SDFGI 的实际应用。"

msgid ""
"**Screen-space indirect lighting (SSIL):** |average| Good *secondary* source "
"of indirect lighting, but no reflections."
msgstr ""
"**屏幕空间间接照明 (SSIL)：** |average| 良好的 *次要* 间接照明源，但没有反"
"射。"

msgid ""
"SSIL is designed to be used as a complement to another GI technique such as "
"VoxelGI, SDFGI or LightmapGI. SSIL works best for small-scale details, as it "
"cannot provide accurate indirect lighting for large structures on its own. "
"SSIL can provide real-time indirect lighting in situations where other GI "
"techniques fail to capture small-scale details or dynamic objects. Its "
"screen-space nature will result in some artifacts, especially when objects "
"enter and leave the screen. SSIL works using the last frame's color (before "
"post-processing) which means that emissive decals and custom shaders are "
"included (as long as they're present on screen)."
msgstr ""
"SSIL 旨在用作另一种 GI 技术（例如 VoxelGI、SDFGI 或 LightmapGI）的补充。 "
"SSIL 最适合小规模细节，因为它本身无法为大型结构提供准确的间接照明。 在其他 "
"GI 技术无法捕捉小尺度细节或动态对象的情况下，SSIL 可以提供实时间接照明。 其屏"
"幕空间性质会导致一些伪像，尤其是当对象进入和离开屏幕时。 SSIL 使用最后一帧的"
"颜色（在后期处理之前）工作，这意味着包含自发光贴花和自定义着色器（只要它们出"
"现在屏幕上）。"

msgid ""
"SSIL in action (without any other GI technique). Notice the emissive "
"lighting around the yellow box."
msgstr "SSIL 的实际应用（没有任何其他 GI 技术）。 注意黄色盒子周围的自发光。"

msgid ""
"**LightmapGI:** |good| Excellent indirect lighting, decent reflections "
"(optional)."
msgstr "**LightmapGI：** |good| 出色的间接照明，良好的反射（可选）。"

msgid "good"
msgstr "good"

msgid ""
"This is the only technique where the number of light bounces can be pushed "
"above 2 (up to 16). When directional information is enabled, spherical "
"harmonics (SH) are used to provide blurry reflections."
msgstr ""
"这是唯一可以将光反射次数提高到 2 以上（最多 16 个）的技术。 启用方向信息后，"
"球谐函数 (spherical harmonics, SH) 用于提供模糊反射。"

msgid ""
"LightmapGI in action. Only indirect lighting is baked here, but direct light "
"can also be baked."
msgstr "LightmapGI 的实际应用。 这里只烘焙间接光照，但也可以烘焙直接光照。"

msgid ""
"**ReflectionProbe:** |average| Good reflections, but poor indirect lighting."
msgstr "**ReflectionProbe：** |average| 反射良好，但间接照明较差。"

msgid ""
"Indirect lighting can be disabled, set to a constant color spread throughout "
"the probe, or automatically read from the probe's environment (and applied "
"as a cubemap). This essentially acts as local ambient lighting. Reflections "
"and indirect lighting are blended with other nearby probes."
msgstr ""
"可以禁用间接照明，将其设置为整个探针的恒定颜色分布，或者自动从探针的环境中读"
"取（并作为立方体贴图应用）。 这本质上在充当局部环境照明。 反射和间接照明与其"
"他附近的探针混合。"

msgid ""
"ReflectionProbe in action (without any other GI technique). Notice the "
"reflective sphere."
msgstr ""
"ReflectionProbe 的实际应用（没有任何其他 GI 技术）。 注意有反射效果球体。"

msgid "Real-time ability"
msgstr "实时能力"

msgid "**VoxelGI:** |good| Fully real-time."
msgstr "**VoxelGI：** |good| 完全实时。"

msgid ""
"Indirect lighting and reflections are fully real-time. Dynamic objects can "
"receive GI *and* contribute to it with their emissive surfaces. Custom "
"shaders can also emit their own light, which will be emitted accurately."
msgstr ""
"间接关照和反射是完全实时的。动态物体可以接收 GI， *并* 通过其自发光表面对 GI "
"做出贡献。自定义着色器也可以准确地发出自己的光。"

msgid ""
"Viable for procedurally generated levels *if they are generated in advance* "
"(and not during gameplay). Baking requires several seconds or more to "
"complete, but it can be done from both the editor and an exported project."
msgstr ""
"适用于程序生成的关卡 *如果它们是提前生成的* （而不是在游戏过程中）。 烘焙需要"
"几秒钟或更长时间才能完成，但可以从编辑器和导出的项目中完成。"

msgid "**SDFGI:** |average| Semi-real-time."
msgstr "**SDFGI：**\\ |average| 半实时。"

msgid ""
"Cascades are generated in real-time, making SDFGI viable for procedurally "
"generated levels (including when structures are generated during gameplay)."
msgstr ""
"级联（Cascade）是实时生成的，使得 SDFGI 适用于程序生成的关卡（包括在游戏过程"
"中生成结构时）。"

msgid ""
"Dynamic objects can *receive* GI, but not *contribute* to it. Emissive "
"lighting will only update when an object enters a cascade, so it may still "
"work for slow-moving objects."
msgstr ""
"动态对象可以 *接收* GI，但不能 *贡献* 它。 自发光光线仅在对象进入级联时才会更"
"新，因此它可能仍然适用于缓慢移动的对象。"

msgid "**Screen-space indirect lighting (SSIL):** |good| Fully real-time."
msgstr "**屏幕空间间接光照（SSIL）：**\\ |good| 完全实时。"

msgid ""
"SSIL works with both static and dynamic lights. It also works with both "
"static and dynamic occluders (including emissive materials)."
msgstr ""
"SSIL 适用于静态和动态灯光。 它还适用于静态和动态遮挡器（包括自发光材质）。"

msgid "**LightmapGI:** |bad| Baked, and therefore not real-time."
msgstr "**LightmapGI：**\\ |bad| 进行了烘焙，因此非实时。"

msgid "bad"
msgstr "bad"

msgid ""
"Both indirect lighting and SH reflections are baked and can't be changed at "
"run-time. Real-time GI must be :ref:`simulated via other means "
"<doc_faking_global_illumination>`, such as real-time positional lights. "
"Dynamic objects receive indirect lighting via light probes, which can be "
"placed automatically or manually by the user (LightmapProbe node). Not "
"viable for procedurally generated levels, as baking lightmaps is only "
"possible from the editor."
msgstr ""
"间接光照和 SH 反射都是烘焙的，无法在运行时更改。 实时 GI 必须通过 :ref:`其他"
"方式模拟 <doc_faking_global_illumination>`，例如实时位置灯光。 动态对象通过光"
"探针接收间接光照，光探针可以自动或由用户手动放置（LightmapProbe 节点）。 对于"
"程序生成的关卡则不可行，因为只能从编辑器中烘焙光照贴图。"

msgid "**ReflectionProbe:** |average| Optionally real-time."
msgstr "**ReflectionProbe：**\\ |average| 可选实时。"

msgid ""
"By default, reflections update when the probe is moved. They update as often "
"as possible if the update mode is set to **Always** (which is expensive)."
msgstr ""
"默认情况下，反射会在移动探针时更新。如果更新模式设置为 **始终** （这开销很"
"大），则它们会尽可能频繁地更新。"

msgid ""
"Indirect lighting must be configured manually by the user, but can be "
"changed at run-time without causing an expensive computation to happen "
"behind the scenes. This makes ReflectionProbes viable for procedurally "
"generated levels."
msgstr ""
"间接光照必须由用户手动配置，但它可以在运行时以一个不会导致后台进行大开销计算"
"的方式更改。这使得 ReflectionProbes 可以用于程序化生成的级别。"

msgid "User work needed"
msgstr "用户干预"

msgid "**VoxelGI:** One or more VoxelGI nodes need to be created and baked."
msgstr "**VoxelGI：**\\ 需要创建若干 VoxelGI 节点并烘焙。"

msgid ""
"Adjusting extents correctly is required to get good results. Additionally "
"rotating the node and baking again can help combat leaks or streaking "
"artifacts in certain situations. Bake times are fast – usually below 10 "
"seconds for a scene of medium complexity."
msgstr ""
"为了获得良好的结果，需要正确调整范围。此外，在某些情况下，旋转节点并再次烘焙"
"可以帮助对抗泄漏或条纹伪影。烘焙时间很快——对于中等复杂度的场景，通常低于10"
"秒。"

msgid "**SDFGI:** Very little."
msgstr "**SDFGI：**\\ 非常少。"

msgid ""
"SDFGI is fully automatic; it only needs to be enabled in the Environment "
"resource. The only manual work required is to set MeshInstances' bake mode "
"property correctly. No node needs to be created, and no baking is required."
msgstr ""
"SDFGI 是全自动的；它只需要在环境资源中启用。所需的唯一手动操作是正确设置 "
"MeshInstances 的烘焙模式属性。不需要创建节点，也不必须烘焙。"

msgid "**Screen-space indirect lighting (SSIL):** Very little."
msgstr "**屏幕空间间接光照（SSIL）：**\\ 非常少。"

msgid ""
"SSIL is fully automatic; it only needs to be enabled in the Environment "
"resource. No node needs to be created, and no baking is required."
msgstr ""
"SSIL 是全自动的；它只需要在环境资源中启用。不需要创建节点，也不必须烘焙。"

msgid "**LightmapGI:** Requires UV2 setup and baking."
msgstr "**LightmapGI：**\\ 需要设置 UV2 并烘焙。"

msgid ""
"Static meshes must be reimported with UV2 and lightmap generation enabled. "
"On a dedicated GPU, bake times are relatively fast thanks to the GPU-based "
"lightmap baking – usually below 1 minute for a scene of medium complexity."
msgstr ""
"静态网格必须在启用 UV2 和光照贴图生成的情况下重新导入。在专用 GPU 上，由于基"
"于 GPU 的光照贴图烘焙，烘焙时间相对较快——对于中等复杂度的场景，通常低于1分"
"钟。"

msgid "**ReflectionProbe:** Placed manually by the user."
msgstr "**ReflectionProbe：**\\ 用户手动放置。"

msgid "Summary"
msgstr "总结"

msgid "If you are unsure about which GI technique to use:"
msgstr "如果你不确定使用哪种 GI 技术："

msgid ""
"For desktop games, it's a good idea to start with :ref:`SDFGI "
"<doc_using_sdfgi>` first as it requires the least amount of setup. Move to "
"other GI techniques later if needed. To improve performance on low-end GPUs "
"and integrated graphics, consider adding an option to disable SDFGI or :ref:"
"`VoxelGI <doc_using_voxel_gi>` in your game's settings. SDFGI can be "
"disabled in the Environment resource, and VoxelGI can be disabled by hiding "
"the VoxelGI node(s). To further improve visuals on high-end setups, add an "
"option to enable SSIL in your game's settings."
msgstr ""
"对于桌面游戏，最好先从 :ref:`SDFGI<doc_using_SDFGI>` 开始，因为它需要的设置最"
"少。如果需要，稍后转到其他 GI 技术。要提高低端 GPU 和集成图形的性能，请考虑在"
"游戏设置中添加禁用 SDFGI 或 :ref:`VoxelGI<doc_using_voxel_gi>` 的选项。SDFGI "
"可以在环境资源中禁用，VoxelGI 可以通过隐藏 VoxelGI 节点来禁用。要进一步改善高"
"端设置的视觉效果，请在游戏设置中添加一个启用 SSIL 的选项。"

msgid ""
"For mobile games, :ref:`LightmapGI <doc_using_lightmap_gi>` and :ref:"
"`ReflectionProbes <doc_reflection_probes>` are the only supported options. "
"See also :ref:`doc_introduction_to_global_illumination_alternatives`."
msgstr ""
"对于移动游戏，\\ :ref:`LightmapGI <doc_using_lightmap_gi>` 和 :ref:"
"`ReflectionProbe <doc_reflection_probes>` 是唯一受支持的选项。另见 :ref:"
"`doc_introduction_to_global_illumination_alternatives`\\ 。"

msgid ""
"You can compare global illumination techniques in action using the `Global "
"Illumination demo project <https://github.com/godotengine/godot-demo-"
"projects/tree/master/3d/global_illumination>`__."
msgstr ""
"你可以使用 `全局照明演示项目 <https://github.com/godotengine/godot-demo-"
"projects/tree/master/3d/global_illumination>`__ 比较实际的全局照明技术。"

msgid "Which global illumination mode should I use on meshes and lights?"
msgstr "我应该在网格和灯光上使用哪种全局光照模式？"

msgid ""
"Regardless of which global illumination technique you use, there is no "
"universally \"better\" global illumination mode. Still, here are some "
"recommendations for meshes:"
msgstr ""
"无论使用哪种全局光照技术，都没有普遍 “更好” 的全局光照模式。不过，这里有一些"
"关于网格的建议："

msgid ""
"For static level geometry, use the **Static** global illumination mode "
"*(default)*."
msgstr "对于静态级别的几何体，请使用 **静态** 全局光照模式 *（默认）* 。"

msgid ""
"For small dynamic geometry and players/enemies, use the **Disabled** global "
"illumination mode. Small dynamic geometry will not be able to contribute a "
"significant amount of indirect lighting, due to the geometry being smaller "
"than a voxel. If you need indirect lighting for small dynamic objects, it "
"can be simulated using an OmniLight3D or SpotLight3D node parented to the "
"object."
msgstr ""
"对于小型动态几何体和玩家/敌人，请使用 **禁用** 全局光照模式。由于几何体小于体"
"素 ( voxel) ，小的动态几何体将无法提供大量的间接照明。如果小型动态对象需要间"
"接光照，则可以使用对象的父级 OmniLight3D 或 SpotLight3D 节点对其进行模拟。"

msgid ""
"For *large* dynamic level geometry (such as a moving train), use the "
"**Dynamic** global illumination mode. Note that this only has an effect with "
"VoxelGI, as SDFGI and LightmapGI do not support global illumination with "
"dynamic objects."
msgstr ""
"对于 *大* 动态级别的几何体（例如移动的火车），请使用 **动态** 全局光照模式。"
"请注意，这只对 VoxelGI 有影响，因为 SDFGI 和 LightmapGI 不支持动态对象的全局"
"光照。"

msgid "Here are some recommendations for light bake modes:"
msgstr "以下是一些关于光照烘焙模式的建议："

msgid ""
"For static level lighting, use the **Static** bake mode. The **Static** mode "
"is also suitable for dynamic lights that don't change much during gameplay, "
"such as a flickering torch."
msgstr ""
"对于静态级别的光照，请使用 **静态** 烘焙模式。 **静态** 模式也适用于在游戏过"
"程中变化不大的动态灯光，例如闪烁的手电筒。"

msgid ""
"For short-lived dynamic effects (such as a weapon), use the **Disabled** "
"bake mode to improve performance."
msgstr "对于短暂的动态效果（如武器），请使用 **禁用** 烘焙模式来提高性能。"

msgid ""
"For long-lived dynamic effects (such as a rotating alarm light), use the "
"**Dynamic** bake mode to improve quality *(default)*. Note that this only "
"has an effect with VoxelGI and SDFGI, as LightmapGI does not support global "
"illumination with dynamic lights."
msgstr ""
"对于长期动态效果（如旋转报警灯），请使用 **动态** 烘焙模式来提高质量 *（默认"
"值）* 。请注意，这只对 VoxelGI 和 SDFGI 有影响，因为 LightmapGI 不支持动态灯"
"光的全局光照。"

msgid "Alternatives to GI techniques"
msgstr "GI 技术的替代方案"

msgid ""
"If none of the GI techniques mentioned above fits, it's still possible to :"
"ref:`simulate GI by placing additional lights manually "
"<doc_faking_global_illumination>`. This requires more manual work, but it "
"can offer good performance *and* good visuals if done right. This approach "
"is still used in many modern games to this day."
msgstr ""
"如果上面提到的 GI 技术都不适用，仍然可以\\ :ref:`通过手动放置附加灯光来模拟 "
"GI <doc_faking_global_illumination>`\\ 。这需要更多的手动操作，但如果做得好，"
"就可以提供良好的性能和视觉效果。这种方法至今仍在许多现代游戏中使用。"

msgid ""
"When targeting low-end hardware in situations where using LightmapGI is not "
"viable (such as procedurally generated levels), relying on environment "
"lighting alone or a constant ambient light factor may be a necessity. This "
"may result in flatter visuals, but adjusting the ambient light color and sky "
"contribution still makes it possible to achieve acceptable results in most "
"cases."
msgstr ""
"当在使用LightmapGI无效的情况下（例如程序生成的表面）或者配置的硬件较低，可能"
"需要单独依靠环境照明或稳定的环境光。这可能会导致没有凹凸感的视觉效果，但调整"
"环境光的颜色和天空贴图后仍然可以在大多数情况下能接受的效果。"

msgid "Translation status"
msgstr "翻译状态"
