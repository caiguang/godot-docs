# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Resolution scaling"
msgstr "分辨率缩放"

msgid "Why use resolution scaling?"
msgstr "为什么要使用分辨率缩放？"

msgid ""
"With the ever-increasing rendering complexity of modern games, rendering at "
"native resolution isn't always viable anymore, especially on lower-end GPUs."
msgstr ""
"随着现代游戏的渲染复杂度不断增加，以原始分辨率进行渲染不再总是可行，尤其是在"
"低端 GPU 上。"

msgid ""
"Resolution scaling is one of the most direct ways to influence the GPU "
"requirements of a scene. In scenes that are bottlenecked by the GPU (rather "
"than by the CPU), decreasing the resolution scale can improve performance "
"significantly. Resolution scaling is particularly important on mobile GPUs "
"where performance and power budgets are limited."
msgstr ""
"分辨率缩放是影响场景 GPU 要求的最直接方法之一。在 GPU（而不是 CPU）成为瓶颈的"
"场景中，降低分辨率比例可以显着提高性能。分辨率缩放对于性能和功耗预算有限的移"
"动 GPU 尤为重要。"

msgid ""
"While resolution scaling is an important tool to have, remember that "
"resolution scaling is not intended to be a replacement for decreasing "
"graphics settings on lower-end hardware. Consider exposing both resolution "
"scale and graphics settings in your in-game menus."
msgstr ""
"虽然分辨率缩放是一个重要的工具，但请记住，分辨率缩放并不是要取代低端硬件上降"
"低图形设置的方法。考虑在游戏菜单中公开分辨率比例和图形设置的办法。"

msgid ""
"You can compare resolution scaling modes and factors in action using the `3D "
"Antialiasing demo project <https://github.com/godotengine/godot-demo-"
"projects/tree/master/3d/antialiasing>`__."
msgstr ""
"你可以使用`3D 抗锯齿演示项目 <https://github.com/godotengine/godot-demo-"
"projects/tree/master/3d/antialiasing>`__ 比较分辨率缩放模式和实际影响因素。"

msgid ""
"Resolution scaling is currently not available for 2D rendering, but it can "
"be simulated using the ``viewport`` stretch mode. See :ref:"
"`doc_multiple_resolutions` for more information."
msgstr ""
"分辨率缩放目前不适用于 2D 渲染，但可以使用 ``viewport`` 拉伸模式进行模拟。请"
"参阅 :ref:`doc_multiple_resolutions` 了解更多信息。"

msgid "Resolution scaling options"
msgstr "分辨率缩放选项"

msgid ""
"In the advanced Project Settings' **Rendering > Scaling 3D** section, you "
"can find several options for 3D resolution scaling:"
msgstr ""
"在高级项目设置的 **渲染 > 缩放 3D** 部分中，可以找到用于 3D 分辨率缩放的多个"
"选项："

msgid "Scaling mode"
msgstr "缩放模式"

msgid "**Bilinear:** Standard bilinear filtering (default)."
msgstr "**Bilinear：** 标准双线性过滤（默认）。"

msgid ""
"**FSR 1.0:** `AMD FidelityFX Super Resolution 1.0 <https://gpuopen.com/"
"fidelityfx-superresolution/>`__. Slower, but higher quality compared to "
"bilinear scaling. On very slow GPUs, the cost of FSR1 may be too expensive "
"to be worth using it over bilinear scaling."
msgstr ""
"**FSR 1.0：** `AMD FidelityFX Super Resolution 1.0 <https://gpuopen.com/"
"fidelityfx-superresolution/>`__ 。与双线性缩放相比，速度较慢，但质量较高。在"
"非常慢的 GPU 上，FSR 1 的性能成本可能太高，比起双线性缩放来说并不值得使用它。"

msgid ""
"**FSR 2.2:** AMD FidelityFX Super Resolution 2.2 (since Godot 4.2). Slowest, "
"but even higher quality compared to FSR1 and bilinear scaling. On slow GPUs, "
"the cost of FSR2 may be too expensive to be worth using it over bilinear "
"scaling or FSR1. To match FSR2 performance with FSR1, you need to use a "
"lower resolution scale factor."
msgstr ""
"**FSR 2.2：** AMD FidelityFX Super Resolution 2.2（自 Godot 4.2 起支持） 。"
"与 FSR1 和双线性缩放相比，速度最慢，但质量更高。在慢速 GPU 上，相比起双线性缩"
"放或 FSR1，使用 FSR2 的性能成本可能太过昂贵，因而不值得使用。为了使 FSR2 性能"
"与 FSR1 相匹配，你需要使用较低的分辨率缩放因子。"

msgid ""
"Here are comparison images between native resolution, bilinear scaling with "
"50% resolution scale, FSR1, and FSR2 scaling with 50% resolution scale:"
msgstr ""
"以下是原始分辨率、50% 分辨率双线性缩放、50% 分辨率 FSR1 和 FSR2 缩放之间的比"
"较图像："

msgid ""
"FSR1 upscaling works best when coupled with another form of antialiasing. "
"Temporal antialiasing (TAA) or multisample antialiasing (MSAA) should "
"preferably be used in this case, as FXAA does not add temporal information "
"and introduces more blurring to the image."
msgstr ""
"当与另一种形式的抗锯齿结合使用时，FSR1 放大的效果最佳。在这种情况下，最好使用"
"时间抗锯齿 (TAA) 或多重采样抗锯齿 (MSAA)，因为 FXAA 不会添加时间信息，并且会"
"给图像带来更多模糊。"

msgid ""
"On the other hand, FSR2 provides its own temporal antialiasing. This means "
"you don't need to enable other antialiasing methods for the resulting image "
"to look smooth. The **Use TAA** project setting is ignored when FSR2 is used "
"as the 3D scaling method, since FSR2's temporal antialiasing takes priority."
msgstr ""
"另一方面，FSR2 会提供自己的时间抗锯齿功能。这意味着不需要启用其他抗锯齿方法，"
"即可让生成的图像看起来平滑。当 FSR2 用作 3D 缩放方法时， 由于 FSR2 自己的时间"
"抗锯齿功能优先， **使用 TAA** 项目设置将被忽略。"

msgid "Here's the same comparison, but with 4× MSAA enabled on all images:"
msgstr "以下是相同的比较，但在所有图像上启用了 4× MSAA："

msgid ""
"Notice how the edge upscaling of FSR1 becomes much more convincing once 4× "
"MSAA is enabled. However, FSR2 doesn't benefit much from enabling MSAA since "
"it already performs temporal antialiasing."
msgstr ""
"请注意，启用 4× MSAA 后，FSR1 的边缘放大如何变得更加可信。然而，FSR2 并没有从"
"启用 MSAA 中获益太多，因为它已经执行了时间抗锯齿功能。"

msgid "Rendering scale"
msgstr "渲染缩放"

msgid ""
"The **Rendering > Scaling 3D > Scale** setting adjusts the resolution scale. "
"``1.0`` represents the full resolution scale, with the 3D rendering "
"resolution matching the 2D rendering resolution. Resolution scales *below* "
"``1.0`` can be used to speed up rendering, at the cost of a blurrier final "
"image and more aliasing."
msgstr ""
"**渲染 > 缩放 3D > 缩放** 设置可调整分辨率缩放比例。 ``1.0`` 表示全分辨率比"
"例，3D 渲染分辨率与 2D 渲染分辨率相匹配。分辨率比例 *低于* ``1.0`` 可用于加速"
"渲染，但代价是最终图像变得更模糊和并具有更多锯齿。"

msgid ""
"The rendering scale can be adjusted at run-time by changing the "
"``scaling_3d_scale`` property on a :ref:`class_Viewport` node."
msgstr ""
"可以通过更改 :ref:`class_Viewport` 节点上的 ``scaling_3d_scale`` 属性在运行时"
"调整渲染缩放。"

msgid ""
"Resolution scales *above* ``1.0`` can be used for supersample antialiasing "
"(SSAA). This will provide antialiasing at a *very* high performance cost, "
"and is **not recommended** for most use cases. See :ref:"
"`doc_3d_antialiasing` for more information."
msgstr ""
"分辨率缩放在 ``1.0`` *以上* 可用于超采样抗锯齿 (SSAA)。这将以 *非常* 高的性能"
"成本提供抗锯齿功能，并且对于大多数用例来说 **不推荐** 。请参阅 :ref:"
"`doc_3d_antialiasing` 了解更多信息。"

msgid ""
"The tables below list common screen resolutions, the resulting 3D rendering "
"resolution and the number of megapixels that need to be rendered each frame "
"depending on the rendering scale option. Rows are sorted from fastest to "
"slowest in each table."
msgstr ""
"下表列出了常见的屏幕分辨率、最终的 3D 渲染分辨率以及根据渲染缩放选项每帧需要"
"渲染的百万像素数（megapixel ）。每个表中的行按从最快到最慢的顺序排序。"

msgid ""
"The resolution scale is defined on a **per-axis** basis. For example, this "
"means that halving the resolution scale factor will reduce the number of "
"rendered megapixels per frame by a factor of 4, not 2. Therefore, very low "
"or very high resolution scale factors can have a greater performance impact "
"than expected."
msgstr ""
"分辨率缩放是在 **每轴** （per-axis）的基础上定义的。例如，将分辨率缩放因子减"
"半意味着将使每帧渲染的百万像素数减少 4 倍，而不是 2 倍。因此，非常低或非常高"
"的分辨率缩放因子都可能会对性能产生比预期更大的影响。"

msgid "**1920×1080 (Full HD)**"
msgstr "**1920×1080（Full HD）**"

msgid "Resolution scale factor"
msgstr "远程检查器"

msgid "3D rendering resolution"
msgstr "3D 渲染分辨率"

msgid "Megapixels rendered per frame"
msgstr "渲染前一帧的时间"

msgid "``0.50``"
msgstr "``0.50``"

msgid "960×540"
msgstr "960×540"

msgid "0.52 MPix"
msgstr "0.52 MPix"

msgid "``0.67``"
msgstr "``0.67``"

msgid "1286×723"
msgstr "1286×723"

msgid "0.93 MPix"
msgstr "0.93 MPix"

msgid "``0.75``"
msgstr "``0.75``"

msgid "1440×810"
msgstr "1440×810"

msgid "1.17 MPix"
msgstr "1.17 MPix"

msgid "``0.85``"
msgstr "``0.85``"

msgid "1632×918"
msgstr "1632×918"

msgid "1.50 MPix"
msgstr "1.50 MPix"

msgid "``1.00`` **(native)**"
msgstr "``1.00`` **（原生）**"

msgid "**1920×1080**"
msgstr "**1920×1080**"

msgid "**2.07 MPix**"
msgstr "**2.07 MPix**"

msgid "``1.33`` (supersampling)"
msgstr "``1.33`` （超采样）"

msgid "2553×1436"
msgstr "2553×1436"

msgid "3.67 MPix"
msgstr "3.67 MPix"

msgid "``1.50`` (supersampling)"
msgstr "``1.50`` （超采样）"

msgid "2880×1620"
msgstr "2880×1620"

msgid "4.67 MPix"
msgstr "4.67 MPix"

msgid "``2.00`` (supersampling)"
msgstr "``2.00`` （超采样）"

msgid "3840×2160"
msgstr "3840×2160"

msgid "8.29 MPix"
msgstr "8.29 MPix"

msgid "**2560×1440 (QHD)**"
msgstr "**2560×1440 （QHD）**"

msgid "1280×720"
msgstr "1280×720"

msgid "0.92 MPix"
msgstr "0.92 MPix"

msgid "1715×964"
msgstr "1715×964"

msgid "1.65 MPix"
msgstr "1.65 MPix"

msgid "1920×1080"
msgstr "1920×1080"

msgid "2.07 MPix"
msgstr "2.07 MPix"

msgid "2176×1224"
msgstr "2176×1224"

msgid "2.66 MPix"
msgstr "2.66 MPix"

msgid "**2560×1440**"
msgstr "**2560×1440**"

msgid "**3.69 MPix**"
msgstr "**3.69 MPix**"

msgid "3404×1915"
msgstr "3404×1915"

msgid "6.52 MPix"
msgstr "6.52 MPix"

msgid "5120×2880"
msgstr "5120×2880"

msgid "14.75 MPix"
msgstr "14.75 MPix"

msgid "**3840×2160 (Ultra HD \"4K\")**"
msgstr "**3840×2160 （Ultra HD “4K”）**"

msgid "2572×1447"
msgstr "2572×1447"

msgid "3.72 MPix"
msgstr "3.72 MPix"

msgid "3264×1836"
msgstr "3264×1836"

msgid "5.99 MPix"
msgstr "5.99 MPix"

msgid "**3840×2160**"
msgstr "**3840×2160**"

msgid "**8.29 MPix**"
msgstr "**8.29 MPix**"

msgid "5107×2872"
msgstr "5107×2872"

msgid "14.67 MPix"
msgstr "14.67 MPix"

msgid "5760×3240"
msgstr "5760×3240"

msgid "18.66 MPix"
msgstr "18.66 MPix"

msgid "7680×4320"
msgstr "7680×4320"

msgid "33.18 MPix"
msgstr "33.18 MPix"

msgid "FSR Sharpness"
msgstr "FSR 锐度"

msgid ""
"When using the FSR1 or FSR2 scaling modes, the sharpness can be controlled "
"using the **Rendering > Scaling 3D > FSR Sharpness** advanced project "
"setting."
msgstr ""
"使用 FSR1 或 FSR2 缩放模式时，可以使用 **渲染 > 缩放 3D > FSR 锐度** 高级项目"
"设置来控制锐度。"

msgid ""
"The intensity is inverted compared to most other sharpness sliders: *lower* "
"values will result in a sharper final image, while *higher* values will "
"*reduce* the impact of the sharpening filter. ``0.0`` is the sharpest, while "
"``2.0`` is the least sharp. The default value of ``0.2`` provides a balance "
"between preserving the original image's sharpness and avoiding additional "
"aliasing due to oversharpening."
msgstr ""
"与大多数其他锐度滑动条相比，强度是相反的： *较低* 值将导致最终图像更锐利，而 "
"*较高* 值将 *减少* 锐化滤镜的影响。 ``0.0`` 是最锐利的，而 ``2.0`` 是最不锐利"
"的。默认值 ``0.2`` 在保留原始图像的清晰度和避免由于过度锐化而产生额外锯齿之间"
"提供了较为的平衡选项。"

msgid ""
"If you wish to use sharpening when rendering at native resolution, Godot "
"currently doesn't allow using the sharpening component of FSR1 (RCAS) "
"independently from the upscaling component (EASU)."
msgstr ""
"如果你希望在以原始分辨率渲染时使用锐化，Godot 目前不允许使用独立于升级组件 "
"(EASU) 的 FSR1 (RCAS) 锐化组件。"

msgid ""
"As a workaround, you can set the 3D rendering scale to ``0.99``, set the "
"scaling mode to **FSR 1.0** then adjust FSR sharpness as needed. This allows "
"using FSR1 while rendering at a near-native resolution."
msgstr ""
"作为一种解决方案，可以将 3D 渲染缩放比例设置为 ``0.99`` ，将缩放模式设置为 "
"**FSR 1.0** ，然后根据需要调整 FSR 锐度。这允许在以接近原始分辨率渲染时使用 "
"FSR1。"

msgid ""
"Alternatively, you can set the scaling mode to **FSR 2.2** with the 3D "
"rendering scale set to ``1.0`` if you have enough GPU headroom. This also "
"provides high-quality temporal antialiasing. The **FSR Sharpness** setting "
"remains functional in this case."
msgstr ""
"或者说，如果你有足够的 GPU 性能余量，可以将缩放模式设置为 **FSR 2.2** ，并将 "
"3D 渲染比例设置为 ``1.0`` 。这样的设置还带来了高质量的时间抗锯齿。在这种情况"
"下， **FSR 锐度** 设置仍然有效。"

msgid "Mipmap bias"
msgstr "多级渐远纹理偏置（Mipmap bias）"

msgid ""
"Godot automatically uses a negative texture mipmap bias when the 3D "
"resolution scale is set below ``1.0``. This allows for better preservation "
"of texture detail at the cost of a grainy appearance on detailed textures."
msgstr ""
"当 3D 分辨率比例设置为低于 ``1.0`` 时，Godot 会自动使用负纹理多级渐远纹理"
"（mipmap）偏置。这样可以更好地保留纹理细节，但代价是详细纹理上出现颗粒状的外"
"观。"

msgid ""
"The texture LOD bias currently affects both 2D and 3D rendering in the same "
"way. However, keep in mind it only has an effect on textures with mipmaps "
"enabled. Textures used in 2D don't have mipmaps enabled by default, which "
"means only 3D rendering is affected unless you enabled mipmaps on 2D "
"textures in the Import dock."
msgstr ""
"目前，纹理 LOD 偏置以相同的方式影响 2D 和 3D 渲染。但是，请记住，它仅对启用 "
"mipmap 的纹理产生影响。默认情况下，2D 中使用的纹理不启用 mipmap，这意味着只"
"有 3D 渲染会受到影响，除非你在导入面板中对 2D 纹理启用 mipmap。"

msgid "The formula used to determine the texture mipmap bias is: TODO"
msgstr "用于确定纹理 mipmap 偏置的公式为： TODO"

msgid ""
"To counteract the blurriness added by some antialiasing methods, Godot also "
"adds a ``-0.25`` offset when FXAA is enabled, and a ``-0.5`` offset when TAA "
"is enabled. If both are enabled at the same time, a ``-0.75`` offset is "
"used. This mipmap bias offset is applied *before* the resolution scaling "
"offset, so it does not change depending on resolution scale."
msgstr ""
"为了抵消某些抗锯齿方法增加的模糊度，Godot 还在启用 FXAA 时添加了 ``-0.25`` 偏"
"移量，在启用 TAA 时添加了 ``-0.5`` 偏移量。如果同时启用两者，则使用 "
"``-0.75`` 偏移量。此 mipmap 偏置偏移在分辨率缩放偏移之前应用，因此它不会根据"
"分辨率缩放而变化。"

msgid ""
"The texture LOD bias can manually be changed by adjusting the **Rendering > "
"Textures > Default Filters > Texture Mipmap Bias** advanced project setting. "
"It can also be changed at run-time on :ref:`Viewports <class_Viewport>` by "
"adjusting the ``texture_mipmap_bias`` property."
msgstr ""
"可以通过调整 **渲染 > 纹理 > 默认过滤 > 纹理 Mipmap 偏置** 高级项目设置来手动"
"更改纹理 LOD 偏置。它也可以在运行时通过在 :ref:`Viewport <class_Viewport>` 上"
"调整 ``texture_mipmap_bias`` 属性进行更改。"

msgid ""
"Adjusting the mipmap LOD bias manually can be useful in certain scenarios, "
"but this should be done carefully to prevent the final image from looking "
"grainy in motion."
msgstr ""
"手动调整 mipmap LOD 偏差在某些情况下可能很有用，但应小心执行，以防止最终图像"
"在运动中看起来有颗粒感。"

msgid ""
"*Negative* mipmap LOD bias can also decrease performance due to higher-"
"resolution mips having to be sampled further away. Recommended values for a "
"manual offset are between ``-0.5`` and ``0.0``."
msgstr ""
"*负* mipmap LOD 偏置也会降低性能，因为必须在更远的距离采样更高分辨率的 mip。"
"手动偏移的建议值在 ``-0.5`` 和 ``0.0`` 之间。"

msgid ""
"*Positive* mipmap LOD bias will make mipmapped textures appear blurrier than "
"intended. This may improve performance slightly, but is otherwise not "
"recommended as the loss in visual quality is usually not worth the "
"performance gain."
msgstr ""
"*正* mipmap LOD 偏置将使 mipmap 纹理看起来比预期更模糊。这可能会稍微提高性"
"能，但并不建议这样做，因为视觉质量的损失通常不值得性能的提升。"

msgid ""
"The example below shows an extreme case, with a mipmap LOD bias of ``-1.0`` "
"and anisotropic filtering disabled to make the difference more noticeable:"
msgstr ""
"下面的示例展示了一个极端情况，其中 mipmap LOD 偏置为 ``-1.0`` ，并禁用各向异"
"性过滤以使差异更加明显："

msgid "Troubleshooting"
msgstr "故障排除"

msgid "Performance does not increase much when decreasing resolution scale"
msgstr "降低分辨率缩放比例时性能不会增加太多"

msgid ""
"If performance doesn't increase much when decreasing resolution scale to a "
"value like ``0.5``, it likely means the performance bottleneck is elsewhere "
"in your scene. For example, your scene could have too many draw calls, "
"causing a CPU bottleneck to occur. Likewise, you may have too many graphics "
"effects enabled for your GPU to handle (such as SDFGI, SSAO or SSR)."
msgstr ""
"如果将分辨率比例降低到 ``0.5`` 之类的值时，性能并没有增加太多，则可能意味着性"
"能瓶颈在场景的其他地方。例如，你的场景可能有太多绘制调用（draw call），导致出"
"现 CPU 瓶颈。同样，你可能启用了太多图形效果供 GPU 处理（例如 SDFGI、SSAO 或 "
"SSR）。"

msgid "See the :ref:`doc_performance` tutorials for more information."
msgstr "详见 :ref:`doc_performance` 教程。"

msgid "Translation status"
msgstr "翻译状态"
