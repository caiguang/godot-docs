# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Troubleshooting"
msgstr "故障排除"

msgid ""
"This page lists common issues encountered when using Godot and possible "
"solutions."
msgstr "这个页面列出了使用 Godot 时的常见问题以及可能的解决办法。"

msgid ""
"See :ref:`doc_using_the_web_editor` for caveats specific to the Web version "
"of the Godot editor."
msgstr ""
"关于 Godot 编辑器 Web 版本特定的注意事项，请参阅 :ref:"
"`doc_using_the_web_editor`\\ 。"

msgid ""
"The editor runs slowly and uses all my CPU and GPU resources, making my "
"computer noisy"
msgstr "编辑器运行缓慢，占用了我所有的 CPU 和 GPU 资源，使我的电脑变得嘈杂"

msgid ""
"This is a known issue, especially on macOS since most Macs have Retina "
"displays. Due to Retina displays' higher pixel density, everything has to be "
"rendered at a higher resolution. This increases the load on the GPU and "
"decreases perceived performance."
msgstr ""
"这是一个已知问题，尤其是在 macOS 上，因为大多数 Mac 都有 Retina 显示屏。由于 "
"Retina 显示器的像素密度更高，因此所有内容都必须以更高的分辨率渲染。这会增加 "
"GPU 上的负载并降低感知性能。"

msgid "There are several ways to improve performance and battery life:"
msgstr "有几种衡量性能和电池续航的方法, 包括:"

msgid ""
"In 3D, click the **Perspective** button in the top left corner and enable "
"**Half Resolution**. The 3D viewport will now be rendered at half "
"resolution, which can be up to 4 times faster."
msgstr ""
"在 3D 模式下，单击左上角的\\ **透视**\\ 按钮并启用\\ **半分辨率**\\ 。现在 "
"3D 视口就会以半分辨率渲染，速度最多可以提高到原来的 4 倍。"

msgid ""
"Open the Editor Settings and increase the value of **Low Processor Mode "
"Sleep (µsec)** to ``33000`` (30 FPS). This value determines the amount of "
"*microseconds* between frames to render. Higher values will make the editor "
"feel less reactive but will help decrease CPU and GPU usage significantly."
msgstr ""
"打开编辑器设置并将 **低处理器模式睡眠（微秒）** 的值增加到 ``33000`` \\（30 "
"FPS）。 该值确定要渲染的帧之间的 *微秒* 量。 较高的值将降低编辑器反应性，但可"
"显著降低 CPU 和 GPU 使用率。"

msgid ""
"If you have a node that causes the editor to redraw continuously (such as "
"particles), hide it and show it using a script in the ``_ready()`` method. "
"This way, it will be hidden in the editor but will still be visible in the "
"running project."
msgstr ""
"如果有某个节点导致编辑器连续重新绘制（例如粒子），请将其隐藏并使用 "
"``_ready()`` 方法在脚本中显示它。这样，它将隐藏在编辑器中，但仍在正在运行的项"
"目中可见。"

msgid ""
"The editor stutters and flickers on my variable refresh rate monitor (G-Sync/"
"FreeSync)"
msgstr "编辑器在我的可变刷新率显示器（G-Sync/FreeSync）上出现卡顿和闪烁的情况"

msgid ""
"This is a `known issue <https://github.com/godotengine/godot/"
"issues/38219>`__. Variable refresh rate monitors need to adjust their gamma "
"curves continuously to emit a consistent amount of light over time. This can "
"cause flicker to appear in dark areas of the image when the refresh rate "
"varies a lot, which occurs as the Godot editor only redraws when necessary."
msgstr ""
"这是一个\\ `已知问题 <https://github.com/godotengine/godot/"
"issues/38219>`__\\ 。 可变刷新率显示器需要不断调整其伽玛曲线，以便随着时间的"
"推移发出一致的光量。 当刷新率变化很大时，这可能会导致图像的黑暗区域出现闪烁，"
"这是因为 Godot 编辑器仅在必要时重绘。"

msgid "There are several workarounds for this:"
msgstr "这有几种解决办法："

msgid ""
"Enable **Interface > Editor > Update Continuously** in the Editor Settings. "
"Keep in mind this will increase power usage and heat/noise emissions since "
"the editor will now be rendering constantly, even if nothing has changed on "
"screen. To alleviate this, you can increase **Low Processor Mode Sleep "
"(µsec)** to ``33000`` (30 FPS) in the Editor Settings. This value determines "
"the amount of *microseconds* between frames to render. Higher values will "
"make the editor feel less reactive but will help decrease CPU and GPU usage "
"significantly."
msgstr ""
"在编辑器设置中启用 **界面 > 编辑器 > 持续更新**\\ 。 现在即使屏幕没有变化，编"
"辑器也将不断渲染，这会增加功耗、造成热量和噪音的更大排放。 为了缓解这种情况，"
"你可以在编辑器设置中将 **低处理器模式睡眠（微秒）** 增加到 ``33000``\\ （30 "
"FPS）。 该值确定要渲染的帧之间的 *微秒* 量。 较高的值将降低编辑器反应性，但可"
"显著降低 CPU 和 GPU 使用率。"

msgid ""
"Alternatively, disable variable refresh rate on your monitor or in the "
"graphics driver."
msgstr "或者，在显示器或图形驱动程序中禁用可变刷新率。"

msgid ""
"VRR flicker can be reduced on some displays using the **VRR Control** or "
"**Fine Tune Dark Areas** options in your monitor's OSD. These options may "
"increase input lag or result in crushed blacks."
msgstr ""
"VRR闪烁这个问题在某些显示器上，可以通过你的显示器的OSD中的**VRR控制**或**微调"
"暗区**选项来减少。这些选项可能会增加输入延迟或导致黑色失真。"

msgid ""
"If using an OLED display, use the **Black (OLED)** editor theme preset in "
"the Editor Settings. This hides VRR flicker thanks to OLED's perfect black "
"levels."
msgstr ""
"如果在使用 OLED 显示器，可以在编辑器设置中使用 **Black (OLED)** 预设。因为 "
"OLED 显示器的出色的黑阶表现，这个预设将会有助于减弱 VRR 闪烁。"

msgid "The editor or project takes a very long time to start"
msgstr "编辑器或项目花了很长时间才启动"

msgid ""
"When using one of the Vulkan-based renderers (Forward+ or Forward Mobile), "
"the first startup is expected to be relatively long. This is because shaders "
"need to be compiled before they can be cached. Shaders also need to be "
"cached again after updating Godot, after updating graphics drivers or after "
"switching graphics cards."
msgstr ""
"当使用基于Vulkan的渲染器（Forward+ 或 Forward Mobile）时，第一次启动将会话费"
"比较长的时间。这是因为着色器需要在缓存之前进行编译。更新Godot、更新显卡驱动或"
"切换显卡后，着色器也需要重新缓存。"

msgid ""
"If the issue persists after the first startup, this is a `known bug <https://"
"github.com/godotengine/godot/issues/20566>`__ on Windows when you have "
"specific USB peripherals connected. In particular, Corsair's iCUE software "
"seems to cause this bug. Try updating your USB peripherals' drivers to their "
"latest version. If the bug persists, you need to disconnect the specific "
"peripheral before opening the editor. You can then connect the peripheral "
"again."
msgstr ""
"如果这个问题在首次启动后依然存在，那么这是 Windows 上的一个\\ `已知错误 "
"<https://github.com/godotengine/godot/issues/20566>`_\\，当你连接了特定的 "
"USB 外设时就会出现 。特别是，海盗船的 iCUE 软件似乎引起了该错误。尝试将 USB "
"外设的驱动程序更新为最新版本。如果错误仍然存在，则需要在打开编辑器之前断开故"
"障外围设备的连接。然后，你可以再次连接外围设备。"

msgid ""
"Firewall software such as Portmaster may also cause the debug port to be "
"blocked. This causes the project to take a long time to start, while being "
"unable to use debugging features in the editor (such as viewing ``print()`` "
"output). You can work this around by changing the debug port used by the "
"project in the Editor Settings (**Network > Debug > Remote Port**). The "
"default is ``6007``; try another value that is greater than ``1024``, such "
"as ``7007``."
msgstr ""
"Portmaster 等防火墙软件可能会屏蔽调试端口，导致项目启动时间变长，并且无法在编"
"辑器中使用调试功能（例如查看 ``print()`` 的输出）。变通方法是在“编辑器设置”中"
"修改项目所使用的调试端口（\\ **网络 > 调试 > 远程端口**\\ ）。默认值是 "
"``6007``\\ ；可以尝试设成大于 ``1024`` 的值，比如 ``7007``\\ 。"

msgid "The Godot editor appears frozen after clicking the system console"
msgstr "点击系统控制台后，Godot 编辑器没有响应"

msgid ""
"When running Godot on Windows with the system console enabled, you can "
"accidentally enable *selection mode* by clicking inside the command window. "
"This Windows-specific behavior pauses the application to let you select text "
"inside the system console. Godot cannot override this system-specific "
"behavior."
msgstr ""
"在启用了系统控制台的 Windows 上运行 Godot 时，你可以通过在命令窗口中单击来意"
"外启用\\ *选择模式*\\ 。Windows 的这种特定行为会暂停应用程序，以便你在系统控"
"制台内选择文本。Godot 无法覆盖此系统特定的行为。"

msgid ""
"To solve this, select the system console window and press Enter to leave "
"selection mode."
msgstr "要解决此问题，请选择系统控制台窗口，然后按 Enter 退出选择模式。"

msgid ""
"The Godot editor's macOS dock icon gets duplicated every time it is manually "
"moved"
msgstr "手动移动Godot编辑器的macOS dock 图标之后，会出现多余的编辑器图标"

msgid ""
"If you open the Godot editor and manually change the position of the dock "
"icon, then restart the editor, you will get a duplicate dock icon all the "
"way to the right of the dock."
msgstr ""
"如果你打开 Godot 编辑器并手动改变 dock 图标的位置，然后重启编辑器，你会在 "
"dock 的最右边看到一个重复的 dock 图标。"

msgid ""
"This is due to a design limitation of the macOS dock. The only known way to "
"resolve this would be to merge the project manager and editor into a single "
"process, which means the project manager would no longer spawn a separate "
"process when starting the editor. While using a single process instance "
"would bring several benefits, it isn't planned to be done in the near future "
"due to the complexity of the task."
msgstr ""
"这是由于 macOS dock 的设计限制造成的。解决这个问题的唯一已知方法是将项目管理"
"器和编辑器合并为一个进程，这意味着项目管理器在启动编辑器时不再产生一个单独的"
"进程。虽然使用单一进程实例会带来一些好处，但由于任务的复杂性，完成这个功能没"
"有列入我们近期的工作计划。"

msgid ""
"To avoid this issue, keep the Godot editor's dock icon at its default "
"location as created by macOS."
msgstr ""
"为了避免这个问题，保持 Godot 编辑器的 dock 图标在 macOS 创建的默认位置。"

msgid ""
"Some text such as \"NO DC\" appears in the top-left corner of the Project "
"Manager and editor window"
msgstr "在项目管理器和编辑器窗口的左上角出现“NO DC”之类的文本"

msgid ""
"This is caused by the NVIDIA graphics driver injecting an overlay to display "
"information."
msgstr "这是由于 NVIDIA 显卡驱动程序注入了覆盖显示信息造成的。"

msgid ""
"To disable this overlay on Windows, restore your graphics driver settings to "
"the default values in the NVIDIA Control Panel."
msgstr ""
"要在 Windows 上禁用此覆盖，请在 NVIDIA 控制面板中将图形驱动程序设置恢复为默认"
"值。"

msgid ""
"To disable this overlay on Linux, open ``nvidia-settings``, go to **X Screen "
"0 > OpenGL Settings** then uncheck **Enable Graphics API Visual Indicator**."
msgstr ""
"要在 Linux 上禁用此覆盖，请打开 ``nvidia-settings``\\ ，转到 **X Screen 0 > "
"OpenGL Settings**\\ ，然后取消选中 **Enable Graphics API Visual "
"Indicator**\\ 。"

msgid "The editor or project appears overly sharp or blurry"
msgstr "编辑器或项目显示得过于锐利或模糊"

msgid ""
"Correct appearance (left), oversharpened appearance due to graphics driver "
"sharpening (right)"
msgstr "正确的外观（左），由于显卡驱动的锐化而导致的过度锐化的外观（右）"

msgid ""
"If the editor or project appears overly sharp, this is likely due to image "
"sharpening being forced on all Vulkan or OpenGL applications by your "
"graphics driver. You can disable this behavior in the graphics driver's "
"control panel:"
msgstr ""
"如果编辑器或项目看起来过于锐利，这可能是由于你的图形驱动程序强制对所有 "
"Vulkan 或 OpenGL 应用程序进行图像锐化。你可以在图形驱动程序的控制面板中禁用此"
"行为："

msgid ""
"**NVIDIA (Windows):** Open the start menu and choose **NVIDIA Control "
"Panel**. Open the **Manage 3D settings** tab on the left. In the list in the "
"middle, scroll to **Image Sharpening** and set it to **Sharpening Off**."
msgstr ""
"**NVIDIA（Windows）：** 打开\"开始\"菜单，选择“NVIDIA 控制面板”。打开左侧的**"
"管理 3D 设置**选项卡。在中间的列表中，滚动到**图像锐化**，并将其设置为**关闭"
"锐化**。"

msgid ""
"**AMD (Windows):** Open the start menu and choose **AMD Software**. Click "
"the settings \"cog\" icon in the top-right corner. Go to the **Graphics** "
"tab then disable **Radeon Image Sharpening**."
msgstr ""
"**AMD（Windows）：**打开开始菜单，选择**AMD 软件**。点击右上角的设置 \"齿轮 "
"\"图标。转到“**图形**”选项卡，然后禁用“**Radeon 图像锐化**”。"

msgid ""
"If the editor or project appears overly blurry, this is likely due to :abbr:"
"`FXAA (Fast Approximate AntiAliasing)` being forced on all Vulkan or OpenGL "
"applications by your graphics driver."
msgstr ""
"如果编辑器或者项目看起来过于模糊，这可能是由于 :abbr:`FXAA (Fast Approximate "
"AntiAliasing)` 被你的显卡驱动强制应用到所有的 Vulkan 或者 OpenGL 应用程序上。"

msgid ""
"**NVIDIA (Windows):** Open the start menu and choose **NVIDIA Control "
"Panel**. Open the **Manage 3D settings** tab on the left. In the list in the "
"middle, scroll to **Fast Approximate Antialiasing** and set it to "
"**Application Controlled**."
msgstr ""
"**NVIDIA（Windows）：**\\ 打开开始菜单并选择\\ **NVIDIA 控制面板**\\ 。打开左"
"侧的\\ **管理 3D 设置**\\ 选项卡。在中间的列表中， 滚动到\\ **平滑设置 - "
"FXAA**\\ 并将其设置为\\ **应用程序控制的**\\ 。"

msgid ""
"**NVIDIA (Linux):** Open the applications menu and choose **NVIDIA X Server "
"Settings**. Select to **Antialiasing Settings** on the left, then uncheck "
"**Enable FXAA**."
msgstr ""
"**NVIDIA（Linux）：**\\ 打开应用程序菜单，选择 **NVIDIA X 服务器设置**\\ 。在"
"左侧选择 **Antialiasing Settings**\\ ，取消对 **Enable FXAA** 的勾选。"

msgid ""
"**AMD (Windows):** Open the start menu and choose **AMD Software**. Click "
"the settings \"cog\" icon in the top-right corner. Go to the **Graphics** "
"tab, scroll to the bottom and click **Advanced** to unfold its settings. "
"Disable **Morphological Anti-Aliasing**."
msgstr ""
"**AMD (Windows):** 打开开始菜单并选择**AMD 软件**。单击 设置右上角的“齿轮”图"
"标。转到**图形**选项卡， 滚动到底部并单击**高级**以展开其设置。禁用**形态抗锯"
"齿**。"

msgid ""
"Third-party vendor-independent utilities such as vkBasalt may also force "
"sharpening or FXAA on all Vulkan applications. You may want to check their "
"configuration as well."
msgstr ""
"像是 vkBasalt 这种第三方开发的供应的工具可能会强迫所有的 Vulkan 应用程序开启"
"锐化或者 FXAA。你可能也需要检查他们的设置。"

msgid ""
"After changing options in the graphics driver or third-party utilities, "
"restart Godot to make the changes effective."
msgstr ""
"当你变更过了显卡驱动和第三方工具中的设置后，重启 Godot 去应用这些设置。"

msgid ""
"If you still wish to force sharpening or FXAA on other applications, it's "
"recommended to do so on a per-application basis using the application "
"profiles system provided by graphics drivers' control panels."
msgstr ""
"如果你仍然希望在其他应用程序上强制锐化或 FXAA，建议你使用显卡驱动控制面板提供"
"的应用程序配置系统，针对每个应用程序的进行设置。"

msgid "The editor or project appears to have washed out colors"
msgstr "此编辑器或项目看起来颜色很淡"

msgid ""
"On Windows, this is usually caused by incorrect OS or monitor settings, as "
"Godot currently does not support :abbr:`HDR (High Dynamic Range)` *output* "
"(even though it may internally render in HDR)."
msgstr ""
"在 Windows 上，这通常是由不正确的操作系统或显示器设置引起的，因为 Godot 目前"
"不支持 :abbr:`HDR (High Dynamic Range)` *输出*\\ （即使它可能在内部以 HDR 渲"
"染）。"

msgid ""
"As `most displays are not designed to display SDR content in HDR mode "
"<https://tftcentral.co.uk/articles/heres-why-you-should-only-enable-hdr-mode-"
"on-your-pc-when-you-are-viewing-hdr-content>`__, it is recommended to "
"disable HDR in the Windows settings when not running applications that use "
"HDR output. On Windows 11, this can be done by pressing :kbd:`Windows + Alt "
"+ B` (this shortcut is part of the Xbox Game Bar app). To toggle HDR "
"automatically based on applications currently running, you can use "
"`AutoActions <https://github.com/Codectory/AutoActions>`__."
msgstr ""
"由于`大多数显示器并非被设计为在 HDR 模式下显示 SDR 内容<https://tftcentral."
"co.uk/articles/heres-why-you-should-only-enable-hdr-mode-on-your-pc-when-you-"
"are-viewing-hdr-content>`，建议在未运行应用程序时在Windows设置中禁用HDR 使用 "
"HDR 输出。在 Windows11 上，可以通过按下 :kbd:`Windows + Alt + B` （此快捷方式"
"是 Xbox Game Bar 应用程序的一部分）。如果要自动开关HDR模式的话，你可以使用 "
"`AutoActions <https://github.com/Codectory/AutoActions>` 。"

msgid ""
"If you insist on leaving HDR enabled, it is possible to somewhat improve the "
"result by ensuring the display is configured to use :abbr:`HGIG (HDR Gaming "
"Interest Group)` tonemapping (as opposed to :abbr:`DTM (Dynamic Tone "
"Mapping)`), then `using the Windows HDR calibration app <https://support."
"microsoft.com/en-us/windows/calibrate-your-hdr-display-using-the-windows-hdr-"
"calibration-app-f30f4809-3369-43e4-9b02-9eabebd23f19>`__. It is also "
"strongly recommended to use Windows 11 instead of Windows 10 when using HDR. "
"The end result will still likely be inferior to disabling HDR on the "
"display, though."
msgstr ""
"如果你坚持要启用 HDR 模式， 也有一些方法可以改善显示效果，确保显示器被设置为"
"启用 :abbr:`HGIG (HDR Gaming Interest Group)` 色调映射(而不是 :abbr:`DTM "
"(Dynamic Tone Mapping)` 色调映射)， 之后 `使用 Windows HDR 校准应用<https://"
"support.microsoft.com/en-us/windows/calibrate-your-hdr-display-using-the-"
"windows-hdr-calibration-app-f30f4809-3369-43e4-9b02-9eabebd23f19>` 。在使用"
"HDR时，强烈建议使用Windows 11而不是Windows 10。 不过，最终结果仍然可能不如在"
"显示器上禁用HDR。"

msgid "Support for HDR *output* is planned in a future release."
msgstr "计划在未来版本中支持 HDR *导出*\\。"

msgid ""
"The editor/project freezes or displays glitched visuals after resuming the "
"PC from suspend"
msgstr "从挂起状态恢复 PC 后，编辑器/项目冻结或显示出现故障"

msgid ""
"This is a known issue on Linux with NVIDIA graphics when using the "
"proprietary driver. There is no definitive fix yet, as suspend on Linux + "
"NVIDIA is often buggy when OpenGL or Vulkan is involved. The Compatibility "
"rendering method (which uses OpenGL) is generally less prone to suspend-"
"related issues compared to the Forward+ and Forward Mobile rendering methods "
"(which use Vulkan)."
msgstr ""
"当在 Linux 上使用 NVIDIA 的专用图形驱动程序时便会出现这个已知的问题。目前还没"
"有明确的解决方案，因为当涉及 OpenGL 或 Vulkan 时，Linux+NVIDIA 上的挂起通常会"
"出现问题。与 Forward+ 和 ForwardMobile 渲染方法（使用 Vulkan ）相比，兼容性渲"
"染方法（采用 OpenGL ）通常不太容易出现挂起相关问题。"

msgid ""
"The NVIDIA driver offers an *experimental* `option to preserve video memory "
"after suspend <https://wiki.archlinux.org/title/NVIDIA/"
"Tips_and_tricks#Preserve_video_memory_after_suspend>`__ which may resolve "
"this issue. This option has been reported to work better with more recent "
"NVIDIA driver versions."
msgstr ""
"NVIDIA驱动程序提供了一个 *实验性* `选项可在挂起后保护视频内存 <https://wiki."
"archlinux.org/title/NVIDIA/"
"Tips_and_tricks#Preserve_video_memory_after_suspend>`__ 用以解决这个问题。据"
"报道，此选项与较新的 NVIDIA 驱动程序版本配合使用效果更好。"

msgid ""
"To avoid losing work, save scenes in the editor before putting the PC to "
"sleep."
msgstr "为了避免丢失工作内容，请在使电脑进入睡眠状态之前将场景保存在编辑器中。"

msgid ""
"The project works when run from the editor, but fails to load some files "
"when running from an exported copy"
msgstr "项目在编辑器中正常运行，但在导出后无法加载部分文件"

msgid ""
"This is usually caused by forgetting to specify a filter for non-resource "
"files in the Export dialog. By default, Godot will only include actual "
"*resources* into the PCK file. Some files commonly used, such as JSON files, "
"are not considered resources. For example, if you load ``test.json`` in the "
"exported project, you need to specify ``*.json`` in the non-resource export "
"filter. See :ref:`doc_exporting_projects_export_mode` for more information."
msgstr ""
"这通常是在导出对话框中忘记筛选非资源文件所导致的。默认情况下，Godot只会将实际"
"的\\ *资源*\\ 包含在 PCK 文件中。一些常用的文件，例如 JSON 文件，不会被视为资"
"源。例如，当你在导出的项目中加载 ``test.json`` 时，你需要在非资源导出过滤器中"
"指定 ``*.json``\\ 。详见：\\ :ref:`doc_exporting_projects_export_mode`\\ 。"

msgid ""
"Also, note that files and folders whose names begin with a period will never "
"be included in the exported project. This is done to prevent version control "
"folders like ``.git`` from being included in the exported PCK file."
msgstr ""
"另外，请注意，导出的项目永远不会包含名字以点开头的文件和文件夹。这是为了防止"
"将 ``.git`` 等版本控制文件夹包含在导出的 PCK 文件中。"

msgid ""
"On Windows, this can also be due to :ref:`case sensitivity "
"<doc_project_organization_case_sensitivity>` issues. If you reference a "
"resource in your script with a different case than on the filesystem, "
"loading will fail once you export the project. This is because the virtual "
"PCK filesystem is case-sensitive, while Windows's filesystem is case-"
"insensitive by default."
msgstr ""
"在 Windows 上，也可能是\\ :ref:`大小写敏感性 "
"<doc_project_organization_case_sensitivity>`\\ 的问题。如果你在脚本里引用资源"
"时所使用的大小写与文件系统中的不符，在导出项目后就会载入失败。这是因为虚拟 "
"PCK 文件系统是大小写敏感的，而 Windows 的文件系统是大小写不敏感的。"

msgid "Translation status"
msgstr "翻译状态"
