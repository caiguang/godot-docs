# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D movement overview"
msgstr "2D 运动概述"

msgid "Introduction"
msgstr "前言"

msgid ""
"Every beginner has been there: \"How do I move my character?\" Depending on "
"the style of game you're making, you may have special requirements, but in "
"general the movement in most 2D games is based on a small number of designs."
msgstr ""
"每个初学者都问过“我该如何移动我的游戏角色呢？”根据你正在制作的游戏的风格，可"
"能有特殊的需求，但一般来说，大多数 2D 游戏的运动都基于一组不太多的操作之上。"

msgid ""
"We'll use :ref:`CharacterBody2D <class_CharacterBody2D>` for these examples, "
"but the principles will apply to other node types (Area2D, RigidBody2D) as "
"well."
msgstr ""
"在这些示例中，我们将使用 :ref:`CharacterBody2D <class_CharacterBody2D>`，但这"
"些原则也适用于其他节点类型（如 Area2D、RigidBody2D）。"

msgid "Setup"
msgstr "场景布置"

msgid ""
"Each example below uses the same scene setup. Start with a "
"``CharacterBody2D`` with two children: ``Sprite2D`` and "
"``CollisionShape2D``. You can use the Godot icon (\"icon.png\") for the "
"Sprite2D's texture or use any other 2D image you have."
msgstr ""
"以下每个示例都使用相同的场景布置。从带有 ``Sprite2D`` 和 "
"``CollisionShape2D`` 这两个子节点的 ``CharacterBody2D`` 开始。你可以将 Godot "
"图标（“icon.png”）用于 Sprite2D 的纹理，也可以使用你拥有的任何其他 2D 图像。"

msgid ""
"Open ``Project -> Project Settings`` and select the \"Input Map\" tab. Add "
"the following input actions (see :ref:`InputEvent <doc_inputevent>` for "
"details):"
msgstr ""
"打开\\ ``项目 -> 项目设置``\\ 并选择“输入映射”选项卡。添加以下输入操作（相关"
"详细信息请参阅 :ref:`InputEvent <doc_inputevent>`）："

msgid "8-way movement"
msgstr "八向移动"

msgid ""
"In this scenario, you want the user to press the four directional keys (up/"
"left/down/right or W/A/S/D) and move in the selected direction. The name \"8-"
"way movement\" comes from the fact that the player can move diagonally by "
"pressing two keys at the same time."
msgstr ""
"在这种情况下，你希望用户按下四个方向键（上/左/下/右或W / A / S / D）并沿所选"
"方向移动。“8向移动” 意味着游戏角色可以通过同时按下两个键实现斜向移动。"

msgid "Add a script to the character body and add the following code:"
msgstr "为角色体添加脚本，并添加以下代码："

msgid ""
"In the ``get_input()`` function, we use :ref:`Input <class_Input>` "
"``get_vector()`` to check for the four key events and sum return a direction "
"vector."
msgstr ""
"在函数 ``get_input()`` 中，我们使用 :ref:`Input <class_Input>` 的 "
"``get_vector()`` 来检查四个按键事件，并返回一个方向向量的累加值。"

msgid ""
"We can then set our velocity by multiplying this direction vector, which has "
"a length of ``1``, by our desired speed."
msgstr "然后，我们可以将长度为 ``1`` 的方向矢量乘以所需的速度来设定速度。"

msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`."
msgstr ""
"如果你之前从未接触过向量数学, 或者需要复习, 你可以在 :ref:`doc_vector_math` "
"看到Godot中向量用法的解释."

msgid ""
"If the code above does nothing when you press the keys, double-check that "
"you've set up input actions correctly as described in the :ref:"
"`doc_2d_movement_setup` part of this tutorial."
msgstr ""
"如果在你按下键时上面的代码不起任何作用, 请仔细检查你是否按照本教程的 :ref:"
"`doc_2d_movement_setup` 部分所描述的正确设置了输入操作."

msgid "Rotation + movement"
msgstr "旋转+移动"

msgid ""
"This type of movement is sometimes called \"Asteroids-style\" because it "
"resembles how that classic arcade game worked. Pressing left/right rotates "
"the character, while up/down moves it forward or backward in whatever "
"direction it's facing."
msgstr ""
"这种类型的运动有时被称为 \"Asteroids式运动\", 因为它类似于经典街机游戏"
"Asteroids的工作方式. 按左/右旋转角色, 而按上/下使得角色在面向的方向上向前或向"
"后."

msgid ""
"Here we've added two variables to track our rotation direction and speed. "
"The rotation is applied directly to the body's ``rotation`` property."
msgstr ""
"这里我们添加了两个变量来跟踪我们的旋转方向和速度。旋转直接应用于主体的 "
"``rotation`` 属性。"

msgid ""
"To set the velocity, we use the body's ``transform.x`` which is a vector "
"pointing in the body's \"forward\" direction, and multiply that by the speed."
msgstr ""
"要设置速度，我们使用物体的 ``transform.x`` ，这是一个指向物体 “前进” 方向的矢"
"量，然后乘以速度。"

msgid "Rotation + movement (mouse)"
msgstr "旋转+移动（鼠标）"

msgid ""
"This style of movement is a variation of the previous one. This time, the "
"direction is set by the mouse position instead of the keyboard. The "
"character will always \"look at\" the mouse pointer. The forward/back inputs "
"remain the same, however."
msgstr ""
"这种运动方式是前一种运动方式的变体。这次，方向由鼠标位置而不是键盘设置。角色"
"将始终“看向”鼠标指针。前进/后退输入保持不变。"

msgid ""
"Here we're using the :ref:`Node2D <class_Node2D>` ``look_at()`` method to "
"point the player towards the mouse's position. Without this function, you "
"could get the same effect by setting the angle like this:"
msgstr ""
"这里我们用到 :ref:`Node2D <class_Node2D>` 中的 ``look_at()`` 方法，使玩家朝向"
"鼠标的位置。如果没有此功能，可以通过如下设置角度以获得相同的效果："

msgid "Click-and-move"
msgstr "点击并移动"

msgid ""
"This last example uses only the mouse to control the character. Clicking on "
"the screen will cause the player to move to the target location."
msgstr "最后一个示例仅使用鼠标来控制角色. 单击屏幕将使游戏角色移动到目标位置."

msgid ""
"Note the ``distance_to()`` check we make prior to movement. Without this "
"test, the body would \"jitter\" upon reaching the target position, as it "
"moves slightly past the position and tries to move back, only to move too "
"far and repeat."
msgstr ""
"注意我们在移动之前做的 ``distance_to()`` 检查. 如果没有这个检查, 物体在到达目"
"标位置时会 \"抖动\", 因为它稍微移过该位置时就会试图向后移动, 只是每次移动步长"
"都会有点远从而导致来回重复移动."

msgid ""
"Uncommenting the ``look_at()`` line will also turn the body to point in its "
"direction of motion if you prefer."
msgstr "如果你喜欢, 取消注释的 ``rotation`` 代码可以使物体转向其运动方向."

msgid ""
"This technique can also be used as the basis of a \"following\" character. "
"The ``target`` position can be that of any object you want to move to."
msgstr ""
"该技术也可以用到“跟随”的游戏角色中。\\ ``target`` 目标位置可以是任何你想移动"
"到的对象的位置。"

msgid "Summary"
msgstr "总结"

msgid ""
"You may find these code samples useful as starting points for your own "
"projects. Feel free to use them and experiment with them to see what you can "
"make."
msgstr ""
"你可能觉得这些代码示例可以作为你自己的项目的一个有用的出发点. 请随意使用它们"
"并试验它们, 看看你能做些什么."

msgid ""
"You can download this sample project here: `2d_movement_starter.zip <https://"
"github.com/godotengine/godot-docs-project-starters/releases/download/"
"latest-4.x/2d_movement_starter.zip>`_"
msgstr ""
"你可以在此处下载这个示例项目：`2d_movement_starter.zip <https://github.com/"
"godotengine/godot-docs-project-starters/releases/download/latest-4."
"x/2d_movement_starter.zip>`_"

msgid "Translation status"
msgstr "翻译状态"
