# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D antialiasing"
msgstr "**2D 抗锯齿**"

msgid ""
"Godot also supports antialiasing in 3D rendering. This is covered on the :"
"ref:`doc_3d_antialiasing` page."
msgstr "Godot 同样支持 3D 抗锯齿。参看 :ref:`doc_3d_antialiasing` 页面。"

msgid "Introduction"
msgstr "前言"

msgid ""
"Due to their limited resolution, scenes rendered in 2D can exhibit aliasing "
"artifacts. These artifacts usually manifest in the form of a \"staircase\" "
"effect on geometry edges, and are most noticeable when using nodes such as :"
"ref:`class_Line2D`, :ref:`class_Polygon2D` or :ref:"
"`class_TextureProgressBar`. :ref:`doc_custom_drawing_in_2d` can also have "
"aliasing artifacts for methods that don't support antialiasing."
msgstr ""
"由于分辨率有限，以 2D 渲染的场景可能会出现锯齿现象。 这些伪影通常以几何边缘上"
"的“楼梯”效果的形式出现，并且在使用诸如 :ref:`class_Line2D`、 :ref:"
"`class_Polygon2D` 或 :ref:`class_TextureProgressBar` 等节点时最为明显。 :ref:"
"`doc_custom_drawing_in_2d` 对于不支持抗锯齿的方法也可能会出现锯齿现象。"

msgid ""
"In the example below, you can notice how edges have a blocky appearance:"
msgstr "在下面的示例中，你可以看到边缘呈现出块状："

msgid ""
"Image is scaled by 2× with nearest-neighbor filtering to make aliasing more "
"noticeable."
msgstr "图像缩放 2 倍并进行近邻滤波，使混叠现象更加明显。"

msgid ""
"To combat this, Godot supports several methods of enabling antialiasing on "
"2D rendering."
msgstr "为了解决这个问题，Godot 支持多种在 2D 渲染中启用抗锯齿的方法。"

msgid "Antialiasing property in Line2D and custom drawing"
msgstr "Line2D 和自定义绘图中的反锯齿属性"

msgid ""
"This is the recommended method, as it has a lower performance impact in most "
"cases."
msgstr "这是推荐的方法，因为在大多数情况下，这种方法对性能的影响较小。"

msgid ""
"Line2D has an **Antialiased** property which you can enable in the "
"inspector. Also, several methods for :ref:`doc_custom_drawing_in_2d` support "
"an optional ``antialiased`` parameter, which can be set to ``true`` when "
"calling the function."
msgstr ""
"Line2D 具有 **Antialiased**\\ （抗锯齿）属性，可以在检查器中启用。此外，\\ :"
"ref:`doc_custom_drawing_in_2d` 中的一些方法支持提供可选的 ``antialiased`` 参"
"数，可以在调用函数时设置为 ``true``\\ 。"

msgid ""
"These methods do not require MSAA to be enabled, which makes their "
"*baseline* performance cost low. In other words, there is no permanent added "
"cost if you're not drawing any antialiased geometry at some point."
msgstr ""
"这些方法不需要启用 MSAA，这使得它们的 *基准* 性能成本很低。换句话说，如果你在"
"某个阶段没有绘制任何抗锯齿几何图形，则不会产生永久性的额外性能消耗。"

msgid ""
"The downside of these antialiasing methods is that they work by generating "
"additional geometry. If you're generating complex 2D geometry that's updated "
"every frame, this may be a bottleneck. Also, Polygon2D, TextureProgressBar, "
"and several custom drawing methods don't feature an antialiased property. "
"For these nodes, you can use 2D multisample antialiasing instead."
msgstr ""
"这些抗锯齿方法的缺点是需要生成额外的几何图形。如果要生成每帧都需要更新的复杂 "
"2D 几何图形，这可能会成为程序的性能瓶颈。此外，Polygon2D、TextureProgressBar "
"和几种自定义绘图方法都不具备抗锯齿属性。对于这些节点，可以使用 2D 多采样抗锯"
"齿来代替。"

msgid "Multisample antialiasing (MSAA)"
msgstr "多重采样抗锯齿（MSAA）"

msgid ""
"Before enabling MSAA in 2D, it's important to understand what MSAA will "
"operate on. MSAA in 2D follows similar restrictions as in 3D. While it does "
"not introduce any blurriness, its scope of application is limited. The main "
"applications of 2D MSAA are:"
msgstr ""
"在 2D 中启用 MSAA 之前，必须先了解 MSAA 的操作对象。2D 中的 MSAA 遵循与 3D 中"
"类似的限制。虽然它不会带来任何模糊，但其应用范围是有限的。2D MSAA 的主要应用"
"包括："

msgid "Geometry edges, such as line and polygon drawing."
msgstr "几何边缘，如直线和多边形绘图。"

msgid ""
"Sprite edges *only for pixels touching one of the texture's edges*. This "
"works for both linear and nearest-neighbor filtering. Sprite edges created "
"using transparency on the image are not affected by MSAA."
msgstr ""
"精灵边缘 *仅限于与纹理边缘接触的像素* 。这适用于线性过滤和最近邻插值过滤。使"
"用图像透明度创建的精灵边缘不受 MSAA 影响。"

msgid ""
"The downside of MSAA is that it only operates on edges. This is because MSAA "
"increases the number of *coverage* samples, but not the number of *color* "
"samples. However, since the number of color samples did not increase, "
"fragment shaders are still run for each pixel only once. As a result, MSAA "
"will **not affect** the following kinds of aliasing in any way:"
msgstr ""
"MSAA 的不足之处在于它只对边缘进行操作。这是因为 MSAA 增加了\\ *覆盖采样*\\ 的"
"数量，而不是\\ *颜色*\\ 采样的数量。然而，由于颜色采样的数量并没有增加，片段"
"着色器仍然只会为每个像素运行一次。因此，MSAA *不会影响*\\ 以下类型的锯齿："

msgid "Aliasing *within* nearest-neighbor filtered textures (pixel art)."
msgstr "最近邻过滤纹理 *中* 的混叠现象（像素艺术）。"

msgid "Aliasing caused by custom 2D shaders."
msgstr "自定义 2D 着色器造成的锯齿。"

msgid "Specular aliasing when using Light2D."
msgstr "使用 Light2D 时的镜面反射锯齿。"

msgid "Aliasing in font rendering."
msgstr "文字渲染中的锯齿。"

msgid ""
"MSAA can be enabled in the Project Settings by changing the value of the "
"**Rendering > Anti Aliasing > Quality > MSAA 2D** setting. It's important to "
"change the value of the **MSAA 2D** setting and not **MSAA 3D**, as these "
"are entirely separate settings."
msgstr ""
"可以通过更改项目设置中**渲染 > 抗锯齿 > 质量 > MSAA 2D** 的设置值来启用 "
"MSAA。重要的是要更改 **MSAA 2D** 的设置值，而不是 **MSAA 3D**，因为它们是完全"
"独立的设置项。"

msgid ""
"Comparison between no antialiasing (left) and various MSAA levels (right). "
"The top-left corner contains a Line2D node, the top-right corner contains 2 "
"TextureProgressBar nodes. The bottom contains 8 pixel art sprites, with 4 of "
"them touching the edges (green background) and 4 of them not touching the "
"edges (Godot logo):"
msgstr ""
"左侧为无抗锯齿，右侧为不同级别的多重采样抗锯齿MSAA比较。左上角包含一个Line2D"
"节点，右上角包含2个TextureProgressBar进度条节点。底部包含8个精灵，他们中的4个"
"与边缘接触（绿色背景），另外4个不与边缘接触（Godot标志）："

msgid "Translation status"
msgstr "翻译状态"
