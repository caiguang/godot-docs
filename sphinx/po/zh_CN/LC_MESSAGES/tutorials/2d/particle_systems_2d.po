# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D particle systems"
msgstr "2D 粒子系统"

msgid "Intro"
msgstr "简介"

msgid ""
"Particle systems are used to simulate complex physical effects, such as "
"sparks, fire, magic particles, smoke, mist, etc."
msgstr ""
"粒子系统用于模拟复杂的物理效果，例如火花、火焰、魔法粒子、烟雾、薄雾等。"

msgid ""
"The idea is that a \"particle\" is emitted at a fixed interval and with a "
"fixed lifetime. During its lifetime, every particle will have the same base "
"behavior. What makes each particle different from the rest and provides a "
"more organic look is the \"randomness\" associated with each parameter. In "
"essence, creating a particle system means setting base physics parameters "
"and then adding randomness to them."
msgstr ""
"这个想法是以固定的间隔发射具有固定的寿命的 \"粒子\". 在其生命周期中, 每个粒子"
"都具有相同的基本行为. 让每个粒子变得不同并提供整体更加 \"有机\" 外观的是与各"
"个参数相关的 \"随机性\". 实质上, 创建粒子系统意味着设置基本物理参数, 然后为它"
"们添加随机性."

msgid "Particle nodes"
msgstr "粒子节点"

msgid ""
"Godot provides two different nodes for 2D particles, :ref:"
"`class_GPUParticles2D` and :ref:`class_CPUParticles2D`. GPUParticles2D is "
"more advanced and uses the GPU to process particle effects. CPUParticles2D "
"is a CPU-driven option with near-feature parity with GPUParticles2D, but "
"lower performance when using large amounts of particles. On the other hand, "
"CPUParticles2D may perform better on low-end systems or in GPU-bottlenecked "
"situations."
msgstr ""
"Godot 为 2D 粒子提供了两个不同的节点： :ref:`class_GPUParticles2D` 和 :ref:"
"`class_CPUParticles2D` 。 GPUParticles2D 更先进，使用 GPU 来处理粒子效果。 "
"CPUParticles2D 是 CPU 驱动的选项，其功能与 GPUParticles2D 几乎相同，但在使用"
"大量粒子时性能较低。 另一方面，CPUParticles2D 在低端系统或 GPU 瓶颈情况下可能"
"表现更好。"

msgid ""
"While GPUParticles2D is configured via a :ref:"
"`class_ParticleProcessMaterial` (and optionally with a custom shader), the "
"matching options are provided via node properties in CPUParticles2D (with "
"the exception of the trail settings)."
msgstr ""
"虽然 GPUParticles2D 是通过 :ref:`class_ParticleProcessMaterial`\\ （还可以使"
"用自定义着色器）进行配置的，不过匹配的选项是通过 CPUParticles2D 中的节点属性"
"提供的（除了轨迹设置）。"

msgid ""
"You can convert a GPUParticles2D node into a CPUParticles2D node by clicking "
"on the node in the inspector, selecting the 2D viewport, and selecting "
"**GPUParticles2D > Convert to CPUParticles2D** in the viewport toolbar."
msgstr ""
"你可以通过在检查其中点击节点，选择 2D 视口，然后在视口顶部的工具栏中选择 "
"**GPUParticles2D > 转换为CPUParticles2D** ，将 GPUParticles2D 节点转换为 "
"CPUParticles2D 节点。"

msgid ""
"The rest of this tutorial is going to use the GPUParticles2D node. First, "
"add a GPUParticles2D node to your scene. After creating that node you will "
"notice that only a white dot was created, and that there is a warning icon "
"next to your GPUParticles2D node in the scene dock. This is because the node "
"needs a ParticleProcessMaterial to function."
msgstr ""
"本教程的其余部分将使用 GPUParticles2D 节点。 首先，将 GPUParticles2D 节点添加"
"到场景中。 创建该节点后，你会注意到仅创建了一个白点，并且场景停靠栏中的 "
"GPUParticles2D 节点旁边有一个警告图标。 这是因为节点需要 "
"ParticleProcessMaterial 才能发挥作用。"

msgid "ParticleProcessMaterial"
msgstr "ParticleProcessMaterial"

msgid ""
"To add a process material to your particles node, go to ``Process Material`` "
"in your inspector panel. Click on the box next to ``Material``, and from the "
"dropdown menu select ``New ParticleProcessMaterial``."
msgstr ""
"要将处理材质添加到粒子节点，请转到检查器面板中的 ``处理材质`` 。单击 ``材质"
"`` 旁边的框，然后从下拉菜单中选择 ``新建 ParticleProcessMaterial`` 。"

msgid "Your GPUParticles2D node should now be emitting white points downward."
msgstr "你的 GPUParticles2D 节点现在应该可以向下发射白点了。"

msgid "Texture"
msgstr "Texture (纹理)"

msgid ""
"A particle system can use a single texture or an animation *flipbook*. A "
"flipbook is a texture that contains several frames of animation that can be "
"played back, or chosen at random during emission. This is equivalent to a "
"spritesheet for particles."
msgstr ""
"粒子系统可以使用单个纹理或动画 *翻页* （filpbook）。翻页是一种纹理，其中包含"
"可以回放或在发射期间随机选择的多个动画帧。翻页相当于粒子的精灵表。"

msgid "The texture is set via the **Texture** property:"
msgstr "纹理通过 **Texture** 属性设置："

msgid "Using an animation flipbook"
msgstr "使用动画翻页"

msgid ""
"Particle flipbooks are suited to reproduce complex effects such as smoke, "
"fire, explosions. They can also be used to introduce random texture "
"variation, by making every particle use a different texture. You can find "
"existing particle flipbook images online, or pre-render them using external "
"tools such as `Blender <https://www.blender.org/>`__ or `EmberGen <https://"
"jangafx.com/software/embergen/>`__."
msgstr ""
"粒子翻页适合再现复杂的效果，如烟雾、火焰、爆炸。它们还可以通过使每个粒子使用"
"不同的纹理，来引入随机纹理变化。你可以在线寻找现成的粒子翻页图，或使用外部工"
"具预渲染它们，例如`Blender <https://www.blender.org/>`__ 或 `EmberGen "
"<https://jangafx.com/software/embergen/>`__ 。"

msgid "Example of a particle system that uses a flipbook texture"
msgstr "使用翻页纹理的粒子系统示例"

msgid ""
"Using an animation flipbook requires additional configuration compared to a "
"single texture. For demonstration purposes, we'll use this texture with 5 "
"columns and 7 rows (right-click and choose **Save as…**):"
msgstr ""
"相比起单个纹理，使用动画翻页需要额外的配置。出于演示目的，我们将使用这 5 列 "
"7 行的纹理（右键单击并选择 **另存为...** ）："

msgid "Particle flipbook texture example"
msgstr "屏幕翻页纹理示例"

msgid ""
"Credit: `JoesAlotofthings <https://opengameart.org/content/alot-of-particles-"
"indispersal-special-effect-alotofparticles30>`__ (CC BY 4.0)"
msgstr ""
"作者：`JoesAlotofthings <https://opengameart.org/content/alot-of-particles-"
"indispersal-special-effect-alotofparticles30>`__ （CC BY 4.0）"

msgid ""
"To use an animation flipbook, you must create a new CanvasItemMaterial in "
"the Material section of the GPUParticles2D (or CPUParticles2D) node:"
msgstr ""
"要使用动画翻页，你必须在 GPUParticles2D（或 CPUParticles2D）节点的 Material "
"部分中创建一个新的 CanvasItemMaterial："

msgid ""
"Creating a CanvasItemMaterial at the bottom of the particles node inspector"
msgstr "在粒子节点检查器的底部创建一个 CanvasItemMaterial"

msgid ""
"In this CanvasItemMaterial, enable **Particle Animation** and set **H "
"Frames** and **V Frames** to the number of columns and rows present in your "
"flipbook texture:"
msgstr ""
"在这个 CanvasItemMaterial 中，启用 **Particle Animation** ，并将 **H "
"Frames** 和 **V Frames** 分别设置为翻页纹理中的列数和行数："

msgid "Configuring the CanvasItemMaterial for the example flipbook texture"
msgstr "为示例翻页纹理配置 CanvasItemMaterial"

msgid ""
"Once this is done, the :ref:`Animation section "
"<doc_particle_systems_2d_animation>` in ParticleProcessMaterial (for "
"GPUParticles2D) or in the CPUParticles2D inspector will be effective."
msgstr ""
"完成此操作后，ParticleProcessMaterial（对于 GPUParticles2D）或 "
"CPUParticles2D 检查器中的 :ref:`动画部分 "
"<doc_particle_systems_2d_animation>` 将生效。"

msgid ""
"If your flipbook texture has a black background instead of a transparent "
"background, you will also need to set the blend mode to **Add** instead of "
"**Mix** for correct display. Alternatively, you can modify the texture to "
"have a transparent background in an image editor. In `GIMP <https://gimp."
"org>`__, this can be done using the **Color > Color to Alpha** menu."
msgstr ""
"如果你的翻页纹理是黑色背景而不是透明背景，你还需要将混合模式设置为 **Add** 而"
"不是 **Mix** 才能使它正确地显示。或者，你也可以修改纹理以使它在图像编辑器中有"
"透明背景。在 `GIMP <https://gimp.org>`__ 中，可以使用 **Color > Color to "
"Alpha** 菜单来完成此操作。"

msgid "Time parameters"
msgstr "时间参数"

msgid "Lifetime"
msgstr "Lifetime(寿命)"

msgid ""
"The time in seconds that every particle will stay alive. When lifetime ends, "
"a new particle is created to replace it."
msgstr ""
"每个粒子存活的时间(以秒为单位). 生命周期结束时, 会创建一个新粒子来替换它."

msgid "Lifetime: 0.5"
msgstr "寿命:0.5"

msgid "Lifetime: 4.0"
msgstr "寿命:4.0"

msgid "One Shot"
msgstr "One Shot (一次性)"

msgid ""
"When enabled, a GPUParticles2D node will emit all of its particles once and "
"then never again."
msgstr "启用后，GPUParticles2D 节点将一次发射其所有粒子，之后将不再发射。"

msgid "Preprocess"
msgstr "Preprocess(预处理)"

msgid ""
"Particle systems begin with zero particles emitted, then start emitting. "
"This can be an inconvenience when loading a scene and systems like a torch, "
"mist, etc. begin emitting the moment you enter. Preprocess is used to let "
"the system process a given number of seconds before it is actually drawn the "
"first time."
msgstr ""
"粒子系统从没有粒子被发射开始, 然后开始发射. 当加载场景如火炬, 雾等系统时可能"
"会带来不便, 因为它会在进入场景的那一刻开始发射. 预处理用于让系统在第一次实际"
"绘制之前处理给定的秒数."

msgid "Speed Scale"
msgstr "Speed Scale(速度比例)"

msgid ""
"The speed scale has a default value of ``1`` and is used to adjust the speed "
"of a particle system. Lowering the value will make the particles slower "
"while increasing the value will make the particles much faster."
msgstr ""
"速度比例具有默认值 ``1`` , 用于调整粒子系统的速度. 降低值会使粒子变慢, 而增加"
"值会使粒子更快."

msgid "Explosiveness"
msgstr "Explosiveness(爆炸性)"

msgid ""
"If lifetime is ``1`` and there are 10 particles, it means a particle will be "
"emitted every 0.1 seconds. The explosiveness parameter changes this, and "
"forces particles to be emitted all together. Ranges are:"
msgstr ""
"如果有10个寿命为 ``1`` 的粒子, 则意味着粒子将每0.1秒发射一次. 爆炸性参数改变"
"了这一点, 并迫使粒子一起发射. 范围是:"

msgid "0: Emit particles at regular intervals (default value)."
msgstr "0: 定期发射粒子(默认值)."

msgid "1: Emit all particles simultaneously."
msgstr "1: 同时发射所有粒子."

msgid ""
"Values in the middle are also allowed. This feature is useful for creating "
"explosions or sudden bursts of particles:"
msgstr "中间的值也是允许的. 此功能对于创建爆炸或突然爆发的粒子非常有用:"

msgid "Randomness"
msgstr "Randomness(随机性)"

msgid ""
"All physics parameters can be randomized. Random values range from ``0`` to "
"``1``. The formula to randomize a parameter is:"
msgstr ""
"所有物理参数都可以随机化. 随机值范围从 ``0`` 到 ``1`` . 随机化参数的公式为:"

msgid "Fixed FPS"
msgstr "Fixed FPS(固定帧率)"

msgid ""
"This setting can be used to set the particle system to render at a fixed "
"FPS. For instance, changing the value to ``2`` will make the particles "
"render at 2 frames per second. Note this does not slow down the particle "
"system itself."
msgstr ""
"此设置可用于将粒子系统设置为以固定的帧率渲染. 例如, 将值更改为 ``2`` 将使粒子"
"以每秒2帧的速度渲染. 请注意, 这不会减慢粒子系统本身的速度."

msgid "Fract Delta"
msgstr "Fract Delta"

msgid "This can be used to turn Fract Delta on or off."
msgstr "这可用于打开或关闭Fract Delta."

msgid "Drawing parameters"
msgstr "绘图参数"

msgid "Visibility Rect"
msgstr "Visibility Rect(可见性区域)"

msgid ""
"The visibility rectangle controls the visibility of the particles on screen. "
"If this rectangle is outside of the viewport, the engine will not render the "
"particles on screen."
msgstr ""
"可见性矩形控制粒子在屏幕上的可见性. 如果此矩形位于视口之外, 则引擎将不会在屏"
"幕上渲染粒子."

msgid ""
"The rectangle's ``W`` and ``H`` properties respectively control its Width "
"and its Height. The ``X`` and ``Y`` properties control the position of the "
"upper-left corner of the rectangle, relative to the particle emitter."
msgstr ""
"矩形的 ``W`` 和 ``H`` 属性分别控制其宽度和高度. ``X`` 和 ``Y`` 属性控制矩形左"
"上角相对于粒子发射器的位置."

msgid ""
"You can have Godot generate a Visibility Rect automatically using the "
"toolbar above the 2d view. To do so, select the GPUParticles2D node and "
"Click ``Particles > Generate Visibility Rect``. Godot will simulate the "
"Particles2D node emitting particles for a few seconds and set the rectangle "
"to fit the surface the particles take."
msgstr ""
"可以使用 2d 视图上方的工具栏让 Godot 自动生成可见性矩形。 为此，请选择 "
"GPUParticles2D 节点并单击 ``粒子 > 生成可见性矩形`` 。 Godot 将模拟 "
"Particles2D 节点发射粒子几秒钟，并设置矩形以适合粒子所占据的表面。"

msgid ""
"You can control the emit duration with the ``Generation Time (sec)`` option. "
"The maximum value is 25 seconds. If you need more time for your particles to "
"move around, you can temporarily change the ``preprocess`` duration on the "
"Particles2D node."
msgstr ""
"你可以使用 ``Generation Time (sec)`` 选项控制发射持续时间. 最大值为25秒. 如果"
"你需要更多时间让粒子移动, 你可以暂时更改Particles2D节点上的 ``preprocess`` 时"
"间."

msgid "Local Coords"
msgstr "Local Coords(局部坐标)"

msgid ""
"By default this option is on, and it means that the space that particles are "
"emitted to is relative to the node. If the node is moved, all particles are "
"moved with it:"
msgstr ""
"默认情况下, 此选项处于启用状态, 这意味着粒子发射的空间是相对于节点来算的. 如"
"果移动节点, 则所有粒子会随之移动:"

msgid ""
"If disabled, particles will emit to global space, meaning that if the node "
"is moved, already emitted particles are not affected:"
msgstr ""
"如果禁用, 粒子将发射到全局空间, 这意味着如果移动节点, 则已发射的粒子不会受到"
"影响:"

msgid "Draw Order"
msgstr "Draw Order(绘图顺序)"

msgid ""
"This controls the order in which individual particles are drawn. ``Index`` "
"means particles are drawn according to their emission order (default). "
"``Lifetime`` means they are drawn in order of remaining lifetime."
msgstr ""
"这可以控制绘制单个粒子的顺序. ``Index`` 表示粒子根据它们的发射顺序被绘制(默"
"认). ``Lifetime`` 表示它们按照剩余寿命的顺序被绘制."

msgid "ParticleProcessMaterial settings"
msgstr "ParticleProcessMaterial 设置"

msgid "Direction"
msgstr "方向"

msgid ""
"This is the base direction at which particles emit. The default is "
"``Vector3(1, 0, 0)`` which makes particles emit to the right. However, with "
"the default gravity settings, particles will go straight down."
msgstr ""
"这是粒子发射的基础方向. 默认值是 ``Vector3(1,0,0)`` , 它使粒子向右发射. 然"
"而, 在默认的重力设置下, 粒子会直线下降."

msgid ""
"For this property to be noticeable, you need an *initial velocity* greater "
"than 0. Here, we set the initial velocity to 40. You'll notice that "
"particles emit toward the right, then go down because of gravity."
msgstr ""
"为了让这个属性作用更明显, 你需要一个大于0的 *初始速度(initial velocity)* . 这"
"里, 我们把初始速度设为40. 你会注意到粒子向右发射, 然后受重力作用下降."

msgid "Spread"
msgstr "Spread(铺开角度)"

msgid ""
"This parameter is the angle in degrees which will be randomly added in "
"either direction to the base ``Direction``. A spread of ``180`` will emit in "
"all directions (+/- 180). For spread to do anything the \"Initial Velocity\" "
"parameter must be greater than 0."
msgstr ""
"此参数是以度为单位的角度, 它会被随机加减到基础 ``Direction`` 上. ``180`` 的铺"
"开角度将向所有方向发射(+/- 180)."

msgid "Flatness"
msgstr "Flatness(平直度)"

msgid "This property is only useful for 3D particles."
msgstr "这个属性只对3D粒子有用."

msgid "Gravity"
msgstr "Gravity(重力)"

msgid "The gravity applied to every particle."
msgstr "应用于每个粒子上的重力."

msgid "Initial Velocity"
msgstr "Initial Velocity(初始速度)"

msgid ""
"Initial velocity is the speed at which particles will be emitted (in pixels/"
"sec). Speed might later be modified by gravity or other accelerations (as "
"described further below)."
msgstr ""
"初始速度是粒子发射的速度（单位为像素/秒）。以后可以通过重力或其他加速度来修改"
"速度（后述）。"

msgid "Angular Velocity"
msgstr "Angular Velocity(角速度)"

msgid "Angular velocity is the initial angular velocity applied to particles."
msgstr "角速度是应用于粒子的初始角速度."

msgid "Spin Velocity"
msgstr "Spin Velocity(旋转速度)"

msgid ""
"Spin velocity is the speed at which particles turn around their center (in "
"degrees/sec)."
msgstr "旋转速度是粒子围绕其中心转动的速度(以度/秒为单位)."

msgid "Orbit Velocity"
msgstr "Orbit Velocity(环绕速度)"

msgid "Orbit velocity is used to make particles turn around their center."
msgstr "环绕速度速度用于使粒子绕它们的中心转动."

msgid "Linear Acceleration"
msgstr "Linear Acceleration(线性加速度)"

msgid "The linear acceleration applied to each particle."
msgstr "应用于每个粒子的线性加速度."

msgid "Radial Acceleration"
msgstr "Radial Acceleration(径向加速度)"

msgid ""
"If this acceleration is positive, particles are accelerated away from the "
"center. If negative, they are absorbed towards it."
msgstr ""
"如果此加速度为正, 则粒子会向远离发射中心加速. 如果是负的, 他们会被加速吸进去."

msgid "Tangential Acceleration"
msgstr "Tangential Acceleration(切向加速度)"

msgid ""
"This acceleration will use the tangent vector to the center. Combining with "
"radial acceleration can do nice effects."
msgstr ""
"该加速度会使用从粒子到中心点的切向量, 结合径向加速度可以做出很酷炫的效果."

msgid "Damping"
msgstr "Damping(阻尼)"

msgid ""
"Damping applies friction to the particles, forcing them to stop. It is "
"especially useful for sparks or explosions, which usually begin with a high "
"linear velocity and then stop as they fade."
msgstr ""
"阻尼选项会对颗粒施加摩擦力, 迫使它们停止. 它特别适用于火花或爆炸, 火花或爆炸"
"通常以高线速度开始, 然后在他们隐去时停下来."

msgid "Angle"
msgstr "Angle(角度)"

msgid ""
"Determines the initial angle of the particle (in degrees). This parameter is "
"mostly useful randomized."
msgstr "确定粒子的初始角度(以度为单位). 该参数通常在随机化后会有用."

msgid "Scale"
msgstr "Scale(大小)"

msgid "Determines the initial scale of the particles."
msgstr "确定粒子的初始大小."

msgid "Color"
msgstr "Color"

msgid "Used to change the color of the particles being emitted."
msgstr "用于改变发射出来的粒子颜色."

msgid "Hue Variation"
msgstr "Hue Variation（色相变化）"

msgid ""
"The ``Variation`` value sets the initial hue variation applied to each "
"particle. The ``Variation Random`` value controls the hue variation "
"randomness ratio."
msgstr ""
"``Variation`` 值设置的是应用于每个粒子的初始色调变化. ``Variation Rand`` 值控"
"制色调变化的随机性比率."

msgid "Animation"
msgstr "动画"

msgid ""
"Particle flipbook animation is only effective if the CanvasItemMaterial used "
"on the GPUParticles2D or CPUParticles2D node has been :ref:`configured "
"accordingly <doc_particle_systems_2d_using_flipbook>`."
msgstr ""
"仅当 GPUParticles2D 或 CPUParticles2D 节点上使用的 CanvasItemMaterial 已进"
"行 :ref:`相应配置 <doc_particle_systems_2d_using_flipbook>` 时，粒子翻页动画"
"才有效。"

msgid ""
"To set up the particle flipbook for linear playback, set the **Speed Min** "
"and **Speed Max** values to 1:"
msgstr ""
"如要将粒子翻页设置为线性播放，请将 **Speed Min** 和 **Speed Max** 值设置为 "
"1："

msgid ""
"Setting up particle animation for playback during the particle's lifetime"
msgstr "设置粒子动画以便在粒子生命周期内播放"

msgid ""
"By default, looping is disabled. If the particle is done playing before its "
"lifetime ends, the particle will keep using the flipbook's last frame (which "
"may be fully transparent depending on how the flipbook texture is designed). "
"If looping is enabled, the animation will loop back to the first frame and "
"resume playing."
msgstr ""
"默认情况下，循环功能是禁用的。如果粒子在其生命周期结束之前播放完毕，则粒子将"
"继续使用翻页的最后一帧（根据翻页纹理的设计方式，这一帧可能是完全透明的）。如"
"果启用循环，粒子的动画将循环回到第一帧并重复播放。"

msgid ""
"Depending on how many images your sprite sheet contains and for how long "
"your particle is alive, the animation might not look smooth. The "
"relationship between particle lifetime, animation speed, and number of "
"images in the sprite sheet is this:"
msgstr ""
"根据精灵表包含的图像数量以及粒子的存活时间情况，你的动画可能看起来会并不流"
"畅。粒子的存活时间、动画速度和精灵表中图像数量之间的关系是这样的："

msgid ""
"At an animation speed of ``1.0``, the animation will reach the last image in "
"the sequence just as the particle's lifetime ends."
msgstr ""
"当动画速度为 ``1.0`` 时，动画将在粒子生命周期结束时，播放到序列中的最后一个图"
"像。"

msgid ""
"Animation\\ FPS = \\frac{Number\\ of\\ images}{Lifetime}\n"
"\n"
msgstr ""
"Animation\\ FPS = \\frac{Number\\ of\\ images}{Lifetime}\n"
"\n"

msgid ""
"If you wish the particle flipbook to be used as a source of random particle "
"textures for every particle, keep the speed values at 0 and set **Offset "
"Max** to 1 instead:"
msgstr ""
"如果你希望将粒子翻页用作每个粒子的随机粒子纹理源，请将速度值保持为 0 ，并将 "
"**Offset Max** 设置为 1："

msgid "Setting up particle animation for random offset on emission"
msgstr "设置粒子动画以实现发射时的随机偏移"

msgid ""
"Note that the GPUParticles2D node's **Fixed FPS** also affects animation "
"playback. For smooth animation playback, it's recommended to set it to 0 so "
"that the particle is simulated on every rendered frame. If this is not an "
"option for your use case, set **Fixed FPS** to be equal to the effective "
"framerate used by the flipbook animation (see above for the formula)."
msgstr ""
"请注意，GPUParticles2D 节点的 **Fixed FPS** 也会影响动画播放。为了动画播放流"
"畅，建议将其设置为 0，以便在每个渲染帧上模拟粒子。如果这个设置不适合你的用"
"例，请将 **Fixed FPS** 设置为等于翻页动画使用的有效帧速率（请参阅上面的公"
"式）。"

msgid "Emission Shapes"
msgstr "发射形状"

msgid ""
"ParticleProcessMaterials allow you to set an Emission Mask, which dictates "
"the area and direction in which particles are emitted. These can be "
"generated from textures in your project."
msgstr ""
"ParticleProcessMaterials 允许你设置发射蒙版，它决定发射粒子的区域和方向。 这"
"些可以从项目中的纹理生成。"

msgid ""
"Ensure that a ParticleProcessMaterial is set, and the GPUParticles2D node is "
"selected. A \"Particles\" menu should appear in the Toolbar:"
msgstr ""
"在设置了 ParticleProcessMaterial，并且选择了 GPUParticles2D 节点。 工具栏中就"
"会出现“粒子”菜单："

msgid "Open it and select \"Load Emission Mask\":"
msgstr "打开它, 选择\"加载 Emission Mask(发射遮挡)\":"

msgid "Then select which texture you want to use as your mask:"
msgstr "然后选择你想要用作遮挡的纹理:"

msgid "A dialog box with several settings will appear."
msgstr "会出现一个具有多个设置的对话框."

msgid "Emission Mask"
msgstr "发射遮罩"

msgid "Three types of emission masks can be generated from a texture:"
msgstr "纹理可以生成三种类型的发射遮挡:"

msgid ""
"Solid Pixels: Particles will spawn from any area of the texture, excluding "
"transparent areas."
msgstr "Solid Pixels(实心像素): 粒子将从纹理的任何区域产生, 透明区域除外."

msgid ""
"Border Pixels: Particles will spawn from the outer edges of the texture."
msgstr "Border Pixels(边界像素): 粒子将从纹理的外边缘产生."

msgid ""
"Directed Border Pixels: Similar to Border Pixels, but adds extra information "
"to the mask to give particles the ability to emit away from the borders. "
"Note that an ``Initial Velocity`` will need to be set in order to utilize "
"this."
msgstr ""
"Directed Border Pixels(定向边界像素): 类似于边界像素, 在遮罩中添加额外的信"
"息, 使粒子能够从边缘发射出去. 请注意, 想要使用它, 需要设置一个 ``初始速度``."

msgid "Emission Colors"
msgstr "发射色彩"

msgid ""
"``Capture from Pixel`` will cause the particles to inherit the color of the "
"mask at their spawn points."
msgstr "``Capture from Pixel`` 会使粒子在其产生点处继承遮挡材质的颜色."

msgid ""
"Once you click \"OK\", the mask will be generated and set to the "
"ParticleProcessMaterial, under the ``Emission Shape`` section:"
msgstr ""
"在单击“确定”后，将生成遮罩并将其设置为 ``Emission Shape`` 下的 "
"ParticleProcessMaterial："

msgid ""
"All of the values within this section have been automatically generated by "
"the \"Load Emission Mask\" menu, so they should generally be left alone."
msgstr ""
"这个部分所有提到的值, \"加载Emission Mask(发射遮挡)\"菜单都会自动生成, 所以通"
"常他们放着不管就可以了."

msgid ""
"An image should not be added to ``Point Texture`` or ``Color Texture`` "
"directly. The \"Load Emission Mask\" menu should always be used instead."
msgstr ""
"不应该直接添加图像到 ``Point Texture`` 或 ``Color Texture`` 中. 应该始终使用"
"\"加载Emisson Mask(发射遮挡)\"菜单."

msgid "Translation status"
msgstr "翻译状态"
