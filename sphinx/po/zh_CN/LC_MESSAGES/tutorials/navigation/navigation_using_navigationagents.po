# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using NavigationAgents"
msgstr "使用 NavigationAgent"

msgid ""
"NavigationsAgents are helper nodes that combine functionality for "
"pathfinding, path following and agent avoidance for a Node2D/3D inheriting "
"parent node. They facilitate common calls to the NavigationServer API on "
"behalf of the parent actor node in a more convenient manner for beginners."
msgstr ""
"NavigationAgent 即导航代理，是一种辅助节点，能够为继承自 Node2D/3D 的父节点提"
"供寻路、路径跟随、代理躲避等功能。这类节点会代替父级角色节点对 "
"NavigationServer API 进行常见的调用，针对初学者进行了优化。"

msgid ""
"2D and 3D version of NavigationAgents are available as :ref:"
"`NavigationAgent2D<class_NavigationAgent2D>` and :ref:"
"`NavigationAgent3D<class_NavigationAgent3D>` respectively."
msgstr ""
"2D 和 3D 版本的 NavigationAgent 分别是 :ref:"
"`NavigationAgent2D<class_NavigationAgent2D>` 和 :ref:"
"`NavigationAgent3D<class_NavigationAgent3D>`\\ 。"

msgid ""
"New NavigationAgent nodes will automatically join the default navigation map "
"on the :ref:`World2D<class_World2D>`/:ref:`World3D<class_World3D>`."
msgstr ""
"新建的 NavigationAgent 节点会自动加入 :ref:`World2D<class_World2D>`/:ref:"
"`World3D<class_World3D>` 的默认导航地图。"

msgid ""
"NavigationsAgent nodes are optional and not a hard requirement to use the "
"navigation system. Their entire functionality can be replaced with scripts "
"and direct calls to the NavigationServer API."
msgstr ""
"NavigationsAgent 节点是可选的，不是使用导航系统的硬性要求。对应的功能都可以用"
"脚本代替，替换为对 NavigationServer API 的直接调用。"

msgid "NavigationAgent Pathfinding"
msgstr "NavigationAgent 寻路"

msgid ""
"NavigationAgents query a new navigation path on their current navigation map "
"when their ``target_position`` is set with a global position."
msgstr ""

msgid ""
"The result of the pathfinding can be influenced with the following "
"properties."
msgstr "匀速遍历, 然后, 可以用下面的伪代码。"

msgid ""
"The ``navigation_layers`` bitmask can be used to limit the navigation meshes "
"that the agent can use."
msgstr ""

msgid ""
"The ``pathfinding_algorithm`` controls how the pathfinding travels through "
"the navigation mesh polygons in the path search."
msgstr ""

msgid ""
"The ``path_postprocessing`` sets if or how the raw path corridor found by "
"the pathfinding is altered before it is returned."
msgstr ""

msgid ""
"The ``path_metadata_flags`` enable the collection of additional path point "
"meta data returned by the path."
msgstr ""

msgid ""
"Disabling path meta flags will disable related signal emissions on the agent."
msgstr ""

msgid "NavigationAgent Pathfollowing"
msgstr "NavigationAgent 路径跟随"

msgid ""
"After a ``target_position`` has been set for the agent, the next position to "
"follow in the path can be retrieved with the ``get_next_path_position()`` "
"function."
msgstr ""

msgid ""
"Once the next path position is received move the parent actor node of the "
"agent towards this path position with your own movement code."
msgstr ""

msgid ""
"The navigation system never moves the parent node of a NavigationAgent. The "
"movement is entirely in the hands of users and their custom scripts."
msgstr ""

msgid ""
"NavigationAgents have their own internal logic to proceed with the current "
"path and call for updates."
msgstr ""

msgid ""
"The ``get_next_path_position()`` function is responsible for updating many "
"of the agent's internal states and properties. The function should be "
"repeatedly called *once* every ``physics_process`` until "
"``is_navigation_finished()`` tells that the path is finished. The function "
"should not be called after the target position or path end has been reached "
"as it can make the agent jitter in place due to the repeated path updates. "
"Always check very early in script with ``is_navigation_finished()`` if the "
"path is already finished."
msgstr ""

msgid "The following properties influence the path following behavior."
msgstr "这个节点有如下属性可供设置。"

msgid ""
"The ``path_desired_distance`` defines the distance at which the agent "
"advances its internal path index to the next path position."
msgstr ""

msgid ""
"The ``target_desired_distance`` defines the distance at which the agent "
"considers the target position to be reached and the path at its end."
msgstr ""

msgid ""
"The ``path_max_distance`` defines when an agent requests a new path cause it "
"was moved too far away from the current path point segment."
msgstr ""

msgid ""
"The important updates are all triggered with the "
"``get_next_path_position()`` function when called in ``_physics_process()``."
msgstr ""

msgid ""
"NavigationAgents can be used with ``process`` but are still limited to a "
"single update that happens in ``physics_process``."
msgstr ""

msgid ""
"Script examples for various nodes commonly used with NavigationAgents can be "
"found further below."
msgstr ""

msgid "Pathfollowing common problems"
msgstr "运行以下命令"

msgid ""
"There are some common user problems and important caveats to consider when "
"writing agent movement scripts."
msgstr ""

msgid "The path is returned empty"
msgstr ""

msgid ""
"If an agent queries a path before the navigation map synchronisation, e.g. "
"in a ``_ready()`` function, the path might return empty. In this case the "
"``get_next_path_position()`` function will return the same position as the "
"agent parent node and the agent will consider the path end reached. This is "
"fixed by making a deferred call or using a callback e.g. waiting for the "
"navigation map changed signal."
msgstr ""

msgid "The agent is stuck dancing between two positions"
msgstr ""

msgid ""
"This is usually caused by very frequent path updates every single frame, "
"either deliberate or by accident (e.g. max path distance set too short). The "
"pathfinding needs to find the closest position that are valid on navigation "
"mesh. If a new path is requested every single frame the first path positions "
"might end up switching constantly in front and behind the agent's current "
"position, causing it to dance between the two positions."
msgstr ""

msgid "The agent is backtracking sometimes"
msgstr ""

msgid ""
"If an agent moves very fast it might overshoot the path_desired_distance "
"check without ever advancing the path index. This can lead to the agent "
"backtracking to the path point now behind it until it passes the distance "
"check to increase the path index. Increase the desired distances accordingly "
"for your agent speed and update rate usually fixes this as well as a more "
"balanced navigation mesh polygon layout with not too many polygon edges "
"cramped together in small spaces."
msgstr ""

msgid "The agent is sometimes looking backwards for a frame"
msgstr ""

msgid ""
"Same as with stuck dancing agents between two positions, this is usually "
"caused by very frequent path updates every single frame. Depending on your "
"navigation mesh layout, and especially when an agent is directly placed over "
"a navigation mesh edge or edge connection, expect path positions to be "
"sometimes slightly \"behind\" your actors current orientation. This happens "
"due to precision issues and can not always be avoided. This is usually only "
"a visible problem if actors are instantly rotated to face the current path "
"position."
msgstr ""

msgid "NavigationAgent Avoidance"
msgstr "NavigationAgent 避障"

msgid ""
"This section explains how to use the navigation avoidance specific to "
"NavigationAgents."
msgstr "本节解释了如何使用 NavigationAgent 的导航避障功能。"

msgid ""
"In order for NavigationAgents to use the avoidance feature the "
"``enable_avoidance`` property must be set to ``true``."
msgstr ""
"要让 NavigationAgent 使用避障功能，必须将 ``enable_avoidance`` 属性设置为 "
"``true``\\ 。"

msgid ""
"The ``velocity_computed`` signal of the NavigationAgent node must be "
"connected to receive the safe velocity calculation result."
msgstr ""
"必须连接 NavigationAgent 节点的 ``velocity_computed`` 信号，接收安全速度的计"
"算结果。"

msgid ""
"Use ``set_velocity()`` on the NavigationAgent node in ``_physics_process()`` "
"to update the agent with the current velocity of the agent's parent node."
msgstr ""
"请在 ``_physics_process()`` 中使用 NavigationAgent 节点的 "
"``set_velocity()``\\ ，利用代理父节点的当前速度来更新代理。"

msgid ""
"While avoidance is enabled on the agent the ``safe_velocity`` vector will be "
"received with the velocity_computed signal every physics frame. This "
"velocity vector should be used to move the NavigationAgent's parent node in "
"order to avoidance collision with other avoidance using agents or avoidance "
"obstacles."
msgstr ""
"只要代理开启了避障，就可以在每个物理帧通过 velocity_computed 信号收到 "
"``safe_velocity`` 向量。应该使用这个速度向量来移动 NavigationAgent 的父节点，"
"这样就能够避免撞到其他使用了避障的代理以及避障障碍物。"

msgid ""
"Only other agents on the same map that are registered for avoidance themself "
"will be considered in the avoidance calculation."
msgstr "计算避障时只会考虑位于同一张地图中其他注册了避障的代理。"

msgid "The following NavigationAgent properties are relevant for avoidance:"
msgstr "NavigationAgent 中与避障相关的属性如下："

msgid ""
"The property ``height`` is available in 3D only. The height together with "
"the current global y-axis position of the agent determines the vertical "
"placement of the agent in the avoidance simulation. Agents using the 2D "
"avoidance will automatically ignore other agents or obstacles that are below "
"or above them."
msgstr ""

msgid ""
"The property ``radius`` controls the size of the avoidance circle, or in "
"case of 3D sphere, around the agent. This area describes the agents body and "
"not the avoidance maneuver distance."
msgstr ""

msgid ""
"The property ``neighbor_distance`` controls the search radius of the agent "
"when searching for other agents that should be avoided. A lower value "
"reduces processing cost."
msgstr ""

msgid ""
"The property ``max_neighbors`` controls how many other agents are considered "
"in the avoidance calculation if they all have overlapping radius. A lower "
"value reduces processing cost but a too low value may result in agents "
"ignoring the avoidance."
msgstr ""

msgid ""
"The properties ``time_horizon_agents`` and ``time_horizon_obstacles`` "
"control the avoidance prediction time for other agents or obstacles in "
"seconds. When agents calculate their safe velocities they choose velocities "
"that can be kept for this amount of seconds without colliding with another "
"avoidance object. The prediction time should be kept as low as possible as "
"agents will slow down their velocities to avoid collision in that timeframe."
msgstr ""

msgid ""
"The property ``max_speed`` controls the maximum velocity allowed for the "
"agents avoidance calculation. If the agents parents moves faster than this "
"value the avoidance ``safe_velocity`` might not be accurate enough to avoid "
"collision."
msgstr ""

msgid ""
"The property ``use_3d_avoidance`` switches the agent between the 2D "
"avoidance (xz axis) and the 3D avoidance (xyz axis) on the next update. Note "
"that 2D avoidance and 3D avoidance run in separate avoidance simulations so "
"agents split between them do not affect each other."
msgstr ""

msgid ""
"The properties ``avoidance_layers`` and ``avoidance_mask`` are bitmasks "
"similar to e.g. physics layers. Agents will only avoid other avoidance "
"objects that are on an avoidance layer that matches at least one of their "
"own avoidance mask bits."
msgstr ""

msgid ""
"The ``avoidance_priority`` makes agents with a higher priority ignore agents "
"with a lower priority. This can be used to give certain agents more "
"importance in the avoidance simulation, e.g. important npcs characters, "
"without constantly changing their entire avoidance layers or mask."
msgstr ""

msgid ""
"Avoidance exists in its own space and has no information from navigation "
"meshes or physics collision. Behind the scene avoidance agents are just "
"circles with different radius on a flat 2D plane or spheres in an otherwise "
"empty 3D space. NavigationObstacles can be used to add some environment "
"constrains to the avoidance simulation, see :ref:"
"`doc_navigation_using_navigationobstacles`."
msgstr ""

msgid ""
"Avoidance does not affect the pathfinding. It should be seen as an "
"additional option for constantly moving objects that cannot be (re)baked to "
"a navigation mesh efficiently in order to move around them."
msgstr ""

msgid ""
"Using the NavigationAgent ``enable_avoidance`` property is the preferred "
"option to toggle avoidance. The following code snippets can be used to "
"toggle avoidance on agents, create or delete avoidance callbacks or switch "
"avoidance modes."
msgstr ""

msgid "NavigationAgent Script Templates"
msgstr "NavigationAgent 脚本模板"

msgid ""
"The following sections provides script templates for nodes commonly used "
"with NavigationAgents."
msgstr ""

msgid "Actor as Node3D"
msgstr "角色为 Node3D"

#, fuzzy
msgid ""
"This script adds basic navigation movement to a :ref:`Node3D <class_Node3D>` "
"with a :ref:`NavigationAgent3D <class_NavigationAgent3D>` child node."
msgstr ""
"这个脚本能够为带有 NavigationAgent3D 子节点的 Node3D 添加基础的导航移动功能。"

msgid "Actor as CharacterBody3D"
msgstr "角色为 CharacterBody3D"

#, fuzzy
msgid ""
"This script adds basic navigation movement to a :ref:`CharacterBody3D "
"<class_CharacterBody3D>` with a :ref:`NavigationAgent3D "
"<class_NavigationAgent3D>` child node."
msgstr ""
"这个脚本能够为带有 NavigationAgent3D 子节点的 CharacterBody3D 添加基础的导航"
"移动功能。"

msgid "Actor as RigidBody3D"
msgstr "角色为 RigidBody3D"

#, fuzzy
msgid ""
"This script adds basic navigation movement to a :ref:`RigidBody3D "
"<class_RigidBody3D>` with a :ref:`NavigationAgent3D "
"<class_NavigationAgent3D>` child node."
msgstr ""
"这个脚本能够为带有 NavigationAgent3D 子节点的 RigidBody3D 添加基础的导航移动"
"功能。"

msgid "Translation status"
msgstr "翻译状态"
