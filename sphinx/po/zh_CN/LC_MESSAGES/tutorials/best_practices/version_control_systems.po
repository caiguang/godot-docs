# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Version control systems"
msgstr "版本控制系统"

msgid "Introduction"
msgstr "前言"

msgid ""
"Godot aims to be VCS-friendly and generate mostly readable and mergeable "
"files."
msgstr "Godot 的目标是做到 VCS 友好，生成的文件大多可读、可合并。"

msgid "Version control plugins"
msgstr "版本控制插件"

msgid ""
"Godot also supports the use of version control systems in the editor itself. "
"However, version control in the editor requires a plugin for the specific "
"VCS you're using."
msgstr ""
"Godot 旨在对版本控制系统（Version Control System，VCS）友好，并尽量生成可读且"
"可合并的文件。Godot 支持通过插件在编辑器本身中使用 VCS。可以在编辑器中的\\ **"
"项目> 版本控制**\\ 下设置或关闭 VCS。"

msgid ""
"As of July 2023, there is only a Git plugin available, but the community may "
"create additional VCS plugins."
msgstr ""
"截至 2023 年 7 月，尚且只有一个 Git 插件可用，但社区可能会创建其他的 VCS 插"
"件。"

msgid "Official Git plugin"
msgstr "官方 Git 插件"

msgid ""
"Using Git from inside the editor is supported with an official plugin. You "
"can find the latest releases on `GitHub <https://github.com/godotengine/"
"godot-git-plugin/releases>`__."
msgstr ""
"有一个官方插件可以让你在编辑器中使用 Git。你可以在\\ `GitHub <https://github."
"com/godotengine/godot-git-plugin/releases>`__\\ 找到最新的版本。"

msgid ""
"Documentation on how to use the Git plugin can be found on its `wiki "
"<https://github.com/godotengine/godot-git-plugin/wiki>`__."
msgstr ""
"最新的更新、文档和源代码可以在Godot iOS插件库找到 `Godot iOS plugins "
"repository <https://github.com/godotengine/godot-ios-plugins>`_。"

msgid "Files to exclude from VCS"
msgstr "从 VCS 中排除的文件"

msgid ""
"This lists files and folders that should be ignored from version control in "
"Godot 4.1 and later."
msgstr "这里列出了 Godot 4.1 及更高版本中应从版本控制中被忽略的文件和文件夹。"

msgid ""
"The list of files of folders that should be ignored from version control in "
"Godot 3.x and Godot 4.0 is **entirely** different. This is important, as "
"Godot 3.x and 4.0 may store sensitive credentials in ``export_presets.cfg`` "
"(unlike Godot 4.1 and later)."
msgstr ""
"Godot 4.0 及更低版本中的版本控制应忽略的文件夹及文件列表与 Godot 4.1 及更高版"
"本 ** 完全 ** 不同。 这点非常重要，因为 Godot 3.x 和 4.0 可能会将敏感凭据存储"
"在 ``export_presets.cfg`` 中，而 Godot 4.1 及更高版本不会。"

msgid ""
"If you are using Godot 3, check the ``3.5`` version of this documentation "
"page instead."
msgstr "如果你正在使用 Godot 3，请查看本页说明文档的 ``3.5`` 版本。"

msgid ""
"There are some files and folders Godot automatically creates when opening a "
"project in the editor for the first time. To avoid bloating your version "
"control repository with generated data, you should add them to your VCS "
"ignore:"
msgstr ""
"当第一次在编辑器中打开项目时，Godot 会自动创建一些文件和文件夹。 为了避免生成"
"的数据使版本控制仓库膨胀，你应该将它们添加到 VCS 忽略中："

msgid "``.godot/``: This folder stores various project cache data."
msgstr "``. godot/``\\ ：此文件夹存储各种项目缓存数据。"

msgid ""
"``*.translation``: These files are binary imported :ref:`translations "
"<doc_internationalizing_games>` generated from CSV files."
msgstr ""
"``*.translation``\\ ：这些文件是从 CSV 文件生成的导入后的的二进制\\ :ref:`翻"
"译 <doc_internationalizing_games>`\\ 文件。"

msgid ""
"You can make the Godot project manager generate version control metadata for "
"you automatically when creating a project. When choosing the **Git** option, "
"this creates ``.gitignore`` and ``.gitattributes`` files in the project root:"
msgstr ""
"你可以选择在 Godot 项目管理器创建项目时自动生成版本控制元数据。当选择 "
"**Git** 选项时，将在项目根目录中创建 ``.gitignore`` 和 ``.gitattributes`` 文"
"件："

msgid ""
"Creating version control metadata in the project manager's New Project dialog"
msgstr "在项目管理器的“新建项目”对话框中创建版本控制元数据"

msgid ""
"Creating version control metadata in the project manager's **New Project** "
"dialog"
msgstr "在项目管理器的 **新建项目** 对话框中创建版本控制元数据"

msgid ""
"In existing projects, select the **Project** menu at the top of the editor, "
"then choose **Version Control > Generate Version Control Metadata**. This "
"creates the same files as if the operation was performed in the project "
"manager."
msgstr ""
"在现有的项目中，选择编辑器顶部的 **项目** 菜单，然后选择 **版本控制 > 生成版"
"本控制元数据**\\ 。这将与在项目管理器中执行的操作一样创建相同的文件。"

msgid "Working with Git on Windows"
msgstr "在 Windows 上使用 Git"

msgid ""
"Most Git for Windows clients are configured with the ``core.autocrlf`` set "
"to ``true``. This can lead to files unnecessarily being marked as modified "
"by Git due to their line endings being converted from LF to CRLF "
"automatically."
msgstr ""
"大多数 Git for Windows 客户端都将 ``core.autocrlf`` 设置为 ``true``\\ 。可能"
"会导致部分文件错误地被 Git 标记为已修改，因为这些文件的行尾被自动从 LF 转换成"
"了 CRLF。"

msgid "It is better to set this option as:"
msgstr "最好将此选项设置为："

msgid ""
"Creating version control metadata using the project manager or editor will "
"automatically enforce LF line endings using the ``.gitattributes`` file. In "
"this case, you don't need to change your Git configuration."
msgstr ""
"使用项目管理器或编辑器创建版本控制元数据时，会使用 ``.gitattributes`` 文件自"
"动强制使用 LF 行尾，因此无需更改 Git 配置。"

msgid "Translation status"
msgstr "翻译状态"
