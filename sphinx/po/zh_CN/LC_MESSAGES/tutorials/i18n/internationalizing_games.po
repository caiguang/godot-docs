# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Internationalizing games"
msgstr "使游戏国际化"

msgid "Introduction"
msgstr "前言"

msgid ""
"Sería excelente que el mundo hablara solo un idioma (It would be great if "
"the world spoke only one language). Unfortunately for us developers, that is "
"not the case. While indie or niche games usually do not need localization, "
"games targeting a more massive market often require localization. Godot "
"offers many tools to make this process more straightforward, so this "
"tutorial is more like a collection of tips and tricks."
msgstr ""
"Sería excelente que el mundo hablara solo un idioma（如果全世界都讲同一种语言"
"就太好了）。不幸的是对于我们的开发人员来说，情况并非如此。虽然独立或投机游戏"
"通常不需要本地化，但瞄准更大市场的游戏通常需要本地化。Godot 提供了许多工具来"
"使这个过程更加简单，因此本教程更像一个妙招和技巧的合集。"

#, fuzzy
msgid ""
"Localization is usually done by specific studios hired for the job. Despite "
"the huge amount of software and file formats available for this, the most "
"common way to do localization to this day is still with spreadsheets. The "
"process of creating the spreadsheets and importing them is already covered "
"in the :ref:`doc_importing_translations` tutorial. If you haven't read the "
"Importing translations page before, we recommend you give it a read before "
"reading this page."
msgstr ""
"本地化通常是通过雇佣特定的工作室来完成的，尽管有大量的软件和文件格式可供使"
"用，但迄今为止进行本地化最常见的方式仍然是使用电子表格。创建电子表格并导入电"
"子表格的过程已经在 :ref:`doc_importing_translations` 教程中介绍过了，所以这个"
"教程更像是对那个教程的后续。"

msgid ""
"We will be using the official demo as an example; you can `download it from "
"the Asset Library <https://godotengine.org/asset-library/asset/134>`_."
msgstr ""
"我们将使用官方演示作为示例，你可以\\ `从资产库下载 <https://godotengine.org/"
"asset-library/asset/134>`_\\ 。"

msgid "Configuring the imported translation"
msgstr "配置导入的译文"

msgid ""
"Translations can get updated and re-imported when they change, but they "
"still have to be added to the project. This is done in **Project → Project "
"Settings → Localization**:"
msgstr ""
"翻译可以在更改时得到更新和重新导入，但仍必须添加到项目中。可通过\\ **项目 → "
"项目设置 → 本地化**\\ 来完成："

msgid "The above dialog is used to add or remove translations project-wide."
msgstr "上述对话框用于添加或删除项目范围内的翻译。"

msgid "Localizing resources"
msgstr "资源的本地化"

msgid ""
"It is also possible to instruct Godot to use alternate versions of assets "
"(resources) depending on the current language. This can be used for "
"localized images such as in-game billboards or localized voices."
msgstr ""
"根据当前语言，还可以指示 Godot 使用替代版本的资产（资源）。\\ **重定向**\\ 选"
"项卡可用于此。"

msgid "The **Remaps** tab can be used for this:"
msgstr ""

#, fuzzy
msgid ""
"Select the resource to be remapped then add some alternatives for each "
"locale."
msgstr "选择需要重定向的资源，并指定它在其他语言地区的替代方案。"

msgid ""
"The resource remapping system isn't supported for DynamicFonts. To use "
"different fonts depending on the language's script, use the DynamicFont "
"fallback system instead, which lets you define as many fallback fonts as you "
"want."
msgstr ""

msgid ""
"The upside of the DynamicFont fallback system is that it works regardless of "
"the current language, making it ideal for things like multiplayer chat where "
"the text language may not match the client's language."
msgstr ""

msgid "Converting keys to text"
msgstr "将键转换为文本"

msgid ""
"Some controls, such as :ref:`Button <class_Button>` and :ref:`Label "
"<class_Label>`, will automatically fetch a translation if their text matches "
"a translation key. For example, if a label's text is "
"\"MAIN_SCREEN_GREETING1\" and that key exists in the current translation, "
"then the text will automatically be translated."
msgstr ""
"一些控件，例如 :ref:`Button <class_Button>` 和 :ref:`Label "
"<class_Label>`\\ ，如果它们的文本与一个翻译键值相匹配，将自动获取翻译内容。例"
"如，如果一个标签的文本是“MAIN_SCREEN_GREETING1”并且该键值存在于当前的翻译中，"
"那么该文本将被自动翻译。"

msgid ""
"This automatic translation behavior may be undesirable in certain cases. For "
"instance, when using a Label to display a player's name, you most likely "
"don't want the player's name to be translated if it matches a translation "
"key. To disable automatic translation on a specific node, disable "
"**Localization > Auto Translate** in the inspector."
msgstr ""
"这种自动翻译行为在某些情况下可能是不可取的。例如，当使用 Label 来显示玩家的名"
"字时，如果玩家的名字与翻译键相匹配，你很可能不希望进行翻译。要禁用某个节点的"
"自动翻译，请在检查器中禁用\\ **Localization > Auto Translate**\\ （本地化 > "
"自动翻译）。"

msgid ""
"In code, the :ref:`Object.tr() <class_Object_method_tr>` function can be "
"used. This will just look up the text in the translations and convert it if "
"found:"
msgstr ""
"在代码中, 可以使用 :ref:`Object.tr() <class_Object_method_tr>` 函数. 这将只是"
"在翻译中查找文本, 如果找到的话就进行转换:"

msgid ""
"If no text is displayed after changing the language, try to use a different "
"font. The default project font only supports a subset of the Latin-1 "
"character set, which cannot be used to display languages like Russian or "
"Chinese."
msgstr ""
"如果更改语言后不显示任何文字，请尝试换一个字体。默认项目字体仅支持 Latin-1 字"
"符集的子集，无法用于显示俄语、汉语等文字。"

msgid ""
"A good resource for multilingual fonts is `Noto Fonts <https://www.google."
"com/get/noto/>`__. Make sure to download the correct variation if you're "
"using a less common language."
msgstr ""

msgid ""
"Once you've downloaded the font, load the TTF file into a DynamicFont "
"resource and use it as a custom font of your Control node. For better "
"reusability, associate a new a Theme resource to your root Control node and "
"define the DynamicFont as the Default Font in the theme."
msgstr ""

#, fuzzy
msgid "Placeholders"
msgstr "占位符"

msgid ""
"To feature placeholders in your translated strings, use :ref:"
"`doc_gdscript_printf` or the equivalent feature in C#. This lets translators "
"move the location of the placeholder in the string freely, which allows "
"translations to sound more natural. Named placeholders with the ``String."
"format()`` function should be used whenever possible, as they also allow "
"translators to choose the *order* in which placeholders appear:"
msgstr ""
"若要在翻译的字符串中使用占位符，请使用 :ref:`doc_gdscript_printf` 或 C# 中的"
"等效功能。这使得翻译者可以自由移动字符串中占位符的位置，使得翻译听起来更自"
"然。为了允许翻译人员决定占位符出现的*顺序*，应尽可能使用搭配使用带命名的占位"
"符和 ``String.format()`` 的函数："

msgid "Translation contexts"
msgstr "翻译上下文"

msgid ""
"If you're using plain English as source strings (rather than message codes "
"``LIKE_THIS``), you may run into ambiguities when you have to translate the "
"same English string to different strings in certain target languages. You "
"can optionally specify a *translation context* to resolve this ambiguity and "
"allow target languages to use different strings, even though the source "
"string is identical:"
msgstr ""
"如果你使用普通的英文所谓来源字符串（而不是类似于 ``LIKE_THIS`` 的消息代码），"
"那么就有可能会遇到歧义的情况，同一个英文字符串可能需要在某些目标语言中翻译为"
"不同的字符串。你可以通过指定可选的\\ *翻译上下文*\\ 来消除歧义，即便原始字符"
"串是相同的，也能够让目标语言能够使用不同的字符串："

msgid "Pluralization"
msgstr "复数"

msgid ""
"Most languages require different strings depending on whether an object is "
"in singular or plural form. However, hardcoding the \"is plural\" condition "
"depending on whether there is more than 1 object is not valid in all "
"languages."
msgstr ""
"很多语言会根据对象的单复数使用不同的字符串。但是把“是否为复数”的条件硬编码"
"为“对象数量是否大于 1 ”并不是对所有语言都有效。"

msgid ""
"Some languages have more than two plural forms, and the rules on the number "
"of objects required for each plural form vary. Godot offers support for "
"*pluralization* so that the target locales can handle this automatically."
msgstr ""
"有些语言有两种以上的复数形式，不同的复数需要的对象数量也各不相同。Godot 提供"
"了对\\ *复数*\\ 的支持，目标地区可以自动进行处理。"

msgid ""
"Pluralization is meant to be used with positive (or zero) integer numbers "
"only. Negative and floating-point values usually represent physical entities "
"for which singular and plural don't clearly apply."
msgstr ""
"复数应该只用于正整数（或零）的情况。负数和浮点数所代表的物理实体数量是单数还"
"是复数一般无法明确区分。"

msgid "This can be combined with a context if needed:"
msgstr "如果有需要也可以和上下文组合使用："

msgid ""
"Providing pluralized translations is only supported with :ref:"
"`doc_localization_using_gettext`, not CSV."
msgstr ""
"提供复数翻译仅支持 :ref:`doc_localization_using_gettext`\\ ，不支持 CSV。"

msgid "Making controls resizable"
msgstr "使控件的大小可调"

msgid ""
"The same text in different languages can vary greatly in length. For this, "
"make sure to read the tutorial on :ref:`doc_size_and_anchors`, as "
"dynamically adjusting control sizes may help. :ref:`Container "
"<class_Container>` can be useful, as well as the text wrapping options "
"available in :ref:`Label <class_Label>`."
msgstr ""
"不同语言的相同文本的长度差异很大。为此，请务必阅读教程 :ref:"
"`doc_size_and_anchors`\\ ，因为动态调整控件大小可能有所帮助。\\ :ref:"
"`Container <class_Container>` 可能很有用，\\ :ref:`Label <class_Label>` 的文"
"本换行选项应该也能帮上忙。"

msgid ""
"To check whether your UI can accommodate translations with longer strings "
"than the original, you can enable *pseudolocalization* in the advanced "
"Project Settings. This will replace all your localizable strings with longer "
"versions of themselves, while also replacing some characters in the original "
"strings with accented versions (while still being readable). Placeholders "
"are kept as-is, so that they keep working when pseudolocalization is enabled."
msgstr ""

msgid ""
"For example, the string ``Hello world, this is %s!`` becomes ``[Ĥéłłô ŵôŕłd́, "
"ŧh̀íš íš %s!]`` when pseudolocalization is enabled."
msgstr ""

msgid ""
"While looking strange at first, pseudolocalization has several benefits:"
msgstr "虽然第一眼看上去很奇怪，但是伪本地化的好处有很多："

msgid ""
"It lets you spot non-localizable strings quickly, so you can go over them "
"and make them localizable (if it makes sense to do so)."
msgstr ""

msgid ""
"It lets you check UI elements that can't fit long strings. Many languages "
"will feature much longer translations than the source text, so it's "
"important to ensure your UI can accommodate longer-than-usual strings."
msgstr ""

msgid ""
"It lets you check whether your font contains all the characters required to "
"support various languages. However, since the goal of pseudolocalization is "
"to keep the original strings readable, it's not an effective test for "
"checking whether a font can support :abbr:`CJK (Chinese, Japanese, Korean)` "
"or right-to-left languages."
msgstr ""

msgid ""
"The project settings allow you to tune pseudolocalization behavior, so that "
"you can disable parts of it if desired."
msgstr ""

msgid "TranslationServer"
msgstr "TranslationServer"

msgid ""
"Godot has a server handling low-level translation management called the :ref:"
"`TranslationServer <class_TranslationServer>`. Translations can be added or "
"removed during run-time; the current language can also be changed at run-"
"time."
msgstr ""
"Godot 有一个进行底层翻译管理的服务器，名为 :ref:`TranslationServer "
"<class_TranslationServer>`\\ 。可以在运行时添加或删除翻译；当前语言也可以在运"
"行时更改。"

msgid "Bidirectional text and UI Mirroring"
msgstr "双向文本和 UI 镜像"

msgid ""
"Arabic and Hebrew are written from right to left (except for the numbers and "
"Latin words mixed in), and the user interface for these languages should be "
"mirrored as well. In some languages the shape of a glyph changes depending "
"on the surrounding characters."
msgstr ""

msgid ""
"Support for bidirectional writing systems and UI mirroring is transparent, "
"you don't usually need to change anything or have any knowledge of the "
"specific writing system."
msgstr ""

msgid ""
"For RTL languages, Godot will automatically do the following changes to the "
"UI:"
msgstr "对于 RTL（从右至左）语言，Godot 会自动对 UI 进行以下调整："

msgid "Mirrors left/right anchors and margins."
msgstr "镜像左右锚点和边距。"

msgid "Swaps left and right text alignment."
msgstr "交换文本的左对齐和右对齐。"

msgid ""
"Mirrors horizontal order of the child controls in the containers, and items "
"in Tree/ItemList controls."
msgstr "镜像容器中子控件的水平顺序以及 Tree/ItemList 控件中项目的水平顺序。"

msgid ""
"Uses mirrored order of the internal control elements (e.g. OptionButton "
"dropdown button, checkbox alignment, List column order, Tree item icons and "
"connecting line alignment, e.t.c.), in some cases mirrored controls use "
"separate theme styles."
msgstr ""
"控件内部元素使用镜像顺序（例如 OptionButton 的下拉按钮、单选框的位置、列表框"
"列的顺序、Tree 项目的图标和连接线的位置等），某些镜像的控件会使用单独的主题样"
"式。"

msgid ""
"Coordinate system is not mirrored, and non-UI nodes (sprites, e.t.c) are not "
"affected."
msgstr "坐标系不会镜像，非 UI 节点（精灵等）不受影响。"

msgid ""
"It is possible to override text and control layout direction by using the "
"following control properties:"
msgstr ""

msgid ""
"``text_direction``, sets the base text direction. When set to \"auto\", "
"direction depends on the first strong directional character in the text "
"according to the Unicode Bidirectional Algorithm,"
msgstr ""

msgid "``language``, overrides current project locale."
msgstr ""

msgid ""
"``structured_text_bidi_override`` property and ``_structured_text_parser`` "
"callback, enables special handling for structured text."
msgstr ""

msgid "``layout_direction``, overrides control mirroring."
msgstr ""

#, fuzzy
msgid ""
"You can see how right-to-left typesetting works in action using the `BiDI "
"and Font Features demo project <https://github.com/godotengine/godot-demo-"
"projects/tree/master/gui/bidi_and_font_features>`__."
msgstr ""
"如果您更善于通过查看示例学习，可以在\\ `这里 <https://github.com/godotengine/"
"godot-demo-projects/tree/master/mobile/android_iap>`__\\ 找到演示项目。"

msgid "Adding break iterator data to exported project"
msgstr "在导出后的项目中添加分词迭代器数据"

msgid ""
"Some languages are written without spaces, and word and line breaking "
"requires more than rules over character sequences. Godot includes ICU rule "
"and dictionary based, break iterator data, but this data is not included "
"into exported projects by default. To include it go to **Project → Project "
"Settings → Localization → Text Server Data** and click **Install support "
"data...**. Break iterator data is about 4 MB large."
msgstr ""

msgid "Structured text BiDi override"
msgstr "结构化文本 BiDi 覆盖"

msgid ""
"Unicode BiDi algorithm is designed to work with natural text and it's "
"incapable of handling text with the higher level order, like file names, "
"URIs, email addresses, regular expressions or source code."
msgstr ""

msgid ""
"For example, the path for this shown directory structure will be displayed "
"incorrectly (top \"LineEdit\" control). \"File\" type structured text "
"override splits text into segments, then BiDi algorithm is applied to each "
"of them individually to correctly display directory names in any language "
"and preserve correct order of the folders (bottom \"LineEdit\" control)."
msgstr ""

msgid ""
"Custom callbacks provide a way to override BiDi for the other types of "
"structured text."
msgstr ""

msgid "Localizing numbers"
msgstr "数字的本地化"

msgid ""
"Controls specifically designed for number input or output (e.g. ProgressBar, "
"SpinBox) will use localized numbering system automatically, for the other "
"control :ref:`TextServer.format_number(string, language) "
"<class_TextServer_method_format_number>` can be used to convert Western "
"Arabic numbers (0..9) to the localized numbering system and :ref:`TextServer."
"parse_number(string, language) <class_TextServer_method_parse_number>` to "
"convert it back."
msgstr ""

msgid "Localizing icons and images"
msgstr "图标和图像的本地化"

msgid ""
"Icons with left and right pointing arrows which may need to be reversed for "
"Arabic and Hebrew locales, in case they indicate movement or direction (e.g. "
"back/forward buttons). Otherwise, they can remain the same."
msgstr ""

msgid "Testing translations"
msgstr "测试翻译"

msgid ""
"You may want to test a project's translation before releasing it. Godot "
"provides two ways to do this."
msgstr "你可能会想要在发布前测试项目的翻译。Godot 为此提供了两种方法。"

#, fuzzy
msgid ""
"First, in the Project Settings, under **Internationalization > Locale** "
"(with advanced settings enabled), there is a **Test** property. Set this "
"property to the locale code of the language you want to test. Godot will run "
"the project with that locale when the project is run (either from the editor "
"or when exported)."
msgstr ""
"首先，在“项目设置”的\\ **输入设备 > 区域**\\ 中有一个\\ **测试**\\ 属性。将这"
"个属性设为想要测试的语言的区域代码即可。运行项目时，Godot 就会使用这个区域设"
"置（无论是从编辑器运行还是导出后运行均如此）。"

msgid ""
"Keep in mind that since this is a project setting, it will show up in "
"version control when it is set to a non-empty value. Therefore, it should be "
"set back to an empty value before committing changes to version control."
msgstr ""
"请记住，因为这是一个项目设置，设为非空时会在版本控制中显示。因此，将修改提交"
"到版本控制之前，应该将其设回空值。"

#, fuzzy
msgid ""
"Translations can also be tested when :ref:`running Godot from the command "
"line <doc_command_line_tutorial>`. For example, to test a game in French, "
"the following argument can be supplied:"
msgstr ""
"还可以在从命令行运行 Godot 时测试语言。例如，要使用法语测试游戏，可以提供以下"
"参数："

msgid "Translating the project name"
msgstr "翻译项目名称"

msgid ""
"The project name becomes the app name when exporting to different operating "
"systems and platforms. To specify the project name in more than one "
"language, create a new setting ``application/name`` in the **Project "
"Settings** and append the locale identifier to it. For instance, for "
"Spanish, this would be ``application/name_es``:"
msgstr ""
"导出到不同的操作系统和平台时，项目名称将成为应用程序名称。要以多种语言指定项"
"目名称，请在\\ **项目设置**\\ 中创建一个新设置 ``application/name``\\ ，并将"
"区域标识符附加到其中。例如，对于西班牙语，这将是 ``application/name_es``\\ ："

msgid ""
"If you are unsure about the language code to use, refer to the :ref:`list of "
"locale codes <doc_locales>`."
msgstr ""
"如果你不确定要使用的语言代码，请参阅\\ :ref:`区域代码列表 <doc_locales>`\\ 。"

msgid "Translation status"
msgstr "翻译状态"
