# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "TSCN file format"
msgstr "TSCN 文件格式"

msgid ""
"The TSCN (text scene) file format represents a single scene tree inside "
"Godot. Unlike binary SCN files, TSCN files have the advantage of being "
"mostly human-readable and easy for version control systems to manage."
msgstr ""
"TSCN（文本场景）文件格式表示 Godot 内部的单个场景树。与二进制的 SCN 文件不"
"同，TSCN 具有易于人类阅读、便于使用版本控制系统进行管理的优点。"

#, fuzzy
msgid ""
"The ESCN (exported scene) file format is identical to the TSCN file format, "
"but is used to indicate to Godot that the file has been exported from "
"another program and should not be edited by the user from within Godot. "
"Unlike SCN and TSCN files, during import, ESCN files are compiled to binary "
"SCN files stored inside the ``.godot/imported/`` folder. This reduces the "
"data size and speeds up loading, as binary formats are faster to load "
"compared to text-based formats."
msgstr ""
"ESCN（导出场景）文件格式与 TSCN 文件格式相同，但是用于向 Godot 表明该文件是从"
"另一个程序导出的，不应由用户在 Godot 内部进行编辑。与 SCN 和 TSCN 文件不同，"
"导入时，ESCN 文件会被编译为二进制的 SCN 文件存储到 ``.import/`` 文件夹中。这"
"样可以减小数据体积、提高加载速度，因为相较于基于文本的格式，二进制格式的加载"
"更快。"

msgid ""
"To make files more compact, properties equal to the default value are not "
"stored in scene/resource files. It is possible to write them manually, but "
"they will be discarded when saving the file."
msgstr ""

msgid ""
"For those looking for a complete description, the parsing is handled in the "
"file `resource_format_text.cpp <https://github.com/godotengine/godot/blob/"
"master/scene/resources/resource_format_text.cpp>`_ in the "
"``ResourceFormatLoaderText`` class."
msgstr ""
"如果想要完整的描述，对这些文件格式的解析是在 `resource_format_text.cpp "
"<https://github.com/godotengine/godot/blob/master/scene/resources/"
"resource_format_text.cpp>`_ 的 ``ResourceFormatLoaderText`` 类中进行处理的。"

msgid ""
"The scene and resource file formats have changed significantly in Godot 4, "
"with the introduction of string-based UIDs to replace incremental integer "
"IDs."
msgstr ""

msgid ""
"Mesh, skeleton and animation data is also stored differently compared to "
"Godot 3. You can read about some of the changes in this article: `Animation "
"data rework for 4.0 <https://godotengine.org/article/animation-data-"
"redesign-40/>`__"
msgstr ""

msgid ""
"Scenes and resources saved with Godot 4.x contain ``format=3`` in their "
"header, whereas Godot 3.x uses ``format=2`` instead."
msgstr ""

msgid "File structure"
msgstr "文件结构"

msgid "There are five main sections inside the TSCN file:"
msgstr "TSCN 文件分为五个主要部分："

msgid "File descriptor"
msgstr "文件描述符"

msgid "External resources"
msgstr "外部资源"

msgid "Internal resources"
msgstr "内部资源"

msgid "Nodes"
msgstr "节点"

msgid "Connections"
msgstr "连接"

#, fuzzy
msgid ""
"The file descriptor looks like ``[gd_scene load_steps=4 format=3 uid=\"uid://"
"cecaux1sm7mo0\"]`` and should be the first entry in the file. The "
"``load_steps`` parameter is equal to the total amount of resources (internal "
"and external) plus one (for the file itself). If the file has no resources, "
"``load_steps`` is omitted. The engine will still load the file correctly if "
"``load_steps`` is incorrect, but this will affect loading bars and any other "
"piece of code relying on that value."
msgstr ""
"类似 ``[gd_scene load_steps=3 format=2]`` 的就是文件描述符，应该是文件的第一"
"条记录。这里的 ``load_steps`` 参数等于资源总数（包括内部和外部）加一（文件本"
"身）。文件中不包含资源时 ``load_steps`` 会被省略。即便 ``load_steps`` 不正"
"确，引擎仍然能够正确加载文件，但是加载进度条和其它一些使用该值的代码会受影"
"响。"

msgid ""
"``uid`` is an unique string-based identifier representing the scene. This is "
"used by the engine to track files that are moved around, even while the "
"editor is closed. Scripts can also load UID-based resources using the "
"``uid://`` path prefix to avoid relying on filesystem paths. This makes it "
"possible to move around a file in the project, but still be able to load it "
"in scripts without having to modify the script. Godot does not use external "
"files to keep track of IDs, which means no central metadata storage location "
"is required within the project. See `this pull request <https://github.com/"
"godotengine/godot/pull/50786>`__ for detailed information."
msgstr ""

#, fuzzy
msgid ""
"These sections should appear in order, but it can be hard to distinguish "
"them. The only difference between them is the first element in the heading "
"for all of the items in the section. For example, the heading of all "
"external resources should start with ``[ext_resource ...]``."
msgstr ""
"这些部分应按顺序显示, 但是可能很难区分它们. 它们之间的唯一区别是该部分中所有"
"项目的标题中的第一个元素. 例如, 所有外部资源的标题都应以 "
"``[ext_resource .....]`` 开头."

#, fuzzy
msgid ""
"A TSCN file may contain single-line comments starting with a semicolon (``;"
"``). However, comments will be discarded when saving the file using the "
"Godot editor. Whitespace within a TSCN file is not significant (except "
"within strings), but extraneous whitespace will be discarded when saving the "
"file."
msgstr ""
"TSCN文件可能包含以分号(``;``)开头的单行注释. 但是, 使用Godot编辑器保存文件"
"时, 注释将被丢弃."

msgid "Entries inside the file"
msgstr "文件中的条目"

#, fuzzy
msgid ""
"A heading looks like ``[<resource_type> key1=value1 key2=value2 "
"key3=value3 ...]`` where resource_type is one of:"
msgstr ""
"标题看起来像 ``[<resource_type> key=value key=value key=value ...]`` , 其中 "
"``resource_type`` 是以下之一:"

msgid "``ext_resource``"
msgstr "``ext_resource``"

msgid "``sub_resource``"
msgstr "``sub_resource``"

msgid "``node``"
msgstr "``node``"

msgid "``connection``"
msgstr "``connection``"

#, fuzzy
msgid ""
"Below every heading comes zero or more ``key = value`` pairs. The values can "
"be complex datatypes such as Arrays, Transforms, Colors, and so on. For "
"example, a Node3D looks like:"
msgstr ""
"在每个标题下方都有零个或多个 ``key = value`` 对. 值可以是复杂的数据类型, 例如"
"Arrays, Transforms, Colors等. 例如, 一个Spatial节点如下所示:"

msgid "The scene tree"
msgstr "场景树"

#, fuzzy
msgid ""
"The scene tree is made up of… nodes! The heading of each node consists of "
"its name, parent and (most of the time) a type. For example: ``[node "
"name=\"PlayerCamera\" type=\"Camera\" parent=\"Player/Head\"]``"
msgstr ""
"场景树由……节点组成！每个节点的标题由其名称, 父级和(大多数情况下)一种类型组"
"成. 例如 ``[node type=\"Camera\" name=\"PlayerCamera\" parent=\"Player/"
"Head\"]``"

msgid "Other valid keywords include:"
msgstr "其他有效的关键字包括:"

msgid "``instance``"
msgstr "``instance``"

msgid "``instance_placeholder``"
msgstr "``instance_placeholder``"

msgid "``owner``"
msgstr "``owner``"

#, fuzzy
msgid ""
"``index`` (sets the order of appearance in the tree; if absent, inherited "
"nodes will take precedence over plain ones)"
msgstr ""
"``index``\\ （设置在树中的出现顺序。不存在的话，继承节点优先于普通节点）"

msgid "``groups``"
msgstr "``groups``"

#, fuzzy
msgid ""
"The first node in the file, which is also the scene root, must **not** have "
"a ``parent=\"Path/To/Node\"`` entry in its heading. All scene files should "
"have exactly *one* scene root. If it doesn't, Godot will fail to import the "
"file. The parent path of other nodes should be absolute, but shouldn't "
"contain the scene root's name. If the node is a direct child of the scene "
"root, the path should be ``\".\"``. Here is an example scene tree (but "
"without any node content):"
msgstr ""
"文件中的第一个节点(也是场景根)的标题中不得包含 ``parent=Path/To/Node`` 条目. "
"所有场景文件应完全具有 *一个* 场景根. 否则,Godot将无法导入文件. 其他节点的父"
"路径应为绝对路径, 但不应包含场景根名称. 如果节点是场景根的直接子代, 则路径应"
"为 ``\".\"``. 这是一个示例场景树(但没有任何节点内容):"

msgid ""
"To make the file structure easier to grasp, you can saving a file with any "
"given node or resource then inspect it yourself in an external editor. You "
"can also make incremental changes in the Godot editor, and keep an external "
"text editor open on the ``.tscn`` or ``.tres`` file with auto-reload enabled "
"to see what changes."
msgstr ""

msgid ""
"Here is an example of a scene containing a RigidBody3D-based ball with "
"collision, visuals (mesh + light) and a camera parented to the RigidBody3D:"
msgstr ""

msgid "NodePath"
msgstr "节点路径"

#, fuzzy
msgid ""
"A tree structure is not enough to represent the whole scene. Godot uses a "
"``NodePath(Path/To/Node)`` structure to refer to another node or attribute "
"of the node anywhere in the scene tree. Paths are relative to the current "
"node, with ``NodePath(\".\")`` pointing to the current node and "
"``NodePath(\"\")`` pointing to no node at all."
msgstr ""
"树形结构不足以代表整个场景。Godot 使用 ``NodePath(Path/To/Node)`` 结构来引用"
"该节点的属性或场景树中任何位置的另一个节点。例如，MeshInstance 使用 "
"``NodePath()`` 指向其骨架。同样，动画轨迹使用 ``NodePath()`` 指向要动画的节点"
"属性。"

#, fuzzy
msgid ""
"For instance, MeshInstance3D uses ``NodePath()`` to point to its skeleton. "
"Likewise, Animation tracks use ``NodePath()`` to point to node properties to "
"animate."
msgstr ""
"树形结构不足以代表整个场景。Godot 使用 ``NodePath(Path/To/Node)`` 结构来引用"
"该节点的属性或场景树中任何位置的另一个节点。例如，MeshInstance 使用 "
"``NodePath()`` 指向其骨架。同样，动画轨迹使用 ``NodePath()`` 指向要动画的节点"
"属性。"

msgid ""
"NodePath can also point to a property using a ``:property_name`` suffix, and "
"even point to a specific component for vector, transform and color types. "
"This is used by Animation resources to point to specific properties to "
"animate. For example, ``NodePath(\"MeshInstance3D:scale.x\")`` points to the "
"``x`` component of the ``scale`` Vector3 property in MeshInstance3D."
msgstr ""

msgid ""
"For example, the ``skeleton`` property in the MeshInstance3D node called "
"``mesh`` points to its parent, ``Armature01``:"
msgstr ""

msgid "Skeleton3D"
msgstr "Skeleton3D"

msgid ""
"The :ref:`class_Skeleton3D` node inherits the Node3D node, but may alsohave "
"a list of bones described in key-value pairs in the format ``bones/<id>/"
"<attribute> = value``. The bone attributes consist of:"
msgstr ""
":ref:`class_Skeleton3D` 节点继承 Node3D 节点，但也可能具有以 ``bones/<id>/"
"<attribute> = value`` 格式的键值来描述的骨骼列表。骨骼属性包括："

msgid "``position``: Vector3"
msgstr "``position``\\ ：Vector3"

msgid "``rotation``: Quaternion"
msgstr "``rotation``\\ ：Quaternion"

msgid "``scale``: Vector3"
msgstr "``scale``\\ ：Vector3"

msgid ""
"These attributes are all optional. For instance, a bone may only define "
"``position`` or ``rotation`` without defining the other properties."
msgstr ""
"这些属性都是可选的。例如，骨骼可能只定义了 ``position`` 或 ``rotation`` ，而"
"不定义其他属性。"

msgid "Here's an example of a skeleton node with two bones:"
msgstr "具有两个骨骼的骨架节点的示例："

msgid "BoneAttachment3D"
msgstr "BoneAttachment3D"

msgid ""
"The :ref:`class_BoneAttachment3D` node is an intermediate node to describe "
"some node being parented to a single bone in a Skeleton node. The "
"BoneAttachment has a ``bone_name = \"name of bone\"`` property, as well as a "
"property for the matching bone index."
msgstr ""
":ref:`BoneAttachment3D` 节点是一个中间节点，用于描述在 Skeleton 节点中以单根"
"骨骼为父节点的某些节点。BoneAttachment 具有 ``bone_name = \"name of bone\"`` "
"属性，以及匹配骨骼索引的属性。"

msgid ""
"An example of a :ref:`class_Marker3D` node parented to a bone in Skeleton:"
msgstr "以 Skeleton 中的骨骼为父级的 :ref:`class_Marker3D` 节点示例："

msgid "AnimationPlayer"
msgstr "AnimationPlayer"

msgid ""
"The :ref:`class_AnimationPlayer` node works with one or more animation "
"libraries stored in :ref:`class_AnimationLibrary` resources. An animation "
"library is a collection of individual :ref:`class_Animation` resources, "
"whose structure is documented :ref:`here <doc_tscn_animation>`."
msgstr ""

msgid ""
"This split between animations themselves and animation libraries was done in "
"Godot 4, so that animations can be imported separately from 3D meshes, which "
"is a common workflow in 3D animation software. See the `original pull "
"request <https://github.com/godotengine/godot/pull/59980>`__ for details."
msgstr ""

msgid ""
"If the library name is empty, then it acts acts the unique source of "
"animations for this AnimationPlayer. This allows using ``<animation_name>`` "
"directly to play animations from script. If you name the library, then you "
"must play it as ``<library_name>/<animation_name>``. This ensures backwards "
"compatibility and keeps the existing workflow if you don't want to use "
"multiple animation libraries."
msgstr ""

msgid "Resources"
msgstr "资源"

#, fuzzy
msgid ""
"Resources are components that make up the nodes. For example, a "
"MeshInstance3D node will have an accompanying ArrayMesh resource. The "
"ArrayMesh resource may be either internal or external to the TSCN file."
msgstr ""
"资源是组成节点的组件. 例如,MeshInstance节点将具有附带的ArrayMesh资源. "
"ArrayMesh资源可以是TSCN文件的内部或外部资源."

msgid ""
"References to the resources are handled by unique string-based IDs in the "
"resource's heading. This is different from the ``uid`` property, which each "
"external resource also has (but subresources don't)."
msgstr ""

#, fuzzy
msgid ""
"External resources and internal resources are referred to with "
"``ExtResource(\"id\")`` and ``SubResource(\"id\")``, respectively. Because "
"there have different methods to refer to internal and external resources, "
"you can have the same ID for both an internal and external resource."
msgstr ""
"对资源的引用由资源标题中的 ``id`` 数字处理. 外部资源和内部资源分别以 "
"``ExtResource(id)`` 和 ``SubResource(id)`` 引用. 因为引用内部和外部资源的方法"
"不同, 所以内部和外部资源的ID可以相同."

#, fuzzy
msgid ""
"For example, to refer to the resource ``[ext_resource type=\"Material\" "
"uid=\"uid://c4cp0al3ljsjv\" path=\"res://material.tres\" id=\"1_7bt6s\"]``, "
"you would use ``ExtResource(\"1_7bt6s\")``."
msgstr ""
"例如, 要引用资源 ``[ext_resource id=3 type=\"PackedScene\" path=....]``, 则应"
"使用 ``ExtResource(3)``."

#, fuzzy
msgid ""
"External resources are links to resources not contained within the TSCN file "
"itself. An external resource consists of a path, a type, an UID (used to map "
"its filesystem location to an unique identifier) and an ID (used to refer to "
"the resource in the scene file)."
msgstr ""
"外部资源是指向TSCN文件本身未包含的资源的链接. 外部资源由路径, 类型和ID组成."

msgid ""
"Godot always generates absolute paths relative to the resource directory and "
"thus prefixed with ``res://``, but paths relative to the TSCN file's "
"location are also valid."
msgstr ""
"Godot总是生成相对于资源目录的绝对路径, 因此以 ``res://`` 为前缀, 但是相对于"
"TSCN文件位置的路径也有效."

msgid "Some example external resources are:"
msgstr "一些示例外部资源是:"

#, fuzzy
msgid ""
"Like TSCN files, a TRES file may contain single-line comments starting with "
"a semicolon (``;``). However, comments will be discarded when saving the "
"resource using the Godot editor. Whitespace within a TRES file is not "
"significant (except within strings), but extraneous whitespace will be "
"discarded when saving the file."
msgstr ""
"像TSCN文件一样,TRES文件可能包含以分号(``;``)开头的单行注释. 但是, 使用Godot编"
"辑器保存资源时, 注释将被丢弃."

msgid ""
"A TSCN file can contain meshes, materials and other data. These are "
"contained in the *internal resources* section of the file. The heading for "
"an internal resource looks similar to those of external resources, except "
"that it doesn't have a path. Internal resources also have ``key=value`` "
"pairs under each heading. For example, a capsule collision shape looks like:"
msgstr ""
"TSCN文件可以包含网格, 材质和其他数据. 这些包含在文件的 *内部资源* 部分中. 内"
"部资源的标题与外部资源的标题相似, 不同之处在于它没有路径. 内部资源在每个标题"
"下还具有 ``键=值`` 对. 例如, 胶囊碰撞形状如下所示:"

msgid ""
"Some internal resources contain links to other internal resources (such as a "
"mesh having a material). In this case, the referring resource must appear "
"*before* the reference to it. This means that order matters in the file's "
"internal resources section."
msgstr ""
"一些内部资源包含到其他内部资源的链接(例如具有材质的网格). 在这种情况下, 引用"
"的资源必须在对其的引用 *之前* 出现. 这意味着顺序在文件的内部资源部分中很重要."

msgid "ArrayMesh"
msgstr "ArrayMesh"

msgid ""
"An ArrayMesh consists of several surfaces contained in the ``_surfaces`` "
"array (notice the leading underscore). Each surface's data is stored in a "
"dictionary with the following keys:"
msgstr ""

msgid ""
"``aabb``: The computed axis-aligned bounding box for visibility. ``Mesh."
"PrimitiveType`` Godot enum. ``0`` = points, ``1`` = lines, ``2`` = line "
"strip, ``3`` = triangles (most common), ``4`` = triangle strip."
msgstr ""

msgid ""
"``attribute_data``: Vertex attribute data, such as normals, tangents, vertex "
"colors, UV1, UV2 and custom vertex data."
msgstr ""

msgid ""
"``bone_aabbs``: The axis-aligned bounding box of each bone for visibility."
msgstr ""

msgid "``format``: The surface's buffer format."
msgstr ""

msgid ""
"``index_count``: The number of indices in the surface. This must match "
"``index_data``'s size."
msgstr ""

msgid ""
"``index_data``: The index data, which determines which vertices from "
"``vertex_data`` are drawn."
msgstr ""

msgid ""
"``lods``: Level of detail variations, stored as an array. Each LOD level "
"represents two values in the array. The first value is the percentage of "
"screen space the LOD level is most suited for (edge length); the second "
"value is the list of indices that should be drawn for the given LOD level."
msgstr ""

msgid "``material``: The material used when drawing the surface."
msgstr ""

msgid ""
"``name``: The surface's name. This can be used in scripts and is imported "
"from 3D DCCs."
msgstr ""

msgid "``primitive``: The surface's primitive type, matching the"
msgstr ""

msgid "``skin_data``: Bone weight data."
msgstr ""

msgid ""
"``vertex_count``: Number of vertices in the surface. This must match "
"``vertex_data``'s size."
msgstr ""

msgid "``vertex_data``: The vertex position data."
msgstr ""

msgid ""
"Here's an example of an ArrayMesh saved to its own ``.tres`` file. Some "
"fields were shortened with ``...`` for brevity:"
msgstr ""

msgid "Animation"
msgstr "动画"

#, fuzzy
msgid "Each animation has the following properties:"
msgstr "此弹出窗口具有以下属性:"

msgid ""
"``length``: The animation's length in seconds. Note that keyframes may be "
"placed outside the ``[0; length]`` interval, but they may have no effect "
"depending on the interpolation mode chosen."
msgstr ""

msgid ""
"``loop_mode``: ``0`` = no looping, ``1`` = wrap-around looping, ``2`` = "
"clamped looping."
msgstr ""

msgid ""
"``step``: The step size to use when editing this animation in the editor. "
"This is only used in the editor; it doesn't affect animation playback in any "
"way."
msgstr ""

#, fuzzy
msgid ""
"Each track is described by a list of key-value pairs in the format ``tracks/"
"<id>/<attribute>``. Each track includes:"
msgstr ""
"每个轨道由格式为 ``tracks/Id/Attribute`` 的键值对列表描述. 每个轨道包括:"

msgid ""
"``type``: The track's type. This defines what kind of properties may be "
"animated by this track, and how it'll be exposed to the user in the editor. "
"Valid types are ``value`` (generic property track), ``position_3d``, "
"``rotation_3d``, ``scale_3d``, ``blend_shape`` (optimized 3D animation "
"tracks), ``method`` (method call tracks), ``bezier`` (Bezier curve tracks), "
"``audio`` (audio playback tracks), ``animation`` (tracks that play other "
"animations)."
msgstr ""
"``type`` ：轨道的类型。这个属性定义了该轨道可以动画化哪种属性，以及如何在编辑"
"器中向用户公开它。有效类型为 ``value`` （通用属性轨道）、 ``position_3d`` 、 "
"``rotation_3d`` 、 ``scale_3d`` 、 ``blend_shape`` （优化的 3D 动画轨道）、 "
"``method`` （方法调用轨道）、 ``bezier`` （贝塞尔曲线轨道）、 ``audio`` （音"
"频播放轨道）、 ``animation`` （播放其他动画的轨道）。"

msgid ""
"``imported``: ``true`` if the track was created from an imported 3D scene, "
"``false`` if it was manually created by the user in the Godot editor or "
"using a script."
msgstr ""
"``imported`` ：如果轨道是从导入的 3D 场景创建的，则为 ``true`` ；如果轨道是由"
"用户在 Godot 编辑器中或使用脚本手动创建的，则为 ``false`` 。"

msgid ""
"``enabled``: ``true`` if the track is effective, ``false`` if it was "
"disabled in the editor."
msgstr ""
"``enabled`` ：如果轨道有效的（即被启用），则为 ``true`` ；如果轨道在编辑器中"
"被禁用，则为 ``false`` 。"

msgid ""
"``path``: Path to the node property that will be affected by the track. The "
"property is written after the node path with a ``:`` separator."
msgstr ""
"``path`` ：将受轨道影响的节点属性的路径。该属性写在节点路径后面，并使用 ``:"
"`` 分隔符。"

msgid ""
"``interp``: The interpolation mode to use. ``0`` = nearest, ``1`` = linear, "
"``2`` = cubic, ``3`` = linear angle, ``4`` = cubic angle."
msgstr ""
"``interp`` ：要使用的插值模式。 ``0`` = 最近（nearest）， ``1`` = 线性"
"（linear）， ``2`` = 立方（cubic）， ``3`` = 线性角度（linear angle）， "
"``4`` = 立方角度（cubic angle）。"

#, fuzzy
msgid ""
"``loop_wrap``: ``true`` if the track is designed to wrap around when the "
"animation is looping, ``false`` if the track clamps to the first/last "
"keyframes."
msgstr ""
"``loop_wrap`` ：如果轨道被设计为在动画循环时来回往复，则为 ``true`` ；如果轨"
"道被限位第一个/最后一个关键帧，则为 ``false`` 。"

msgid ""
"``keys``: The animation track's values. This attribute's structure depends "
"on the ``type``."
msgstr "``keys`` ：动画轨道的值。该属性的结构取决于 ``type`` 。"

msgid ""
"Here is a scene containing an AnimationPlayer that scales down a cube over "
"time using a generic property track. The AnimationLibrary workflow was not "
"used, so the animation library has an empty name (but the animation is still "
"given a ``scale_down`` name). Note that the ``RESET`` track was not created "
"in this AnimationPlayer for brevity:"
msgstr ""
"这是一个包含 AnimationPlayer 的场景，它使用通用属性轨道，随时间推进缩小立方"
"体。由于未使用 AnimationLibrary 工作流程，此动画库的名称为空（但动画仍指定为 "
"``scale_down`` 名称）。请注意，为了简洁起见，没有在此 AnimationPlayer 中创建 "
"``RESET`` 轨道："

msgid ""
"For generic property ``value`` tracks, ``keys`` is a dictionary containing 3 "
"arrays with positions in ``times`` (PackedFloat32Array), easing values in "
"``transitions`` (PackedFloat32Array) and values in ``values`` (Array). There "
"is an additional ``update`` property, which is an integer with the values "
"``0`` = continuous, ``1`` = discrete, ``2`` = capture."
msgstr ""
"对于通用属性 ``value`` 轨道， ``keys`` 是一个字典，其中包含 3 个数组。三个数"
"组分别是：位置（position）位于 ``times`` （PackedFloat32Array）中；缓动值"
"（easing value）位于 ``transitions`` （PackedFloat32Array）中；值（value）位"
"于 ``values`` （Array）中。还有一个附加的 ``update`` 属性，它是一个整数，其值"
"代表的含义分别是： ``0`` = 连续（continuous）， ``1`` = 离散（discrete）， "
"``2`` = 捕获（capture）。"

msgid ""
"Here is a second Animation resource that makes use of the 3D Position and 3D "
"Rotation tracks. These tracks (in addition to the 3D Scale track) replace "
"Transform tracks from Godot 3. They are optimized for fast playback and can "
"optionally be compressed."
msgstr ""
"这是第二个动画资源，它利用了 3D 位置和 3D 旋转轨道。这些轨道（除了 3D 缩放轨"
"道）取代了 Godot 3 中的 Transform 轨道。它们经过优化，可以快速播放，并且可以"
"选择进行压缩。"

msgid ""
"The downside of these optimized track types is that they can't use custom "
"easing values. Instead, all keyframes use linear interpolation. That said, "
"you can still opt for using nearest or cubic interpolation for all keyframes "
"in a given track by changing the track's interpolation mode."
msgstr ""
"这些优化轨道类型的缺点是，它们无法使用自定义缓动值。相反地，所有关键帧都使用"
"线性插值。也就是说，你仍然可以通过更改轨道的插值模式，来选择对给定轨道中的所"
"有关键帧使用最近插值或三次插值。"

msgid ""
"For 3D position, rotation and scale tracks, ``keys`` is a PackedFloat32Array "
"with all values stored in a sequence."
msgstr ""
"对于 3D 位置、旋转和缩放轨道， ``key`` 是一个将所有值都存储在序列中的 "
"PackedFloat32Array。"

msgid ""
"In the visual guide below, ``T`` is the keyframe's time in seconds since the "
"start of the animation, ``E`` is the keyframe's transition (currently always "
"``1``). For 3D position and scale tracks, ``X``, ``Y``, ``Z`` are the "
"Vector3's coordinates. For 3D rotation tracks, ``X``, ``Y``, ``Z`` and ``W`` "
"are the Quaternion's coordinates."
msgstr ""
"在下面的视觉指南中， ``T`` 是自动画开始以来关键帧的时间（以秒为单位）， "
"``E`` 是关键帧的过渡（当前始终为 ``1`` ）。对于 3D 位置和比例轨道， ``X`` 、 "
"``Y`` 、 ``Z`` 是 Vector3 的坐标。对于 3D 旋转轨道， ``X`` 、 ``Y`` 、 ``Z`` "
"和 ``W`` 是四元数的坐标。"

msgid "Translation status"
msgstr "翻译状态"
