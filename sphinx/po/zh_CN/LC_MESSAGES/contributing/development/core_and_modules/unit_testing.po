# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Unit testing"
msgstr "单元测试"

msgid ""
"Godot Engine allows to write unit tests directly in C++. The engine "
"integrates the `doctest <https://github.com/onqtam/doctest>`_ unit testing "
"framework which gives ability to write test suites and test cases next to "
"production code, but since the tests in Godot go through a different "
"``main`` entry point, the tests reside in a dedicated ``tests/`` directory "
"instead, which is located at the root of the engine source code."
msgstr ""

msgid "Platform and target support"
msgstr "平台及目标支持"

msgid ""
"C++ unit tests can be run on Linux, macOS, and Windows operating systems."
msgstr ""

msgid ""
"Tests can only be run with editor ``tools`` enabled, which means that export "
"templates cannot be tested currently."
msgstr ""

msgid "Running tests"
msgstr "运行测试"

msgid ""
"Before tests can be actually run, the engine must be compiled with the "
"``tests`` build option enabled (and any other build option you typically "
"use), as the tests are not compiled as part of the engine by default:"
msgstr ""

msgid ""
"Once the build is done, run the tests with a ``--test`` command-line option:"
msgstr ""

msgid ""
"The test run can be configured with the various doctest-specific command-"
"line options. To retrieve the full list of supported options, run the ``--"
"test`` command with the ``--help`` option:"
msgstr ""

msgid ""
"Any other options and arguments after the ``--test`` command are treated as "
"arguments for doctest."
msgstr ""

msgid ""
"Tests are compiled automatically if you use the ``dev_mode=yes`` SCons "
"option. ``dev_mode=yes`` is recommended if you plan on contributing to the "
"engine development as it will automatically treat compilation warnings as "
"errors. The continuous integration system will fail if any compilation "
"warnings are detected, so you should strive to fix all warnings before "
"opening a pull request."
msgstr ""

msgid "Filtering tests"
msgstr "筛选测试"

msgid ""
"By default, all tests are run if you don't supply any extra arguments after "
"the ``--test`` command. But if you're writing new tests or would like to see "
"the successful assertions output coming from those tests for debugging "
"purposes, you can run the tests of interest with the various filtering "
"options provided by doctest."
msgstr ""

msgid ""
"The wildcard syntax ``*`` is supported for matching any number of characters "
"in test suites, test cases, and source file names:"
msgstr ""

#, fuzzy
msgid "**Filter options**"
msgstr "**常规选项**"

msgid "**Shorthand**"
msgstr "**Shorthand**"

msgid "**Examples**"
msgstr "**Examples**"

msgid "``--test-suite``"
msgstr "``--test-suite``"

msgid "``-ts``"
msgstr "``-ts``"

msgid "``-ts=\"*[GDScript]*\"``"
msgstr "``-ts=\"*[GDScript]*\"``"

msgid "``--test-case``"
msgstr "``--test-case``"

msgid "``-tc``"
msgstr "``-tc``"

msgid "``-tc=\"*[String]*\"``"
msgstr "``-tc=\"*[String]*\"``"

msgid "``--source-file``"
msgstr "``--source-file``"

msgid "``-sf``"
msgstr "``-sf``"

msgid "``-sf=\"*test_color*\"``"
msgstr "``-sf=\"*test_color*\"``"

msgid "For instance, to run only the ``String`` unit tests, run:"
msgstr ""

msgid ""
"Successful assertions output can be enabled with the ``--success`` (``-s``) "
"option, and can be combined with any combination of filtering options above, "
"for instance:"
msgstr ""

msgid ""
"Specific tests can be skipped with corresponding ``-exclude`` options. As of "
"now, some tests include random stress tests which take a while to execute. "
"In order to skip those kind of tests, run the following command:"
msgstr ""

#, fuzzy
msgid "Writing tests"
msgstr "写作风格"

msgid ""
"Test suites represent C++ header files which must be included as part of the "
"main test entry point in ``tests/test_main.cpp``. Most test suites are "
"located directly under ``tests/`` directory."
msgstr ""

msgid ""
"All header files are prefixed with ``test_``, and this is a naming "
"convention which the Godot build system relies on to detect tests throughout "
"the engine."
msgstr ""

msgid "Here's a minimal working test suite with a single test case written:"
msgstr ""

msgid ""
"The ``tests/test_macros.h`` header encapsulates everything which is needed "
"for writing C++ unit tests in Godot. It includes doctest assertion and "
"logging macros such as ``CHECK`` as seen above, and of course the "
"definitions for writing test cases themselves."
msgstr ""

#, fuzzy
msgid ""
"`tests/test_macros.h <https://github.com/godotengine/godot/blob/master/tests/"
"test_macros.h>`_ source code for currently implemented macros and aliases "
"for them."
msgstr ""
"关于每个错误宏的更多信息，参见 Godot 代码库中的 `core/error_macros.h "
"<https://github.com/godotengine/godot/blob/3.x/core/error_macros.h>`__\\ 。"

msgid ""
"Test cases are created using ``TEST_CASE`` function-like macro. Each test "
"case must have a brief description written in parentheses, optionally "
"including custom tags which allow to filter the tests at run-time, such as "
"``[String]``, ``[Stress]`` etc."
msgstr ""

msgid ""
"Test cases are written in a dedicated namespace. This is not required, but "
"allows to prevent naming collisions for when other static helper functions "
"are written to accommodate the repeating testing procedures such as "
"populating common test data for each test, or writing parameterized tests."
msgstr ""

#, fuzzy
msgid ""
"Godot supports writing tests per C++ module. For instructions on how to "
"write module tests, refer to :ref:`doc_custom_module_unit_tests`."
msgstr ""
"有关如何创建模块图标的特定说明, 请参考 :ref:`创建自定义模块图标 "
"<doc_custom_module_icons>`."

msgid "Assertions"
msgstr "断言"

msgid ""
"A list of all commonly used assertions used throughout the Godot tests, "
"sorted by severity."
msgstr "Godot 测试中常用的断言列表，按严格程度排序。"

msgid "**Assertion**"
msgstr "**断言**"

msgid "**Description**"
msgstr "**描述**"

msgid "``REQUIRE``"
msgstr "``REQUIRE``"

msgid ""
"Test if condition holds true. Fails the entire test immediately if the "
"condition does not hold true."
msgstr "检查条件是否成立。如果条件不成立则会立即让整个测试失败。"

msgid "``REQUIRE_FALSE``"
msgstr "``REQUIRE_FALSE``"

msgid ""
"Test if condition does not hold true. Fails the entire test immediately if "
"the condition holds true."
msgstr "检查条件是否不成立。如果条件成立则会立即让整个测试失败。"

msgid "``CHECK``"
msgstr "``CHECK``"

msgid ""
"Test if condition holds true. Marks the test run as failing, but allow to "
"run other assertions."
msgstr "检查条件是否成立。会将测试表示为失败，但允许运行其他断言。"

msgid "``CHECK_FALSE``"
msgstr "``CHECK_FALSE``"

msgid ""
"Test if condition does not hold true. Marks the test run as failing, but "
"allow to run other assertions."
msgstr "检查条件是否不成立。会将测试表示为失败，但允许运行其他断言。"

msgid "``WARN``"
msgstr "``WARN``"

msgid ""
"Test if condition holds true. Does not fail the test under any circumstance, "
"but logs a warning if something does not hold true."
msgstr ""
"检查条件是否成立。任何情况下都不会让测试失败，但是不成立时会记录一条警告。"

msgid "``WARN_FALSE``"
msgstr "``WARN_FALSE``"

msgid ""
"Test if condition does not hold true. Does not fail the test under any "
"circumstance, but logs a warning if something holds true."
msgstr ""
"检查条件是否不成立。任何情况下都不会让测试失败，但是成立时会记录一条警告。"

msgid ""
"All of the above assertions have corresponding ``*_MESSAGE`` macros, which "
"allow to print optional message with rationale of what should happen."
msgstr ""
"以上断言都有对应的 ``*_MESSAGE`` 宏，能够在原有行为的基础上输出可选的消息。"

msgid ""
"Prefer to use ``CHECK`` for self-explanatory assertions and "
"``CHECK_MESSAGE`` for more complex ones if you think that it deserves a "
"better explanation."
msgstr ""
"对于能够自我说明的断言请尽量使用 ``CHECK``\\ ，如果你认为相对复杂的断言需要更"
"好的解释再使用 ``CHECK_MESSAGE``\\ 。"

msgid ""
"`doctest: Assertion macros <https://github.com/onqtam/doctest/blob/master/"
"doc/markdown/assertions.md>`_."
msgstr ""
"`doctest: 断言宏 <https://github.com/onqtam/doctest/blob/master/doc/markdown/"
"assertions.md>`_\\ 。"

msgid "Logging"
msgstr "日志"

msgid ""
"The test output is handled by doctest itself, and does not rely on Godot "
"printing or logging functionality at all, so it's recommended to use "
"dedicated macros which allow to log test output in a format written by "
"doctest."
msgstr ""

msgid "**Macro**"
msgstr "**Macro**"

msgid "``MESSAGE``"
msgstr "``MESSAGE``"

msgid "Prints a message."
msgstr ""

msgid "``FAIL_CHECK``"
msgstr "``FAIL_CHECK``"

msgid ""
"Marks the test as failing, but continue the execution. Can be wrapped in "
"conditionals for complex checks."
msgstr ""

msgid "``FAIL``"
msgstr "``FAIL``"

msgid ""
"Fails the test immediately. Can be wrapped in conditionals for complex "
"checks."
msgstr ""

msgid ""
"Different reporters can be chosen at run-time. For instance, here's how the "
"output can be redirected to a XML file:"
msgstr ""

msgid ""
"`doctest: Logging macros <https://github.com/onqtam/doctest/blob/master/doc/"
"markdown/logging.md>`_."
msgstr ""

#, fuzzy
msgid "Testing failure paths"
msgstr "测试翻译"

msgid ""
"Sometimes, it's not always feasible to test for an *expected* result. With "
"the Godot development philosophy of that the engine should not crash and "
"should gracefully recover whenever a non-fatal error occurs, it's important "
"to check that those failure paths are indeed safe to execute without "
"crashing the engine."
msgstr ""

msgid ""
"*Unexpected* behavior can be tested in the same way as anything else. The "
"only problem this creates is that the error printing shall unnecessarily "
"pollute the test output with errors coming from the engine itself (even if "
"the end result is successful)."
msgstr ""

msgid ""
"To alleviate this problem, use ``ERR_PRINT_OFF`` and ``ERR_PRINT_ON`` macros "
"directly within test cases to temporarily disable the error output coming "
"from the engine, for instance:"
msgstr ""

#, fuzzy
msgid "Test tools"
msgstr "2D 工具"

msgid ""
"Test tools are advanced methods which allow you to run arbitrary procedures "
"to facilitate the process of manual testing and debugging the engine "
"internals."
msgstr ""

msgid ""
"These tools can be run by supplying the name of a tool after the ``--test`` "
"command-line option. For instance, the GDScript module implements and "
"registers several tools to help the debugging of the tokenizer, parser, and "
"compiler:"
msgstr ""

msgid ""
"If any such tool is detected, then the rest of the unit tests are skipped."
msgstr ""

msgid ""
"Test tools can be registered anywhere throughout the engine as the "
"registering mechanism closely resembles of what doctest provides while "
"registering test cases using dynamic initialization technique, but usually "
"these can be registered at corresponding ``register_types.cpp`` sources (per "
"module or core)."
msgstr ""

msgid ""
"Here's an example of how GDScript registers test tools in ``modules/gdscript/"
"register_types.cpp``:"
msgstr ""

msgid ""
"The custom command-line parsing can be performed by a test tool itself with "
"the help of OS :ref:`get_cmdline_args<class_OS_method_get_cmdline_args>` "
"method."
msgstr ""

#, fuzzy
msgid "Integration tests for GDScript"
msgstr "在 GDScript 中实例化 C# 节点"

msgid ""
"Godot uses doctest to prevent regressions in GDScript during development. "
"There are several types of test scripts which can be written:"
msgstr ""

msgid "tests for expected errors;"
msgstr ""

msgid "tests for warnings;"
msgstr ""

msgid "tests for features."
msgstr "特性列表。"

msgid ""
"Therefore, the process of writing integration tests for GDScript is the "
"following:"
msgstr ""

msgid ""
"Pick a type of a test script you'd like to write, and create a new GDScript "
"file under the ``modules/gdscript/tests/scripts`` directory within "
"corresponding sub-directory."
msgstr ""

msgid ""
"Write GDScript code. The test script must have a function called ``test()`` "
"which takes no arguments. Such function will be called by the test runner. "
"The test should not have any dependency unless it's part of the test too. "
"Global classes (using ``class_name``) are registered before the runner "
"starts, so those should work if needed."
msgstr ""

#, fuzzy
msgid "Here's an example test script:"
msgstr "下面是一个如何在GDScript中做到这一点的例子:"

msgid "Change directory to the Godot source repository root."
msgstr "将目录切换到 Godot 源码仓库的根目录。"

msgid ""
"Generate ``*.out`` files to update the expected results from the output:"
msgstr ""

msgid ""
"You may add the ``--print-filenames`` option to see filenames as their test "
"outputs are generated. If you are working on a new feature that is causing "
"hard crashes, you can use this option to quickly find which test file causes "
"the crash and debug from there."
msgstr ""

msgid "Run GDScript tests with:"
msgstr "GDScript 导出："

msgid "This also accepts the ``--print-filenames`` option (see above)."
msgstr ""

msgid "If no errors are printed and everything goes well, you're done!"
msgstr ""

msgid ""
"Make sure the output does have the expected values before submitting a pull "
"request. If ``--gdscript-generate-tests`` produces ``*.out`` files which are "
"unrelated to newly added tests, you should revert those files back and only "
"commit ``*.out`` files for new tests."
msgstr ""

msgid ""
"The GDScript test runner is meant for testing the GDScript implementation, "
"not for testing user scripts nor testing the engine using scripts. We "
"recommend writing new tests for already resolved `issues related to GDScript "
"at GitHub <https://github.com/godotengine/godot/issues?"
"q=is%3Aissue+label%3Atopic%3Agdscript+is%3Aclosed>`_, or writing tests for "
"currently working features."
msgstr ""

msgid ""
"If your test case requires that there is no ``test()`` function present "
"inside the script file, you can disable the runtime section of the test by "
"naming the script file so that it matches the pattern ``*.notest.gd``. For "
"example, \"test_empty_file.notest.gd\"."
msgstr ""

msgid "Translation status"
msgstr "翻译状态"
