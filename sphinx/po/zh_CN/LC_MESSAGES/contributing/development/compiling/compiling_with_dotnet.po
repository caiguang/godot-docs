# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling with .NET"
msgstr "使用 .NET 编译"

msgid "Requirements"
msgstr "需求"

msgid "`.NET SDK 6.0+ <https://dotnet.microsoft.com/download>`_"
msgstr "`.NET SDK 6.0+ <https://dotnet.microsoft.com/download>`_"

msgid ""
"You can use ``dotnet --info`` to check which .NET SDK versions are installed."
msgstr ""

msgid "Enable the .NET module"
msgstr "启用 .NET 模块"

msgid ""
"C# support for Godot has historically used the `Mono <https://www.mono-"
"project.com/>`_ runtime instead of the `.NET Runtime <https://github.com/"
"dotnet/runtime>`_ and internally many things are still named ``mono`` "
"instead of ``dotnet`` or otherwise referred to as ``mono``."
msgstr ""

#, fuzzy
msgid ""
"By default, the .NET module is disabled when building. To enable it, add the "
"option ``module_mono_enabled=yes`` to the SCons command line, while "
"otherwise following the instructions for building the desired Godot binaries."
msgstr ""
"默认情况下, 构建时禁用Mono模块. 要启用它, 请将选项 "
"``module_mono_enabled=yes`` 添加到SCons命令行."

msgid "Generate the glue"
msgstr "生成胶水代码"

#, fuzzy
msgid ""
"Parts of the sources of the managed libraries are generated from the "
"ClassDB. These source files must be generated before building the managed "
"libraries. They can be generated by any .NET-enabled Godot editor binary by "
"running it with the parameters ``--headless --generate-mono-glue`` followed "
"by the path to an output directory. This path must be ``modules/mono/glue`` "
"in the Godot directory::"
msgstr ""
"构建完成后，您需要运行带有参数 ``--generate-mono-glue`` 的编译后的可执行文"
"件，后跟输出目录的路径。在 Godot 目录中，此路径必须是 ``modules/mono/"
"glue``\\ ： ::"

#, fuzzy
msgid ""
"This command will tell Godot to generate the C# bindings for the Godot API "
"at ``modules/mono/glue/GodotSharp/GodotSharp/Generated``, and the C# "
"bindings for the editor tools at ``modules/mono/glue/GodotSharp/"
"GodotSharpEditor/Generated``. Once these files are generated, you can build "
"Godot's managed libraries for all the desired targets without having to "
"repeat this process."
msgstr ""
"这个命令会让 Godot 生成 ``modules/mono/glue/mono_glue.gen.cpp`` 文件、在 "
"``modules/mono/glue/GodotSharp/GodotSharp/Generated`` 生成 Godot API 的 C# 解"
"决方案、并在 ``modules/mono/glue/GodotSharp/GodotSharpEditor/Generated`` 生成"
"编辑器工具的 C# 解决方案。这些文件生成后，为任何所需的目标构建 Godot 都是无需"
"重复这一过程的。"

#, fuzzy
msgid ""
"``<godot_binary>`` refers to the editor binary you compiled with the .NET "
"module enabled. Its exact name will differ based on your system and "
"configuration, but should be of the form ``bin/godot.<platform>.editor."
"<arch>.mono``, e.g. ``bin/godot.linuxbsd.editor.x86_64.mono`` or ``bin/godot."
"windows.editor.x86_32.mono.exe``. Be especially aware of the **.mono** "
"suffix! If you've previously compiled Godot without .NET support, you might "
"have similarly named binaries without this suffix. These binaries can't be "
"used to generate the .NET glue."
msgstr ""
"``<godot_binary>`` 是指你在上面编译时启用Mono模块的工具可执行文件. 它的确切名"
"称将根据你的系统和配置而不同, 但应该是 ``bin/godot.<platform>.tools.<bits>."
"mono`` 的形式, 例如 ``bin/godot.x11.tools.64.mono`` 或 ``bin/godot.windows."
"tools.64.mono.exe`` . 要特别注意 **.mono** 的后缀!如果你以前编译的Godot不支持"
"Mono, 你可能会有类似的没有这个后缀的二进制. 这些二进制文件不能用来生成Mono胶"
"水."

msgid ""
"The glue sources must be regenerated every time the ClassDB-registered API "
"changes. That is, for example, when a new method is registered to the "
"scripting API or one of the parameters of such a method changes. Godot will "
"print an error at startup if there is an API mismatch between ClassDB and "
"the glue sources."
msgstr ""
"每次ClassDB注册的API更改时, 都必须重新生成胶水源码. 即, 例如, 当将新方法注册"
"到脚本API时, 或该方法的参数之一发生更改时. 如果ClassDB和胶水源码之间的API不匹"
"配,Godot将在启动时打印一条错误."

msgid "Building the managed libraries"
msgstr "构建托管库"

msgid ""
"Once you have generated the .NET glue, you can build the managed libraries "
"with the ``build_assemblies.py`` script::"
msgstr ""

msgid ""
"If everything went well, the ``GodotSharp`` directory, containing the "
"managed libraries, should have been created in the ``bin`` directory."
msgstr ""
"如果一切正常, 除了正常的输出,SCons应该在 ``bin`` 目录中创建了以下文件。"

msgid ""
"By default, all development builds share a version number, which can cause "
"some issues with caching of the NuGet packages. To solve this issue either "
"use ``GODOT_VERSION_STATUS`` to give every build a unique version or delete "
"``GodotNuGetFallbackFolder`` after every build to clear the package cache."
msgstr ""

#, fuzzy
msgid ""
"Unlike \"classical\" Godot builds, when building with the .NET module "
"enabled (and depending on the target platform), a data directory may be "
"created both for the editor and for exported projects. This directory is "
"important for proper functioning and must be distributed together with "
"Godot. More details about this directory in :ref:`Data "
"directory<compiling_with_dotnet_data_directory>`."
msgstr ""
"与 \"经典\"Godot构建不同, 在启用Mono模块(取决于目标平台)的情况下构建时, 将为"
"编辑器和导出模板两者一块创建数据目录. 该目录对于正常运行很重要, 必须与Godot一"
"起分发. 有关此目录的更多详细信息, 参见 :ref:`Data directory "
"<compiling_with_mono_data_directory>` ."

#, fuzzy
msgid "Build Platform"
msgstr "平台"

msgid ""
"Provide the ``--godot-platform=<platform>`` argument to control for which "
"platform specific the libraries are built. Omit this argument to build for "
"the current system."
msgstr ""

msgid ""
"This currently only controls the inclusion of the support for Visual Studio "
"as an external editor, the libraries are otherwise identical."
msgstr ""

#, fuzzy
msgid "NuGet packages"
msgstr "在Godot中使用NuGet包"

msgid ""
"The API assemblies, source generators, and custom MSBuild project SDK are "
"distributed as NuGet packages. This is all transparent to the user, but it "
"can make things complicated during development."
msgstr ""

msgid ""
"In order to use Godot with a development version of those packages, a local "
"NuGet source must be created where MSBuild can find them."
msgstr ""

msgid ""
"First, pick a location for the local NuGet source. If you don't have a "
"preference, create an empty directory at one of these recommended locations:"
msgstr ""

msgid "On Windows, ``C:\\Users\\<username>\\MyLocalNugetSource``"
msgstr ""

msgid "On Linux, \\*BSD, etc., ``~/MyLocalNugetSource``"
msgstr ""

msgid "This path is referred to later as ``<my_local_source>``."
msgstr ""

msgid ""
"After picking a directory, run this .NET CLI command to configure NuGet to "
"use your local source:"
msgstr ""

msgid ""
"When you run the ``build_assemblies.py`` script, pass ``<my_local_source>`` "
"to the ``--push-nupkgs-local`` option:"
msgstr ""

msgid ""
"This option ensures the packages will be added to the specified local NuGet "
"source and that conflicting versions of the package are removed from the "
"NuGet cache. It's recommended to always use this option when building the C# "
"solutions during development to avoid mistakes."
msgstr ""

msgid "Double Precision Support (REAL_T_IS_DOUBLE)"
msgstr ""

msgid ""
"When building Godot with double precision support, i.e. the "
"``precision=double`` argument for scons, the managed libraries must be "
"adjusted to match by passing the ``--precision=double`` argument:"
msgstr ""

msgid "Examples"
msgstr "示例"

msgid "Example (Windows)"
msgstr "示例（Windows）"

msgid "Example (Linux, \\*BSD)"
msgstr "示例 (Linux, \\*BSD)"

msgid "Data directory"
msgstr "数据目录"

#, fuzzy
msgid ""
"The data directory is a dependency for Godot binaries built with the .NET "
"module enabled. It contains important files for the correct functioning of "
"Godot. It must be distributed together with the Godot executable."
msgstr ""
"数据目录是启用了Mono模块的Godot二进制文件的依赖项. 它包含对Godot正确运行的重"
"要文件. 它必须与Godot可执行文件一起分发."

msgid "Editor"
msgstr "编辑器"

msgid ""
"The name of the data directory for the Godot editor will always be "
"``GodotSharp``. This directory contains an ``Api`` subdirectory with the "
"Godot API assemblies and a ``Tools`` subdirectory with the tools required by "
"the editor, like the ``GodotTools`` assemblies and its dependencies."
msgstr ""

msgid ""
"On macOS, if the Godot editor is distributed as a bundle, the ``GodotSharp`` "
"directory may be placed in the ``<bundle_name>.app/Contents/Resources/`` "
"directory inside the bundle."
msgstr ""

msgid "Export templates"
msgstr "导出模板"

#, fuzzy
msgid ""
"The data directory for exported projects is generated by the editor during "
"the export. It is named ``data_<APPNAME>_<ARCH>``, where ``<APPNAME>`` is "
"the application name as specified in the project setting ``application/"
"config/name`` and ``<ARCH>`` is the current architecture of the export."
msgstr ""
"必须以其原始名称将该目录放置在Godot导出模板旁边. 导出项目时,Godot还会将此目录"
"与游戏可执行文件一起复制, 但名称将更改为 ``data_<APPNAME>`` , 其中 "
"``<APPNAME>`` 是项目设置 ``application/config/name`` 中指定的应用程序名称."

msgid ""
"In the case of multi-architecture exports multiple such data directories "
"will be generated."
msgstr ""

msgid "Command-line options"
msgstr "命令行选项"

#, fuzzy
msgid ""
"The following is the list of command-line options available when building "
"with the .NET module:"
msgstr "以下是使用Mono模块进行构建时可用的命令行选项的列表:"

msgid "**module_mono_enabled**\\ =yes | **no**"
msgstr "**module_mono_enabled** \\ =yes | **no**"

#, fuzzy
msgid "Build Godot with the .NET module enabled."
msgstr "在启用Mono模块的情况下构建Godot."

msgid "Translation status"
msgstr "翻译状态"
