# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Version control systems"
msgstr "Systémy pro správu verzí"

msgid "Introduction"
msgstr "Úvod"

msgid ""
"Godot aims to be VCS-friendly and generate mostly readable and mergeable "
"files."
msgstr ""

#, fuzzy
msgid "Version control plugins"
msgstr "Systémy pro správu verzí"

#, fuzzy
msgid ""
"Godot also supports the use of version control systems in the editor itself. "
"However, version control in the editor requires a plugin for the specific "
"VCS you're using."
msgstr ""
"Godot se snaží být přívětivý k VCS a generovat většinou čitelné a slučitelné "
"soubory. Godot také podporuje používání systémů pro správu verzí v samotném "
"editoru. VCS v editoru však vyžaduje zásuvný modul pro konkrétní VCS, který "
"používáte. VCS lze nastavit nebo vypnout v editoru : **Projekt > Řízení "
"verzí**."

msgid ""
"As of July 2023, there is only a Git plugin available, but the community may "
"create additional VCS plugins."
msgstr ""

msgid "Official Git plugin"
msgstr "Oficiální zásuvný modul Git"

#, fuzzy
msgid ""
"Using Git from inside the editor is supported with an official plugin. You "
"can find the latest releases on `GitHub <https://github.com/godotengine/"
"godot-git-plugin/releases>`__."
msgstr ""
"Používání systému Git v editoru je podporováno oficiálním zásuvným modulem. "
"Nejnovější verze najdete `zde <https://github.com/godotengine/godot-git-"
"plugin/releases>`__ . Dokumentaci k používání zásuvného modulu Git naleznete "
"`zde <https://github.com/godotengine/godot-git-plugin/wiki>`__."

msgid ""
"Documentation on how to use the Git plugin can be found on its `wiki "
"<https://github.com/godotengine/godot-git-plugin/wiki>`__."
msgstr ""
"Dokumentaci jaj používat Git plugin můžete nalézt na hejich `wiki <https://"
"github.com/godotengine/godot-git-plugin/wiki>`__."

msgid "Files to exclude from VCS"
msgstr "Soubory k vyloučení z VCS"

msgid ""
"This lists files and folders that should be ignored from version control in "
"Godot 4.1 and later."
msgstr ""

msgid ""
"The list of files of folders that should be ignored from version control in "
"Godot 3.x and Godot 4.0 is **entirely** different. This is important, as "
"Godot 3.x and 4.0 may store sensitive credentials in ``export_presets.cfg`` "
"(unlike Godot 4.1 and later)."
msgstr ""

msgid ""
"If you are using Godot 3, check the ``3.5`` version of this documentation "
"page instead."
msgstr ""

msgid ""
"There are some files and folders Godot automatically creates when opening a "
"project in the editor for the first time. To avoid bloating your version "
"control repository with generated data, you should add them to your VCS "
"ignore:"
msgstr ""

msgid "``.godot/``: This folder stores various project cache data."
msgstr ""

#, fuzzy
msgid ""
"``*.translation``: These files are binary imported :ref:`translations "
"<doc_internationalizing_games>` generated from CSV files."
msgstr ""
"``*.translation``: Tyto soubory jsou binární importované překlady "
"vygenerované ze souborů CSV."

msgid ""
"You can make the Godot project manager generate version control metadata for "
"you automatically when creating a project. When choosing the **Git** option, "
"this creates ``.gitignore`` and ``.gitattributes`` files in the project root:"
msgstr ""

msgid ""
"Creating version control metadata in the project manager's New Project dialog"
msgstr ""

msgid ""
"Creating version control metadata in the project manager's **New Project** "
"dialog"
msgstr ""

msgid ""
"In existing projects, select the **Project** menu at the top of the editor, "
"then choose **Version Control > Generate Version Control Metadata**. This "
"creates the same files as if the operation was performed in the project "
"manager."
msgstr ""

msgid "Working with Git on Windows"
msgstr "Práce se systémem Git v systému Windows"

msgid ""
"Most Git for Windows clients are configured with the ``core.autocrlf`` set "
"to ``true``. This can lead to files unnecessarily being marked as modified "
"by Git due to their line endings being converted from LF to CRLF "
"automatically."
msgstr ""
"Většina klientů systému Git pro Windows je nakonfigurována s parametrem "
"``core.autocrlf`` nastaveným na ``true``. To může vést k tomu, že soubory "
"budou v systému Git zbytečně označeny jako změněné, protože jejich konce "
"řádků budou automaticky převedeny. Je lepší nastavit tuto volbu jako."

msgid "It is better to set this option as:"
msgstr ""

msgid ""
"Creating version control metadata using the project manager or editor will "
"automatically enforce LF line endings using the ``.gitattributes`` file. In "
"this case, you don't need to change your Git configuration."
msgstr ""

msgid "Translation status"
msgstr "Stav překladu"
