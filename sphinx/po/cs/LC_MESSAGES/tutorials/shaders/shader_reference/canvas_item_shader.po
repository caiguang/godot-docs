# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "CanvasItem shaders"
msgstr ""

msgid ""
"CanvasItem shaders are used to draw all 2D elements in Godot. These include "
"all nodes that inherit from CanvasItems, and all GUI elements."
msgstr ""

msgid ""
"CanvasItem shaders contain less built-in variables and functionality than "
"Spatial shaders, but they maintain the same basic structure with vertex, "
"fragment, and light processor functions."
msgstr ""

msgid "Render modes"
msgstr ""

msgid "Render mode"
msgstr ""

msgid "Description"
msgstr "Popis"

msgid "**blend_mix**"
msgstr ""

msgid "Mix blend mode (alpha is transparency), default."
msgstr ""

msgid "**blend_add**"
msgstr ""

msgid "Additive blend mode."
msgstr ""

msgid "**blend_sub**"
msgstr ""

msgid "Subtractive blend mode."
msgstr ""

msgid "**blend_mul**"
msgstr ""

msgid "Multiplicative blend mode."
msgstr ""

msgid "**blend_premul_alpha**"
msgstr ""

msgid "Pre-multiplied alpha blend mode."
msgstr ""

msgid "**blend_disabled**"
msgstr ""

msgid "Disable blending, values (including alpha) are written as-is."
msgstr ""

msgid "**unshaded**"
msgstr ""

msgid "Result is just albedo. No lighting/shading happens in material."
msgstr ""

msgid "**light_only**"
msgstr ""

msgid "Only draw on light pass."
msgstr ""

msgid "**skip_vertex_transform**"
msgstr ""

msgid "VERTEX needs to be transformed manually in vertex function."
msgstr ""

msgid "**world_vertex_coords**"
msgstr ""

msgid "VERTEX is modified in world coordinates instead of local."
msgstr ""

msgid "Built-ins"
msgstr "Vestavěné"

msgid ""
"Values marked as \"in\" are read-only. Values marked as \"out\" are for "
"optional writing and will not necessarily contain sensible values. Values "
"marked as \"inout\" provide a sensible default value, and can optionally be "
"written to. Samplers are not subjects of writing and they are not marked."
msgstr ""

msgid "Global built-ins"
msgstr "Globální vestavěné"

msgid "Global built-ins are available everywhere, including custom functions."
msgstr ""

msgid "Built-in"
msgstr "Vestavěný"

msgid "in float **TIME**"
msgstr ""

msgid ""
"Global time since the engine has started, in seconds (always positive). It's "
"subject to the rollover setting (which is 3,600 seconds by default). It's "
"not affected by :ref:`time_scale<class_Engine_property_time_scale>` or "
"pausing, but you can define a global shader uniform to add a \"scaled\" "
"``TIME`` variable if desired."
msgstr ""

msgid "in float **PI**"
msgstr ""

msgid ""
"A ``PI`` constant (``3.141592``). A ration of circle's circumference to its "
"diameter and amount of radians in half turn."
msgstr ""

msgid "in float **TAU**"
msgstr ""

msgid ""
"A ``TAU`` constant (``6.283185``). An equivalent of ``PI * 2`` and amount of "
"radians in full turn."
msgstr ""

msgid "in float **E**"
msgstr ""

msgid ""
"A ``E`` constant (``2.718281``). Euler's number and a base of the natural "
"logarithm."
msgstr ""

msgid "Vertex built-ins"
msgstr ""

msgid ""
"Vertex data (``VERTEX``) is presented in local space (pixel coordinates, "
"relative to the Node2D's origin). If not written to, these values will not "
"be modified and be passed through as they came."
msgstr ""

msgid ""
"The user can disable the built-in model to world transform (world to screen "
"and projection will still happen later) and do it manually with the "
"following code:"
msgstr ""

msgid ""
"Other built-ins, such as UV and COLOR, are also passed through to the "
"fragment function if not modified."
msgstr ""

msgid ""
"For instancing, the INSTANCE_CUSTOM variable contains the instance custom "
"data. When using particles, this information is usually:"
msgstr ""

msgid "**x**: Rotation angle in radians."
msgstr ""

msgid "**y**: Phase during lifetime (0 to 1)."
msgstr ""

msgid "**z**: Animation frame."
msgstr ""

msgid "in mat4 **MODEL_MATRIX**"
msgstr ""

msgid ""
"Local space to world space transform. World space is the coordinates you "
"normally use in the editor."
msgstr ""

msgid "in mat4 **CANVAS_MATRIX**"
msgstr ""

msgid ""
"World space to canvas space transform. In canvas space the origin is the "
"upper-left corner of the screen and coordinates ranging from (0, 0) to "
"viewport size."
msgstr ""

msgid "in mat4 **SCREEN_MATRIX**"
msgstr ""

msgid ""
"Canvas space to clip space. In clip space coordinates ranging from (-1, -1) "
"to (1, 1)."
msgstr ""

msgid "in int  **INSTANCE_ID**"
msgstr ""

msgid "Instance ID for instancing."
msgstr ""

msgid "in vec4 **INSTANCE_CUSTOM**"
msgstr ""

msgid "Instance custom data."
msgstr ""

msgid "in bool **AT_LIGHT_PASS**"
msgstr ""

#, fuzzy
msgid "Always ``false``."
msgstr "``false``"

msgid "in vec2 **TEXTURE_PIXEL_SIZE**"
msgstr ""

msgid ""
"Normalized pixel size of default 2D texture. For a Sprite2D with a texture "
"of size 64x32px, **TEXTURE_PIXEL_SIZE** = ``vec2(1/64, 1/32)``"
msgstr ""

msgid "inout vec2 **VERTEX**"
msgstr ""

#, fuzzy
msgid "Vertex, in local space."
msgstr "Svislý znak tabulátoru"

msgid "in int **VERTEX_ID**"
msgstr ""

msgid "The index of the current vertex in the vertex buffer."
msgstr ""

msgid "inout vec2 **UV**"
msgstr ""

msgid "Normalized texture coordinates. Range from 0 to 1."
msgstr ""

msgid "inout vec4 **COLOR**"
msgstr ""

msgid "Color from vertex primitive."
msgstr ""

msgid "inout float **POINT_SIZE**"
msgstr ""

msgid "Point size for point drawing."
msgstr ""

msgid "Fragment built-ins"
msgstr ""

msgid ""
"Certain Nodes (for example, :ref:`Sprite2Ds <class_Sprite2D>`) display a "
"texture by default. However, when a custom fragment function is attached to "
"these nodes, the texture lookup needs to be done manually. Godot provides "
"the texture color in the ``COLOR`` built-in variable multiplied by the "
"node's color. To read the texture color by itself, you can use:"
msgstr ""

msgid ""
"Similarly, if a normal map is used in the :ref:`CanvasTexture "
"<class_CanvasTexture>`, Godot uses it by default and assigns its value to "
"the built-in ``NORMAL`` variable. If you are using a normal map meant for "
"use in 3D, it will appear inverted. In order to use it in your shader, you "
"must assign it to the ``NORMALMAP`` property. Godot will handle converting "
"it for use in 2D and overwriting ``NORMAL``."
msgstr ""

msgid "in vec4 **FRAGCOORD**"
msgstr ""

msgid ""
"Coordinate of pixel center. In screen space. ``xy`` specifies position in "
"window. Origin is lower-left."
msgstr ""

msgid "in vec2 **SCREEN_PIXEL_SIZE**"
msgstr ""

msgid "Size of individual pixels. Equal to inverse of resolution."
msgstr ""

msgid "in vec2 **POINT_COORD**"
msgstr ""

msgid "Coordinate for drawing points."
msgstr ""

msgid "sampler2D **TEXTURE**"
msgstr ""

msgid "Default 2D texture."
msgstr ""

msgid "sampler2D **SPECULAR_SHININESS_TEXTURE**"
msgstr ""

msgid "Specular shininess texture of this object."
msgstr ""

msgid "in vec4 **SPECULAR_SHININESS**"
msgstr ""

msgid "Specular shininess color, as sampled from the texture."
msgstr ""

msgid "in vec2 **UV**"
msgstr ""

msgid "UV from vertex function."
msgstr ""

msgid "in vec2 **SCREEN_UV**"
msgstr ""

msgid "Screen UV coordinate for current pixel."
msgstr ""

msgid "sampler2D **SCREEN_TEXTURE**"
msgstr ""

msgid ""
"Removed in Godot 4. Use a ``sampler2D`` with ``hint_screen_texture`` instead."
msgstr ""

msgid "inout vec3 **NORMAL**"
msgstr ""

msgid "Normal read from **NORMAL_TEXTURE**. Writable."
msgstr ""

msgid "sampler2D **NORMAL_TEXTURE**"
msgstr ""

msgid "Default 2D normal texture."
msgstr ""

msgid "out vec3 **NORMAL_MAP**"
msgstr ""

msgid ""
"Configures normal maps meant for 3D for use in 2D. If used, overrides "
"**NORMAL**."
msgstr ""

msgid "out float **NORMAL_MAP_DEPTH**"
msgstr ""

msgid "Normalmap depth for scaling."
msgstr ""

msgid "Pixel position in screen space."
msgstr ""

msgid "inout vec2 **SHADOW_VERTEX**"
msgstr ""

msgid "Same as ``VERTEX`` but can be written to alter shadows."
msgstr ""

msgid "inout vec3 **LIGHT_VERTEX**"
msgstr ""

msgid ""
"Same as ``VERTEX`` but can be written to alter lighting. Z component "
"represents height."
msgstr ""

msgid ""
"Color from vertex function multiplied by the **TEXTURE** color. Also output "
"color value."
msgstr ""

msgid "Light built-ins"
msgstr "Vestavěné světlé"

msgid ""
"Light processor functions work differently in Godot 4.x than they did in "
"Godot 3.x. In Godot 4.x all lighting is done during the regular draw pass. "
"In other words, Godot no longer draws the object again for each light."
msgstr ""

msgid ""
"Use render_mode ``unshaded`` if you do not want the light processor function "
"to run. Use render_mode ``light_only`` if you only want to see the impact of "
"lighting on an object; this can be useful when you only want the object "
"visible where it is covered by light."
msgstr ""

msgid ""
"If you define a light function it will replace the built in light function, "
"even if your light function is empty."
msgstr ""

msgid ""
"Below is an example of a light shader that takes a CanvasItem's normal map "
"into account:"
msgstr ""

msgid "in vec3 **NORMAL**"
msgstr ""

#, fuzzy
msgid "Input Normal."
msgstr "Vstup"

msgid "in vec4 **COLOR**"
msgstr ""

msgid "Input Color. This is the output of the fragment function."
msgstr ""

msgid "UV from vertex function, equivalent to the UV in the fragment function."
msgstr ""

msgid "Current texture in use for CanvasItem."
msgstr ""

msgid ""
"Normalized pixel size of **TEXTURE**. For a Sprite2D with a **TEXTURE** of "
"size 64x32px, **TEXTURE_PIXEL_SIZE** = ``vec2(1/64, 1/32)``"
msgstr ""

msgid "UV for Point Sprite."
msgstr ""

msgid "in vec4 **LIGHT_COLOR**"
msgstr ""

msgid "Color of Light multiplied by Light's texture."
msgstr ""

msgid "in float **LIGHT_ENERGY**"
msgstr ""

msgid "Energy multiplier of Light."
msgstr ""

msgid "in vec3 **LIGHT_POSITION**"
msgstr ""

msgid ""
"Position of Light in screen space. If using a ``DirectionalLight2D`` this is "
"always ``vec3(0,0,0)``."
msgstr ""

msgid "in vec3 **LIGHT_DIRECTION**"
msgstr ""

msgid "Direction of Light in screen space."
msgstr ""

msgid "in bool **LIGHT_IS_DIRECTIONAL**"
msgstr ""

msgid "``true`` if this pass is a ``DirectionalLight2D``."
msgstr ""

msgid "in vec3 **LIGHT_VERTEX**"
msgstr ""

msgid "Pixel position, in screen space as modified in the fragment function."
msgstr ""

msgid "inout vec4 **LIGHT**"
msgstr ""

msgid "Output color for this Light."
msgstr ""

msgid "Specular shininess, as set in the object's texture."
msgstr ""

msgid "out vec4 **SHADOW_MODULATE**"
msgstr ""

msgid "Multiply shadows cast at this point by this color."
msgstr ""

#, fuzzy
msgid "SDF functions"
msgstr "Funkce"

msgid ""
"There are a few additional functions implemented to sample an automatically "
"generated Signed Distance Field texture. These functions available for "
"Fragment and Light functions of CanvasItem shaders."
msgstr ""

msgid ""
"The signed distance field is generated from :ref:`class_LightOccluder2D` "
"nodes present in the scene with the **SDF Collision** property enabled "
"(which is the default). See the :ref:`2D lights and shadows "
"<doc_2d_lights_and_shadows_setting_up_shadows>` documentation for more "
"information."
msgstr ""

msgid "Function"
msgstr ""

msgid "float **texture_sdf** (vec2 sdf_pos)"
msgstr ""

msgid "Performs an SDF texture lookup."
msgstr ""

msgid "vec2 **texture_sdf_normal** (vec2 sdf_pos)"
msgstr ""

msgid "Calculates a normal from the SDF texture."
msgstr ""

msgid "vec2 **sdf_to_screen_uv** (vec2 sdf_pos)"
msgstr ""

msgid "Converts a SDF to screen UV."
msgstr ""

msgid "vec2 **screen_uv_to_sdf** (vec2 uv)"
msgstr ""

#, fuzzy
msgid "Converts screen UV to a SDF."
msgstr "Převést odsazení na taby"

msgid "Translation status"
msgstr "Stav překladu"
