# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# basics"
msgstr "Základy C#"

msgid "Introduction"
msgstr "Úvod"

#, fuzzy
msgid ""
"This page provides a brief introduction to C#, both what it is and how to "
"use it in Godot. Afterwards, you may want to look at :ref:`how to use "
"specific features <doc_c_sharp_features>`, read about the :ref:`differences "
"between the C# and the GDScript API <doc_c_sharp_differences>`, and "
"(re)visit the :ref:`Scripting section <doc_scripting>` of the step-by-step "
"tutorial."
msgstr ""
"Na této stránce najdete stručný úvod do jazyka C#, a to jak do jeho "
"podstaty, tak do jeho použití v Godotu. Poté se můžete podívat na :ref:`jak "
"používat konkrétní funkce <doc_c_sharp_features>`, přečíst si o :ref:"
"`rozdílech mezi rozhraním API jazyka C# a GDScript "
"<doc_c_sharp_differences>` a (znovu)navštívit :ref:`sekci Skriptování "
"<doc_scripting>` v tutoriálu Krok za krokem."

msgid ""
"C# is a high-level programming language developed by Microsoft. In Godot, it "
"is implemented with .NET 6.0."
msgstr ""

msgid ""
"Projects written in C# using Godot 4 currently cannot be exported to the web "
"platform. To use C# on the web platform, consider Godot 3 instead. Android "
"and iOS platform support is available as of Godot 4.2, but is experimental "
"and :ref:`some limitations apply <doc_c_sharp_platforms>`."
msgstr ""

msgid ""
"This is **not** a full-scale tutorial on the C# language as a whole. If you "
"aren't already familiar with its syntax or features, see the `Microsoft C# "
"guide <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ or look for a "
"suitable introduction elsewhere."
msgstr ""
"Toto je **není** plnohodnotný tutorial celého jazyka C# . Pokud ještě nejste "
"obeznámeni s jeho syntaxí nebo funkcemi, podívejte se do `Průvodce Microsoft "
"C# <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ nebo se "
"poohlédněte po jiném vhodném úvodním materiálu."

msgid "Prerequisites"
msgstr ""

#, fuzzy
msgid ""
"Godot bundles the parts of .NET needed to run already compiled games. "
"However, Godot does not bundle the tools required to build and compile "
"games, such as MSBuild and the C# compiler. These are included in the .NET "
"SDK, and need to be installed separately."
msgstr ""
"Godot obsahuje části Mono potřebné ke spuštění již zkompilovaných her, "
"neobsahuje však nástroje potřebné k samotnému sestavení a kompilaci her, "
"jako je například MSBuild. Tyto nástroje je třeba nainstalovat samostatně. "
"Potřebné knihovny jsou součástí sady .NET Core SDK. MSBuild je také obsažen "
"v Mono SDK, ale neumí sestavovat projekty jazyka C# v novém formátu "
"``csproj``, proto je pro Godot 3.2.3+ vyžadováno .NET Core SDK."

#, fuzzy
msgid ""
"In summary, you must have installed the .NET SDK **and** the .NET-enabled "
"version of Godot."
msgstr ""
"Stručně řečeno, musíte mít nainstalovanou sadu .NET Core SDK **a** verzi "
"Godot s podporou Mono."

#, fuzzy
msgid ""
"Download and install the latest stable version of the SDK from the `.NET "
"download page <https://dotnet.microsoft.com/download>`__."
msgstr ""
"Nainstalujte nejnovější stabilní verzi `.NET Core SDK <https://dotnet."
"microsoft.com/download/dotnet-core>`__ (v době psaní článku 3.1)."

msgid ""
"Be sure to install the 64-bit version of the SDK(s) if you are using the 64-"
"bit version of Godot."
msgstr ""
"Pokud používáte 64bitovou verzi Godotu, nezapomeňte nainstalovat 64bitovou "
"verzi SDK."

#, fuzzy
msgid ""
"If you are building Godot from source, make sure to follow the steps to "
"enable .NET support in your build as outlined in the :ref:"
"`doc_compiling_with_dotnet` page."
msgstr ""
"Pokud sestavujete Godot ze zdrojových kódů, nainstalujte nejnovější stabilní "
"verzi `Mono <https://www.mono-project.com/download/stable/>`__ a ujistěte "
"se, že postupujete podle kroků pro zapnutí podpory Mono ve vašem sestavení, "
"jak je popsáno na stránce :ref:`doc_compiling_with_mono`."

msgid "Configuring an external editor"
msgstr "Konfigurace externího editoru"

#, fuzzy
msgid ""
"C# support in Godot's built-in script editor is minimal. Consider using an "
"external IDE or editor, such as  `Visual Studio Code <https://code."
"visualstudio.com/>`__ or MonoDevelop. These provide autocompletion, "
"debugging, and other useful features for C#. To select an external editor in "
"Godot, click on **Editor → Editor Settings** and scroll down to **Dotnet**. "
"Under **Dotnet**, click on **Editor**, and select your external editor of "
"choice. Godot currently supports the following external editors:"
msgstr ""
"Podpora jazyka C# v integrovaném editoru skriptů Godot' je minimální. Zvažte "
"použití externího IDE nebo editoru, například `Visual Studio Code <https://"
"code.visualstudio.com/>`__ nebo MonoDevelop. Ty poskytují automatické "
"dokončování, ladění a další užitečné funkce pro jazyk C#. Chcete-li v Godotu "
"vybrat externí editor, klikněte na **Editor → Nastavení editoru** a přejděte "
"dolů na **Mono**. V části **Mono** klikněte na **Editor** a vyberte zvolený "
"externí editor. Godot v současné době podporuje následující externí editory:"

#, fuzzy
msgid "Visual Studio 2022"
msgstr "Visual Studio 2019"

msgid "Visual Studio Code"
msgstr "Visual Studio Code"

msgid "MonoDevelop"
msgstr "MonoDevelop"

msgid "Visual Studio for Mac"
msgstr "Visual Studio pro Mac"

msgid "JetBrains Rider"
msgstr "JetBrains Rider"

msgid "See the following sections for how to configure an external editor:"
msgstr ""
"Postup konfigurace externího editoru naleznete v následujících částech:"

msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`JetBrains Rider <https://www.jetbrains.com/rider/download>`__."
msgstr ""
"Po přečtení části \"Předpoklady\" si můžete stáhnout a nainstalovat "
"`JetBrains Rider <https://www.jetbrains.com/rider/download>`__."

msgid "In Godot's **Editor → Editor Settings** menu:"
msgstr "V nabídce Godot **Editor → Nastavení editoru**:"

#, fuzzy
msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **JetBrains Rider**."
msgstr ""
"Nastavte **Mono** -> **Editor** -> **Externí editor** na **JetBrains Rider**."

msgid "In Rider:"
msgstr "V Rideru:"

msgid "Set **MSBuild version** to **.NET Core**."
msgstr "Nastavte **verzi MSBuild** na **.NET Core**."

msgid "Install the **Godot support** plugin."
msgstr "Nainstalujte zásuvný modul **Godot support**."

msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`Visual Studio Code <https://code.visualstudio.com/download>`__ (aka VS "
"Code)."
msgstr ""
"Po přečtení části \"Předpoklady\" si můžete stáhnout a nainstalovat `Visual "
"Studio Code <https://code.visualstudio.com/download>`__ (alias VS Code)."

#, fuzzy
msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **Visual Studio "
"Code**."
msgstr ""
"Nastavte **Mono** -> **Editor** -> **Externí editor** na **Visual Studio "
"Code**."

msgid "In Visual Studio Code:"
msgstr "V aplikaci Visual Studio Code:"

msgid ""
"Install the `C# <https://marketplace.visualstudio.com/items?itemName=ms-"
"dotnettools.csharp>`__ extension."
msgstr ""
"Nainstalujte rozšíření `C# <https://marketplace.visualstudio.com/items?"
"itemName=ms-dotnettools.csharp>`__."

msgid ""
"If you are using Linux you need to install the `Mono SDK <https://www.mono-"
"project.com/download/stable/#download-lin>`__ for the C# tools plugin to "
"work."
msgstr ""
"Pokud používáte Linux, musíte si nainstalovat `Mono SDK <https://www.mono-"
"project.com/download/stable/#download-lin>`__, aby zásuvný modul nástrojů C# "
"fungoval."

msgid ""
"To configure a project for debugging, you need a ``tasks.json`` and ``launch."
"json`` file in the ``.vscode`` folder with the necessary configuration. An "
"example configuration can be found `here <https://github.com/godotengine/"
"godot-csharp-vscode/issues/43#issuecomment-1258321229>`__ . In the ``launch."
"json`` file, make sure the ``program`` parameter in the relevant "
"configuration points to your Godot executable, either by changing it to the "
"path of the executable or by defining a ``GODOT4`` environment variable that "
"points to the executable. Now, when you start the debugger in Visual Studio "
"Code, your Godot project will run."
msgstr ""

msgid "Visual Studio (Windows only)"
msgstr "Visual Studio (pouze pro Windows)"

msgid ""
"Download and install the latest version of `Visual Studio <https://"
"visualstudio.microsoft.com/downloads/>`__. Visual Studio will include the "
"required SDKs if you have the correct workloads selected, so you don't need "
"to manually install the things listed in the \"Prerequisites\" section."
msgstr ""
"Stáhněte a nainstalujte nejnovější verzi `Visual Studia <https://"
"visualstudio.microsoft.com/downloads/>`__. Visual Studio bude obsahovat "
"požadované sady SDK, pokud máte vybrané správné pracovní úlohy, takže "
"nemusíte'ručně instalovat věci uvedené v části \"Předpoklady\"."

#, fuzzy
msgid "While installing Visual Studio, select this workload:"
msgstr "Při instalaci aplikace Visual Studio vyberte tyto pracovní úlohy:"

#, fuzzy
msgid ".NET desktop development"
msgstr "Vývoj editoru"

#, fuzzy
msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **Visual Studio**."
msgstr ""
"Nastavte **Mono** -> **Editor** -> **Externí editor** na **Visual Studio**."

msgid ""
"If you see an error like \"Unable to find package Godot.NET.Sdk\", your "
"NuGet configuration may be incorrect and need to be fixed."
msgstr ""

msgid ""
"A simple way to fix the NuGet configuration file is to regenerate it. In a "
"file explorer window, go to ``%AppData%\\NuGet``. Rename or delete the "
"``NuGet.Config`` file. When you build your Godot project again, the file "
"will be automatically created with default values."
msgstr ""

msgid "Creating a C# script"
msgstr "Vytvoření skriptu C#"

msgid ""
"After you successfully set up C# for Godot, you should see the following "
"option when selecting **Attach Script** in the context menu of a node in "
"your scene:"
msgstr ""
"Po úspěšném nastavení jazyka C# v Godot byste měli při výběru akce "
"**Připojit skript** v kontextové nabídce uzlu vaší scény vidět následující "
"možnost:"

#, fuzzy
msgid ""
"Note that while some specifics change, most concepts work the same when "
"using C# for scripting. If you're new to Godot, you may want to follow the "
"tutorials on :ref:`doc_scripting` at this point. While some documentation "
"pages still lack C# examples, most notions can be transferred from GDScript."
msgstr ""
"Všimněte si, že ačkoli se některá specifika mění, většina konceptů "
"skriptování funguje stejně i při použití jazyka C#. Pokud'jste v Godotu "
"nováčkem, můžete v tomto bodě sledovat i návody na :ref:`doc_scripting`. Na "
"některých místech dokumentace sice stále chybí příklady v jazyce C#, ale "
"většinu postupů lze snadno přenést z jazyka GDScript."

msgid "Project setup and workflow"
msgstr "Nastavení projektu a pracovní postup"

#, fuzzy
msgid ""
"When you create the first C# script, Godot initializes the C# project files "
"for your Godot project. This includes generating a C# solution (``.sln``) "
"and a project file (``.csproj``), as well as some utility files and folders "
"(``.godot/mono``). All of these but ``.godot/mono`` are important and should "
"be committed to your version control system. Everything under ``.godot`` can "
"be safely added to the ignore list of your VCS. When troubleshooting, it can "
"sometimes help to delete the ``.godot/mono`` folder and let it regenerate."
msgstr ""
"Při vytváření prvního skriptu C# inicializuje Godot soubory potřebné pro váš "
"C# projekt. To zahrnuje vygenerování C# řešení (``.sln``) a projektového "
"souboru (``.csproj``), a také některých pomocných souborů a složek (``."
"mono`` a ``Properties/AssemblyInfo.cs``). Všechny tyto změny výjma ``.mono`` "
"jsou důležité a měly by být zachyceny pomocí systému správy verzí. ``.mono`` "
"lze bezpečně přidat do seznamu ignorovaných souborů vašeho systému VCS. Při "
"řešení problémů může někdy pomoci odstranit složku ``.mono`` a nechat ji "
"znovu přegenerovat."

msgid "Example"
msgstr ""

msgid ""
"Here's a blank C# script with some comments to demonstrate how it works."
msgstr ""
"Zde'je prázdný skript v jazyce C# s několika komentáři, které popisují jak "
"funguje."

#, fuzzy
msgid ""
"As you can see, functions normally in global scope in GDScript like Godot's "
"``print`` function are available in the ``GD`` static class which is part of "
"the ``Godot`` namespace. For a full list of methods in the ``GD`` class, see "
"the class reference pages for :ref:`@GDScript <class_@gdscript>` and :ref:"
"`@GlobalScope <class_@globalscope>`."
msgstr ""
"Jak vidíte, funkce normálně dostupné v GDScript globálně jako např. funkce "
"``print`` , jsou k dispozici ve třídě ``GD``, která je součástí namespace "
"``Godot``. Seznam metod třídy ``GD`` najdete na stránkách reference tříd :"
"ref:`@GDScript <class_@gdscript>` a :ref:`@GlobalScope <class_@globalscope>`."

msgid ""
"Keep in mind that the class you wish to attach to your node should have the "
"same name as the ``.cs`` file. Otherwise, you will get the following error:"
msgstr ""
"Mějte na paměti, že třída, kterou chcete připojit k uzlu, by měla mít stejné "
"jméno jako soubor ``.cs``. V opačném případě se zobrazí následující chyba:"

msgid "*\"Cannot find class XXX for script res://XXX.cs\"*"
msgstr ""

msgid "General differences between C# and GDScript"
msgstr "Obecné rozdíly mezi jazyky C# a GDScript"

msgid ""
"The C# API uses ``PascalCase`` instead of ``snake_case`` in GDScript/C++. "
"Where possible, fields and getters/setters have been converted to "
"properties. In general, the C# Godot API strives to be as idiomatic as is "
"reasonably possible."
msgstr ""
"API C# používá ``PascalCase`` místo ``snake_case`` v jazyce GDScript/C++. "
"Kde to bylo možné, byla pole(field) a gettery/settery převedeny na "
"vlastnosti(property). Obecně se rozhraní C# Godot API snaží být co nejvíce "
"idiomatické, jak je to jen rozumně možné."

msgid "For more information, see the :ref:`doc_c_sharp_differences` page."
msgstr "Další informace naleznete na stránce :ref:`doc_c_sharp_differences`."

#, fuzzy
msgid ""
"You need to (re)build the project assemblies whenever you want to see new "
"exported variables or signals in the editor. This build can be manually "
"triggered by clicking the **Build** button in the top right corner of the "
"editor."
msgstr ""
"Pokud používáte C#, musíte (znovu) sestavit projekt, kdykoli chcete vidět "
"nově exportované proměnné nebo signály. Toto sestavení lze spustit ručně "
"kliknutím na slovo „Mono“ v dolní části okna editoru, čímž se odhalí panel "
"Mono, a poté kliknutím na tlačítko „Build Project“."

msgid ""
"You will also need to rebuild the project assemblies to apply changes in "
"\"tool\" scripts."
msgstr ""
"Budete také muset znovu sestavit sestavy projektu, abyste mohli použít změny "
"ve skriptech \"tool\"."

msgid "Current gotchas and known issues"
msgstr "Aktuální problémy a známé potíže"

#, fuzzy
msgid ""
"As C# support is quite new in Godot, there are some growing pains and things "
"that need to be ironed out. Below is a list of the most important issues you "
"should be aware of when diving into C# in Godot, but if in doubt, also take "
"a look over the official `issue tracker for .NET issues <https://github.com/"
"godotengine/godot/labels/topic%3Adotnet>`_."
msgstr ""
"Jelikož je podpora jazyka C# v systému Godot poměrně nová, je potřeba "
"vyřešit některé problémy růstu a další trochu doladit. Níže je uveden seznam "
"nejdůležitějších problémů, o kterých byste měli vědět, když se ponoříte do "
"jazyka C# v Godotu, ale pokud máte pochybnosti, podívejte se také na "
"oficiální `issue tracker pro problémy Mono <https://github.com/godotengine/"
"godot/labels/topic%3Amono>`_."

msgid ""
"Writing editor plugins is possible, but it is currently quite convoluted."
msgstr ""
"Psaní zásuvných modulů editoru je možné, ale v současné době je poměrně "
"složité."

msgid ""
"State is currently not saved and restored when hot-reloading, with the "
"exception of exported variables."
msgstr ""
"Stav se v současné době neukládá a neobnovuje při načítání za chodu, s "
"výjimkou exportovaných proměnných."

msgid ""
"Attached C# scripts should refer to a class that has a class name that "
"matches the file name."
msgstr ""
"Připojené skripty C# by měly odkazovat na třídu, jejíž název odpovídá názvu "
"souboru."

#, fuzzy
msgid ""
"There are some methods such as ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` and signal connection method ``Connect()`` that rely on "
"Godot's ``snake_case`` API naming conventions. So when using e.g. "
"``CallDeferred(\"AddChild\")``, ``AddChild`` will not work because the API "
"is expecting the original ``snake_case`` version ``add_child``. However, you "
"can use any custom properties or methods without this limitation. Prefer "
"using the exposed ``StringName`` in the ``PropertyName``, ``MethodName`` and "
"``SignalName`` to avoid extra ``StringName`` allocations and worrying about "
"snake_case naming."
msgstr ""
"Existují některé metody, například ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` a způsob připojení signálu ``Connect()``, které jsou "
"založeny na Godotově ``snake_case`` konvencí pojmenování API. Takže při "
"použití např. ``CallDeferred(\"AddChild\")``, ``AddChild`` nebude fungovat, "
"protože API očekává původní ``snake_case`` verzi ``add_child``. Můžete však "
"používat libovolné vlastní vlastnosti nebo metody bez tohoto omezení."

#, fuzzy
msgid ""
"As of Godot 4.0, exporting .NET projects is supported for desktop platforms "
"(Linux, Windows and macOS). Other platforms will gain support in future 4.x "
"releases."
msgstr ""
"Export projektů Mono je podporován pro desktopové platformy (Linux, Windows "
"a macOS), Android, HTML5 a iOS. Jedinou platformou, která zatím není "
"podporována, je UWP."

#, fuzzy
msgid "Common pitfalls"
msgstr "Komentáře"

msgid ""
"You might encounter the following error when trying to modify some values in "
"Godot objects, e.g. when trying to change the X coordinate of a ``Node2D``:"
msgstr ""

msgid ""
"This is perfectly normal. Structs (in this example, a ``Vector2``) in C# are "
"copied on assignment, meaning that when you retrieve such an object from a "
"property or an indexer, you get a copy of it, not the object itself. "
"Modifying said copy without reassigning it afterwards won't achieve anything."
msgstr ""

msgid ""
"The workaround is simple: retrieve the entire struct, modify the value you "
"want to modify, and reassign the property."
msgstr ""

msgid ""
"Since C# 10, it is also possible to use `with expressions <https://learn."
"microsoft.com/en-us/dotnet/csharp/language-reference/operators/with-"
"expression>`_ on structs, allowing you to do the same thing in a single line."
msgstr ""

msgid ""
"You can read more about this error on the `C# language reference <https://"
"learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/"
"cs1612>`_."
msgstr ""

msgid "Performance of C# in Godot"
msgstr "Výkon C# v Godot"

#, fuzzy
msgid ""
"According to some preliminary `benchmarks <https://github.com/cart/godot3-"
"bunnymark>`_, the performance of C# in Godot — while generally in the same "
"order of magnitude — is roughly **~4×** that of GDScript in some naive "
"cases. C++ is still a little faster; the specifics are going to vary "
"according to your use case. GDScript is likely fast enough for most general "
"scripting workloads."
msgstr ""
"Podle některých předběžných `benchmarků <https://github.com/cart/godot3-"
"bunnymark>`_ je výkon jazyka C# v Godotu - ačkoli se obecně pohybuje ve "
"stejném řádu - v některých naivních případech zhruba **~4×** vyšší než výkon "
"jazyka GDScript. C++ je stále o něco rychlejší; specifika se budou lišit "
"podle případu použití. GDScript je pravděpodobně dostatečně rychlý pro "
"většinu obecných skriptovacích úloh. Jazyk C# je rychlejší, ale při "
"komunikaci se systémem Godot vyžaduje nákladný marshalling (převod objektů "
"c# do formátu vhodného pro Godot."

msgid ""
"Most properties of Godot C# objects that are based on ``GodotObject`` (e.g. "
"any ``Node`` like ``Control`` or ``Node3D`` like ``Camera3D``) require "
"native (interop) calls as they talk to Godot's C++ core. Consider assigning "
"values of such properties into a local variable if you need to modify or "
"read them multiple times at a single code location:"
msgstr ""

msgid ""
"Passing raw arrays (such as ``byte[]``) or ``string`` to Godot's C# API "
"requires marshalling which is comparatively pricey."
msgstr ""

msgid ""
"The implicit conversion from ``string`` to ``NodePath`` or ``StringName`` "
"incur both the native interop and marshalling costs as the ``string`` has to "
"be marshalled and passed to the respective native constructor."
msgstr ""

msgid "Using NuGet packages in Godot"
msgstr "Používání balíčků NuGet v Godot"

msgid ""
"`NuGet <https://www.nuget.org/>`_ packages can be installed and used with "
"Godot, as with any C# project. Many IDEs are able to add packages directly. "
"They can also be added manually by adding the package reference in the ``."
"csproj`` file located in the project root:"
msgstr ""
"`Balíčky NuGet <https://www.nuget.org/>`_ lze instalovat a používat s "
"Godotem stejně jako s jakýmkoli jiným projektem v jazyce C#. Mnoho IDE umí "
"balíčky přidávat přímo. Lze je také přidat ručně vložením odkazu na balíček "
"do souboru ``.csproj`` umístěného v kořenovém adresáři projektu:"

msgid ""
"As of Godot 3.2.3, Godot automatically downloads and sets up newly added "
"NuGet packages the next time it builds the project."
msgstr ""
"Od Godot 3.2.3 Godot automaticky stahuje a nastavuje nově přidané balíčky "
"NuGet při následném sestavení projektu."

msgid "Profiling your C# code"
msgstr "Profilování kódu C#"

msgid ""
"The following tools may be used for performance and memory profiling of your "
"managed code:"
msgstr ""

msgid "JetBrains Rider with dotTrace/dotMemory plugin."
msgstr ""

msgid "Standalone JetBrains dotTrace/dotMemory."
msgstr ""

#, fuzzy
msgid "Visual Studio."
msgstr "Visual Studio"

msgid ""
"Profiling managed and unmanaged code at once is possible with both JetBrains "
"tools and Visual Studio, but limited to Windows."
msgstr ""

msgid "Translation status"
msgstr "Stav překladu"
