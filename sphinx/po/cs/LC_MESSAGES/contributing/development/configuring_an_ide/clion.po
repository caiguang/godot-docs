# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "CLion"
msgstr ""

msgid ""
"`CLion <https://www.jetbrains.com/clion/>`_ is a commercial `JetBrains "
"<https://www.jetbrains.com/>`_ IDE for C++."
msgstr ""

msgid "Importing the project"
msgstr ""

msgid ""
"CLion can import a project's `compilation database file <https://clang.llvm."
"org/docs/JSONCompilationDatabase.html>`_, commonly named ``compile_commands."
"json``. To generate the compilation database file, open the terminal, change "
"to the Godot root directory, and run:"
msgstr ""

msgid ""
"Then, open the Godot root directory with CLion. CLion will import the "
"compilation database, index the codebase, and provide autocompletion and "
"other advanced code navigation and refactoring functionality."
msgstr ""

#, fuzzy
msgid "Compiling and debugging the project"
msgstr "Ladění projektu"

msgid ""
"CLion does not support compiling and debugging Godot via SCons out of the "
"box. This can be achieved by creating a custom build target and run "
"configuration in CLion. Before creating a custom build target, you must :ref:"
"`compile Godot <toc-devel-compiling>` once on the command line, to generate "
"the Godot executable. Open the terminal, change into the Godot root "
"directory, and execute:"
msgstr ""

msgid "To add a custom build target that invokes SCons for compilation:"
msgstr ""

msgid ""
"Open CLion and navigate to **Preferences > Build, Execution, Deployment > "
"Custom Build Targets**"
msgstr ""

msgid "Click **Add target** and give the target a name, e.g. ``Godot debug``."
msgstr ""

msgid ""
"Click **...** next to the **Build:** selectbox, then click the **+** button "
"in the **External Tools** dialog to add a new external tool."
msgstr ""

msgid ""
"Give the tool a name, e.g. ``Build Godot debug``, set **Program** to "
"``scons``, set **Arguments** to the compilation settings you want (see :ref:"
"`compiling Godot <toc-devel-compiling>`), and set the **Working directory** "
"to ``$ProjectFileDir$``, which equals the Godot root directory. Click **OK** "
"to create the tool."
msgstr ""

msgid ""
"CLion does not expand shell commands like ``scons -j$(nproc)``. Use concrete "
"values instead, e.g. ``scons -j8``."
msgstr ""

msgid ""
"Back in the **External Tools** dialog, click the **+** again to add a second "
"external tool for cleaning the Godot build via SCons. Give the tool a name, "
"e.g. ``Clean Godot debug``, set **Program** to ``scons``, set **Arguments** "
"to ``-c`` (which will clean the build), and set the **Working directory** to "
"``$ProjectFileDir$``. Click **OK** to create the tool."
msgstr ""

msgid ""
"Close the **External Tools** dialog. In the **Custom Build Target** dialog "
"for the custom ``Godot debug`` build target, select the **Build Godot "
"debug** tool from the **Build** select box, and select the **Clean Godot "
"debug** tool from the **Clean** select box. Click **OK** to create the "
"custom build target."
msgstr ""

msgid "In the main IDE window, click **Add Configuration**."
msgstr ""

msgid ""
"In the **Run/Debug Configuration** dialog, click **Add new...**, then select "
"**Custom Build Application** to create a new custom run/debug configuration."
msgstr ""

msgid ""
"Give the run/debug configuration a name, e.g. ``Godot debug``, select the "
"``Godot debug`` custom build target as the **Target**. Select the Godot "
"executable in the ``bin/`` folder as the **Executable**, and set the "
"**Program arguments** to ``--editor --path path-to-your-project/``, where "
"``path-to-your-project/`` should be a path pointing to an existing Godot "
"project. If you omit the ``--path`` argument, you will only be able to debug "
"the Godot Project Manager window. Click **OK** to create the run/debug "
"configuration."
msgstr ""

msgid ""
"You can now build, run, debug, profile, and Valgrind check the Godot editor "
"via the run configuration."
msgstr ""

msgid ""
"When playing a scene, the Godot editor will spawn a separate process. You "
"can debug this process in CLion by going to **Run > Attach to process...**, "
"typing ``godot``, and selecting the Godot process with the highest **pid** "
"(process ID), which will usually be the running project."
msgstr ""

msgid "Translation status"
msgstr "Stav překladu"
