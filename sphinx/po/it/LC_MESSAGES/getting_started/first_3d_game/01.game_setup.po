# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Setting up the game area"
msgstr "Preparazione del progetto"

msgid ""
"In this first part, we're going to set up the game area. Let's get started "
"by importing the start assets and setting up the game scene."
msgstr ""

msgid ""
"We've prepared a Godot project with the 3D models and sounds we'll use for "
"this tutorial, linked in the index page. If you haven't done so yet, you can "
"download the archive here: `Squash the Creeps assets <https://github.com/"
"godotengine/godot-3d-dodge-the-creeps/releases/tag/1.1.0>`__."
msgstr ""

#, fuzzy
msgid ""
"Once you downloaded it, extract the .zip archive on your computer. Open the "
"Godot Project Manager and click the *Import* button."
msgstr ""
"Estrai l'archivio sul tuo computer. Quindi, apri Godot e, nel project "
"manager, fai clic sul pulsante Importa per importare il progetto."

msgid ""
"In the import popup, enter the full path to the freshly created directory "
"``squash_the_creeps_start/``. You can click the *Browse* button on the right "
"to open a file browser and navigate to the ``project.godot`` file the folder "
"contains."
msgstr ""

msgid "Click *Import & Edit* to open the project in the editor."
msgstr ""

msgid ""
"The start project contains an icon and two folders: ``art/`` and ``fonts/``. "
"There, you will find the art assets and music we'll use in the game."
msgstr ""

msgid ""
"There are two 3D models, ``player.glb`` and ``mob.glb``, some materials that "
"belong to these models, and a music track."
msgstr ""

#, fuzzy
msgid "Setting up the playable area"
msgstr "Muovere il giocatore"

msgid ""
"We're going to create our main scene with a plain :ref:`Node <class_Node>` "
"as its root. In the *Scene* dock, click the *Add Child Node* button "
"represented by a \"+\" icon in the top-left and double-click on *Node*. Name "
"the node ``Main``. An alternate method to rename the node is to right-click "
"on *Node* and choose *Rename* (or :kbd:`F2`). Alternatively, to add a node "
"to the scene, you can press :kbd:`Ctrl + a` (or :kbd:`Cmd + a` on macOS)."
msgstr ""

#, fuzzy
msgid ""
"Save the scene as ``main.tscn`` by pressing :kbd:`Ctrl + s` (:kbd:`Cmd + s` "
"on macOS)."
msgstr ""
"Salva la scena. Clicca su Scena -> Salva, oppure premi :kbd:`Ctrl + S` su "
"Windows/Linux o :kbd:`Cmd + S` su Mac."

msgid ""
"We'll start by adding a floor that'll prevent the characters from falling. "
"To create static colliders like the floor, walls, or ceilings, you can use :"
"ref:`StaticBody3D <class_StaticBody3D>` nodes. They require :ref:"
"`CollisionShape3D <class_CollisionShape3D>` child nodes to define the "
"collision area. With the ``Main`` node selected, add a :ref:`StaticBody3D "
"<class_StaticBody3D>` node, then a :ref:`CollisionShape3D "
"<class_CollisionShape3D>`. Rename the :ref:`StaticBody3D "
"<class_StaticBody3D>` to ``Ground``."
msgstr ""

#, fuzzy
msgid "Your scene tree should look like this"
msgstr "La tua scena dovrebbe assomigliare a questa:"

msgid ""
"A warning sign next to the :ref:`CollisionShape3D <class_CollisionShape3D>` "
"appears because we haven't defined its shape. If you click the icon, a popup "
"appears to give you more information."
msgstr ""

msgid ""
"To create a shape, select the :ref:`CollisionShape3D "
"<class_CollisionShape3D>` node, head to the *Inspector* and click the "
"*<empty>* field next to the *Shape* property. Create a new *BoxShape3D*."
msgstr ""

msgid ""
"The box shape is perfect for flat ground and walls. Its thickness makes it "
"reliable to block even fast-moving objects."
msgstr ""

msgid ""
"A box's wireframe appears in the viewport with three orange dots. You can "
"click and drag these to edit the shape's extents interactively. We can also "
"precisely set the size in the inspector. Click on the :ref:`BoxShape3D "
"<class_BoxShape3D>` to expand the resource. Set its *Size* to ``60`` on the "
"X axis, ``2`` for the Y axis, and ``60`` for the Z axis."
msgstr ""

msgid ""
"Collision shapes are invisible. We need to add a visual floor that goes "
"along with it. Select the ``Ground`` node and add a :ref:`MeshInstance3D "
"<class_MeshInstance3D>` as its child."
msgstr ""

msgid ""
"In the *Inspector*, click on the field next to *Mesh* and create a :ref:"
"`BoxMesh <class_BoxMesh>` resource to create a visible box."
msgstr ""

msgid ""
"Once again, it's too small by default. Click the box icon to expand the "
"resource and set its *Size* to ``60``, ``2``, and ``60``."
msgstr ""

msgid ""
"You should see a wide grey slab that covers the grid and blue and red axes "
"in the viewport."
msgstr ""

msgid ""
"We're going to move the ground down so we can see the floor grid. Select the "
"``Ground`` node, hold the :kbd:`Ctrl` key down to turn on grid snapping, and "
"click and drag down on the Y axis. It's the green arrow in the move gizmo."
msgstr ""

msgid ""
"If you can't see the 3D object manipulator like on the image above, ensure "
"the *Select Mode* is active in the toolbar above the view."
msgstr ""

msgid ""
"Move the ground down ``1`` meter, in order to have a visible editor grid. A "
"label in the bottom-left corner of the viewport tells you how much you're "
"translating the node."
msgstr ""

msgid ""
"Moving the *Ground* node down moves both children along with it. Ensure you "
"move the *Ground* node, **not** the *MeshInstance3D* or the "
"*CollisionShape3D*."
msgstr ""

msgid "Ultimately, ``Ground``'s transform.position.y should be -1"
msgstr ""

msgid ""
"Let's add a directional light so our scene isn't all grey. Select the "
"``Main`` node and add a child node :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>`."
msgstr ""

msgid ""
"We need to move and rotate the :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>` node. Move it up by clicking and dragging on the "
"manipulator's green arrow and click and drag on the red arc to rotate it "
"around the X axis, until the ground is lit."
msgstr ""

msgid ""
"In the *Inspector*, turn on *Shadow -> Enabled* by clicking the checkbox."
msgstr ""

#, fuzzy
msgid "At this point, your project should look like this."
msgstr "A questo punto, il tuo progetto dovrebbe assomigliare a questo."

msgid ""
"That's our starting point. In the next part, we will work on the player "
"scene and base movement."
msgstr ""

msgid "Translation status"
msgstr "Stato della traduzione"
