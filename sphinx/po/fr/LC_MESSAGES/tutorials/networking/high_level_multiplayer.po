# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "High-level multiplayer"
msgstr "API multijoueur de haut niveau"

msgid "High-level vs low-level API"
msgstr "API de haut niveau contre API de bas niveau"

msgid ""
"The following explains the differences of high- and low-level networking in "
"Godot as well as some fundamentals. If you want to jump in head-first and "
"add networking to your first nodes, skip to `Initializing the network`_ "
"below. But make sure to read the rest later on!"
msgstr ""
"Ce qui suit explique les différences entre les API réseaux de haut et bas "
"niveau dans Godot ainsi que certains principes fondamentaux. Si vous voulez "
"plonger dans le vif du sujet et ajouter une prise en charge réseau à vos "
"premiers nœuds, passez directement à `Initialisation du réseau`. Mais "
"assurez-vous de lire le reste plus tard !"

msgid ""
"Godot always supported standard low-level networking via :abbr:`UDP (User "
"Datagram Protocol)`, :abbr:`TCP (Transmission Control Protocol)` and some "
"higher-level protocols such as :abbr:`HTTP (Hypertext Transfer Protocol)` "
"and :abbr:`SSL (Secure Sockets Layer)`. These protocols are flexible and can "
"be used for almost anything. However, using them to synchronize game state "
"manually can be a large amount of work. Sometimes that work can't be avoided "
"or is worth it, for example when working with a custom server implementation "
"on the backend. But in most cases, it's worthwhile to consider Godot's high-"
"level networking API, which sacrifices some of the fine-grained control of "
"low-level networking for greater ease of use."
msgstr ""
"Godot a toujours supporté les réseaux de bas-niveau standard via :abbr:`UDP "
"(User Datagram Protocol)`,  :abbr:`TCP (Transmission Control Protocol)` et "
"certains protocoles haut-niveau tels que :abbr:`SSL (Secure Sockets Layer)` "
"et :abbr:`HTTP (Hypertext Transfer Protocol)`. Ces protocoles sont flexibles "
"et peuvent être utilisés pour presque tout. Cependant, leur utilisation pour "
"synchroniser manuellement l'état du jeu peut représenter une grande quantité "
"de travail. Parfois, ce travail ne peut pas être évité ou en vaut la peine, "
"par exemple lorsqu'on travaille avec une implémentation de serveur "
"personnalisé en backend. Mais dans la plupart des cas, il est intéressant de "
"considérer l'API de réseau haut-niveau de Godot, qui sacrifie une partie de "
"la finesse de configuration du réseau bas-niveau pour une plus grande "
"facilité d'utilisation."

msgid "This is due to the inherent limitations of the low-level protocols:"
msgstr "Cela est dû aux limites inhérentes aux protocoles de bas niveau :"

msgid ""
"TCP ensures packets will always arrive reliably and in order, but latency is "
"generally higher due to error correction. It's also quite a complex protocol "
"because it understands what a \"connection\" is, and optimizes for goals "
"that often don't suit applications like multiplayer games. Packets are "
"buffered to be sent in larger batches, trading less per-packet overhead for "
"higher latency. This can be useful for things like HTTP, but generally not "
"for games. Some of this can be configured and disabled (e.g. by disabling "
"\"Nagle's algorithm\" for the TCP connection)."
msgstr ""
"Le TCP garantit que les paquets arriveront toujours de manière fiable et en "
"ordre, mais la latence est généralement plus élevée en raison de la "
"correction des erreurs. C'est aussi un protocole assez complexe parce qu'il "
"comprend ce qu'est une \"connexion\" et optimise pour des objectifs qui "
"souvent ne conviennent pas à des applications comme les jeux multijoueurs. "
"Les paquets sont mis en mémoire tampon pour être envoyés par lots plus "
"importants, ce qui permet de réduire les coûts par paquet en échange "
"d'augmenter la latence. Cela peut être utile pour des choses comme le HTTP, "
"mais généralement pas pour les jeux. Certains de ces éléments peuvent être "
"configurés et désactivés (par exemple en désactivant \"l'algorithme de "
"Nagle\" pour la connexion TCP)."

msgid ""
"UDP is a simpler protocol, which only sends packets (and has no concept of a "
"\"connection\"). No error correction makes it pretty quick (low latency), "
"but packets may be lost along the way or received in the wrong order. Added "
"to that, the MTU (maximum packet size) for UDP is generally low (only a few "
"hundred bytes), so transmitting larger packets means splitting them, "
"reorganizing them and retrying if a part fails."
msgstr ""
"L'UDP est un protocole plus simple, qui n'envoie que des paquets (et n'a "
"aucune notion de \"connexion\"). Aucune correction d'erreur permet d'obtenir "
"un résultat rapide (faible latence), mais les paquets peuvent être perdus en "
"cours de route ou reçus dans le mauvais ordre. De plus, la MTU (taille "
"maximale des paquets) pour l'UDP est généralement faible (quelques centaines "
"d'octets seulement), de sorte que la transmission de paquets plus volumineux "
"implique de les diviser, de les réorganiser et de réessayer si une partie "
"échoue."

msgid ""
"In general, TCP can be thought of as reliable, ordered, and slow; UDP as "
"unreliable, unordered and fast. Because of the large difference in "
"performance, it often makes sense to re-build the parts of TCP wanted for "
"games (optional reliability and packet order), while avoiding the unwanted "
"parts (congestion/traffic control features, Nagle's algorithm, etc). Due to "
"this, most game engines come with such an implementation, and Godot is no "
"exception."
msgstr ""
"En général, le TCP peut être considéré comme fiable, ordonné et lent ; l'UDP "
"comme peu fiable, non ordonné et rapide. En raison de la grande différence "
"de performances, il est souvent judicieux de reconstruire les parties de TCP "
"souhaitées pour les jeux (fiabilité en option et ordre des paquets), tout en "
"évitant les parties non souhaitées (fonctions de contrôle de la congestion/"
"du trafic, algorithme de Nagle, etc.) De ce fait, la plupart des moteurs de "
"jeu sont livrés avec une telle implémentation, et Godot ne fait pas "
"exception."

msgid ""
"In summary, you can use the low-level networking API for maximum control and "
"implement everything on top of bare network protocols or use the high-level "
"API based on :ref:`SceneTree <class_SceneTree>` that does most of the heavy "
"lifting behind the scenes in a generally optimized way."
msgstr ""
"En résumé, vous pouvez utiliser l'API réseau de bas niveau pour un contrôle "
"maximal et implémenter le tout au-dessus des protocoles réseau nus ou "
"utiliser l'API de haut niveau basée sur :ref:`SceneTree <class_SceneTree>` "
"qui fait la plupart du gros du travail derrière la scène d'une manière "
"généralement optimisée."

msgid ""
"Most of Godot's supported platforms offer all or most of the mentioned high- "
"and low-level networking features. As networking is always largely hardware "
"and operating system dependent, however, some features may change or not be "
"available on some target platforms. Most notably, the HTML5 platform "
"currently offers WebSockets and WebRTC support but lacks some of the higher-"
"level features, as well as raw access to low-level protocols like TCP and "
"UDP."
msgstr ""
"La plupart des plateformes prises en charge par Godot offrent toutes ou la "
"plupart des fonctionnalités de réseau de haut et de bas-niveau mentionnées. "
"Cependant, comme la mise en réseau dépend toujours largement du matériel et "
"du système d'exploitation, certaines fonctionnalités peuvent changer ou ne "
"pas être disponibles sur certaines plateformes cibles. Plus "
"particulièrement, la plate-forme HTML5 n'offre actuellement que la prise en "
"charge de WebSocket et ne dispose pas de certaines des fonctionnalités de "
"haut-niveau, ni d'un accès brut aux protocoles de bas-niveau comme TCP et "
"UDP."

msgid ""
"More about TCP/IP, UDP, and networking: https://gafferongames.com/post/"
"udp_vs_tcp/"
msgstr ""
"Pour en savoir plus sur le TCP/IP, l'UDP et le réseau : https://"
"gafferongames.com/post/udp_vs_tcp/"

msgid ""
"Gaffer On Games has a lot of useful articles about networking in Games "
"(`here <https://gafferongames.com/categories/game-networking/>`__), "
"including the comprehensive `introduction to networking models in games "
"<https://gafferongames.com/post/"
"what_every_programmer_needs_to_know_about_game_networking/>`__."
msgstr ""
"Gaffer On Games propose de nombreux articles utiles sur le réseautage dans "
"les Jeux (`ici <https://gafferongames.com/categories/game-networking/>`__), "
"notamment le très complet `introduction aux modèles de réseautage dans les "
"jeux <https://gafferongames.com/post/"
"what_every_programmer_needs_to_know_about_game_networking/>`__."

msgid ""
"If you want to use your low-level networking library of choice instead of "
"Godot's built-in networking, see here for an example: https://github.com/"
"PerduGames/gdnet3"
msgstr ""
"Si vous souhaitez utiliser une bibliothèque réseau de bas niveau de votre "
"choix au lieu du réseau intégré de Godot, voir ici un exemple : https://"
"github.com/PerduGames/gdnet3"

msgid ""
"Adding networking to your game comes with some responsibility. It can make "
"your application vulnerable if done wrong and may lead to cheats or "
"exploits. It may even allow an attacker to compromise the machines your "
"application runs on and use your servers to send spam, attack others or "
"steal your users' data if they play your game."
msgstr ""
"Ajouter l'utilisation du réseau dans votre jeu implique une certaine "
"responsabilité. Cela peut rendre votre application vulnérable si c'est mal "
"fait et peut conduire à de la triche ou à des exploitations de failles "
"(piratage). Cela peut même permettre à un attaquant de compromettre les "
"machines sur lesquelles votre application tourne et d'utiliser vos serveurs "
"pour envoyer des spams, d'attaquer d'autres personnes ou de voler les "
"données de vos utilisateurs s'ils jouent à votre jeu."

msgid ""
"This is always the case when networking is involved and has nothing to do "
"with Godot. You can of course experiment, but when you release a networked "
"application, always take care of any possible security concerns."
msgstr ""
"C'est toujours le cas lorsqu'il s'agit de mise en réseau et que cela n'a "
"rien à voir avec Godot. Vous pouvez bien sûr faire des expériences, mais "
"lorsque vous lancez une application en réseau, prenez toujours en compte les "
"éventuels problèmes de sécurité."

msgid "Mid-level abstraction"
msgstr "Abstraction de moyen-niveau"

msgid ""
"Before going into how we would like to synchronize a game across the "
"network, it can be helpful to understand how the base network API for "
"synchronization works."
msgstr ""
"Avant d'expliquer comment nous aimerions synchroniser un jeu sur le réseau, "
"il peut être utile de comprendre comment fonctionne l'API de synchronisation "
"du réseau de base."

#, fuzzy
msgid ""
"Godot uses a mid-level object :ref:`MultiplayerPeer "
"<class_MultiplayerPeer>`. This object is not meant to be created directly, "
"but is designed so that several C++ implementations can provide it."
msgstr ""
"Godot utilise un objet de niveau intermédiaire :ref:"
"`NetworkedMultiplayerPeer <class_NetworkedMultiplayerPeer>`. Cet objet n'est "
"pas destiné à être créé directement, mais est conçu de manière à ce que "
"plusieurs implémentations puissent le fournir."

msgid ""
"This object extends from :ref:`PacketPeer <class_PacketPeer>`, so it "
"inherits all the useful methods for serializing, sending and receiving data. "
"On top of that, it adds methods to set a peer, transfer mode, etc. It also "
"includes signals that will let you know when peers connect or disconnect."
msgstr ""
"Cet objet s'étend de :ref:`PacketPeer <class_PacketPeer>`, il hérite donc de "
"toutes les méthodes utiles pour sérialiser, envoyer et recevoir des données. "
"En plus de cela, il ajoute des méthodes pour définir un pair, un mode de "
"transfert, etc. Il comprend également des signaux qui vous permettront de "
"savoir quand vos pairs se connectent ou se déconnectent."

#, fuzzy
msgid ""
"This class interface can abstract most types of network layers, topologies "
"and libraries. By default, Godot provides an implementation based on ENet (:"
"ref:`ENetMultiplayerPeer <class_ENetMultiplayerPeer>`), one based on WebRTC "
"(:ref:`WebRTCMultiplayerPeer <class_WebRTCMultiplayerPeer>`), and one based "
"on WebSocket (:ref:`WebSocketPeer <class_WebSocketPeer>`), but this could be "
"used to implement mobile APIs (for ad hoc WiFi, Bluetooth) or custom device/"
"console-specific networking APIs."
msgstr ""
"Cette interface de classe peut abstraire la plupart des types de couches de "
"réseau, de topologies et de bibliothèques. Par défaut, Godot fournit une "
"implémentation basée sur ENet (:ref:`NetworkedMultiplayerEnet "
"<class_NetworkedMultiplayerENet>`), une basée sur WebRTC (:ref:"
"`WebRTCMultiplayer <class_WebRTCMultiplayer>`), et une basée sur WebSocket (:"
"ref:`WebSocketMultiplayerPeer <class_WebSocketMultiplayerPeer>`), mais ceci "
"pourrait être utilisé pour implémenter des API mobiles (pour le WiFi adhoc, "
"Bluetooth) ou des API réseau spécifiques à un appareil ou une console."

#, fuzzy
msgid ""
"For most common cases, using this object directly is discouraged, as Godot "
"provides even higher level networking facilities. This object is still made "
"available in case a game has specific needs for a lower-level API."
msgstr ""
"Dans la plupart des cas, il est déconseillé d'utiliser directement cet "
"objet, car Godot fournit des possibilités de mise en réseau de niveau encore "
"plus élevé. Il est cependant mis à disposition au cas où un jeu aurait des "
"besoins spécifiques pour une API de niveau inférieur."

#, fuzzy
msgid "Hosting considerations"
msgstr "Considérations relatives à l'exportation"

msgid ""
"When hosting a server, clients on your :abbr:`LAN (Local Area Network)` can "
"connect using the internal IP address which is usually of the form ``192.168."
"*.*``. This internal IP address is **not** reachable by non-LAN/Internet "
"clients."
msgstr ""

msgid ""
"On Windows, you can find your internal IP address by opening a command "
"prompt and entering ``ipconfig``. On macOS, open a Terminal and enter "
"``ifconfig``. On Linux, open a terminal and enter ``ip addr``."
msgstr ""

msgid ""
"If you're hosting a server on your own machine and want non-LAN clients to "
"connect to it, you'll probably have to *forward* the server port on your "
"router. This is required to make your server reachable from the Internet "
"since most residential connections use a `NAT <https://en.wikipedia.org/wiki/"
"Network_address_translation>`__. Godot's high-level multiplayer API only "
"uses UDP, so you must forward the port in UDP, not just TCP."
msgstr ""

msgid ""
"After forwarding an UDP port and making sure your server uses that port, you "
"can use `this website <https://icanhazip.com/>`__ to find your public IP "
"address. Then give this public IP address to any Internet clients that wish "
"to connect to your server."
msgstr ""

msgid ""
"Godot's high-level multiplayer API uses a modified version of ENet which "
"allows for full IPv6 support."
msgstr ""

msgid "Initializing the network"
msgstr "Initialisation du réseau"

#, fuzzy
msgid ""
"High level networking in Godot is managed by the :ref:`SceneTree "
"<class_SceneTree>`."
msgstr ""
"L'objet qui contrôle le réseau dans Godot est le même qui contrôle tout ce "
"qui concerne l'arbre de scène : :ref:`SceneTree <class_SceneTree>`."

msgid ""
"Each node has a ``multiplayer`` property, which is a reference to the "
"``MultiplayerAPI`` instance configured for it by the scene tree. Initially, "
"every node is configured with the same default ``MultiplayerAPI`` object."
msgstr ""

msgid ""
"It is possible to create a new ``MultiplayerAPI`` object and assign it to a "
"``NodePath`` in the the scene tree, which will override ``multiplayer`` for "
"the node at that path and all of its descendants. This allows sibling nodes "
"to be configured with different peers, which makes it possible to run a "
"server and a client simultaneously in one instance of Godot."
msgstr ""

msgid ""
"To initialize networking, a ``MultiplayerPeer`` object must be created, "
"initialized as a server or client, and passed to the ``MultiplayerAPI``."
msgstr ""

#, fuzzy
msgid "To terminate networking:"
msgstr "Mettre fin à la fonction réseau :"

msgid ""
"When exporting to Android, make sure to enable the ``INTERNET`` permission "
"in the Android export preset before exporting the project or using one-click "
"deploy. Otherwise, network communication of any kind will be blocked by "
"Android."
msgstr ""
"Lors de l'exportation vers Android, assurez-vous d'activer la permission "
"``INTERNET`` dans le préréglage d'exportation Android avant d'exporter le "
"projet ou d'utiliser le déploiement en un clic. Sinon, toute communication "
"réseau sera bloquée par Android."

msgid "Managing connections"
msgstr "Gestion des connexions"

msgid ""
"Every peer is assigned a unique ID. The server's ID is always 1, and clients "
"are assigned a random positive integer."
msgstr ""

msgid ""
"Responding to connections or disconnections is possible by connecting to "
"``MultiplayerAPI``'s signals:"
msgstr ""

msgid ""
"``peer_connected(id: int)`` This signal is emitted with the newly connected "
"peer's ID on each other peer, and on the new peer multiple times, once with "
"each other peer's ID."
msgstr ""

msgid ""
"``peer_disconnected(id: int)`` This signal is emitted on every remaining "
"peer when one disconnects."
msgstr ""

#, fuzzy
msgid "The rest are only emitted on clients:"
msgstr "Il y a les restrictions suivantes :"

#, fuzzy
msgid "``connected_to_server()``"
msgstr "``connected_to_server``"

#, fuzzy
msgid "``connection_failed()``"
msgstr "``connection_failed``"

#, fuzzy
msgid "``server_disconnected()``"
msgstr "``server_disconnected``"

msgid "To get the unique ID of the associated peer:"
msgstr ""

#, fuzzy
msgid "To check whether the peer is server or client:"
msgstr "Vérifier si l'arbre est initialisé en tant que serveur ou client :"

#, fuzzy
msgid "Remote procedure calls"
msgstr "Créer des textures procédurales."

msgid ""
"Remote procedure calls, or RPCs, are functions that can be called on other "
"peers. To create one, use the ``@rpc`` annotation before a function "
"definition. To call an RPC, use ``Callable``'s method ``rpc()`` to call in "
"every peer, or ``rpc_id()`` to call in a specific peer."
msgstr ""

msgid "RPCs will not serialize objects or callables."
msgstr ""

msgid ""
"For a remote call to be successful, the sending and receiving node need to "
"have the same ``NodePath``, which means they must have the same name. When "
"using ``add_child()`` for nodes which are expected to use RPCs, set the "
"argument ``force_readable_name`` to ``true``."
msgstr ""

msgid ""
"If a function is annotated with ``@rpc`` on the client script (resp. server "
"script), then this function must also be declared on the server script "
"(resp. client script). Both RPCs must have the same signature which is "
"evaluated with a checksum of **all RPCs**. All RPCs in a script are checked "
"at once, and all RPCs must be declared on both the client scripts and the "
"server scripts, **even functions that are currently not in use**."
msgstr ""

msgid ""
"The signature of the RPC includes the ``@rpc()`` declaration, the function, "
"return type, AND the nodepath. If an RPC resides in a script attached to ``/"
"root/Main/Node1``, then it must reside in precisely the same path and node "
"on both the client script and the server script. Function arguments "
"(example: ``func sendstuff():`` and ``func sendstuff(arg1, arg2):`` **will "
"pass** signature matching)."
msgstr ""

msgid ""
"If these conditions are not met (if all RPCs do not pass signature "
"matching), the script may print an error or cause unwanted behavior. The "
"error message may be unrelated to the RPC function you are currently "
"building and testing."
msgstr ""

msgid ""
"See further explanation and troubleshooting on `this post <https://github."
"com/godotengine/godot/issues/57869#issuecomment-1034215138>`__."
msgstr ""

msgid ""
"The annotation can take a number of arguments, which have default values. "
"``@rpc`` is equivalent to:"
msgstr ""

#, fuzzy
msgid "The parameters and their functions are as follows:"
msgstr "Les cas d'utilisation les plus courants sont les suivants :"

msgid "``mode``:"
msgstr "``mode`` :"

msgid ""
"``\"authority\"``: Only the multiplayer authority (the server) can call "
"remotely."
msgstr ""

msgid ""
"``\"any_peer\"``: Clients are allowed to call remotely. Useful for "
"transferring user input."
msgstr ""

msgid "``sync``:"
msgstr "``sync`` :"

#, fuzzy
msgid "``\"call_remote\"``: The function will not be called on the local peer."
msgstr ""
"**Note** : Cette fonction ne sera pas appelée si le moteur plante ou ne "
"répond plus."

msgid ""
"``\"call_local\"``: The function can be called on the local peer. Useful "
"when the server is also a player."
msgstr ""

msgid "``transfer_mode``:"
msgstr "``transfer_mode`` :"

msgid ""
"``\"unreliable\"`` Packets are not acknowledged, can be lost, and can arrive "
"at any order."
msgstr ""

msgid ""
"``\"unreliable_ordered\"`` Packets are received in the order they were sent "
"in. This is achieved by ignoring packets that arrive later if another that "
"was sent after them has already been received. Can cause packet loss if used "
"incorrectly."
msgstr ""

msgid ""
"``\"reliable\"`` Resend attempts are sent until packets are acknowledged, "
"and their order is preserved. Has a significant performance penalty."
msgstr ""

msgid "``transfer_channel`` is the channel index."
msgstr ""

msgid ""
"The first 3 can be passed in any order, but ``transfer_channel`` must always "
"be last."
msgstr ""

msgid ""
"The function ``multiplayer.get_remote_sender_id()`` can be used to get the "
"unique id of an rpc sender, when used within the function called by rpc."
msgstr ""

#, fuzzy
msgid "Channels"
msgstr "iChanneli"

msgid ""
"Modern networking protocols support channels, which are separate connections "
"within the connection. This allows for multiple streams of packets that do "
"not interfere with each other."
msgstr ""

msgid ""
"For example, game chat related messages and some of the core gameplay "
"messages should all be sent reliably, but a gameplay message should not wait "
"for a chat message to be acknowledged. This can be achieved by using "
"different channels."
msgstr ""

msgid ""
"Channels are also useful when used with the unreliable ordered transfer "
"mode. Sending packets of variable size with this transfer mode can cause "
"packet loss, since packets which are slower to arrive are ignored. "
"Separating them into multiple streams of homogeneous packets by using "
"channels allows ordered transfer with little packet loss, and without the "
"latency penalty caused by reliable mode."
msgstr ""

msgid ""
"The default channel with index 0 is actually three different channels - one "
"for each transfer mode."
msgstr ""

#, fuzzy
msgid "Example lobby implementation"
msgstr "Implémentation"

msgid ""
"This is an example lobby that can handle peers joining and leaving, notify "
"UI scenes through signals, and start the game after all clients have loaded "
"the game scene."
msgstr ""

msgid ""
"The game scene's root node should be named Game. In the script attached to "
"it:"
msgstr ""

msgid "Exporting for dedicated servers"
msgstr "Exportation pour les serveurs dédiés"

msgid ""
"Once you've made a multiplayer game, you may want to export it to run it on "
"a dedicated server with no GPU available. See :ref:"
"`doc_exporting_for_dedicated_servers` for more information."
msgstr ""
"Une fois que vous avez créé un jeu multijoueur, vous pouvez l'exporter pour "
"le faire tourner sur un serveur dédié sans GPU. Voir :ref:"
"`doc_exporting_for_dedicated_servers` pour plus d'informations."

msgid ""
"The code samples on this page aren't designed to run on a dedicated server. "
"You'll have to modify them so the server isn't considered to be a player. "
"You'll also have to modify the game starting mechanism so that the first "
"player who joins can start the game."
msgstr ""
"Les exemples de code sur cette page ne sont pas conçus pour fonctionner sur "
"un serveur dédié. Vous devrez les modifier pour que le serveur ne soit pas "
"considéré comme un joueur. Vous devrez également modifier le mécanisme de "
"démarrage du jeu afin que le premier joueur qui se joint à la partie puisse "
"démarrer la partie."

msgid "Translation status"
msgstr "État de la traduction"
