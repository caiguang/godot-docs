# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Using CharacterBody2D/3D"
msgstr "Utiliser KinematicBody2D"

msgid "Introduction"
msgstr "Introduction"

#, fuzzy
msgid ""
"Godot offers several collision objects to provide both collision detection "
"and response. Trying to decide which one to use for your project can be "
"confusing. You can avoid problems and simplify development if you understand "
"how each of them works and what their pros and cons are. In this tutorial, "
"we'll look at the :ref:`CharacterBody2D <class_CharacterBody2D>` node and "
"show some examples of how to use it."
msgstr ""
"Godot offre un certain nombre d'objets de collision pour assurer à la fois "
"la détection et la réponse aux collisions. Essayer de décider lequel "
"utiliser pour votre projet peut prêter à confusion. Vous pouvez éviter les "
"problèmes et simplifier le développement si vous comprenez comment chacun "
"d'eux fonctionne et quels sont leurs avantages et leurs inconvénients. Dans "
"ce tutoriel, nous allons regarder le nœud :ref:`KinematicBody2D "
"<class_KinematicBody2D>` et montrer quelques exemples de son utilisation."

msgid ""
"While this document uses ``CharacterBody2D`` in its examples, the same "
"concepts apply in 3D as well."
msgstr ""

#, fuzzy
msgid "What is a character body?"
msgstr "Qu'est-ce qu'un corps rigide ?"

#, fuzzy
msgid ""
"``CharacterBody2D`` is for implementing bodies that are controlled via code. "
"Character bodies detect collisions with other bodies when moving, but are "
"not affected by engine physics properties, like gravity or friction. While "
"this means that you have to write some code to create their behavior, it "
"also means you have more precise control over how they move and react."
msgstr ""
"``KinematicBody2D`` est destiné à l'implémentation de corps qui doivent être "
"contrôlés par code. Ils détectent les collisions avec d'autres corps en "
"mouvement, mais ne sont pas affectés par les propriétés physiques du moteur, "
"comme la gravité ou la friction. Bien que cela signifie que vous devez "
"écrire du code pour créer leur comportement, cela signifie également que "
"vous avez un contrôle plus précis sur la façon dont ils bougent et "
"réagissent."

#, fuzzy
msgid ""
"This document assumes you're familiar with Godot's various physics bodies. "
"Please read :ref:`doc_physics_introduction` first, for an overview of the "
"physics options."
msgstr ""
"Ce document suppose que vous connaissez les différents corps physiques de "
"Godot. Veuillez d'abord lire :ref:`doc_physics_introduction`."

#, fuzzy
msgid ""
"A `CharacterBody2D` can be affected by gravity and other forces, but you "
"must calculate the movement in code. The physics engine will not move a "
"`CharacterBody2D`."
msgstr ""
"Un `KinematicBody2D` peut être affecté par la gravité et d'autres forces, "
"mais vous devez calculer le mouvement en code. Le moteur physique ne déplace "
"pas un `KinematicBody2D`."

msgid "Movement and collision"
msgstr "Mouvement et collision"

#, fuzzy
msgid ""
"When moving a ``CharacterBody2D``, you should not set its ``position`` "
"property directly. Instead, you use the ``move_and_collide()`` or "
"``move_and_slide()`` methods. These methods move the body along a given "
"vector and detect collisions."
msgstr ""
"Lorsque vous déplacez un ``KinematicBody2D``, vous ne devez pas définir "
"directement sa propriété ``position``. Au lieu de cela, vous utilisez les "
"méthodes ``move_and_collide()`` ou ``move_and_slide()``. Ces méthodes "
"déplacent le corps le long d'un vecteur donné et s'arrêtent instantanément "
"si une collision est détectée avec un autre corps. Après la collision d'un "
"KinematicBody2D, toute *réponse à la collision* doit être codée manuellement."

#, fuzzy
msgid ""
"You should handle physics body movement in the ``_physics_process()`` "
"callback."
msgstr ""
"Le mouvement du KinematicBody2D ne doit se faire que dans la méthode de "
"rappel ``_physics_process()``."

msgid ""
"The two movement methods serve different purposes, and later in this "
"tutorial, you'll see examples of how they work."
msgstr ""
"Les deux méthodes de mouvement ont des objectifs différents, et plus loin "
"dans ce tutoriel, vous verrez des exemples de leur fonctionnement."

#, fuzzy
msgid "move_and_collide"
msgstr "``move_and_collide``"

#, fuzzy
msgid ""
"This method takes one required parameter: a :ref:`Vector2 <class_Vector2>` "
"indicating the body's relative movement. Typically, this is your velocity "
"vector multiplied by the frame timestep (``delta``). If the engine detects a "
"collision anywhere along this vector, the body will immediately stop moving. "
"If this happens, the method will return a :ref:`KinematicCollision2D "
"<class_KinematicCollision2D>` object."
msgstr ""
"Cette méthode prend un paramètre : a :ref:`Vector2 <class_Vector2>` "
"indiquant le mouvement relatif du corps. Typiquement, c'est votre vecteur de "
"vitesse multiplié par le pas de temps de l'image (``delta``). Si le moteur "
"détecte une collision le long de ce vecteur, le corps s'arrête "
"immédiatement. Si cela se produit, la méthode retournera un objet :ref:"
"`KinematicCollision2D <class_KinematicCollision2D>`."

msgid ""
"``KinematicCollision2D`` is an object containing data about the collision "
"and the colliding object. Using this data, you can calculate your collision "
"response."
msgstr ""
"``KinematicCollision2D`` est un objet contenant des données sur la collision "
"et l'objet entrant en collision. À l'aide de ces données, vous pouvez "
"calculer votre réaction en cas de collision."

msgid ""
"``move_and_collide`` is most useful when you just want to move the body and "
"detect collision, but don't need any automatic collision response. For "
"example, if you need a bullet that ricochets off a wall, you can directly "
"change the angle of the velocity when you detect a collision. See below for "
"an example."
msgstr ""

#, fuzzy
msgid "move_and_slide"
msgstr "``move_and_slide``"

msgid ""
"The ``move_and_slide()`` method is intended to simplify the collision "
"response in the common case where you want one body to slide along the "
"other. It is especially useful in platformers or top-down games, for example."
msgstr ""
"La méthode ``move_and_slide()`` est destinée à simplifier la réponse de "
"collision dans le cas courant où vous voulez qu'un corps glisse le long de "
"l'autre. Ceci est particulièrement utile dans les jeux de plates-formes ou "
"les jeux top-down, par exemple."

msgid ""
"When calling ``move_and_slide()``, the function uses a number of node "
"properties to calculate its slide behavior. These properties can be found in "
"the Inspector, or set in code."
msgstr ""

#, fuzzy
msgid "``velocity`` - *default value:* ``Vector2( 0, 0 )``"
msgstr "``up_direction`` - *valeur par défaut :* ``Vecteur2( 0, 0 )``"

msgid ""
"This property represents the body's velocity vector in pixels per second. "
"``move_and_slide()`` will modify this value automatically when colliding."
msgstr ""

#, fuzzy
msgid "``motion_mode`` - *default value:* ``MOTION_MODE_GROUNDED``"
msgstr "``max_slides`` - *valeur par défaut :* ``4``"

#, fuzzy
msgid ""
"This property is typically used to distinguish between side-scrolling and "
"top-down movement. When using the default value, you can use the "
"``is_on_floor()``, ``is_on_wall()``, and ``is_on_ceiling()`` methods to "
"detect what type of surface the body is in contact with, and the body will "
"interact with slopes. When using ``MOTION_MODE_FLOATING``, all collisions "
"will be considered \"walls\"."
msgstr ""
"Ce paramètre vous permet de définir quelles surfaces le moteur doit "
"considérer comme étant le sol. Cette option vous permet d'utiliser les "
"méthodes ``is_on_floor()``, ``is_on_wall()`` et ``is_on_ceiling()`` pour "
"détecter avec quel type de surface le corps est en contact. La valeur par "
"défaut signifie que toutes les surfaces sont considérées comme des murs."

#, fuzzy
msgid "``up_direction`` - *default value:* ``Vector2( 0, -1 )``"
msgstr "``up_direction`` - *valeur par défaut :* ``Vecteur2( 0, 0 )``"

#, fuzzy
msgid ""
"This property allows you to define what surfaces the engine should consider "
"being the floor. Its value lets you use the ``is_on_floor()``, "
"``is_on_wall()``, and ``is_on_ceiling()`` methods to detect what type of "
"surface the body is in contact with. The default value means that the top "
"side of horizontal surfaces will be considered \"ground\"."
msgstr ""
"Ce paramètre vous permet de définir quelles surfaces le moteur doit "
"considérer comme étant le sol. Cette option vous permet d'utiliser les "
"méthodes ``is_on_floor()``, ``is_on_wall()`` et ``is_on_ceiling()`` pour "
"détecter avec quel type de surface le corps est en contact. La valeur par "
"défaut signifie que toutes les surfaces sont considérées comme des murs."

#, fuzzy
msgid "``floor_stop_on_slope`` - *default value:* ``true``"
msgstr "``stop_on_slope`` - *valeur par défaut :* ``false``"

msgid ""
"This parameter prevents a body from sliding down slopes when standing still."
msgstr ""
"Ce paramètre empêche un corps de glisser sur les pentes lorsqu'il est à "
"l'arrêt."

#, fuzzy
msgid ""
"``wall_min_slide_angle`` - *default value:* ``0.261799`` (in radians, "
"equivalent to ``15`` degrees)"
msgstr ""
"``floor_max_angle`` - *valeur par défaut:* ``0.785398`` (en radians, "
"équivalent à ``45`` degrés)"

msgid ""
"This is the minimum angle where the body is allowed to slide when it hits a "
"slope."
msgstr ""

msgid ""
"``floor_max_angle`` - *default value:* ``0.785398`` (in radians, equivalent "
"to ``45`` degrees)"
msgstr ""
"``floor_max_angle`` - *valeur par défaut:* ``0.785398`` (en radians, "
"équivalent à ``45`` degrés)"

msgid ""
"This parameter is the maximum angle before a surface is no longer considered "
"a \"floor.\""
msgstr ""
"Ce paramètre est l'angle maximum avant qu'une surface ne soit plus "
"considérée comme un \"sol.\""

msgid ""
"There are many other properties that can be used to modify the body's "
"behavior under specific circumstances. See the :ref:`CharacterBody2D "
"<class_CharacterBody2D>` docs for full details."
msgstr ""

msgid "Detecting collisions"
msgstr "Détection des collisions"

msgid ""
"When using ``move_and_collide()`` the function returns a "
"``KinematicCollision2D`` directly, and you can use this in your code."
msgstr ""
"Lorsque vous utilisez ``move_and_collide()``, la fonction retourne "
"directement un ``KinematicCollision2D``, et vous pouvez l'utiliser dans "
"votre code."

#, fuzzy
msgid ""
"When using ``move_and_slide()`` it's possible to have multiple collisions "
"occur, as the slide response is calculated. To process these collisions, use "
"``get_slide_collision_count()`` and ``get_slide_collision()``:"
msgstr ""
"En utilisant ``move_and_slide()``, il est possible que plusieurs collisions "
"se produisent, car la réponse du glissement est calculée. Pour traiter ces "
"collisions, utilisez ``get_slide_count()`` et ``get_slide_collision()`` :"

#, fuzzy
msgid ""
"`get_slide_collision_count()` only counts times the body has collided and "
"changed direction."
msgstr ""
"`get_slide_count()` ne compte que les fois où le corps est entré en "
"collision et a changé de direction."

msgid ""
"See :ref:`KinematicCollision2D <class_KinematicCollision2D>` for details on "
"what collision data is returned."
msgstr ""
"Voir :ref:`KinematicCollision2D <class_KinematicCollision2D>` pour plus de "
"détails sur les données de collision renvoyées."

msgid "Which movement method to use?"
msgstr "Quelle méthode de mouvement utiliser ?"

#, fuzzy
msgid ""
"A common question from new Godot users is: \"How do you decide which "
"movement function to use?\" Often, the response is to use "
"``move_and_slide()`` because it seems simpler, but this is not necessarily "
"the case. One way to think of it is that ``move_and_slide()`` is a special "
"case, and ``move_and_collide()`` is more general. For example, the following "
"two code snippets result in the same collision response:"
msgstr ""
"Une question courante chez les nouveaux utilisateurs de Godot est : "
"\"Comment décider quelle fonction de mouvement utiliser ?\" Souvent, la "
"réponse est d'utiliser ``move_and_slide()`` parce qu'elle est plus "
"\"simple\", mais ce n'est pas nécessairement le cas. Une façon d'y réfléchir "
"est de se dire que ``move_and_slide()`` est un cas spécial, et "
"``move_and_collide()`` est plus général. Par exemple, les deux extraits de "
"code ci-dessous conduisent à la même réaction à la collision :"

msgid ""
"Anything you do with ``move_and_slide()`` can also be done with "
"``move_and_collide()``, but it might take a little more code. However, as "
"we'll see in the examples below, there are cases where ``move_and_slide()`` "
"doesn't provide the response you want."
msgstr ""
"Tout ce qui peut être fait avec ``move_and_slide()`` peut aussi être fait "
"avec ``move_and_collide()``, mais cela peut demander un peu plus de code. "
"Néammoins, comme nous allons le voir dans les exemples ci-dessous, il y a "
"des cas où ``move_and_slide()`` ne donne pas le résultat voulu."

#, fuzzy
msgid ""
"In the example above, ``move_and_slide()`` automatically alters the "
"``velocity`` variable. This is because when the character collides with the "
"environment, the function recalculates the speed internally to reflect the "
"slowdown."
msgstr ""
"Dans l'exemple ci-dessus, nous attribuons la vitesse que "
"``move_and_slide()`` renvoie dans la variable ``velocity``. En effet, "
"lorsque le personnage entre en collision avec l'environnement, la fonction "
"recalcule la vitesse en interne pour refléter le ralentissement."

msgid ""
"For example, if your character fell on the floor, you don't want it to "
"accumulate vertical speed due to the effect of gravity. Instead, you want "
"its vertical speed to reset to zero."
msgstr ""
"Par exemple, si votre personnage est tombé au sol, vous ne voulez pas qu'il "
"accumule de la vitesse verticale à cause de l'effet de la gravité. Au lieu "
"de cela, vous souhaitez que sa vitesse verticale soit remise à zéro."

#, fuzzy
msgid ""
"``move_and_slide()`` may also recalculate the kinematic body's velocity "
"several times in a loop as, to produce a smooth motion, it moves the "
"character and collides up to five times by default. At the end of the "
"process, the character's new velocity is available for use on the next frame."
msgstr ""
"``move_and_slide()`` peut aussi recalculer la vitesse du corps cinématique "
"plusieurs fois dans une boucle car, pour produire un mouvement fluide, il "
"déplace le personnage et entre en collision jusqu'à cinq fois par défaut. À "
"la fin du processus, la fonction renvoie la nouvelle vitesse du personnage "
"que nous pouvons stocker dans notre variable ``velocity`` et utiliser lors "
"de la trame suivante."

msgid "Examples"
msgstr "Exemples"

msgid ""
"To see these examples in action, download the sample project: "
"`character_body_2d_starter.zip <https://github.com/godotengine/godot-docs-"
"project-starters/releases/download/latest-4.x/character_body_2d_starter."
"zip>`_"
msgstr ""

msgid "Movement and walls"
msgstr "Mouvement et murs"

#, fuzzy
msgid ""
"If you've downloaded the sample project, this example is in \"basic_movement."
"tscn\"."
msgstr ""
"Si vous avez téléchargé le projet de test, cet exemple est dans "
"\"BasicMovement.tscn\"."

#, fuzzy
msgid ""
"For this example, add a ``CharacterBody2D`` with two children: a "
"``Sprite2D`` and a ``CollisionShape2D``. Use the Godot \"icon.svg\" as the "
"Sprite2D's texture (drag it from the Filesystem dock to the *Texture* "
"property of the ``Sprite2D``). In the ``CollisionShape2D``'s *Shape* "
"property, select \"New RectangleShape2D\" and size the rectangle to fit over "
"the sprite image."
msgstr ""
"Pour cet exemple, ajoutez un ``KinematicBody2D`` avec deux enfants : une "
"``Sprite`` et une ``CollisionShape2D``. Utilisez l'icône de Godot \"icon."
"png\" comme texture pour la Sprite (faites glisser depuis le Système de "
"fichiers vers la propriété *Texture* de la ``Sprite``). Dans la propriété "
"*Shape* de la ``CollisionShape2D``, sélectionnez \"Nouveau "
"RectangleShape2D\" and redimensionnez le rectangle pour remplir l'image de "
"la Sprite."

msgid ""
"See :ref:`doc_2d_movement` for examples of implementing 2D movement schemes."
msgstr ""
"Voir :ref:`doc_2d_movement` pour des exemples d'implémentation de systèmes "
"de mouvement 2D."

#, fuzzy
msgid "Attach a script to the CharacterBody2D and add the following code:"
msgstr "Attachez un script au KinematicBody2D et ajoutez le code suivant :"

#, fuzzy
msgid ""
"Run this scene and you'll see that ``move_and_collide()`` works as expected, "
"moving the body along the velocity vector. Now let's see what happens when "
"you add some obstacles. Add a :ref:`StaticBody2D <class_StaticBody2D>` with "
"a rectangular collision shape. For visibility, you can use a Sprite2D, a "
"Polygon2D, or turn on \"Visible Collision Shapes\" from the \"Debug\" menu."
msgstr ""
"Jouez la scène et vous verrez que ``move_and_collide()`` marche comme prévu "
"et bouge le corps le long du vecteur de vitesse. Maintenant voyons ce qui se "
"passe quand on ajoute des obstacles. Ajoutez un :ref:`StaticBody2D "
"<class_StaticBody2D>` avec une forme de collision rectangulaire. Pour la "
"rendre visible, vous pouvez utiliser une Sprite, un Polygon2D, ou bien "
"activer l'option \"Formes de collision visibles\" du menu \"Débogage\"."

#, fuzzy
msgid ""
"Run the scene again and try moving into the obstacle. You'll see that the "
"``CharacterBody2D`` can't penetrate the obstacle. However, try moving into "
"the obstacle at an angle and you'll find that the obstacle acts like glue - "
"it feels like the body gets stuck."
msgstr ""
"Jouez la scène de nouveau et essayez de bouger vers les obstacles. Vous "
"verrez que le ``KinematicBody2D`` ne peut pas les traverser. Néammoins, "
"essayez de bouger vers les obstacles avec un angle et vous verrez qu'ils "
"agissent comme de la colle ; il semble que le corps se coince."

msgid ""
"This happens because there is no *collision response*. "
"``move_and_collide()`` stops the body's movement when a collision occurs. We "
"need to code whatever response we want from the collision."
msgstr ""
"Cela arrive parce qu'il n'y a pas de *réaction à la collision*. "
"``move_and_collide()`` arrête le mouvement du corps quand une collision se "
"produit. On doit coder n'importe quelle réaction que l'on veut pour cette "
"collision."

#, fuzzy
msgid "Try changing the function to ``move_and_slide()`` and running again."
msgstr ""
"Essayez de changer la fonction en ``move_and_slide(velocity)`` et de rejouer "
"la scène. Notez qu'on a enlevé le ``delta`` du calcul de la vitesse."

msgid ""
"``move_and_slide()`` provides a default collision response of sliding the "
"body along the collision object. This is useful for a great many game types, "
"and may be all you need to get the behavior you want."
msgstr ""
"``move_and_slide()`` fournit une réaction à la collision par défaut en "
"faisant glisser le corps le long de l'objet de la collision. C'est utile "
"pour beaucoup de types de jeux, et il est possible que ce soit le seul "
"comportement dont vous ayez besoin."

msgid "Bouncing/reflecting"
msgstr "Rebondissement/réflexion"

#, fuzzy
msgid ""
"What if you don't want a sliding collision response? For this example "
"(\"bounce_and_collide.tscn\" in the sample project), we have a character "
"shooting bullets and we want the bullets to bounce off the walls."
msgstr ""
"Et si vous ne vouliez pas de réponse de collision glissante ? Pour cet "
"exemple (\"BounceandCollide.tscn\" dans le projet de test), nous avons un "
"personnage qui tire des balles et nous voulons que ces balles rebondissent "
"sur les murs."

msgid ""
"This example uses three scenes. The main scene contains the Player and "
"Walls. The Bullet and Wall are separate scenes so that they can be instanced."
msgstr ""
"Cet exemple utilise trois scènes, La scène principale contient le joueur "
"(Player) et les murs (Walls). La balle (Bullet) et le mur (Wall) sont des "
"scènes séparées pour pouvoir être instanciés."

#, fuzzy
msgid ""
"The Player is controlled by the ``w`` and ``s`` keys for forward and back. "
"Aiming uses the mouse pointer. Here is the code for the Player, using "
"``move_and_slide()``:"
msgstr ""
"Le joueur est contrôlé avec les touches `w` et `s` pour avancer et reculer. "
"La visée se fait avec le pointeur de la souris. Voici le code du joueur, qui "
"utilise ``move_and_slide()`` :"

msgid "And the code for the Bullet:"
msgstr "Et le code de la balle :"

#, fuzzy
msgid ""
"The action happens in ``_physics_process()``. After using "
"``move_and_collide()``, if a collision occurs, a ``KinematicCollision2D`` "
"object is returned (otherwise, the return is ``null``)."
msgstr ""
"L'action se passe dans ``_physics_process()``. Après avoir utilisé "
"``move_and_collide()``, si une collision s'est produite, un objet "
"``KinematicCollision2D`` est retourné (sinon, la valeur de retour est "
"``Nil``)."

msgid ""
"If there is a returned collision, we use the ``normal`` of the collision to "
"reflect the bullet's ``velocity`` with the ``Vector2.bounce()`` method."
msgstr ""
"Si une collision est retournée, on utilise la normale de la collision pour "
"faire se réfléchir la vitesse des balles ``velocity`` avec la méthode "
"``Vector2.bounce()``."

msgid ""
"If the colliding object (``collider``) has a ``hit`` method, we also call "
"it. In the example project, we've added a flashing color effect to the Wall "
"to demonstrate this."
msgstr ""
"Si l'objet de la collision (``collider``) a une méthode ``hit``, on "
"l'appelle aussi. Dans le projet d'exemple, on a ajouté un effet de couleur "
"clignotante au mur pour montrer cela."

msgid "Platformer movement"
msgstr "Mouvement de jeu de plateforme"

#, fuzzy
msgid ""
"Let's try one more popular example: the 2D platformer. ``move_and_slide()`` "
"is ideal for quickly getting a functional character controller up and "
"running. If you've downloaded the sample project, you can find this in "
"\"platformer.tscn\"."
msgstr ""
"Essayons un autre exemple populaire : le jeu de plateforme 2D. "
"``move_and_slide()`` est idéal pour obtenir rapidement un contrôleur de "
"personnage fonctionnel. Si vous avez téléchargé le projet de test, vous "
"pouvez trouver cela dans \"Platformer.tscn\"."

#, fuzzy
msgid ""
"For this example, we'll assume you have a level made of one or more "
"``StaticBody2D`` objects. They can be any shape and size. In the sample "
"project, we're using :ref:`Polygon2D <class_Polygon2D>` to create the "
"platform shapes."
msgstr ""
"Pour cet exemple, nous allons supposer que vous avez déjà créé des objets "
"``StaticBody2D``. Ils peuvent être de n'importe quelle forme et de n'importe "
"quelle taille. Dans ce projet d'exemple, nous allons utiliser :ref:"
"`Polygon2D <class_Polygon2D>` pour créer des formes de plateformes."

msgid "Here's the code for the player body:"
msgstr "Voici le code pour le corps du joueur :"

msgid ""
"In this code we're using ``move_and_slide()`` as described above - to move "
"the body along its velocity vector, sliding along any collision surfaces "
"such as the ground or a platform. We're also using ``is_on_floor()`` to "
"check if a jump should be allowed. Without this, you'd be able to \"jump\" "
"in midair; great if you're making Flappy Bird, but not for a platformer game."
msgstr ""

msgid ""
"There is a lot more that goes into a complete platformer character: "
"acceleration, double-jumps, coyote-time, and many more. The code above is "
"just a starting point. You can use it as a base to expand into whatever "
"movement behavior you need for your own projects."
msgstr ""

msgid "Translation status"
msgstr "État de la traduction"
