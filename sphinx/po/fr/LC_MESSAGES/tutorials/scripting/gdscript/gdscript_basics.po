# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "GDScript reference"
msgstr "Préférences de données"

#, fuzzy
msgid ""
":ref:`GDScript<doc_gdscript>` is a high-level, `object-oriented <https://en."
"wikipedia.org/wiki/Object-oriented_programming>`_, `imperative <https://en."
"wikipedia.org/wiki/Imperative_programming>`_, and `gradually typed <https://"
"en.wikipedia.org/wiki/Gradual_typing>`_ programming language built for "
"Godot. It uses an indentation-based syntax similar to languages like `Python "
"<https://en.wikipedia.org/wiki/Python_%28programming_language%29>`_. Its "
"goal is to be optimized for and tightly integrated with Godot Engine, "
"allowing great flexibility for content creation and integration."
msgstr ""
"*GDScript* est un langage de haut niveau à typage dynamique utilisé pour "
"créer du contenu. Il utilise une syntaxe similaire au langage `Python "
"<https://fr.wikipedia.org/wiki/Python_(langage)>`_ (les blocs sont "
"identifiés par l'indentation et une grande partie des mots clés sont "
"similaires). Son but est d’être optimisé et étroitement intégré avec le "
"moteur Godot, cela permettant une grande flexibilité pour la création et "
"l’intégration de contenu."

msgid "GDScript is entirely independent from Python and is not based on it."
msgstr ""

msgid "History"
msgstr "Historique"

msgid ""
"Documentation about GDScript's history has been moved to the :ref:"
"`Frequently Asked Questions <doc_faq_what_is_gdscript>`."
msgstr ""
"La documentation sur l'histoire de GDScript a été déplacée dans :ref:"
"`Questions fréquentes <doc_faq_what_is_gdscript>`."

msgid "Example of GDScript"
msgstr "Exemple de GDScript"

#, fuzzy
msgid ""
"Some people can learn better by taking a look at the syntax, so here's an "
"example of how GDScript looks."
msgstr ""
"Certaines personnes apprennent plus facilement en regardant la syntaxe. "
"Voici donc un exemple de ce à quoi ressemble GDScript."

msgid ""
"If you have previous experience with statically typed languages such as C, C+"
"+, or C# but never used a dynamically typed one before, it is advised you "
"read this tutorial: :ref:`doc_gdscript_more_efficiently`."
msgstr ""
"Si vous avez déjà de l’expérience avec des langages à typage statique tels "
"que C, C++ ou C# mais que vous n'avez jamais utilisé un langage à typage "
"dynamique, il vous est conseillé de lire ce tutoriel : :ref:"
"`doc_gdscript_more_efficiently`."

msgid "Language"
msgstr "Langage"

msgid ""
"In the following, an overview is given to GDScript. Details, such as which "
"methods are available to arrays or other objects, should be looked up in the "
"linked class descriptions."
msgstr ""
"Ce qui suit est un aperçu de GDScript. Les détails tels que les méthodes "
"disponibles pour les tableaux ou autres objets peuvent être consultés dans "
"les liens vers les descriptions des classes."

msgid "Identifiers"
msgstr "Identifiants"

msgid ""
"Any string that restricts itself to alphabetic characters (``a`` to ``z`` "
"and ``A`` to ``Z``), digits (``0`` to ``9``) and ``_`` qualifies as an "
"identifier. Additionally, identifiers must not begin with a digit. "
"Identifiers are case-sensitive (``foo`` is different from ``FOO``)."
msgstr ""
"Toute chaîne de caractère limitée aux caractères alphabétiques (``a`` à "
"``z`` et ``A`` à ``Z``), aux chiffres (``0`` à ``9``) et ``_`` est un "
"identifiant potentiel. Les identifiants ne doivent également pas commencer "
"par un chiffre. Les identifiants sont sensibles à la casse. (``toto`` est "
"différent de ``TOTO``)."

msgid ""
"Identifiers may also contain most Unicode characters part of `UAX#31 "
"<https://www.unicode.org/reports/tr31/>`__. This allows you to use "
"identifier names written in languages other than English. Unicode characters "
"that are considered \"confusable\" for ASCII characters and emoji are not "
"allowed in identifiers."
msgstr ""

msgid "Keywords"
msgstr "Mots-clés"

msgid ""
"The following is the list of keywords supported by the language. Since "
"keywords are reserved words (tokens), they can't be used as identifiers. "
"Operators (like ``in``, ``not``, ``and`` or ``or``) and names of built-in "
"types as listed in the following sections are also reserved."
msgstr ""
"Ce qui suit est une liste de mots-clés supportés par le langage. Étant donné "
"que les mots-clés sont des mots (symboles) réservés, il ne peuvent êtres "
"utilisés comme identifiants. Les opérateurs (comme ``in``, ``not``, ``and`` "
"ou ``or``) et les noms des types intégrés énumérés dans les sections "
"suivantes sont également réservés."

msgid ""
"Keywords are defined in the `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ in "
"case you want to take a look under the hood."
msgstr ""
"Les mots-clés sont définis dans le `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ si "
"vous souhaitez regarder sous le capot."

msgid "Keyword"
msgstr "Mot-clé"

msgid "Description"
msgstr "Description"

msgid "if"
msgstr "if"

msgid "See `if/else/elif`_."
msgstr "Voir `if/else/elif`_."

msgid "elif"
msgstr "elif"

msgid "else"
msgstr "else"

msgid "for"
msgstr "for"

msgid "See for_."
msgstr "Voir for_."

msgid "while"
msgstr "while"

msgid "See while_."
msgstr "Voir while_."

msgid "match"
msgstr "match"

msgid "See match_."
msgstr "Voir match_."

msgid "break"
msgstr "break"

msgid "Exits the execution of the current ``for`` or ``while`` loop."
msgstr "Quitte l'exécution de la boucle ``for`` ou ``while`` courante."

msgid "continue"
msgstr "continue"

msgid ""
"Immediately skips to the next iteration of the ``for`` or ``while`` loop."
msgstr ""
"Passe immédiatement à l'itération suivante de la boucle ``for`` ou ``while``."

msgid "pass"
msgstr "pass"

msgid ""
"Used where a statement is required syntactically but execution of code is "
"undesired, e.g. in empty functions."
msgstr ""
"Utilisé lorsqu'une instruction est requise syntaxiquement mais où "
"l’exécution de code est indésirable, comme par exemple, dans une fonction "
"vide."

msgid "return"
msgstr "return"

msgid "Returns a value from a function."
msgstr "Retourne une valeur à partir d'une fonction."

msgid "class"
msgstr "class"

#, fuzzy
msgid "Defines an inner class. See `Inner classes`_."
msgstr "Une classe interne à l'intérieur d'un autre fichier de classe."

msgid "class_name"
msgstr "class_name"

msgid ""
"Defines the script as a globally accessible class with the specified name. "
"See `Registering named classes`_."
msgstr ""

msgid "extends"
msgstr "extends"

msgid "Defines what class to extend with the current class."
msgstr "Définit quelle classe étendre avec la classe courante."

msgid "is"
msgstr "is"

msgid ""
"Tests whether a variable extends a given class, or is of a given built-in "
"type."
msgstr ""
"Teste si une variable est du type d'une classe donnée, ou si elle est d'un "
"type intégré donnée."

#, fuzzy
msgid "in"
msgstr "Rechercher"

msgid ""
"Tests whether a value is within a string, array, range, dictionary, or node. "
"When used with ``for``, it iterates through them instead of testing."
msgstr ""

msgid "as"
msgstr "as"

msgid "Cast the value to a given type if possible."
msgstr "Convertir la valeur vers un type donné, si possible."

msgid "self"
msgstr "self"

msgid "Refers to current class instance."
msgstr "Réfère à l'instance courante de la classe."

msgid "signal"
msgstr "signal"

msgid "Defines a signal."
msgstr "Définit un signal."

msgid "func"
msgstr "func"

msgid "Defines a function."
msgstr "Définit une fonction."

msgid "static"
msgstr "static"

#, fuzzy
msgid "Defines a static function or a static member variable."
msgstr ""
"Définit une fonction statique. Les variables membres statiques ne sont pas "
"autorisés."

msgid "const"
msgstr "const"

msgid "Defines a constant."
msgstr "Définit une constante."

msgid "enum"
msgstr "énumération"

msgid "Defines an enum."
msgstr "Définit une énumération."

msgid "var"
msgstr "var"

msgid "Defines a variable."
msgstr "Définit une variable."

msgid "breakpoint"
msgstr "breakpoint"

msgid ""
"Editor helper for debugger breakpoints. Unlike breakpoints created by "
"clicking in the gutter, ``breakpoint`` is stored in the script itself. This "
"makes it persistent across different machines when using version control."
msgstr ""

msgid "preload"
msgstr "preload"

msgid "Preloads a class or variable. See `Classes as resources`_."
msgstr "Précharge une classe ou une variable. Voir `Classes as resources`_."

msgid "await"
msgstr ""

msgid ""
"Waits for a signal or a coroutine to finish. See `Awaiting for signals or "
"coroutines`_."
msgstr ""

msgid "yield"
msgstr "yield"

msgid "Previously used for coroutines. Kept as keyword for transition."
msgstr ""

msgid "assert"
msgstr "assert"

msgid ""
"Asserts a condition, logs error on failure. Ignored in non-debug builds. See "
"`Assert keyword`_."
msgstr ""
"Affirmer une condition, journalise les erreurs en cas d'échec. Ignorer dans "
"les compilations autre que de débogages. Voir `Assert keyword`_."

msgid "void"
msgstr "void"

msgid "Used to represent that a function does not return any value."
msgstr ""

msgid "PI"
msgstr "PI"

msgid "PI constant."
msgstr "Constante PI."

msgid "TAU"
msgstr "TAU"

msgid "TAU constant."
msgstr "Constante TAU."

msgid "INF"
msgstr "INF"

#, fuzzy
msgid "Infinity constant. Used for comparisons and as result of calculations."
msgstr "Constante de l'infinité. Elle est utilisée pour les comparaisons."

msgid "NAN"
msgstr "NAN"

#, fuzzy
msgid ""
"NAN (not a number) constant. Used as impossible result from calculations."
msgstr ""
"La constante NAN (n'est pas un nombre). Elle est utilisée pour les "
"comparaisons."

msgid "Operators"
msgstr "Opérateurs"

msgid "The following is the list of supported operators and their precedence."
msgstr "Ce qui suit est la liste des opérateurs supportés et leur priorité."

msgid "**Operator**"
msgstr "**Opérateur**"

msgid "**Description**"
msgstr "**Description**"

#, fuzzy
msgid "``(`` ``)``"
msgstr "``<<`` ``>>``"

#, fuzzy
msgid "Grouping (highest priority)"
msgstr "Abonnement (priorité la plus élevée)"

msgid ""
"Parentheses are not really an operator, but allow you to explicitly specify "
"the precedence of an operation."
msgstr ""

msgid "``x[index]``"
msgstr "``x[index]``"

#, fuzzy
msgid "Subscription"
msgstr "Abonnements"

msgid "``x.attribute``"
msgstr "``x.attribut``"

msgid "Attribute reference"
msgstr "Référence d'attribut"

msgid "``foo()``"
msgstr "``foo()``"

msgid "Function call"
msgstr "Appel de fonction"

msgid "``await x``"
msgstr ""

msgid "`Awaiting for signals or coroutines`_"
msgstr ""

#, fuzzy
msgid "``x is Node``"
msgstr "``node``"

#, fuzzy
msgid "Type checking"
msgstr "La conversion de type"

msgid ""
"See also :ref:`is_instance_of() <class_@GDScript_method_is_instance_of>` "
"function."
msgstr ""

msgid "``x ** y``"
msgstr ""

msgid "Power"
msgstr ""

msgid ""
"Multiplies ``x`` by itself ``y`` times, similar to calling :ref:`pow() "
"<class_@GlobalScope_method_pow>` function."
msgstr ""

msgid ""
"**Note:** In GDScript, the ``**`` operator is `left-associative <https://en."
"wikipedia.org/wiki/Operator_associativity>`_. See a detailed note after the "
"table."
msgstr ""

msgid "``~x``"
msgstr ""

msgid "Bitwise NOT"
msgstr "Opération bit-à-bit de négation"

msgid "``+x``"
msgstr ""

msgid "``-x``"
msgstr "``-x``"

#, fuzzy
msgid "Identity / Negation"
msgstr "Indentation"

msgid "``x * y``"
msgstr ""

msgid "``x / y``"
msgstr ""

msgid "``x % y``"
msgstr ""

msgid "Multiplication / Division / Remainder"
msgstr "Multiplication / Division / Reste"

msgid ""
"The ``%`` operator is additionally used for :ref:`format strings "
"<doc_gdscript_printf>`."
msgstr ""

msgid ""
"**Note:** These operators have the same behavior as C++, which may be "
"unexpected for users coming from Python, JavaScript, etc. See a detailed "
"note after the table."
msgstr ""

msgid "``x + y``"
msgstr ""

msgid "``x - y``"
msgstr ""

#, fuzzy
msgid "Addition (or Concatenation) / Subtraction"
msgstr "Ajout / Concaténation de tableaux"

msgid "``x << y``"
msgstr ""

msgid "``x >> y``"
msgstr ""

msgid "Bit shifting"
msgstr "Décalage de bits"

msgid "``x & y``"
msgstr ""

msgid "Bitwise AND"
msgstr "Conjonction logique bit-à-bit"

msgid "``x ^ y``"
msgstr ""

msgid "Bitwise XOR"
msgstr "Opération \"Ou\" exclusif bit-à-bit"

msgid "``x | y``"
msgstr ""

msgid "Bitwise OR"
msgstr "Disjonction logique bit-à-bit"

msgid "``x == y``"
msgstr ""

msgid "``x != y``"
msgstr ""

msgid "``x < y``"
msgstr ""

msgid "``x > y``"
msgstr ""

msgid "``x <= y``"
msgstr ""

msgid "``x >= y``"
msgstr ""

#, fuzzy
msgid "Comparison"
msgstr "Comparaisons"

msgid "See a detailed note after the table."
msgstr ""

msgid "``x in y``"
msgstr ""

msgid "``x not in y``"
msgstr ""

#, fuzzy
msgid "Inclusion checking"
msgstr "Occlusion culling"

msgid "``in`` is also used with the for_ keyword as part of the syntax."
msgstr ""

#, fuzzy
msgid "``not x``"
msgstr "``node``"

msgid "``!x``"
msgstr ""

msgid "Boolean NOT and its :ref:`unrecommended <boolean_operators>` alias"
msgstr ""

msgid "``x and y``"
msgstr ""

msgid "``x && y``"
msgstr ""

msgid "Boolean AND and its :ref:`unrecommended <boolean_operators>` alias"
msgstr ""

msgid "``x or y``"
msgstr ""

msgid "``x || y``"
msgstr ""

msgid "Boolean OR and its :ref:`unrecommended <boolean_operators>` alias"
msgstr ""

msgid "``true_expr if cond else false_expr``"
msgstr ""

msgid "Ternary if/else"
msgstr "if / else ternaire"

#, fuzzy
msgid "``x as Node``"
msgstr "``node``"

#, fuzzy
msgid "`Type casting <casting_>`_"
msgstr "Conversion de type et Casting"

msgid "``x = y``"
msgstr ""

msgid "``x += y``"
msgstr ""

msgid "``x -= y``"
msgstr ""

msgid "``x *= y``"
msgstr ""

msgid "``x /= y``"
msgstr ""

msgid "``x **= y``"
msgstr ""

msgid "``x %= y``"
msgstr ""

msgid "``x &= y``"
msgstr ""

msgid "``x |= y``"
msgstr ""

msgid "``x ^= y``"
msgstr ""

msgid "``x <<= y``"
msgstr ""

msgid "``x >>= y``"
msgstr ""

msgid "Assignment (lowest priority)"
msgstr "Affectation (priorité la plus basse)"

msgid "You cannot use an assignment operator inside an expression."
msgstr ""

msgid "The behavior of some operators may differ from what you expect:"
msgstr ""

msgid ""
"If both operands of the ``/`` operator are :ref:`int <class_int>`, then "
"integer division is performed instead of fractional. For example ``5 / 2 == "
"2``, not ``2.5``. If this is not desired, use at least one :ref:`float "
"<class_float>` literal (``x / 2.0``), cast (``float(x) / y``), or multiply "
"by ``1.0`` (``x * 1.0 / y``)."
msgstr ""

msgid ""
"The ``%`` operator is only available for ints, for floats use the :ref:"
"`fmod() <class_@GlobalScope_method_fmod>` function."
msgstr ""

msgid ""
"For negative values, the ``%`` operator and ``fmod()`` use `truncation "
"<https://en.wikipedia.org/wiki/Truncation>`_ instead of rounding towards "
"negative infinity. This means that the remainder has a sign. If you need the "
"remainder in a mathematical sense, use the :ref:`posmod() "
"<class_@GlobalScope_method_posmod>` and :ref:`fposmod() "
"<class_@GlobalScope_method_fposmod>` functions instead."
msgstr ""

msgid ""
"The ``**`` operator is `left-associative <https://en.wikipedia.org/wiki/"
"Operator_associativity>`_. This means that ``2 ** 2 ** 3`` is equal to ``(2 "
"** 2) ** 3``. Use parentheses to explicitly specify precedence you need, for "
"example ``2 ** (2 ** 3)``."
msgstr ""

msgid ""
"The ``==`` and ``!=`` operators sometimes allow you to compare values of "
"different types (for example, ``1 == 1.0`` is true), but in other cases it "
"can cause a runtime error. If you're not sure about the types of the "
"operands, you can safely use the :ref:`is_same() "
"<class_@GlobalScope_method_is_same>` function (but note that it is more "
"strict about types and references). To compare floats, use the :ref:"
"`is_equal_approx() <class_@GlobalScope_method_is_equal_approx>` and :ref:"
"`is_zero_approx() <class_@GlobalScope_method_is_zero_approx>` functions "
"instead."
msgstr ""

msgid "Literals"
msgstr "Littéraux"

#, fuzzy
msgid "**Example(s)**"
msgstr "**Exemple**"

msgid "``null``"
msgstr "``null``"

#, fuzzy
msgid "Null value"
msgstr "Valeur d’énumération"

#, fuzzy
msgid "``false``, ``true``"
msgstr "``-e``, ``--editor``"

#, fuzzy
msgid "Boolean values"
msgstr "Valeur d’énumération"

msgid "``45``"
msgstr "``45``"

msgid "Base 10 integer"
msgstr "Entier en base 10 (décimal)"

msgid "``0x8f51``"
msgstr "``0x8f51``"

msgid "Base 16 (hexadecimal) integer"
msgstr "Entier base 16 (hexadécimal)"

msgid "``0b101010``"
msgstr "``0b101010``"

msgid "Base 2 (binary) integer"
msgstr "Entier base 2 (binaire)"

msgid "``3.14``, ``58.1e-10``"
msgstr "``3.14``, ``58.1e-10``"

msgid "Floating-point number (real)"
msgstr "Nombre à virgule flottante (réel)"

#, fuzzy
msgid "``\"Hello\"``, ``'Hi'``"
msgstr "``\"Bonjour\"``, ``\"Salut\"``"

#, fuzzy
msgid "Regular strings"
msgstr "Résultat de la lumière spéculaire."

#, fuzzy
msgid "``\"\"\"Hello\"\"\"``, ``'''Hi'''``"
msgstr "``\"Bonjour\"``, ``\"Salut\"``"

msgid "Triple-quoted regular strings"
msgstr ""

#, fuzzy
msgid "``r\"Hello\"``, ``r'Hi'``"
msgstr "``\"Bonjour\"``, ``\"Salut\"``"

#, fuzzy
msgid "Raw strings"
msgstr "chaîne"

#, fuzzy
msgid "``r\"\"\"Hello\"\"\"``, ``r'''Hi'''``"
msgstr "``\"Bonjour\"``, ``\"Salut\"``"

#, fuzzy
msgid "Triple-quoted raw strings"
msgstr "Chaînes de format GDScript"

#, fuzzy
msgid "``&\"name\"``"
msgstr "``name``"

#, fuzzy
msgid ":ref:`StringName <class_StringName>`"
msgstr ":ref:`String <class_String>`"

#, fuzzy
msgid "``^\"Node/Label\"``"
msgstr "``@\"Node/Label\"``"

msgid ":ref:`NodePath <class_NodePath>`"
msgstr ":ref:`NodePath <class_NodePath>`"

msgid ""
"There are also two constructs that look like literals, but actually are not:"
msgstr ""

msgid "**Example**"
msgstr "**Exemple**"

msgid "``$NodePath``"
msgstr "``$NodePath``"

msgid "Shorthand for ``get_node(\"NodePath\")``"
msgstr "Sténographie pour ``get_node(\"NodePath\")``"

#, fuzzy
msgid "``%UniqueNode``"
msgstr "``node``"

#, fuzzy
msgid "Shorthand for ``get_node(\"%UniqueNode\")``"
msgstr "Sténographie pour ``get_node(\"NodePath\")``"

msgid ""
"Integers and floats can have their numbers separated with ``_`` to make them "
"more readable. The following ways to write numbers are all valid::"
msgstr ""
"Les nombres entiers et les nombres flottants peuvent être séparés par des "
"``_`` pour les rendre plus lisibles. Les manières suivantes d'écrire les "
"nombres sont toutes valables :"

msgid "**Regular string literals** can contain the following escape sequences:"
msgstr ""

msgid "**Escape sequence**"
msgstr "**Séquence d'échappement**"

msgid "**Expands to**"
msgstr "**S’étend à**"

msgid "``\\n``"
msgstr "``\\n``"

msgid "Newline (line feed)"
msgstr "Nouvelle ligne (line feed)"

msgid "``\\t``"
msgstr "``\\t``"

msgid "Horizontal tab character"
msgstr "Caractère de tabulation horizontale"

msgid "``\\r``"
msgstr "``\\r``"

msgid "Carriage return"
msgstr "Retour chariot"

msgid "``\\a``"
msgstr "``\\a``"

msgid "Alert (beep/bell)"
msgstr "Alerte (bip/cloche)"

msgid "``\\b``"
msgstr "``\\b``"

msgid "Backspace"
msgstr "Effacer"

msgid "``\\f``"
msgstr "``\\f``"

msgid "Formfeed page break"
msgstr "Saut de page Formfeed"

msgid "``\\v``"
msgstr "``\\v``"

msgid "Vertical tab character"
msgstr "Caractère de tabulation verticale"

msgid "``\\\"``"
msgstr "``\\\"``"

msgid "Double quote"
msgstr "Guillemet"

msgid "``\\'``"
msgstr "``\\'``"

msgid "Single quote"
msgstr "Citation unique"

msgid "``\\\\``"
msgstr "``\\\\``"

msgid "Backslash"
msgstr "Antislash"

msgid "``\\uXXXX``"
msgstr "``\\uXXXX``"

#, fuzzy
msgid "UTF-16 Unicode codepoint ``XXXX`` (hexadecimal, case-insensitive)"
msgstr "Point de code Unicode ``XXXX`` (hexadécimal, non sensible à la casse)"

#, fuzzy
msgid "``\\UXXXXXX``"
msgstr "``\\uXXXX``"

#, fuzzy
msgid "UTF-32 Unicode codepoint ``XXXXXX`` (hexadecimal, case-insensitive)"
msgstr "Point de code Unicode ``XXXX`` (hexadécimal, non sensible à la casse)"

#, fuzzy
msgid ""
"There are two ways to represent an escaped Unicode character above "
"``0xFFFF``:"
msgstr "Il y a deux façons d'exporter un projet pour un serveur :"

msgid ""
"as a `UTF-16 surrogate pair <https://en.wikipedia.org/wiki/"
"UTF-16#Code_points_from_U+010000_to_U+10FFFF>`_ ``\\uXXXX\\uXXXX``."
msgstr ""

msgid "as a single UTF-32 codepoint ``\\UXXXXXX``."
msgstr ""

msgid ""
"Also, using ``\\`` followed by a newline inside a string will allow you to "
"continue it in the next line, without inserting a newline character in the "
"string itself."
msgstr ""

msgid ""
"A string enclosed in quotes of one type (for example ``\"``) can contain "
"quotes of another type (for example ``'``) without escaping. Triple-quoted "
"strings allow you to avoid escaping up to two consecutive quotes of the same "
"type (unless they are adjacent to the string edges)."
msgstr ""

msgid ""
"**Raw string literals** always encode the string as it appears in the source "
"code. This is especially useful for regular expressions. Raw strings do not "
"process escape sequences, but you can \"escape\" a quote or backslash (they "
"replace themselves)."
msgstr ""

#, fuzzy
msgid "GDScript also supports :ref:`format strings <doc_gdscript_printf>`."
msgstr "GDScript prend également en charge :ref:`doc_gdscript_printf`."

msgid "Annotations"
msgstr "Annotations"

msgid ""
"There are some special tokens in GDScript that act like keywords but are "
"not, they are *annotations* instead. Every annotation start with the ``@`` "
"character and is specified by a name. A detailed description and example for "
"each annotation can be found inside the :ref:`GDScript class reference "
"<class_@GDScript>`."
msgstr ""

msgid ""
"Annotations affect how the script is treated by external tools and usually "
"don't change the behavior."
msgstr ""

msgid "For instance, you can use it to export a value to the editor::"
msgstr ""

#, fuzzy
msgid ""
"For more information about exporting properties, read the :ref:`GDScript "
"exports <doc_gdscript_exports>` article."
msgstr ""
"Pour plus d'informations sur le fonctionnement des nœuds ``Viewport``, voir "
"le :ref:`Tutoriel sur les Viewports <doc_viewports>`."

msgid ""
"Any constant expression compatible with the required argument type can be "
"passed as an annotation argument value::"
msgstr ""

msgid ""
"Annotations can be specified one per line or all in the same line. They "
"affect the next statement that isn't an annotation. Annotations can have "
"arguments sent between parentheses and separated by commas."
msgstr ""

msgid "Both of these are the same::"
msgstr ""

msgid "``@onready`` annotation"
msgstr ""

msgid ""
"When using nodes, it's common to desire to keep references to parts of the "
"scene in a variable. As scenes are only warranted to be configured when "
"entering the active scene tree, the sub-nodes can only be obtained when a "
"call to ``Node._ready()`` is made."
msgstr ""
"Lors de l'utilisation de nœuds, il est très courant de vouloir garder des "
"références à des parties de la scène dans une variable. Comme les scènes ne "
"peuvent être configurées que lors de l'entrée dans l'arbre des scènes "
"actives, les sous-nœuds ne peuvent être obtenus que lorsqu'un appel à ``Node."
"_ready()`` est fait."

#, fuzzy
msgid ""
"This can get a little cumbersome, especially when nodes and external "
"references pile up. For this, GDScript has the ``@onready`` annotation, that "
"defers initialization of a member variable until ``_ready()`` is called. It "
"can replace the above code with a single line::"
msgstr ""
"Cela peut devenir un peu encombrant, surtout lorsque les nœuds et les "
"références externes s’accumulent. Pour cela, GDScript a le mot-clé "
"``onready``, qui reporte l'initialisation d'une variable membre jusqu'à ce "
"que ``_ready()`` soit appelé. Il peut remplacer le code ci-dessus par une "
"seule ligne :"

msgid ""
"Applying ``@onready`` and any ``@export`` annotation to the same variable "
"doesn't work as you might expect. The ``@onready`` annotation will cause the "
"default value to be set after the ``@export`` takes effect and will override "
"it::"
msgstr ""

msgid ""
"Therefore, the ``ONREADY_WITH_EXPORT`` warning is generated, which is "
"treated as an error by default. We do not recommend disabling or ignoring it."
msgstr ""

msgid "Comments"
msgstr "Commentaire"

msgid ""
"Anything from a ``#`` to the end of the line is ignored and is considered a "
"comment."
msgstr ""
"Tout ce qui est écrit depuis un ``#`` jusqu'à la fin de la ligne est ignoré "
"et est considéré comme un commentaire."

msgid ""
"In the Godot script editor, special keywords are highlighted within comments "
"to bring the user's attention to specific comments:"
msgstr ""

msgid ""
"**Critical** *(appears in red)*: ``ALERT``, ``ATTENTION``, ``CAUTION``, "
"``CRITICAL``, ``DANGER``, ``SECURITY``"
msgstr ""

msgid ""
"**Warning** *(appears in yellow)*: ``BUG``, ``DEPRECATED``, ``FIXME``, "
"``HACK``, ``TASK``, ``TBD``, ``TODO``, ``WARNING``"
msgstr ""

msgid ""
"**Notice** *(appears in green)*: ``INFO``, ``NOTE``, ``NOTICE``, ``TEST``, "
"``TESTING``"
msgstr ""

msgid ""
"These keywords are case-sensitive, so they must be written in uppercase for "
"them to be recognized:"
msgstr ""

msgid ""
"The list of highlighted keywords and their colors can be changed in the "
"**Text Editor > Theme > Comment Markers** section of the Editor Settings."
msgstr ""

#, fuzzy
msgid "Code regions"
msgstr "Considérations"

msgid ""
"Code regions are special types of comments that the script editor "
"understands as *foldable regions*. This means that after writing code region "
"comments, you can collapse and expand the region by clicking the arrow that "
"appears at the left of the comment. This arrow appears within a purple "
"square to be distinguishable from standard code folding."
msgstr ""

#, fuzzy
msgid "The syntax is as follows:"
msgstr "Ce texte se lit comme suit :"

msgid ""
"To create a code region quickly, select several lines in the script editor, "
"right-click the selection then choose **Create Code Region**. The region "
"description will be selected automatically for editing."
msgstr ""

msgid "It is possible to nest code regions within other code regions."
msgstr ""

#, fuzzy
msgid "Here's a concrete usage example of code regions:"
msgstr "Voici quelques exemples d'effets personnalisés :"

msgid ""
"This can be useful to organize large chunks of code into easier to "
"understand sections. However, remember that external editors generally don't "
"support this feature, so make sure your code is easy to follow even when not "
"relying on folding code regions."
msgstr ""

msgid ""
"Individual functions and indented sections (such as ``if`` and ``for``) can "
"*always* be collapsed in the script editor. This means you should avoid "
"using a code region to contain a single function or indented section, as it "
"won't bring much of a benefit. Code regions work best when they're used to "
"group multiple elements together."
msgstr ""

#, fuzzy
msgid "Line continuation"
msgstr "Configuration du moteur"

msgid ""
"A line of code in GDScript can be continued on the next line by using a "
"backslash (``\\``). Add one at the end of a line and the code on the next "
"line will act like it's where the backslash is. Here is an example:"
msgstr ""

msgid "A line can be continued multiple times like this:"
msgstr ""

msgid "Built-in types"
msgstr "Types intégrés"

#, fuzzy
msgid ""
"Built-in types are stack-allocated. They are passed as values. This means a "
"copy is created on each assignment or when passing them as arguments to "
"functions. The exceptions are ``Object``, ``Array``, ``Dictionary``, and "
"packed arrays (such as ``PackedByteArray``), which are passed by reference "
"so they are shared. All arrays, ``Dictionary``, and some objects (``Node``, "
"``Resource``) have a ``duplicate()`` method that allows you to make a copy."
msgstr ""
"Les types intégrés sont alloués sur la pile. Ils sont transmis comme "
"valeurs. Cela signifie qu'une copie est créée à chaque affectation ou quand "
"elles sont passées comme arguments aux fonctions. Les seules exceptions sont "
"les ``Array``\\ s et ``Dictionaries``, qui sont passés par référence de "
"sorte qu'ils sont partagés. (PoolArray comme ``PoolByteArray`` sont passés "
"par valeurs.)"

msgid "Basic built-in types"
msgstr "Types intégrés basiques"

msgid "A variable in GDScript can be assigned to several built-in types."
msgstr "Une variable en GDScript peut être affectée à divers types intégrés."

msgid "null"
msgstr "null"

msgid ""
"``null`` is an empty data type that contains no information and can not be "
"assigned any other value."
msgstr ""
"``null`` est une donnée vide qui ne contient aucune information et à "
"laquelle aucune autre valeur ne peut être affectée."

msgid ":ref:`bool <class_bool>`"
msgstr ":ref:`bool <class_bool>`"

msgid "Short for \"boolean\", it can only contain ``true`` or ``false``."
msgstr "Abrégé de \"boolean\", il ne peut contenir que ``true`` ou ``false``."

msgid ":ref:`int <class_int>`"
msgstr ":ref:`int <class_int>`"

#, fuzzy
msgid ""
"Short for \"integer\", it stores whole numbers (positive and negative). It "
"is stored as a 64-bit value, equivalent to ``int64_t`` in C++."
msgstr ""
"De l'anglais \"integer\", contient des nombres entiers (positifs et "
"négatifs). Ceux-ci sont stockés comme des valeurs 64-bits, équivalent à "
"\"int64_t\" en C++."

msgid ":ref:`float <class_float>`"
msgstr ":ref:`float <class_float>`"

#, fuzzy
msgid ""
"Stores real numbers, including decimals, using floating-point values. It is "
"stored as a 64-bit value, equivalent to ``double`` in C++. Note: Currently, "
"data structures such as ``Vector2``, ``Vector3``, and ``PackedFloat32Array`` "
"store 32-bit single-precision ``float`` values."
msgstr ""
"Contient un nombre réel (avec décimales), en tant que valeur à virgule "
"flottante. Celui-ci est stocké comme valeur 64 bits, équivalent à \"double\" "
"en C++. Note : Actuellement, les structures de données comme Vector2, "
"Vector3 et PoolRealArray stockent des valeurs 32 bits à virgules flottantes "
"de précision unique."

msgid ":ref:`String <class_String>`"
msgstr ":ref:`String <class_String>`"

msgid ""
"A sequence of characters in `Unicode format <https://en.wikipedia.org/wiki/"
"Unicode>`_."
msgstr ""
"Une séquence de caractères au format `Unicode <https://en.wikipedia.org/wiki/"
"Unicode>`_."

msgid ""
"An immutable string that allows only one instance of each name. They are "
"slower to create and may result in waiting for locks when multithreading. In "
"exchange, they're very fast to compare, which makes them good candidates for "
"dictionary keys."
msgstr ""

msgid ""
"A pre-parsed path to a node or a node property.  It can be easily assigned "
"to, and from, a String. They are useful to interact with the tree to get a "
"node, or affecting properties like with :ref:`Tweens <class_Tween>`."
msgstr ""

msgid "Vector built-in types"
msgstr "Types intégrés vectoriels"

msgid ":ref:`Vector2 <class_Vector2>`"
msgstr ":ref:`Vector2 <class_Vector2>`"

msgid ""
"2D vector type containing ``x`` and ``y`` fields. Can also be accessed as an "
"array."
msgstr ""
"Type de vecteur 2D contenant les attributs ``x`` and ``y``. Peut aussi être "
"accédé comme pour un tableau."

#, fuzzy
msgid ":ref:`Vector2i <class_Vector2i>`"
msgstr ":ref:`Vector2 <class_Vector2>`"

msgid ""
"Same as a Vector2 but the components are integers. Useful for representing "
"items in a 2D grid."
msgstr ""

msgid ":ref:`Rect2 <class_Rect2>`"
msgstr ":ref:`Rect2 <class_Rect2>`"

msgid ""
"2D Rectangle type containing two vectors fields: ``position`` and ``size``. "
"Also contains an ``end`` field which is ``position + size``."
msgstr ""
"Type de rectangle 2D contenant deux champs de vecteurs : ``position`` et "
"``size``. Contient également un champ ``end`` qui est ``position + size``."

msgid ":ref:`Vector3 <class_Vector3>`"
msgstr ":ref:`Vector3 <class_Vector3>`"

msgid ""
"3D vector type containing ``x``, ``y`` and ``z`` fields. This can also be "
"accessed as an array."
msgstr ""
"Type de vecteur 3D contenant les attributs ``x``, ``y`` et ``z``. Il peut "
"également être accédé comme un tableau."

#, fuzzy
msgid ":ref:`Vector3i <class_Vector3i>`"
msgstr ":ref:`Vector3 <class_Vector3>`"

msgid ""
"Same as Vector3 but the components are integers. Can be use for indexing "
"items in a 3D grid."
msgstr ""

msgid ":ref:`Transform2D <class_Transform2D>`"
msgstr ":ref:`Transform2D <class_Transform2D>`"

msgid "3×2 matrix used for 2D transforms."
msgstr "Matrice 3x2 utilisée pour les transformations 2D."

msgid ":ref:`Plane <class_Plane>`"
msgstr ":ref:`Plane <class_Plane>`"

msgid ""
"3D Plane type in normalized form that contains a ``normal`` vector field and "
"a ``d`` scalar distance."
msgstr ""
"Plan 3D normalisé contenant un vecteur ``normal`` et une distance scalaire "
"``d``."

#, fuzzy
msgid ":ref:`Quaternion <class_Quaternion>`"
msgstr ":ref:`Quat <class_Quat>`"

msgid ""
"Quaternion is a datatype used for representing a 3D rotation. It's useful "
"for interpolating rotations."
msgstr ""
"Un quaternion est un type de données utilisé pour représenter une rotation "
"3D. Cette représentation est utile pour l'interpolation de rotations."

msgid ":ref:`AABB <class_AABB>`"
msgstr ":ref:`AABB <class_AABB>`"

msgid ""
"Axis-aligned bounding box (or 3D box) contains 2 vectors fields: "
"``position`` and ``size``. Also contains an ``end`` field which is "
"``position + size``."
msgstr ""
"La boite englobante (ou 3D box) alignée par axe contient 2 champs de "
"vecteurs : ``position`` et ``size``. Contient également un champ ``end`` qui "
"est ``position + size``."

msgid ":ref:`Basis <class_Basis>`"
msgstr ":ref:`Basis <class_Basis>`"

msgid ""
"3x3 matrix used for 3D rotation and scale. It contains 3 vector fields "
"(``x``, ``y`` and ``z``) and can also be accessed as an array of 3D vectors."
msgstr ""
"Matrice 3x3 utilisée pour les rotations 3D et les mises à l'échelle. Elle "
"contient 3 attributs vecteurs (``x``, ``y`` et ``z``) et peut aussi être "
"accédé comme un tableae de vecteurs 3D."

#, fuzzy
msgid ":ref:`Transform3D <class_Transform3D>`"
msgstr ":ref:`Transform2D <class_Transform2D>`"

msgid ""
"3D Transform contains a Basis field ``basis`` and a Vector3 field ``origin``."
msgstr ""
"Transformation 3D contenant un attribut base vectorielle ``basis`` et un "
"attribut vecteur 3D (Vector3) ``origin``."

msgid "Engine built-in types"
msgstr "Types intégrés dans le moteur"

msgid ":ref:`Color <class_Color>`"
msgstr ":ref:`Color <class_Color>`"

msgid ""
"Color data type contains ``r``, ``g``, ``b``, and ``a`` fields. It can also "
"be accessed as ``h``, ``s``, and ``v`` for hue/saturation/value."
msgstr ""
"Le type de données Color contient les attributs ``r``, ``g``, ``b``, et "
"``a``. Il peut aussi être accédé par ``h``, ``s``, et ``v`` pour la "
"teinte(hue)/saturation/valeur."

msgid ":ref:`RID <class_RID>`"
msgstr ":ref:`RID <class_RID>`"

msgid "Resource ID (RID). Servers use generic RIDs to reference opaque data."
msgstr ""
"Identifiant de ressource (RID). Les serveurs utilisent des RIDs génériques "
"pour référencer des données opaques."

msgid ":ref:`Object <class_Object>`"
msgstr ":ref:`Object <class_Object>`"

msgid "Base class for anything that is not a built-in type."
msgstr "Classe de base pour tout ce qui n'est pas un type intégré."

msgid "Container built-in types"
msgstr "Types de conteneurs intégrés"

msgid ":ref:`Array <class_Array>`"
msgstr ":ref:`Array <class_Array>`"

msgid ""
"Generic sequence of arbitrary object types, including other arrays or "
"dictionaries (see below). The array can resize dynamically. Arrays are "
"indexed starting from index ``0``. Negative indices count from the end."
msgstr ""
"Séquence générique de types d'objets arbitraires. Sont inclus d'autres "
"tableaux ou dictionnaires (voir ci-dessous). Le tableau peut être "
"redimensionné dynamiquement. Les tableaux sont indexés en commençant par "
"l'index ``0``. Les indices négatifs comptent à partir de la fin."

#, fuzzy
msgid "Typed arrays"
msgstr "real array"

msgid ""
"Godot 4.0 added support for typed arrays. On write operations, Godot checks "
"that element values match the specified type, so the array cannot contain "
"invalid values. The GDScript static analyzer takes typed arrays into "
"account, however array methods like ``front()`` and ``back()`` still have "
"the ``Variant`` return type."
msgstr ""

msgid ""
"Typed arrays have the syntax ``Array[Type]``, where ``Type`` can be any "
"``Variant`` type, native or user class, or enum. Nested array types (like "
"``Array[Array[int]]``) are not supported."
msgstr ""

msgid "``Array`` and ``Array[Variant]`` are the same thing."
msgstr ""

msgid ""
"Arrays are passed by reference, so the array element type is also an "
"attribute of the in-memory structure referenced by a variable in runtime. "
"The static type of a variable restricts the structures that it can reference "
"to. Therefore, you **cannot** assign an array with a different element type, "
"even if the type is a subtype of the required type."
msgstr ""

msgid ""
"If you want to *convert* a typed array, you can create a new array and use "
"the :ref:`Array.assign() <class_Array_method_assign>` method::"
msgstr ""

msgid ""
"The only exception was made for the ``Array`` (``Array[Variant]``) type, for "
"user convenience and compatibility with old code. However, operations on "
"untyped arrays are considered unsafe."
msgstr ""

#, fuzzy
msgid "Packed arrays"
msgstr "Tableau de surface"

msgid ""
"GDScript arrays are allocated linearly in memory for speed. Large arrays "
"(more than tens of thousands of elements) may however cause memory "
"fragmentation. If this is a concern, special types of arrays are available. "
"These only accept a single data type. They avoid memory fragmentation and "
"use less memory, but are atomic and tend to run slower than generic arrays. "
"They are therefore only recommended to use for large data sets:"
msgstr ""
"Les tableaux GDScript sont alloués en mémoire de façon linéaire pour les "
"performances. Les tableaux de très grosse taille (plus d'une dizaine de "
"milliers d’éléments) peuvent cependant provoquer une fragmentation de la "
"mémoire. S'il s'agit d'un problème à considérer, des types de tableaux "
"spéciaux sont disponibles. Ceux-ci n'acceptent qu'un seul type de données. "
"Ils permettent d’éviter une fragmentation de la mémoire, utilisent moins de "
"mémoire, mais sont atomiques et ont tendance à être moins performants que "
"les tableaux génériques. Leur usage n'est donc recommandé que pour de très "
"larges ensembles de données :"

#, fuzzy
msgid ""
":ref:`PackedByteArray <class_PackedByteArray>`: An array of bytes (integers "
"from 0 to 255)."
msgstr ""
":ref:`PoolByteArray <class_PoolByteArray>` : Un tableau d'octets (entiers de "
"0 à 255)."

#, fuzzy
msgid ""
":ref:`PackedInt32Array <class_PackedInt32Array>`: An array of 32-bit "
"integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>` : Un tableau d'entiers."

#, fuzzy
msgid ""
":ref:`PackedInt64Array <class_PackedInt64Array>`: An array of 64-bit "
"integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>` : Un tableau d'entiers."

#, fuzzy
msgid ""
":ref:`PackedFloat32Array <class_PackedFloat32Array>`: An array of 32-bit "
"floats."
msgstr ""
":ref:`PoolRealArray <class_PoolRealArray>` : Un tableau de nombres flottants."

#, fuzzy
msgid ""
":ref:`PackedFloat64Array <class_PackedFloat64Array>`: An array of 64-bit "
"floats."
msgstr ""
":ref:`PoolRealArray <class_PoolRealArray>` : Un tableau de nombres flottants."

#, fuzzy
msgid ""
":ref:`PackedStringArray <class_PackedStringArray>`: An array of strings."
msgstr ""
":ref:`PoolStringArray <class_PoolStringArray>` : Un tableau de chaînes de "
"caractères."

#, fuzzy
msgid ""
":ref:`PackedVector2Array <class_PackedVector2Array>`: An array of :ref:"
"`Vector2 <class_Vector2>` values."
msgstr ""
":ref:`PoolVector2Array <class_PoolVector2Array>` : Un tableau d'objets :ref:"
"`Vector2 <class_Vector2 <class_Vector2>`."

#, fuzzy
msgid ""
":ref:`PackedVector3Array <class_PackedVector3Array>`: An array of :ref:"
"`Vector3 <class_Vector3>` values."
msgstr ""
":ref:`PoolVector3Array <class_PoolVector3Array>` : Un tableau d'objets :ref:"
"`Vector3 <class_Vector3 <class_Vector3>`."

#, fuzzy
msgid ""
":ref:`PackedColorArray <class_PackedColorArray>`: An array of :ref:`Color "
"<class_Color>` values."
msgstr ""
":ref:`PoolColorArray <class_PoolColorArray>` : Un tableau d'objets :ref:"
"`Color <class_Color>`."

msgid ":ref:`Dictionary <class_Dictionary>`"
msgstr ":ref:`Dictionary <class_Dictionary>`"

msgid "Associative container which contains values referenced by unique keys."
msgstr ""
"Conteneur associatif qui contient des valeurs référencées par des clés "
"uniques."

#, fuzzy
msgid ""
"Lua-style table syntax is also supported. Lua-style uses ``=`` instead of ``:"
"`` and doesn't use quotes to mark string keys (making for slightly less to "
"write). However, keys written in this form can't start with a digit (like "
"any GDScript identifier), and must be string literals."
msgstr ""
"Les tables en style Lua sont également supportés. Le style Lua utilise ``=`` "
"au lieu de ``:`` et n'utilise pas de guillemets pour marquer les clés de "
"chaîne de caractères (ce qui réduit légèrement l'écriture). Notez cependant "
"que comme tout identificateur GDScript, les clés écrites dans cette forme ne "
"peuvent pas commencer par un chiffre."

msgid ""
"To add a key to an existing dictionary, access it like an existing key and "
"assign to it::"
msgstr ""
"Pour ajouter une clé à un dictionnaire existant, accédez-y comme une clé "
"existante et affectez lui une valeur :"

msgid ""
"The bracket syntax can be used to access properties of any :ref:"
"`class_Object`, not just Dictionaries. Keep in mind it will cause a script "
"error when attempting to index a non-existing property. To avoid this, use "
"the :ref:`Object.get() <class_Object_method_get>` and :ref:`Object.set() "
"<class_Object_method_set>` methods instead."
msgstr ""
"La syntaxe des crochets peut être utilisée pour accéder aux propriétés de "
"n'importe quel :ref:`class_Object`, et pas seulement aux Dictionnaires. "
"N'oubliez pas qu'elle provoquera une erreur de script lorsque vous tenterez "
"d'indexer une propriété inexistante. Pour éviter cela, utilisez les "
"méthodes :ref:`Object.get() <class_Object_method_get>` et :ref:`Object.set() "
"<class_Object_method_set>` à la place."

#, fuzzy
msgid ":ref:`Signal <class_Signal>`"
msgstr ":ref:`int <class_int>`"

msgid ""
"A signal is a message that can be emitted by an object to those who want to "
"listen to it. The Signal type can be used for passing the emitter around."
msgstr ""

msgid ""
"Signals are better used by getting them from actual objects, e.g. ``$Button."
"button_up``."
msgstr ""

#, fuzzy
msgid ":ref:`Callable <class_Callable>`"
msgstr ":ref:`Plane <class_Plane>`"

msgid ""
"Contains an object and a function, which is useful for passing functions as "
"values (e.g. when connecting to signals)."
msgstr ""

msgid ""
"Getting a method as a member returns a callable. ``var x = $Sprite2D."
"rotate`` will set the value of ``x`` to a callable with ``$Sprite2D`` as the "
"object and ``rotate`` as the method."
msgstr ""

msgid "You can call it using the ``call`` method: ``x.call(PI)``."
msgstr ""

msgid "Data"
msgstr "Données"

msgid "Variables"
msgstr "Variables"

msgid ""
"Variables can exist as class members or local to functions. They are created "
"with the ``var`` keyword and may, optionally, be assigned a value upon "
"initialization."
msgstr ""
"Les variables peuvent exister en tant que membres de la classe ou locales "
"aux fonctions. Elles sont créées avec le mot-clé ``var`` et peuvent, "
"éventuellement, se voir attribuer une valeur à l'initialisation."

msgid ""
"Variables can optionally have a type specification. When a type is "
"specified, the variable will be forced to have always that same type, and "
"trying to assign an incompatible value will raise an error."
msgstr ""
"Les variables peuvent optionnellement avoir une spécification de type. "
"Lorsqu'un type est spécifié, la variable sera obligée d'avoir toujours le "
"même type, et essayer d'assigner une valeur incompatible entraînera une "
"erreur."

msgid ""
"Types are specified in the variable declaration using a ``:`` (colon) symbol "
"after the variable name, followed by the type."
msgstr ""
"Les types sont spécifiés dans la variable par un ``:`` après le nom de la "
"variable, suivi par le type."

msgid ""
"If the variable is initialized within the declaration, the type can be "
"inferred, so it's possible to omit the type name::"
msgstr ""
"Si la variable est initialisée dans la déclaration, le type peut être "
"déduit, il est donc possible de ne pas mettre le nom du type :"

msgid ""
"Type inference is only possible if the assigned value has a defined type, "
"otherwise it will raise an error."
msgstr ""
"L'inférence de type n'est possible que si la valeur affectée a un type "
"défini, sinon une erreur sera générée."

msgid "Valid types are:"
msgstr "Les types valides sont :"

msgid "Built-in types (Array, Vector2, int, String, etc.)."
msgstr "Types intégrés (Array, Vector2, int, String, etc.)."

msgid "Engine classes (Node, Resource, Reference, etc.)."
msgstr "Classes du moteur (Node, Resource, Reference, etc.)."

msgid ""
"Constant names if they contain a script resource (``MyScript`` if you "
"declared ``const MyScript = preload(\"res://my_script.gd\")``)."
msgstr ""
"Les noms des constantes s'ils contiennent un script ressource (``MyScript`` "
"si vous avez déclaré ``const MyScript = preload(\"res://my_script.gd\")``)."

msgid ""
"Other classes in the same script, respecting scope (``InnerClass."
"NestedClass`` if you declared ``class NestedClass`` inside the ``class "
"InnerClass`` in the same scope)."
msgstr ""
"D'autres classes dans le même script, respectant la portée (``InnerClass."
"NestedClass`` si vous avez déclaré ``class NestedClass`` à l'intérieur de "
"``class InnerClass`` dans la même portée)."

msgid "Script classes declared with the ``class_name`` keyword."
msgstr "Les classes de script déclarées avec le mot-clé ``class_name``."

msgid "Autoloads registered as singletons."
msgstr ""

msgid ""
"While ``Variant`` is a valid type specification, it's not an actual type. It "
"only means there's no set type and is equivalent to not having a static type "
"at all. Therefore, inference is not allowed by default for ``Variant``, "
"since it's likely a mistake."
msgstr ""

msgid ""
"You can turn off this check, or make it only a warning, by changing it in "
"the project settings. See :ref:`doc_gdscript_warning_system` for details."
msgstr ""

#, fuzzy
msgid "Initialization order"
msgstr "Exemple d'initialisation :"

#, fuzzy
msgid "Member variables are initialized in the following order:"
msgstr "L'image ci-dessus a été créée à l'aide du script suivant :"

msgid ""
"Depending on the variable's static type, the variable is either ``null`` "
"(untyped variables and objects) or has a default value of the type (``0`` "
"for ``int``, ``false`` for ``bool``, etc.)."
msgstr ""

msgid ""
"The specified values are assigned in the order of the variables in the "
"script, from top to bottom. - *(Only for ``Node``-derived classes)* If the "
"``@onready`` annotation is applied to a variable, its initialization is "
"deferred to step 5."
msgstr ""

#, fuzzy
msgid "If defined, the ``_init()`` method is called."
msgstr ""
"Vous devez définir la méthode ``_init()`` pour mettre en place la structure "
"des nœuds de contrôle."

msgid ""
"When instantiating scenes and resources, the exported values are assigned."
msgstr ""

msgid ""
"*(Only for ``Node``-derived classes)* ``@onready`` variables are initialized."
msgstr ""

msgid ""
"*(Only for ``Node``-derived classes)* If defined, the ``_ready()`` method is "
"called."
msgstr ""

msgid ""
"You can specify a complex expression as a variable initializer, including "
"function calls. Make sure the variables are initialized in the correct "
"order, otherwise your values may be overwritten. For example::"
msgstr ""

#, fuzzy
msgid "Will print::"
msgstr "Ceci s'affichera :"

msgid ""
"To fix this, move the ``_data`` variable definition above the ``a`` "
"definition or remove the empty dictionary assignment (``= {}``)."
msgstr ""

#, fuzzy
msgid "Static variables"
msgstr "Édition des variables"

msgid "A class member variable can be declared static::"
msgstr ""

msgid ""
"Static variables belong to the class, not instances. This means that static "
"variables share values between multiple instances, unlike regular member "
"variables."
msgstr ""

msgid ""
"From inside a class, you can access static variables from any function, both "
"static and non-static. From outside the class, you can access static "
"variables using the class or an instance (the second is not recommended as "
"it is less readable)."
msgstr ""

msgid ""
"The ``@export`` and ``@onready`` annotations cannot be applied to a static "
"variable. Local variables cannot be static."
msgstr ""

msgid ""
"The following example defines a ``Person`` class with a static variable "
"named ``max_id``. We increment the ``max_id`` in the ``_init()`` function. "
"This makes it easy to keep track of the number of ``Person`` instances in "
"our game."
msgstr ""

msgid ""
"In this code, we create two instances of our ``Person`` class and check that "
"the class and every instance have the same ``max_id`` value, because the "
"variable is static and accessible to every instance."
msgstr ""

msgid "Static variables can have type hints, setters and getters::"
msgstr ""

msgid "A base class static variable can also be accessed via a child class::"
msgstr ""

msgid "``@static_unload`` annotation"
msgstr ""

msgid ""
"Since GDScript classes are resources, having static variables in a script "
"prevents it from being unloaded even if there are no more instances of that "
"class and no other references left. This can be important if static "
"variables store large amounts of data or hold references to other project "
"resources, such as scenes. You should clean up this data manually, or use "
"the :ref:`@static_unload <class_@GDScript_annotation_@static_unload>` "
"annotation if static variables don't store important data and can be reset."
msgstr ""

msgid ""
"Currently, due to a bug, scripts are never freed, even if ``@static_unload`` "
"annotation is used."
msgstr ""

msgid ""
"Note that ``@static_unload`` applies to the entire script (including inner "
"classes) and must be placed at the top of the script, before ``class_name`` "
"and ``extends``::"
msgstr ""

msgid "See also `Static functions`_ and `Static constructor`_."
msgstr ""

msgid "Casting"
msgstr "Conversion de type"

msgid ""
"Values assigned to typed variables must have a compatible type. If it's "
"needed to coerce a value to be of a certain type, in particular for object "
"types, you can use the casting operator ``as``."
msgstr ""
"Les valeurs affectées à des variables typées doivent avoir un type "
"compatible. S'il est nécessaire de contraindre une valeur à être d'un "
"certain type, surtout pour les types d'objet, vous pouvez utiliser "
"l'opérateur de conversion ``as``."

msgid ""
"Casting between object types results in the same object if the value is of "
"the same type or a subtype of the cast type."
msgstr ""
"La conversion de types d'objets résulte en le même objet si la valeur est du "
"même type ou d'un type enfant du type de conversion."

msgid ""
"If the value is not a subtype, the casting operation will result in a "
"``null`` value."
msgstr ""
"Si la valeur n'est pas un type enfant, l'opération de conversion se "
"résultera en une valeur ``null``."

msgid ""
"For built-in types, they will be forcibly converted if possible, otherwise "
"the engine will raise an error."
msgstr ""
"Pour les types intégrés, ils seront convertis de force si possible, sinon le "
"moteur générera une erreur."

msgid ""
"Casting is also useful to have better type-safe variables when interacting "
"with the scene tree::"
msgstr ""
"Le casting est également utile pour avoir de meilleures variables de type-"
"safe lors de l’interaction avec l’arbre de la scène :"

msgid "Constants"
msgstr "Constantes"

msgid ""
"Constants are values you cannot change when the game is running. Their value "
"must be known at compile-time. Using the ``const`` keyword allows you to "
"give a constant value a name. Trying to assign a value to a constant after "
"it's declared will give you an error."
msgstr ""
"Les constantes sont des valeurs que vous ne pouvez pas changer lorsque le "
"jeu est s’exécute. Leur valeur doit être connue au moment de la compilation. "
"L'utilisation du mot-clé ``const`` permet de donner un nom à une valeur "
"constante. Si vous essayez d'attribuer une valeur à une constante après "
"qu'elle ait été déclarée, vous obtiendrez une erreur."

msgid "We recommend using constants whenever a value is not meant to change."
msgstr ""
"Nous recommandons d'utiliser des constantes chaque fois qu'une valeur n'est "
"pas censée changer."

msgid ""
"Although the type of constants is inferred from the assigned value, it's "
"also possible to add explicit type specification::"
msgstr ""
"Même si le type des constantes est implicitement spécifié par la valeur "
"assignée, il est également possible d'ajouter une spécification explicite du "
"type :"

msgid "Assigning a value of an incompatible type will raise an error."
msgstr "Assigner une valeur à un type incompatible va générer une erreur."

msgid ""
"You can also create constants inside a function, which is useful to name "
"local magic values."
msgstr ""

#, fuzzy
msgid ""
"Since objects, arrays and dictionaries are passed by reference, constants "
"are \"flat\". This means that if you declare a constant array or dictionary, "
"it can still be modified afterwards. They can't be reassigned with another "
"value though."
msgstr ""
"Comme les tableaux et les dictionnaires sont passés par référence, les "
"constantes sont \"flat\". Cela signifie que si vous déclarez un tableau ou "
"un dictionnaire constant, il peut toujours être modifié par la suite. Ils ne "
"peuvent cependant pas être réassignées avec une autre valeur."

msgid "Enums"
msgstr "Énumérations"

msgid ""
"Enums are basically a shorthand for constants, and are pretty useful if you "
"want to assign consecutive integers to some constant."
msgstr ""
"Les énumérations sont en fait une forme abrégée pour déclarer des "
"constantes, et sont pratiques si vous voulez assigner des entiers "
"consécutifs à certaines constantes."

#, fuzzy
msgid ""
"If you pass a name to the enum, it will put all the keys inside a constant :"
"ref:`Dictionary <class_Dictionary>` of that name. This means all constant "
"methods of a dictionary can also be used with a named enum."
msgstr ""
"Si vous donnez un nom à l'enum, cela mettra également toutes les valeurs à "
"l'intérieur d'un dictionnaire constant de même nom."

#, fuzzy
msgid ""
"Keys in a named enum are not registered as global constants. They should be "
"accessed prefixed by the enum's name (``Name.KEY``)."
msgstr ""
"Dans Godot 3.1 et ultérieur, les clefs dans une enum nommée ne sont pas "
"déclarées en tant que constantes globales. Pour y accéder, elles doivent "
"être préfixées par le nom de l'enum (``Name.KEY``) ; voir l'exemple ci-"
"dessous."

msgid "Functions"
msgstr "Fonctions"

msgid ""
"Functions always belong to a `class <Classes_>`_. The scope priority for "
"variable look-up is: local → class member → global. The ``self`` variable is "
"always available and is provided as an option for accessing class members, "
"but is not always required (and should *not* be sent as the function's first "
"argument, unlike Python)."
msgstr ""
"Les fonctions appartiennent toujours à une `classe <Classes_>`_. La priorité "
"de portée pour la recherche de la variable est : locale → membre de classe → "
"globale. La variable ``self`` est toujours disponible et est fournie comme "
"option pour accéder aux membres de la classe, mais n'est pas toujours "
"nécessaire (et ne devrait *pas* être envoyée comme premier argument de la "
"fonction, contrairement à Python)."

msgid ""
"A function can ``return`` at any point. The default return value is ``null``."
msgstr ""
"Une fonction peut ``return`` à tout moment. La valeur de retour par défaut "
"est ``null``."

msgid ""
"If a function contains only one line of code, it can be written on one line::"
msgstr ""

msgid ""
"Functions can also have type specification for the arguments and for the "
"return value. Types for arguments can be added in a similar way to "
"variables::"
msgstr ""
"Les fonctions peuvent également avoir une spécification de type pour les "
"arguments et pour les valeurs retournées. Les types peuvent être ajoutés aux "
"arguments de la même manière que pour les variables :"

msgid ""
"If a function argument has a default value, it's possible to infer the type::"
msgstr ""
"Si l'argument d'une fonction a une valeur par défaut, il est possible "
"d'inférer le type :"

msgid ""
"The return type of the function can be specified after the arguments list "
"using the arrow token (``->``)::"
msgstr ""
"Le type de retour de la fonction peut être spécifié après la liste "
"d'arguments en utilisant le jeton de flèche (``->``) :"

msgid ""
"Functions that have a return type **must** return a proper value. Setting "
"the type as ``void`` means the function doesn't return anything. Void "
"functions can return early with the ``return`` keyword, but they can't "
"return any value."
msgstr ""
"Les fonctions qui ont un type de retour **doivent** retourner une valeur "
"appropriée. Paramétrer le type d'une fonction à ``void`` signifie qu'elle ne "
"retournera rien. Les fonctions vides peuvent retourner à l'avance en "
"utilisant le mot-clé ``return``, mais elles ne peuvent pas retourner de "
"valeurs."

msgid ""
"Non-void functions must **always** return a value, so if your code has "
"branching statements (such as an ``if``/``else`` construct), all the "
"possible paths must have a return. E.g., if you have a ``return`` inside an "
"``if`` block but not after it, the editor will raise an error because if the "
"block is not executed, the function won't have a valid value to return."
msgstr ""
"Les fonctions non-vides doivent **toujours** retourner une valeur, donc si "
"votre code a des instructions de branchement (comme une construction ``if``/"
"``else``), tous les chemins possibles doivent avoir un retour. Par exemple, "
"si vous avez un ``return`` à l'intérieur d'un bloc ``if`` mais pas après, "
"l'éditeur affichera une erreur car si le bloc n'est pas exécuté, la fonction "
"n'aura pas de valeur valide à retourner."

msgid "Referencing functions"
msgstr "Fonctions de référencement"

msgid ""
"Functions are first-class items in terms of the :ref:`Callable "
"<class_Callable>` object. Referencing a function by name without calling it "
"will automatically generate the proper callable. This can be used to pass "
"functions as arguments."
msgstr ""

msgid ""
"Callables **must** be called with the ``call`` method. You cannot use the "
"``()`` operator directly. This behavior is implemented to avoid performance "
"issues on direct function calls."
msgstr ""

#, fuzzy
msgid "Lambda functions"
msgstr "Fonctions aléatoires"

msgid ""
"Lambda functions allow you to declare functions that do not belong to a "
"class. Instead a :ref:`Callable <class_Callable>` object is created and "
"assigned to a variable directly. This can be useful to create Callables to "
"pass around without polluting the class scope."
msgstr ""

msgid "Lambda functions can be named for debugging purposes::"
msgstr ""

msgid ""
"Note that if you want to return a value from a lambda, an explicit "
"``return`` is required (you can't omit ``return``)::"
msgstr ""

msgid ""
"Lambda functions capture the local environment. Local variables are passed "
"by value, so they won't be updated in the lambda if changed in the local "
"function::"
msgstr ""

msgid ""
"The values of the outer scope behave like constants. Therefore, if you "
"declare an array or dictionary, it can still be modified afterwards."
msgstr ""

msgid "Static functions"
msgstr "Fonctions statiques"

#, fuzzy
msgid ""
"A function can be declared static. When a function is static, it has no "
"access to the instance member variables or ``self``. A static function has "
"access to static variables. Also static functions are useful to make "
"libraries of helper functions::"
msgstr ""
"Une fonction peut être déclarée statique. Lorsqu'une fonction est statique, "
"elle n'a pas accès aux variables membres de l'instance ou à ``self``. Ceci "
"est principalement utile pour faire des bibliothèques de fonctions helpers :"

msgid "Lambdas cannot be declared static."
msgstr ""

msgid "See also `Static variables`_ and `Static constructor`_."
msgstr ""

msgid "Statements and control flow"
msgstr "Instructions et flux de contrôle"

msgid ""
"Statements are standard and can be assignments, function calls, control flow "
"structures, etc (see below). ``;`` as a statement separator is entirely "
"optional."
msgstr ""
"Les instructions sont standard et peuvent être des affectations, des appels "
"de fonctions, des structure de contrôle, etc (voir ci-dessous). ``;`` "
"utilisé comme séparateur d'instructions est entièrement facultatif."

#, fuzzy
msgid "Expressions"
msgstr "Nœud expression"

msgid ""
"Expressions are sequences of operators and their operands in orderly "
"fashion. An expression by itself can be a statement too, though only calls "
"are reasonable to use as statements since other expressions don't have side "
"effects."
msgstr ""

msgid ""
"Expressions return values that can be assigned to valid targets. Operands to "
"some operator can be another expression. An assignment is not an expression "
"and thus does not return any value."
msgstr ""

#, fuzzy
msgid "Here are some examples of expressions::"
msgstr "Voici quelques exemples d'effets personnalisés :"

msgid ""
"Identifiers, attributes, and subscripts are valid assignment targets. Other "
"expressions cannot be on the left side of an assignment."
msgstr ""

msgid "if/else/elif"
msgstr "if/else/elif (si / sinon / sinon-si)"

msgid ""
"Simple conditions are created by using the ``if``/``else``/``elif`` syntax. "
"Parenthesis around conditions are allowed, but not required. Given the "
"nature of the tab-based indentation, ``elif`` can be used instead of "
"``else``/``if`` to maintain a level of indentation."
msgstr ""
"Les conditions simples sont créées en utilisant la syntaxe ``if``/``else``/"
"``elif``. Les parenthèses autour des conditions sont autorisées, mais pas "
"obligatoires. Étant donné la nature de l'indentation par tabulations, "
"``elif`` peut être utilisé à la place de ``else``/``if`` pour maintenir un "
"niveau d'indentation raisonnable."

msgid "Short statements can be written on the same line as the condition::"
msgstr ""
"Les instructions courtes peuvent être écrites sur la même ligne que la "
"condition :"

msgid ""
"Sometimes, you might want to assign a different initial value based on a "
"boolean expression. In this case, ternary-if expressions come in handy::"
msgstr ""
"Parfois, il peut être nécessaire d'affecter une valeur initiale différente, "
"basée sur une expression booléenne. Dans ce cas, les conditions ternaires "
"peuvent être utiles :"

msgid ""
"Ternary-if expressions can be nested to handle more than 2 cases. When "
"nesting ternary-if expressions, it is recommended to wrap the complete "
"expression over multiple lines to preserve readability::"
msgstr ""
"Les expressions conditionnelles ternaires peuvent être imbriquée pour gérer "
"plus de deux cas. Lorsque ces expressions sont imbriquées, il est recommandé "
"de les indenter sur plusieurs lignes pour préserver leur lisibilité :"

msgid ""
"You may also wish to check if a value is contained within something. You can "
"use an ``if`` statement combined with the ``in`` operator to accomplish "
"this::"
msgstr ""

#, fuzzy
msgid ""
"Simple loops are created by using ``while`` syntax. Loops can be broken "
"using ``break`` or continued using ``continue`` (which skips to the next "
"iteration of the loop without executing any further code in the current "
"iteration):"
msgstr ""
"Les boucles simples sont créées en utilisant la syntaxe ``while``. Elles "
"peuvent être interrompues en utilisant ``break`` ou poursuivies en utilisant "
"``continue`` :"

msgid ""
"To iterate through a range, such as an array or table, a *for* loop is used. "
"When iterating over an array, the current array element is stored in the "
"loop variable. When iterating over a dictionary, the *key* is stored in the "
"loop variable."
msgstr ""
"Pour itérer à travers une plage, telle qu'un tableau ou une table, une "
"boucle *for* est utilisée. Lors de l'itération dans un tableau, l'élément "
"courant du tableau est stocké dans la variable de la boucle. Lors de "
"l'itération sur un dictionnaire, la *key* est stockée dans la variable de la "
"boucle."

msgid ""
"If you want to assign values on an array as it is being iterated through, it "
"is best to use ``for i in array.size()``."
msgstr ""

msgid ""
"The loop variable is local to the for-loop and assigning to it will not "
"change the value on the array. Objects passed by reference (such as nodes) "
"can still be manipulated by calling methods on the loop variable."
msgstr ""

msgid ""
"A ``match`` statement is used to branch execution of a program. It's the "
"equivalent of the ``switch`` statement found in many other languages, but "
"offers some additional features."
msgstr ""
"L'instruction ``match`` est utilisée pour réaliser un branchement de "
"l’exécution d'un programme. Elle est semblable à l'instruction ``switch`` "
"présente en beaucoup d'autres langages mais elle procure cependant quelques "
"fonctionnalités supplémentaires."

msgid ""
"``match`` is more type strict than the ``==`` operator. For example ``1`` "
"will **not** match ``1.0``. The only exception is ``String`` vs "
"``StringName`` matching: for example, the String ``\"hello\"`` is considered "
"equal to the StringName ``&\"hello\"``."
msgstr ""

msgid "Basic syntax"
msgstr "Syntaxe de base"

msgid "Crash-course for people who are familiar with switch statements"
msgstr ""
"Cours intensif pour les personnes familiarisées avec les instructions switch"

msgid "Replace ``switch`` with ``match``."
msgstr "Remplacez ``switch`` par ``match``."

msgid "Remove ``case``."
msgstr "Supprimer ``case``."

#, fuzzy
msgid "Remove any ``break``\\ s."
msgstr "Supprimer ``case``."

msgid "Change ``default`` to a single underscore."
msgstr "Remplacer ``default`` par un unique underscore (_)."

msgid "Control flow"
msgstr "Contrôle du flux d’exécution"

#, fuzzy
msgid ""
"The patterns are matched from top to bottom. If a pattern matches, the first "
"corresponding block will be executed. After that, the execution continues "
"below the ``match`` statement."
msgstr ""
"Les expressions sont comparées du haut vers le bas. Si une expression "
"correspond, le premier bloc de code correspondant sera exécuté. Après cela, "
"l’exécution continuera après le bloc d'instructions ``match``. Vous pouvez "
"utiliser ``continue`` pour arrêter l'exécution dans le bloc en cours et "
"vérifier une correspondance supplémentaire dans les expressions en dessous "
"de celui-ci."

msgid ""
"The special ``continue`` behavior in ``match`` supported in 3.x was removed "
"in Godot 4.0."
msgstr ""

#, fuzzy
msgid "The following pattern types are available:"
msgstr "Les opérateurs suivants sont disponibles :"

#, fuzzy
msgid "Literal pattern"
msgstr "Modèle de tableau"

msgid "Matches a `literal <Literals_>`_::"
msgstr ""

#, fuzzy
msgid "Expression pattern"
msgstr "Nœud d'expression"

msgid ""
"Matches a constant expression, an identifier, or an attribute access (``A."
"B``)::"
msgstr ""

msgid "Wildcard pattern"
msgstr "Motif générique (joker/wildcard)"

msgid "This pattern matches everything. It's written as a single underscore."
msgstr ""
"Cette expression correspond à toute possibilité. Elle est écrite sous la "
"forme d'un simple underscore (_)."

msgid ""
"It can be used as the equivalent of the ``default`` in a ``switch`` "
"statement in other languages::"
msgstr ""
"Elle peut être utilisée comme l’équivalent de ``default`` de l'expression "
"``switch`` dans d'autres langages :"

msgid "Binding pattern"
msgstr "Expression de liaison"

msgid ""
"A binding pattern introduces a new variable. Like the wildcard pattern, it "
"matches everything - and also gives that value a name. It's especially "
"useful in array and dictionary patterns::"
msgstr ""
"Une expression de liaison introduit une nouvelle variable. Comme le "
"caractère joker (wildcard), elle correspond à toutes les possibilités - et "
"donne aussi un nom à cette valeur. Elle est particulièrement utile avec les "
"tableaux et les dictionnaires :"

msgid "Array pattern"
msgstr "Modèle de tableau"

msgid ""
"Matches an array. Every single element of the array pattern is a pattern "
"itself, so you can nest them."
msgstr ""
"Elle correspond à un tableau. Chaque élément du modèle de tableau est un "
"modèle lui-même, de sorte que vous pouvez les imbriquer."

msgid ""
"The length of the array is tested first, it has to be the same size as the "
"pattern, otherwise the pattern doesn't match."
msgstr ""
"La longueur du tableau est d'abord testée, elle doit être de la même taille "
"que l'expression, sinon cette dernière ne correspondra pas."

msgid ""
"**Open-ended array**: An array can be bigger than the pattern by making the "
"last subpattern ``..``."
msgstr ""
"**Tableau ouvert** : Un tableau peut être plus grand que l'expression en "
"faisant de ``..`` la dernière sous-expression."

msgid "Every subpattern has to be comma-separated."
msgstr "Chaque sous-expression doit être séparée par des virgules."

msgid "Dictionary pattern"
msgstr "Modèle de dictionnaire"

msgid ""
"Works in the same way as the array pattern. Every key has to be a constant "
"pattern."
msgstr ""
"Fonctionne de la même manière que le modèle du tableau. Chaque clé doit être "
"une expression constante."

msgid ""
"The size of the dictionary is tested first, it has to be the same size as "
"the pattern, otherwise the pattern doesn't match."
msgstr ""
"La taille du dictionnaire est d'abord testée, elle doit être de la même "
"taille que l'expression, sinon l'expression ne correspondra pas."

msgid ""
"**Open-ended dictionary**: A dictionary can be bigger than the pattern by "
"making the last subpattern ``..``."
msgstr ""
"**Dictionnaire ouvert** : Un dictionnaire peut être plus grand que "
"l'expression en faisant de ``..`` le dernier sous-modèle."

msgid "Every subpattern has to be comma separated."
msgstr "Chaque sous-expression doit être séparée par des virgules."

msgid ""
"If you don't specify a value, then only the existence of the key is checked."
msgstr ""
"Si vous ne spécifiez pas de valeur, seule l'existence de la clé est vérifiée."

msgid "A value pattern is separated from the key pattern with a ``:``."
msgstr ""
"Une expression de valeur est séparée de l'expression de clé par un ``:`` ."

msgid "Multiple patterns"
msgstr "Expressions multiples"

msgid ""
"You can also specify multiple patterns separated by a comma. These patterns "
"aren't allowed to have any bindings in them."
msgstr ""
"Vous pouvez également spécifier plusieurs expressions séparées par une "
"virgule. Ces expressions ne peuvent être des expressions de liaisons."

#, fuzzy
msgid "Pattern guards"
msgstr "Mari oriental (Russie)"

msgid ""
"Only one branch can be executed per ``match``. Once a branch is chosen, the "
"rest are not checked. If you want to use the same pattern for multiple "
"branches or to prevent choosing a branch with too general pattern, you can "
"specify a guard expression after the list of patterns with the ``when`` "
"keyword::"
msgstr ""

msgid ""
"If there is no matching pattern for the current branch, the guard expression "
"is **not** evaluated and the patterns of the next branch are checked."
msgstr ""

msgid "If a matching pattern is found, the guard expression is evaluated."
msgstr ""

msgid ""
"If it's true, then the body of the branch is executed and ``match`` ends."
msgstr ""

#, fuzzy
msgid "If it's false, then the patterns of the next branch are checked."
msgstr ""
"Si vous ne spécifiez pas de valeur, seule l'existence de la clé est vérifiée."

msgid "Classes"
msgstr "Classes"

msgid ""
"By default, all script files are unnamed classes. In this case, you can only "
"reference them using the file's path, using either a relative or an absolute "
"path. For example, if you name a script file ``character.gd``::"
msgstr ""
"Par défaut, tous les fichiers scripts sont des classes sans nom. Dans ce "
"cas, vous pouvez uniquement les référencer en utilisant le chemin du "
"fichier, en utilisant un chemin relatif ou un chemin absolu. Par exemple, si "
"vous nommez un fichier de script ``character.gd`` :"

msgid "Registering named classes"
msgstr "Enregistrement de classes nommées"

#, fuzzy
msgid ""
"You can give your class a name to register it as a new type in Godot's "
"editor. For that, you use the ``class_name`` keyword. You can optionally use "
"the ``@icon`` annotation with a path to an image, to use it as an icon. Your "
"class will then appear with its new icon in the editor::"
msgstr ""
"Vous pouvez donner un nom à votre classe pour l'enregistrer en tant que "
"nouveau type dans l'éditeur de Godot. Pour cela, utilisez le mot clé "
"``class_name``. Vous pouvez éventuellement ajouter une virgule suivie d'un "
"chemin vers une image, pour l'utiliser comme icône. Votre classe apparaîtra "
"alors avec sa nouvelle icône dans l'éditeur :"

msgid ""
"SVG images that are used as custom node icons should have the **Editor > "
"Scale With Editor Scale** and **Editor > Convert Icons With Editor Theme** :"
"ref:`import options <doc_importing_images_editor_import_options>` enabled. "
"This allows icons to follow the editor's scale and theming settings if the "
"icons are designed with the same color palette as Godot's own icons."
msgstr ""

msgid "Here's a class file example:"
msgstr "Voici un exemple de fichier de classe :"

msgid ""
"If you want to use ``extends`` too, you can keep both on the same line::"
msgstr ""

#, fuzzy
msgid ""
"Godot initializes non-static variables every time you create an instance, "
"and this includes arrays and dictionaries. This is in the spirit of thread "
"safety, since scripts can be initialized in separate threads without the "
"user knowing."
msgstr ""
"La syntaxe de classe de Godot est compacte : elle ne peut contenir que des "
"membres variables ou des fonctions. Vous pouvez utiliser des fonctions "
"statiques, mais pas des membres variables statiques. De la même manière, le "
"moteur initialise les variables chaque fois que vous créez une instance, ce "
"qui inclut les tableaux et les dictionnaires. Ceci est dans l'esprit de la "
"sécurité des threads, car les scripts peuvent être initialisés dans des "
"threads séparés sans que l'utilisateur n'en soit informé."

msgid "Inheritance"
msgstr "Héritage"

msgid "A class (stored as a file) can inherit from:"
msgstr "Une classe (stockée sous forme de fichier) peut hériter de :"

msgid "A global class."
msgstr "Une classe globale."

msgid "Another class file."
msgstr "Un autre fichier de classe."

msgid "An inner class inside another class file."
msgstr "Une classe interne à l'intérieur d'un autre fichier de classe."

msgid "Multiple inheritance is not allowed."
msgstr "L'héritage multiple n'est pas autorisé."

msgid "Inheritance uses the ``extends`` keyword::"
msgstr "L'héritage utilise le mot-clé ``extends`` :"

msgid ""
"If inheritance is not explicitly defined, the class will default to "
"inheriting :ref:`class_RefCounted`."
msgstr ""

msgid ""
"To check if a given instance inherits from a given class, the ``is`` keyword "
"can be used::"
msgstr ""
"Pour vérifier si une instance donnée hérite d'une classe donnée, le mot-clé "
"``is`` peut être utilisé :"

#, fuzzy
msgid ""
"To call a function in a *super class* (i.e. one ``extend``-ed in your "
"current class), use the ``super`` keyword::"
msgstr ""
"Pour appeler une fonction dans une *classe parent* (c'est-à-dire une qui a "
"été ``extend`` par votre classe courante), préfixez ``.`` au nom de la "
"fonction :"

#, fuzzy
msgid ""
"This is especially useful because functions in extending classes replace "
"functions with the same name in their super classes. If you still want to "
"call them, you can use ``super``::"
msgstr ""
"Ceci est particulièrement utile parce que les fonctions d'extension de "
"classes remplacent les fonctions portant le même nom dans leurs classes de "
"base. Donc, si vous voulez quand même les appeler, vous pouvez utiliser ``."
"`` ( équivalent au mot-clé ``super`` dans d'autres langages ) :"

msgid ""
"If you need to call a different function from the super class, you can "
"specify the function name with the attribute operator::"
msgstr ""

msgid ""
"One of the common misconceptions is trying to override *non-virtual* engine "
"methods such as ``get_class()``, ``queue_free()``, etc. This is not "
"supported for technical reasons."
msgstr ""

msgid ""
"In Godot 3, you can *shadow* engine methods in GDScript, and it will work if "
"you call this method in GDScript. However, the engine will **not** execute "
"your code if the method is called inside the engine on some event."
msgstr ""

msgid ""
"In Godot 4, even shadowing may not always work, as GDScript optimizes native "
"method calls. Therefore, we added the ``NATIVE_METHOD_OVERRIDE`` warning, "
"which is treated as an error by default. We strongly advise against "
"disabling or ignoring the warning."
msgstr ""

msgid ""
"Note that this does not apply to virtual methods such as ``_ready()``, "
"``_process()`` and others (marked with the ``virtual`` qualifier in the "
"documentation and the names start with an underscore). These methods are "
"specifically for customizing engine behavior and can be overridden in "
"GDScript. Signals and notifications can also be useful for these purposes."
msgstr ""

msgid "Class constructor"
msgstr "Constructeur de classe"

msgid ""
"The class constructor, called on class instantiation, is named ``_init``. If "
"you want to call the base class constructor, you can also use the ``super`` "
"syntax. Note that every class has an implicit constructor that it's always "
"called (defining the default values of class variables). ``super`` is used "
"to call the explicit constructor::"
msgstr ""

msgid "This is better explained through examples. Consider this scenario::"
msgstr ""
"Ceci est mieux expliqué par des exemples. Disons que nous avons ce scénario :"

msgid "There are a few things to keep in mind here:"
msgstr "Il y a plusieurs choses à garder à l'esprit ici :"

#, fuzzy
msgid ""
"If the inherited class (``state.gd``) defines a ``_init`` constructor that "
"takes arguments (``e`` in this case), then the inheriting class (``idle."
"gd``) *must* define ``_init`` as well and pass appropriate parameters to "
"``_init`` from ``state.gd``."
msgstr ""
"Si la classe héritée (``State.gd``) définit un constructeur ``_init`` qui "
"prend des arguments (``e`` dans ce cas), alors la classe héritant (``Idle."
"gd``) *doit* définir aussi ``_init`` et à passer les paramètres appropriés à "
"``_init`` depuis ``State.gd``."

#, fuzzy
msgid ""
"``idle.gd`` can have a different number of arguments than the base class "
"``state.gd``."
msgstr ""
"``Idle.gd`` peut avoir un nombre différent d'arguments que la classe de base "
"``State.gd``."

#, fuzzy
msgid ""
"In the example above, ``e`` passed to the ``state.gd`` constructor is the "
"same ``e`` passed in to ``idle.gd``."
msgstr ""
"Dans l'exemple ci-dessus, ``e`` passé au constructeur ``State.gd`` est le "
"même ``e`` passé à ``Idle.gd``."

#, fuzzy
msgid ""
"If ``idle.gd``'s ``_init`` constructor takes 0 arguments, it still needs to "
"pass some value to the ``state.gd`` base class, even if it does nothing. "
"This brings us to the fact that you can pass expressions to the base "
"constructor as well, not just variables, e.g.::"
msgstr ""
"Si le constructeur ``_init`` de ``Idle.gd`` prend 0 arguments, il doit tout "
"de même transmettre une valeur à la classe de parent``State.gd``, même si "
"elle ne fait rien. Ce qui nous amène au fait que vous pouvez aussi passer "
"des littéraux dans le constructeur de base, pas seulement des variables. Par "
"exemple :"

#, fuzzy
msgid "Static constructor"
msgstr "Constructeur de classe"

msgid ""
"A static constructor is a static function ``_static_init`` that is called "
"automatically when the class is loaded, after the static variables have been "
"initialized::"
msgstr ""

msgid ""
"A static constructor cannot take arguments and must not return any value."
msgstr ""

msgid "Inner classes"
msgstr "Classes internes"

msgid ""
"A class file can contain inner classes. Inner classes are defined using the "
"``class`` keyword. They are instanced using the ``ClassName.new()`` function."
msgstr ""
"Un fichier de classe peut contenir des classes internes. Les classes "
"internes sont définies à l'aide du mot-clé ``class``. Ils sont instanciés à "
"l'aide de la fonction ``ClassName.new()``."

msgid "Classes as resources"
msgstr "Les classes comme ressources"

msgid ""
"Classes stored as files are treated as :ref:`resources <class_GDScript>`. "
"They must be loaded from disk to access them in other classes. This is done "
"using either the ``load`` or ``preload`` functions (see below). Instancing "
"of a loaded class resource is done by calling the ``new`` function on the "
"class object::"
msgstr ""
"Les classes stockées en tant que fichiers sont traitées comme :ref:"
"`ressources <class_GDScript>`. Elles doivent être chargées à partir du "
"disque pour y accéder à partir d'autres classes. Cela se fait soit à l'aide "
"des fonctions ``load`` ou ``preload`` (voir ci-dessous). L'instanciation "
"d'une ressource de classe chargée se fait en appelant la fonction ``new`` "
"sur l'objet de classe :"

msgid "Exports"
msgstr "Exports"

msgid ""
"Documentation about exports has been moved to :ref:`doc_gdscript_exports`."
msgstr ""
"La documentation à propos des exports a été déplacé vers :ref:"
"`doc_gdscript_exports`."

#, fuzzy
msgid "Properties (setters and getters)"
msgstr "Propriétés (set/get)"

#, fuzzy
msgid ""
"Sometimes, you want a class' member variable to do more than just hold data "
"and actually perform some validation or computation whenever its value "
"changes. It may also be desired to encapsulate its access in some way."
msgstr ""
"Il est souvent utile de savoir quand une variable membre d'une classe change "
"pour une raison quelconque. Il peut également être souhaitable d'encapsuler "
"son accès d'une manière ou d'une autre."

msgid ""
"For this, GDScript provides a special syntax to define properties using the "
"``set`` and ``get`` keywords after a variable declaration. Then you can "
"define a code block that will be executed when the variable is accessed or "
"assigned."
msgstr ""

#, fuzzy
msgid "Example::"
msgstr "Exemple :"

msgid ""
"Unlike ``setget`` in previous Godot versions, the properties setter and "
"getter are **always** called (except as noted below), even when accessed "
"inside the same class (with or without prefixing with ``self.``). This makes "
"the behavior consistent. If you need direct access to the value, use another "
"variable for direct access and make the property code use that name."
msgstr ""

#, fuzzy
msgid "Alternative syntax"
msgstr "Approche alternative"

msgid ""
"Also there is another notation to use existing class functions if you want "
"to split the code from the variable declaration or you need to reuse the "
"code across multiple properties (but you can't distinguish which property "
"the setter/getter is being called for)::"
msgstr ""

#, fuzzy
msgid "This can also be done in the same line::"
msgstr "Remplissez le formulaire avec les paramètres suivants :"

msgid ""
"The setter and getter must use the same notation, mixing styles for the same "
"variable is not allowed."
msgstr ""

msgid ""
"You cannot specify type hints for *inline* setters and getters. This is done "
"on purpose to reduce the boilerplate. If the variable is typed, then the "
"setter's argument is automatically of the same type, and the getter's return "
"value must match it. Separated setter/getter functions can have type hints, "
"and the type must match the variable's type or be a wider type."
msgstr ""

msgid "When setter/getter is not called"
msgstr ""

msgid ""
"When a variable is initialized, the value of the initializer will be written "
"directly to the variable. Including if the ``@onready`` annotation is "
"applied to the variable."
msgstr ""

msgid ""
"Using the variable's name to set it inside its own setter or to get it "
"inside its own getter will directly access the underlying member, so it "
"won't generate infinite recursion and saves you from explicitly declaring "
"another variable::"
msgstr ""

#, fuzzy
msgid "This also applies to the alternative syntax::"
msgstr "Voici la syntaxe requise :"

msgid ""
"The exception does **not** propagate to other functions called in the setter/"
"getter. For example, the following code **will** cause an infinite "
"recursion::"
msgstr ""

msgid "Tool mode"
msgstr "Mode tool(outil)"

#, fuzzy
msgid ""
"By default, scripts don't run inside the editor and only the exported "
"properties can be changed. In some cases, it is desired that they do run "
"inside the editor (as long as they don't execute game code or manually avoid "
"doing so). For this, the ``@tool`` annotation exists and must be placed at "
"the top of the file::"
msgstr ""
"Par défaut, les scripts ne s'exécutent pas dans l'éditeur et seules les "
"propriétés exportées peuvent être modifiées. Dans certains cas, il est "
"souhaitable qu'ils s'exécutent dans l'éditeur (tant qu'ils n'exécutent pas "
"le code du jeu ou évitent de le faire manuellement). Pour cela, le mot-clé "
"``tool`` existe et doit être placé en haut du fichier :"

msgid "See :ref:`doc_running_code_in_the_editor` for more information."
msgstr "Voir :ref:`doc_running_code_in_the_editor` pour plus d'informations."

msgid ""
"Be cautious when freeing nodes with ``queue_free()`` or ``free()`` in a tool "
"script (especially the script's owner itself). As tool scripts run their "
"code in the editor, misusing them may lead to crashing the editor."
msgstr ""
"Faites attention en supprimant des nœuds avec ``queue_free()`` ou ``free()`` "
"dans un script outil (en particulier le propriétaire du script). Puisque les "
"scripts outils s'exécutent dans l'éditeur, une erreur pourrait le faire "
"crasher."

msgid "Memory management"
msgstr "Gestion de la mémoire"

msgid ""
"Godot implements reference counting to free certain instances that are no "
"longer used, instead of a garbage collector, or requiring purely manual "
"management. Any instance of the :ref:`class_RefCounted` class (or any class "
"that inherits it, such as :ref:`class_Resource`) will be freed automatically "
"when no longer in use. For an instance of any class that is not a :ref:"
"`class_RefCounted` (such as :ref:`class_Node` or the base :ref:"
"`class_Object` type), it will remain in memory until it is deleted with "
"``free()`` (or ``queue_free()`` for Nodes)."
msgstr ""

msgid ""
"If a :ref:`class_Node` is deleted via ``free()`` or ``queue_free()``, all of "
"its children will also recursively be deleted."
msgstr ""

msgid ""
"To avoid reference cycles that can't be freed, a :ref:`class_WeakRef` "
"function is provided for creating weak references, which allow access to the "
"object without preventing a :ref:`class_RefCounted` from freeing. Here is an "
"example:"
msgstr ""

msgid ""
"Alternatively, when not using references, the "
"``is_instance_valid(instance)`` can be used to check if an object has been "
"freed."
msgstr ""
"Alternativement, quand vous n'utilisez pas de références, le "
"``is_instance_valid(instance)`` peut être utilisé pour vérifier si un objet "
"a été libéré."

msgid "Signals"
msgstr "Signaux"

msgid ""
"Signals are a tool to emit messages from an object that other objects can "
"react to. To create custom signals for a class, use the ``signal`` keyword."
msgstr ""
"Les signaux sont un outil permettant d’émettre des messages à partir d’un "
"objet auquel d’autres objets peuvent réagir. Pour créer des signaux "
"personnalisés pour une classe, utilisez le mot-clé ``signal``."

msgid ""
"Signals are a `Callback <https://en.wikipedia.org/wiki/"
"Callback_(computer_programming)>`_ mechanism. They also fill the role of "
"Observers, a common programming pattern. For more information, read the "
"`Observer tutorial <https://gameprogrammingpatterns.com/observer.html>`_ in "
"the Game Programming Patterns ebook."
msgstr ""
"Les signaux sont comme des `fonctions de rappel <https://fr.wikipedia.org/"
"wiki/Fonction_de_rappel>`_. Ils remplissent également le rôle "
"d'Observateurs, un patron de conception courant en programmation. Pour plus "
"d'informations, lisez le `tutoriel sur les Observateurs <https://"
"gameprogrammingpatterns.com/observer.html>`_ (en anglais), de l'e-book Game "
"Programming Patterns."

#, fuzzy
msgid ""
"You can connect these signals to methods the same way you connect built-in "
"signals of nodes like :ref:`class_Button` or :ref:`class_RigidBody3D`."
msgstr ""
"Vous pouvez connecter ces signaux à des méthodes de la même manière que vous "
"connectez les signaux intégrés de nœuds tels que :ref:`class_Button` ou :ref:"
"`class_RigidBody`."

#, fuzzy
msgid ""
"In the example below, we connect the ``health_depleted`` signal from a "
"``Character`` node to a ``Game`` node. When the ``Character`` node emits the "
"signal, the game node's ``_on_character_health_depleted`` is called::"
msgstr ""
"Dans l'exemple ci-dessous, on connecte le signal ``health_depleted`` du nœud "
"``Character`` au nœud ``Game``. Quand le nœud ``Character`` émettra ce "
"signal, la fonction de rappel ``_on_Character_health_depleted`` du nœud "
"``Game`` sera appelée :"

msgid "You can emit as many arguments as you want along with a signal."
msgstr ""
"Vous pouvez émettre autant d'arguments que vous souhaitez avec un signal."

msgid ""
"Here is an example where this is useful. Let's say we want a life bar on "
"screen to react to health changes with an animation, but we want to keep the "
"user interface separate from the player in our scene tree."
msgstr ""
"Voici un exemple où cela est utile. Si nous voulons ajouter une barre de vie "
"qui s'anime quand les points de vie changent, mais nous souhaitons séparer "
"l'interface utilisateur du joueur dans notre arbre de scène."

#, fuzzy
msgid ""
"In our ``character.gd`` script, we define a ``health_changed`` signal and "
"emit it with :ref:`Signal.emit() <class_Signal_method_emit>`, and from a "
"``Game`` node higher up our scene tree, we connect it to the ``Lifebar`` "
"using the :ref:`Signal.connect() <class_Signal_method_connect>` method::"
msgstr ""
"Dans notre script ``Character.gd``, on va définir un signal "
"``health_changed`` et l'émettre avec :ref:`Object.emit_signal() "
"<class_Object_method_emit_signal>`, et depuis le nœud ``Game`` plus haut "
"dans l'arborescence on le connecte au nœud ``Lifebar`` avec :ref:`Object."
"connect() <class_Object_method_connect>` :"

msgid ""
"In the ``Game`` node, we get both the ``Character`` and ``Lifebar`` nodes, "
"then connect the character, that emits the signal, to the receiver, the "
"``Lifebar`` node in this case."
msgstr ""
"Dans le nœud ``Game``, on récupère les nœuds ``Character`` et ``Lifebar`` "
"puis on connecte le personnage, qui émet le signal, au récepteur c'est-à-"
"dire ``Lifebar`` dans notre cas."

msgid ""
"This allows the ``Lifebar`` to react to health changes without coupling it "
"to the ``Character`` node."
msgstr ""
"Cela permet alors à la ``Lifebar`` de réagir aux changements de points de "
"vie sans avoir à la coupler au nœud ``Character``."

msgid ""
"You can write optional argument names in parentheses after the signal's "
"definition::"
msgstr ""
"Il est possible d'ajouter des arguments optionnels entre parenthèses après "
"la définition du signal :"

msgid ""
"These arguments show up in the editor's node dock, and Godot can use them to "
"generate callback functions for you. However, you can still emit any number "
"of arguments when you emit signals; it's up to you to emit the correct "
"values."
msgstr ""
"Ces arguments seront affichés dans le dock Nœud et Godot les utilisera pour "
"générer les fonctions de rappel automatiquement pour vous. Dans tous les "
"cas, vous pouvez émettre autant d'arguments que vous souhaitez avec vos "
"signaux ; c'est à vous d'émettre les bonnes valeurs."

msgid ""
"GDScript can bind an array of values to connections between a signal and a "
"method. When the signal is emitted, the callback method receives the bound "
"values. These bound arguments are unique to each connection, and the values "
"will stay the same."
msgstr ""
"GDScript peut lier un tableau de valeurs à des connexions entre un signal et "
"une méthode. Lorsque le signal est émis, la méthode de rappel reçoit les "
"valeurs liées. Ces arguments liés sont uniques pour chaque connexion et les "
"valeurs resteront les mêmes."

msgid ""
"You can use this array of values to add extra constant information to the "
"connection if the emitted signal itself doesn't give you access to all the "
"data that you need."
msgstr ""
"Vous pouvez utiliser ces arguments pour ajouter des informations "
"supplémentaires à la connexion si le signal émit ne vous donne pas accès à "
"toutes les informations dont vous avez besoin."

msgid ""
"Building on the example above, let's say we want to display a log of the "
"damage taken by each character on the screen, like ``Player1 took 22 damage."
"``. The ``health_changed`` signal doesn't give us the name of the character "
"that took damage. So when we connect the signal to the in-game console, we "
"can add the character's name in the binds array argument::"
msgstr ""
"À partir de l'exemple présenté plus haut, nous allons afficher une liste des "
"dégâts reçus par chaque personnage à l'écran, par exemple ``Player1 took 22 "
"damage.``. Le signal ``health_changed`` ne nous donne pas le nom du "
"personnage qui a pris des dégâts. Alors, quand on connectera le signal à la "
"console en jeu, il faudra ajouter le nom du personnage parmi les arguments "
"du signal émit :"

msgid ""
"Our ``BattleLog`` node receives each element in the binds array as an extra "
"argument::"
msgstr ""
"Le nœud ``BattleLog`` recevra chaque élément dans les paramètres de sa "
"fonction de rappel :"

#, fuzzy
msgid "Awaiting for signals or coroutines"
msgstr "Localisation du contenu original"

msgid ""
"The ``await`` keyword can be used to create `coroutines <https://en."
"wikipedia.org/wiki/Coroutine>`_ which wait until a signal is emitted before "
"continuing execution. Using the ``await`` keyword with a signal or a call to "
"a function that is also a coroutine will immediately return the control to "
"the caller. When the signal is emitted (or the called coroutine finishes), "
"it will resume execution from the point on where it stopped."
msgstr ""

msgid ""
"For example, to stop execution until the user presses a button, you can do "
"something like this::"
msgstr ""

msgid ""
"In this case, the ``wait_confirmation`` becomes a coroutine, which means "
"that the caller also needs to await for it::"
msgstr ""

msgid ""
"Note that requesting a coroutine's return value without ``await`` will "
"trigger an error::"
msgstr ""

msgid ""
"However, if you don't depend on the result, you can just call it "
"asynchronously, which won't stop execution and won't make the current "
"function a coroutine::"
msgstr ""

msgid ""
"If you use await with an expression that isn't a signal nor a coroutine, the "
"value will be returned immediately and the function won't give the control "
"back to the caller::"
msgstr ""

msgid ""
"This also means that returning a signal from a function that isn't a "
"coroutine will make the caller await on that signal::"
msgstr ""

msgid ""
"Unlike ``yield`` in previous Godot versions, you cannot obtain the function "
"state object. This is done to ensure type safety. With this type safety in "
"place, a function cannot say that it returns an ``int`` while it actually "
"returns a function state object during runtime."
msgstr ""

msgid "Assert keyword"
msgstr "Mot-clé d'assertion"

msgid ""
"The ``assert`` keyword can be used to check conditions in debug builds. "
"These assertions are ignored in non-debug builds. This means that the "
"expression passed as argument won't be evaluated in a project exported in "
"release mode. Due to this, assertions must **not** contain expressions that "
"have side effects. Otherwise, the behavior of the script would vary "
"depending on whether the project is run in a debug build."
msgstr ""
"Le mot-clé ``assert`` sert à vérifier une condition dans un build de "
"débogage. Cette instruction est ignorée dans un build sans débogage, c'est-à-"
"dire que l'expression passée en argument de ``assert`` ne sera pas évaluée "
"dans un projet exporté en mode publication. De ce fait, ``assert`` ne doit "
"**pas** contenir des expressions ayant des effets secondaires. Sinon, le "
"comportement du script variera selon s'il est exécuté dans un build de "
"débogage ou de publication."

msgid ""
"When running a project from the editor, the project will be paused if an "
"assertion error occurs."
msgstr ""
"Lors de l'exécution d'un projet depuis l'éditeur, celui-ci sera mis en pause "
"en cas d'erreur d'assertion."

msgid ""
"You can optionally pass a custom error message to be shown if the assertion "
"fails::"
msgstr ""

msgid "Translation status"
msgstr "État de la traduction"
