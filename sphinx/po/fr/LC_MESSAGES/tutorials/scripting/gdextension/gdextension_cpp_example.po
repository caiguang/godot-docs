# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "GDExtension C++ example"
msgstr "Exemple GDNative C++"

msgid "Introduction"
msgstr "Introduction"

#, fuzzy
msgid ""
"The C++ bindings for GDExtension are built on top of the C GDExtension API "
"and provide a nicer way to \"extend\" nodes and other built-in classes in "
"Godot using C++. This new system allows the extension of Godot to nearly the "
"same level as statically linked C++ modules."
msgstr ""
"Les liaisons(bindings) C++ pour GDNative sont construites au-dessus de l'API "
"NativeScript GDNative et fournissent un moyen plus agréable d'\"étendre\" "
"les nœuds de Godot en utilisant le C++. Cela équivaut à écrire des scripts "
"en GDScript, mais en C++ à la place."

#, fuzzy
msgid ""
"You can download the included example in the test folder of the godot-cpp "
"repository `on GitHub <https://github.com/godotengine/godot-cpp>`__."
msgstr ""
"une copie du `dépôt godot-cpp <https://github.com/godotengine/godot-cpp>`__."

msgid "Setting up the project"
msgstr "Mise en place du projet"

msgid "There are a few prerequisites you'll need:"
msgstr "Il y a quelques prérequis dont vous aurez besoin :"

#, fuzzy
msgid "a Godot 4 executable,"
msgstr "un exécutable Godot 3.x,"

msgid "a C++ compiler,"
msgstr "un compilateur C++,"

msgid "SCons as a build tool,"
msgstr "SCons comme outil de construction,"

msgid ""
"a copy of the `godot-cpp repository <https://github.com/godotengine/godot-"
"cpp>`__."
msgstr ""
"une copie du `dépôt godot-cpp <https://github.com/godotengine/godot-cpp>`__."

msgid ""
"See also :ref:`Compiling <toc-devel-compiling>` as the build tools are "
"identical to the ones you need to compile Godot from source."
msgstr ""
"Voir aussi :ref:`Compiling <toc-devel-compiling>` car les outils de build "
"sont identiques à ceux dont vous avez besoin pour compiler Godot à partir de "
"la source."

#, fuzzy
msgid ""
"You can download the `godot-cpp repository <https://github.com/godotengine/"
"godot-cpp>`__ from GitHub or let Git do the work for you. Note that this "
"repository has different branches for different versions of Godot. "
"GDExtensions will not work in older versions of Godot (only Godot 4 and up) "
"and vice versa, so make sure you download the correct branch."
msgstr ""
"Vous pouvez télécharger ces dépôts sur GitHub ou laisser Git faire le "
"travail pour vous. Notez que ces dépôts ont maintenant différentes branches "
"pour différentes versions de Godot. Les modules GDNative écrits pour une "
"version antérieure de Godot fonctionneront dans les versions plus récentes "
"(à l'exception d'une rupture de compatibilité dans les interfaces ARVR entre "
"3.0 et 3.1) mais pas l'inverse, donc assurez-vous de télécharger la bonne "
"branche. Notez également que la version de Godot que vous utilisez pour "
"générer l'``api.json`` devient votre version minimale."

#, fuzzy
msgid ""
"To use `GDExtension <https://godotengine.org/article/introducing-gd-"
"extensions>`__ you need to use the godot-cpp branch that matches the version "
"of Godot that you are targeting. For example, if you're targeting Godot 4.1, "
"use the ``4.1`` branch, which is what is shown through out this tutorial."
msgstr ""
"`GDExtension <https://godotengine.org/article/introducing-gd-extensions>`__ "
"a été fusionnée dans la branche ``master`` de godot-cpp, mais elle n'est "
"compatible qu'avec le prochain Godot 4.0. Par conséquent, vous devez "
"utiliser la branche ``3.x`` de godot-cpp pour utiliser GDNative et suivre "
"cet exemple."

msgid ""
"The ``master`` branch is the development branch which is updated regularly "
"to work with Godot's ``master`` branch."
msgstr ""

msgid ""
"Our long-term goal is that GDExtensions targeting an earlier version of "
"Godot will work in later minor versions, but not vice-versa. For example, a "
"GDExtension targeting Godot 4.2 should work just fine in Godot 4.3, but one "
"targeting Godot 4.3 won't work in Godot 4.2."
msgstr ""

msgid ""
"However, GDExtension is currently *experimental*, which means that we may "
"break compatibility in order to fix major bugs or include critical features. "
"For example, GDExtensions created for Godot 4.0 aren't compatible with Godot "
"4.1 (see :ref:`updating_your_gdextension_for_godot_4_1`)."
msgstr ""

#, fuzzy
msgid ""
"If you are versioning your project using Git, it is recommended to add it as "
"a Git submodule:"
msgstr ""
"Si vous versionnez votre projet en utilisant Git, il est bon de les ajouter "
"en tant que sous-modules Git :"

msgid "Alternatively, you can also clone it to the project folder:"
msgstr ""

#, fuzzy
msgid ""
"If you decide to download the repository or clone it into your folder, make "
"sure to keep the folder layout the same as we've setup here. Much of the "
"code we'll be showcasing here assumes the project has this layout."
msgstr ""
"Si vous décidez de télécharger simplement les dépôts ou de les cloner dans "
"votre dossier de projet, assurez-vous de garder la disposition du dossier "
"identique à celle décrite ici, car une grande partie du code que nous allons "
"présenter ici suppose que le projet suit cette disposition."

msgid ""
"If you cloned the example from the link specified in the introduction, the "
"submodules are not automatically initialized. You will need to execute the "
"following commands:"
msgstr ""
"Si vous avez cloné l'exemple à partir du lien indiqué dans l'introduction, "
"les sous-modules ne sont pas automatiquement initialisés. Vous devrez "
"exécuter les commandes suivantes :"

#, fuzzy
msgid "This will initialize the repository in your project folder."
msgstr "Cela permettra de cloner ces deux dépôts dans votre dossier de projet."

msgid "Building the C++ bindings"
msgstr "Construire(Building) des liaisons(bindings) C ++"

msgid ""
"Now that we've downloaded our prerequisites, it is time to build the C++ "
"bindings."
msgstr ""
"Maintenant que nous avons téléchargé nos prérequis, il est temps de build "
"les liaisons(bindings) C++."

msgid ""
"The repository contains a copy of the metadata for the current Godot "
"release, but if you need to build these bindings for a newer version of "
"Godot, simply call the Godot executable:"
msgstr ""
"Le dépôt contient une copie des métadonnées pour la version actuelle de "
"Godot, mais si vous devez construire ces liens pour une version plus récente "
"de Godot, il suffit d'appeler l'exécutable Godot :"

#, fuzzy
msgid ""
"The resulting ``extension_api.json`` file will be created in the "
"executable's directory. Copy it to the project folder and add "
"``custom_api_file=<PATH_TO_FILE>`` to the scons command below."
msgstr ""
"Placez le fichier ``api.json`` résultant dans le dossier du projet et "
"ajoutez ``use_custom_api_file=yes custom_api_file=../api.json`` à la "
"commande scons ci-dessous."

#, fuzzy
msgid ""
"To generate and compile the bindings, use this command (replacing "
"``<platform>`` with ``windows``, ``linux`` or ``macos`` depending on your "
"OS):"
msgstr ""
"Pour générer et compiler les liaisons(bindings), utilisez cette commande (en "
"remplaçant ``<platform>`` par ``windows``, ``linux`` ou ``osx`` selon votre "
"système d'exploitation) :"

msgid ""
"The build process automatically detects the number of CPU threads to use for "
"parallel builds. To specify a number of CPU threads to use, add ``-jN`` at "
"the end of the SCons command line where ``N`` is the number of CPU threads "
"to use."
msgstr ""

msgid ""
"This step will take a while. When it is completed, you should have static "
"libraries that can be compiled into your project stored in ``godot-cpp/bin/"
"``."
msgstr ""
"Cette étape prendra un certain temps. Lorsqu'elle sera terminée, vous "
"devriez disposer de bibliothèques statiques pouvant être compilées dans "
"votre projet et stockées dans ``godot-cpp/bin/``."

msgid "You may need to add ``bits=64`` to the command on Windows or Linux."
msgstr ""
"Vous devrez peut-être ajouter ``bits=64`` à la commande sous Windows ou "
"Linux."

msgid "Creating a simple plugin"
msgstr "Créer un plugin simple"

msgid ""
"Now it's time to build an actual plugin. We'll start by creating an empty "
"Godot project in which we'll place a few files."
msgstr ""
"Il est maintenant temps de construire un véritable plugin. Nous commencerons "
"par créer un projet Godot vide dans lequel nous placerons quelques fichiers."

#, fuzzy
msgid ""
"Open Godot and create a new project. For this example, we will place it in a "
"folder called ``demo`` inside our GDExtension's folder structure."
msgstr ""
"Ouvrez Godot et créez un nouveau projet. Pour cet exemple, nous allons le "
"placer dans un dossier appelé ``demo`` à l'intérieur de la structure des "
"dossiers de notre module GDNative."

msgid ""
"In our demo project, we'll create a scene containing a Node called \"Main\" "
"and we'll save it as ``main.tscn``. We'll come back to that later."
msgstr ""
"Dans notre projet de démo, nous allons créer une scène contenant un nœud "
"appelé \"Main\" et nous l'enregistrerons sous le nom de ``main.tscn``. Nous "
"y reviendrons plus tard."

#, fuzzy
msgid ""
"Back in the top-level GDExtension module folder, we're also going to create "
"a subfolder called ``src`` in which we'll place our source files."
msgstr ""
"De retour dans le dossier du module GDNative, nous allons également créer un "
"sous-dossier appelé ``src`` dans lequel nous placerons nos fichiers source."

#, fuzzy
msgid ""
"You should now have ``demo``, ``godot-cpp``, and ``src`` directories in your "
"GDExtension module."
msgstr ""
"Vous devriez maintenant avoir les répertoires ``demo``, ``godot-cpp``, "
"``godot_headers``, et ``src`` dans votre module GDNative."

#, fuzzy
msgid "Your folder structure should now look like this:"
msgstr "Votre scène devrait ressembler à ceci :"

#, fuzzy
msgid ""
"In the ``src`` folder, we'll start with creating our header file for the "
"GDExtension node we'll be creating. We will name it ``gdexample.h``:"
msgstr ""
"Dans le dossier ``src``, nous commencerons par créer notre fichier d'en-tête "
"pour le nœud GDNative que nous allons créer. Nous le nommerons ``gdexample."
"h`` :"

#, fuzzy
msgid ""
"There are a few things of note to the above. We include ``sprite2d.hpp`` "
"which contains bindings to the Sprite2D class. We'll be extending this class "
"in our module."
msgstr ""
"Il y a quelques éléments à noter dans ce qui précède. Nous incluons ``Godot."
"hpp`` qui contient toutes nos définitions de base. Ensuite, nous incluons "
"``Sprite.hpp`` qui contient les liens vers la classe Sprite. Nous allons "
"étendre cette classe dans notre module."

#, fuzzy
msgid ""
"We're using the namespace ``godot``, since everything in GDExtension is "
"defined within this namespace."
msgstr ""
"Nous utilisons l'espace de noms ``godot``, puisque tout ce qui est en "
"GDNative est défini dans cet espace de noms."

#, fuzzy
msgid ""
"Then we have our class definition, which inherits from our Sprite2D through "
"a container class. We'll see a few side effects of this later on. The "
"``GDCLASS`` macro sets up a few internal things for us."
msgstr ""
"Ensuite, nous avons notre définition de la classe, qui hérite de notre "
"Sprite par le biais d'une classe conteneur. Nous en verrons les effets "
"secondaires plus tard. La macro ``GODOT_CLASS`` met en place quelques "
"éléments internes pour nous."

msgid "After that, we declare a single member variable called ``time_passed``."
msgstr ""
"Après cela, nous déclarons une unique variable membre appelée "
"``time_passed``."

#, fuzzy
msgid ""
"In the next block we're defining our methods, we have our constructor and "
"destructor defined, but there are two other functions that will likely look "
"familiar to some, and one new method."
msgstr ""
"Dans le bloc suivant, nous définissons nos méthodes, nous avons évidemment "
"défini notre constructeur et notre destructeur, mais il y a deux autres "
"fonctions qui sembleront probablement familières à certains, et une nouvelle "
"méthode."

#, fuzzy
msgid ""
"The first is ``_bind_methods``, which is a static function that Godot will "
"call to find out which methods can be called and which properties it "
"exposes. The second is our ``_process`` function, which will work exactly "
"the same as the ``_process`` function you're used to in GDScript."
msgstr ""
"La première est ``_register_methods``, qui est une fonction statique que "
"Godot appellera pour savoir quelles méthodes peuvent être appelées sur notre "
"NativeScript et quelles propriétés il expose. La seconde est notre fonction "
"``_process``, qui fonctionnera exactement comme la fonction ``_process`` à "
"laquelle vous êtes habitué dans le GDScript. La troisième est notre fonction "
"``_init`` qui est appelée après que Godot ait correctement configuré notre "
"objet. Elle doit exister même si vous n'y placez aucun code."

msgid "Let's implement our functions by creating our ``gdexample.cpp`` file:"
msgstr "Implémentons nos fonctions en créant notre fichier ``gdexample.cpp`` :"

msgid ""
"This one should be straightforward. We're implementing each method of our "
"class that we defined in our header file."
msgstr ""

msgid ""
"Note our ``_process`` function, which keeps track of how much time has "
"passed and calculates a new position for our sprite using a sine and cosine "
"function."
msgstr ""

#, fuzzy
msgid ""
"There is one more C++ file we need; we'll name it ``register_types.cpp``. "
"Our GDExtension plugin can contain multiple classes, each with their own "
"header and source file like we've implemented ``GDExample`` up above. What "
"we need now is a small bit of code that tells Godot about all the classes in "
"our GDExtension plugin."
msgstr ""
"Il nous faut encore un fichier C++ ; nous le nommerons ``gdlibrary.cpp``. "
"Notre plugin GDNative peut contenir plusieurs NativeScripts, chacun avec son "
"propre en-tête et son propre fichier source, comme nous l'avons fait pour "
"``GDExample`` ci-dessus. Ce dont nous avons besoin maintenant, c'est d'un "
"petit bout de code qui renseigne Godot sur tous les NativeScripts de notre "
"plugin GDNative."

#, fuzzy
msgid ""
"The ``initialize_example_module`` and ``uninitialize_example_module`` "
"functions get called respectively when Godot loads our plugin and when it "
"unloads it. All we're doing here is parse through the functions in our "
"bindings module to initialize them, but you might have to set up more things "
"depending on your needs. We call the function ``register_class`` for each of "
"our classes in our library."
msgstr ""
"Les fonctions ``godot_gdnative_init`` et ``godot_gdnative_terminate`` sont "
"appelées respectivement quand Godot charge notre plugin et quand il le "
"décharge. Tout ce que nous faisons ici, c'est analyser les fonctions de "
"notre module de liaisons(bindings) pour les initialiser, mais il se peut que "
"vous ayez à configurer d'autres choses en fonction de vos besoins."

#, fuzzy
msgid ""
"The important function is the third function called "
"``example_library_init``. We first call a function in our bindings library "
"that creates an initialization object. This object registers the "
"initialization and termination functions of the GDExtension. Furthermore, it "
"sets the level of initialization (core, servers, scene, editor, level)."
msgstr ""
"La fonction importante est la troisième fonction appelée "
"``godot_nativescript_init``. Nous appelons d'abord une fonction dans notre "
"bibliothèque de liaisons(bindings) qui fait ses trucs habituels. Ensuite, "
"nous appelons la fonction ``register_class`` pour chacune de nos classes "
"dans notre bibliothèque."

msgid ""
"At last, we need the header file for the ``register_types.cpp`` named "
"``register_types.h``."
msgstr ""

msgid "Compiling the plugin"
msgstr "Compiler le plugin"

msgid ""
"We cannot easily write by hand a ``SConstruct`` file that SCons would use "
"for building. For the purpose of this example, just use :download:`this "
"hardcoded SConstruct file <files/cpp_example/SConstruct>` we've prepared. "
"We'll cover a more customizable, detailed example on how to use these build "
"files in a subsequent tutorial."
msgstr ""
"Nous ne pouvons pas facilement écrire à la main un fichier ``SConstruct`` "
"que SCons utiliserait pour construire(building). Pour cet exemple, il suffit "
"d'utiliser :download:`ce fichier SConstruct codé en dur <files/cpp_exemple/"
"SConstruct>` que nous avons préparé. Un exemple plus détaillé et "
"personnalisable sur la façon d'utiliser ces fichiers de construction(build) "
"sera présenté dans un tutoriel ultérieur."

#, fuzzy
msgid ""
"This ``SConstruct`` file was written to be used with the latest ``godot-"
"cpp`` master, you may need to make small changes using it with older "
"versions or refer to the ``SConstruct`` file in the Godot 4.0 documentation."
msgstr ""
"Ce fichier ``SConstruct`` a été écrit pour être utilisé avec le dernier "
"``godot-cpp`` master, vous devrez peut-être faire de petites modifications "
"en l'utilisant avec des versions plus anciennes ou vous référer au fichier "
"``SConstruct`` dans la documentation de Godot 3.0."

#, fuzzy
msgid ""
"Once you've downloaded the ``SConstruct`` file, place it in your GDExtension "
"folder structure alongside ``godot-cpp``, ``src`` and ``demo``, then run:"
msgstr ""
"Une fois que vous avez téléchargé le fichier ``SConstruct``, placez-le dans "
"le dossier de votre module GDNative à côté de ``godot-cpp``, "
"``godot_headers`` et ``demo``, puis exécutez :"

msgid "You should now be able to find the module in ``demo/bin/<platform>``."
msgstr ""
"Vous devriez maintenant être en mesure de trouver le module dans ``demo/bin/"
"<platform>``."

#, fuzzy
msgid ""
"Here, we've compiled both godot-cpp and our gdexample library as debug "
"builds. For optimized builds, you should compile them using the "
"``target=template_release`` switch."
msgstr ""
"Ici, nous avons compilé à la fois godot-cpp et notre bibliothèque gdexample "
"en tant que constructions(builds) de débogage. Pour des builds optimisés, "
"vous devriez les compiler en utilisant le commutateur ``target=release``."

#, fuzzy
msgid "Using the GDExtension module"
msgstr "Utilisation du module GDNative"

#, fuzzy
msgid ""
"Before we jump back into Godot, we need to create one more file in ``demo/"
"bin/``."
msgstr ""
"Avant de revenir à Godot, nous devons créer deux autres fichiers dans ``demo/"
"bin/``. Les deux peuvent être créés à l'aide de l'éditeur Godot, mais il "
"peut être plus rapide de les créer directement."

#, fuzzy
msgid ""
"This file lets Godot know what dynamic libraries should be loaded for each "
"platform and the entry function for the module. It is called ``gdexample."
"gdextension``."
msgstr ""
"Le premier est un fichier qui permet à Godot de savoir quelles bibliothèques "
"dynamiques doivent être chargées pour chaque plate-forme et s'appelle "
"``gdexample.gdnlib``."

msgid ""
"This file contains a ``configuration`` section that controls the entry "
"function of the module. You should also set the minimum compatible Godot "
"version with ``compatability_minimum``, which prevents older version of "
"Godot from trying to load your extension."
msgstr ""

#, fuzzy
msgid ""
"The ``libraries`` section is the important bit: it tells Godot the location "
"of the dynamic library in the project's filesystem for each supported "
"platform. It will also result in *just* that file being exported when you "
"export the project, which means the data pack won't contain libraries that "
"are incompatible with the target platform."
msgstr ""
"La section ``entry`` est la partie importante : elle indique à Godot "
"l'emplacement de la bibliothèque dynamique dans le système de fichiers du "
"projet pour chaque plate-forme supportée. Elle permet également d'exporter "
"*juste* ce fichier lorsque vous exportez le projet, ce qui signifie que le "
"paquet de données ne contiendra pas de bibliothèques incompatibles avec la "
"plate-forme cible."

#, fuzzy
msgid ""
"Finally, the ``dependencies`` section allows you to name additional dynamic "
"libraries that should be included as well. This is important when your "
"GDExtension plugin implements someone else's library and requires you to "
"supply a third-party dynamic library with your project."
msgstr ""
"Enfin, la section ``dependencies`` vous permet de nommer des bibliothèques "
"dynamiques supplémentaires qui devraient également être incluses. Ceci est "
"important lorsque votre plugin GDNative implémente la bibliothèque de "
"quelqu'un d'autre et vous demande de fournir une bibliothèque dynamique "
"tierce avec votre projet."

msgid "Here is another overview to check the correct file structure:"
msgstr ""

#, fuzzy
msgid ""
"Time to jump back into Godot. We load up the main scene we created way back "
"in the beginning and now add a newly available GDExample node to the scene:"
msgstr ""
"Il est temps de revenir dans Godot. Nous chargeons la scène principale que "
"nous avons créée au début et ajoutons maintenant un Sprite à notre scène :"

#, fuzzy
msgid ""
"We're going to assign the Godot logo to this node as our texture, disable "
"the ``centered`` property:"
msgstr ""
"Nous allons assigner le logo Godot en texture à ce sprite, désactiver la "
"propriété ``centered`` et glisser notre fichier ``gdexample.gdns`` sur la "
"propriété ``script`` du sprite :"

msgid "We're finally ready to run the project:"
msgstr "Nous sommes prêts à lancer le projet :"

#, fuzzy
msgid "Custom editor icon"
msgstr "Ajout d'icônes d'éditeur personnalisé"

msgid ""
"By default, Godot uses the node icon in the scene dock for GDExtension "
"nodes. The custom icon can be added via the ``gdextension`` file. The node's "
"icon is set by reference to its name and resource path of an SVG file."
msgstr ""

msgid "For example:"
msgstr "Par exemple :"

msgid ""
"The path should point to a 16 by 16 pixel SVG image. Read the guide for :ref:"
"`creating icons <doc_editor_icons>` for more information."
msgstr ""

msgid "Adding properties"
msgstr "Ajouter des propriétés"

#, fuzzy
msgid ""
"GDScript allows you to add properties to your script using the ``export`` "
"keyword. In GDExtension you have to register the properties with a getter "
"and setter function or directly implement the ``_get_property_list``, "
"``_get`` and ``_set`` methods of an object (but that goes far beyond the "
"scope of this tutorial)."
msgstr ""
"Il y a une troisième option : tout comme en GDScript vous pouvez implémenter "
"directement les méthodes ``_get_property_list``, ``_get`` et ``_set`` d’un "
"objet, mais ça dépasse la portée de ce tutoriel."

#, fuzzy
msgid ""
"Lets add a property that allows us to control the amplitude of our wave."
msgstr ""
"Nous allons examiner les deux méthodes, en commençant par la liaison "
"directe. Ajoutons une propriété qui nous permette de contrôler l’amplitude "
"de notre vague."

#, fuzzy
msgid ""
"In our ``gdexample.h`` file we need to add a member variable and getter and "
"setter functions:"
msgstr ""
"Dans notre fichier ``gdexample.h``, il faut seulement ajouter une variable "
"membre de la manière suivante :"

msgid ""
"In our ``gdexample.cpp`` file we need to make a number of changes, we will "
"only show the methods we end up changing, don't remove the lines we're "
"omitting:"
msgstr ""
"Dans notre fichier ``gdexample.cpp`, il faut faire un certain nombre de "
"changements . Nous ne montrerons que les méthodes que nous changerons donc "
"ne supprimez pas les lignes qui n’apparaissent pas ici :"

msgid ""
"Once you compile the module with these changes in place, you will see that a "
"property has been added to our interface. You can now change this property "
"and when you run your project, you will see that our Godot icon travels "
"along a larger figure."
msgstr ""
"Lorsque vous compilerez le module avec ces changements, vous verrez qu’une "
"propriété a été ajoutée à notre interface. Vous pouvez maintenant changer "
"cette propriété et en lançant le projet, vous verrez que notre icône Godot "
"se déplace sur une plus grande zone."

msgid ""
"Let's do the same but for the speed of our animation and use a setter and "
"getter function. Our ``gdexample.h`` header file again only needs a few more "
"lines of code:"
msgstr ""
"Faisons la même chose mais pour la vitesse de notre animation et utilisons "
"une fonction setter et getter. Notre fichier d'en-tête ``gdexample.h`` ne "
"nécessite à nouveau que quelques lignes de code supplémentaires :"

msgid ""
"This requires a few more changes to our ``gdexample.cpp`` file, again we're "
"only showing the methods that have changed so don't remove anything we're "
"omitting:"
msgstr ""
"Il faut quelques modifications supplémentaires dans notre fichier "
"``gdexample.cpp``. Là encore nous ne montrerons que les méthodes qui ont "
"changé, donc ne pas supprimer ce que nous ne montrons pas ici :"

#, fuzzy
msgid ""
"Now when the project is compiled, we'll see another property called speed. "
"Changing its value will make the animation go faster or slower. Furthermore, "
"we added a property range which describes in which range the value can be. "
"The first two arguments are the minimum and maximum value and the third is "
"the step size."
msgstr ""
"Maintenant, lorsque le projet est compilé, nous verrons une autre propriété "
"appelée speed. En changeant sa valeur, l'animation sera plus rapide ou plus "
"lente."

#, fuzzy
msgid ""
"For simplicity, we've only used the hint_range of the property method. There "
"are a lot more options to choose from. These can be used to further "
"configure how properties are displayed and set on the Godot side."
msgstr ""
"Pour simplifier, nous avons omis les paramètres optionnels dans l’appel de "
"méthode register_property<class, type>. Ces paramètres sont ``rpc_mode``, "
"``usage``, ``hint`` et ``hint_string``. Ils peuvent être utilisés pour "
"configurer plus finement la manière dont les propriétés sont affichées et "
"définies du côté de Godot."

msgid "Signals"
msgstr "Signaux"

#, fuzzy
msgid ""
"Last but not least, signals fully work in GDExtension as well. Having your "
"extension react to a signal given out by another object requires you to call "
"``connect`` on that object. We can't think of a good example for our "
"wobbling Godot icon, we would need to showcase a far more complete example."
msgstr ""
"Pour terminer, les signaux sont eux aussi complètement supportés dans "
"GDNative. Pour qu’un module réagisse à un signal transmis par un autre "
"objet, il faut appeler la méthode ``connect`` sur cet objet. Nous ne "
"trouvons pas de bon exemple pour notre icône Godot qui bouge ; pour ça il "
"faudrait montrer un exemple beaucoup plus complet."

msgid "This is the required syntax:"
msgstr "Voici la syntaxe requise :"

msgid ""
"To connect our signal ``the_signal`` from some other node with our method "
"``my_method``, we need to provide the ``connect`` method with the name of "
"the signal and a ``Callable``. The ``Callable`` holds information about an "
"object on which a method can be called. In our case, it associates our "
"current object instance ``this`` with the method ``my_method`` of the "
"object. Then the ``connect`` method will add this to the observers of "
"``the_signal``. Whenever ``the_signal`` is now emitted, Godot knows which "
"method of which object it needs to call."
msgstr ""

#, fuzzy
msgid ""
"Note that you can only call ``my_method`` if you've previously registered it "
"in your ``_bind_methods`` method. Otherwise Godot will not know about the "
"existence of ``my_method``."
msgstr ""
"Remarquez qu’on ne peut appeler ``my_method`` que si on l’a au préalable "
"enregistrée dans la méthode ``_register_methods``."

msgid ""
"To learn more about ``Callable``, check out the class reference here: :ref:"
"`Callable <class_Callable>`."
msgstr ""

msgid ""
"Having your object sending out signals is more common. For our wobbling "
"Godot icon, we'll do something silly just to show how it works. We're going "
"to emit a signal every time a second has passed and pass the new location "
"along."
msgstr ""
"Il est plus courant que votre objet envoie des signaux. Pour notre icône "
"Godot vacillante, nous allons faire quelque chose de stupide juste pour "
"montrer comment cela fonctionne. Nous allons émettre un signal chaque fois "
"qu'une seconde s'est écoulée et transmettre la nouvelle position."

msgid ""
"In our ``gdexample.h`` header file, we need to define a new member "
"``time_emit``:"
msgstr ""
"Dans notre fichier d'en-tête ``gdexample.h``, nous devons définir un nouveau "
"membre ``time_emit`` :"

msgid ""
"This time, the changes in ``gdexample.cpp`` are more elaborate. First, "
"you'll need to set ``time_emit = 0.0;`` in either our ``_init`` method or in "
"our constructor. We'll look at the other 2 needed changes one by one."
msgstr ""
"Cette fois, les changements dans ``gdexample.cpp`` sont plus élaborés. Tout "
"d'abord, vous devrez définir ``time_emit = 0.0;`` dans notre méthode "
"``_init`` ou dans notre constructeur. Nous allons examiner les deux autres "
"modifications nécessaires une par une."

#, fuzzy
msgid ""
"In our ``_bind_methods`` method, we need to declare our signal. This is done "
"as follows:"
msgstr ""
"Dans notre méthode ``_register_methods``, nous devons déclarer notre signal. "
"Cela se fait comme suit :"

msgid ""
"Here, our ``ADD_SIGNAL`` macro can be a single call with a ``MethodInfo`` "
"argument. ``MethodInfo``'s first parameter will be the signal's name, and "
"its remaining parameters are ``PropertyInfo`` types which describe the "
"essentials of each of the method's parameters. ``PropertyInfo`` parameters "
"are defined with the data type of the parameter, and then the name that the "
"parameter will have by default."
msgstr ""

msgid ""
"So here, we add a signal, with a ``MethodInfo`` which names the signal "
"\"position_changed\". The ``PropertyInfo`` parameters describe two essential "
"arguments, one of type ``Object``, the other of type ``Vector2``, "
"respectively named \"node\" and \"new_pos\"."
msgstr ""

msgid "Next, we'll need to change our ``_process`` method:"
msgstr "Ensuite, nous devons modifier notre méthode ``_process`` :"

msgid ""
"After a second has passed, we emit our signal and reset our counter. We can "
"add our parameter values directly to ``emit_signal``."
msgstr ""
"Après qu'une seconde se soit écoulée, nous émettons notre signal et "
"remettons notre compteur à zéro. Nous pouvons ajouter nos valeurs de "
"paramètres directement dans ``emit_signal``."

#, fuzzy
msgid ""
"Once the GDExtension library is compiled, we can go into Godot and select "
"our sprite node. In the **Node** dock, we can find our new signal and link "
"it up by pressing the **Connect** button or double-clicking the signal. "
"We've added a script on our main node and implemented our signal like this:"
msgstr ""
"Une fois la bibliothèque GDNative compilée, nous pouvons aller dans Godot et "
"sélectionner notre nœud de sprite. Dans le dock **Nœud**, nous pouvons "
"trouver notre nouveau signal et le relier en appuyant sur le bouton "
"**Connect** ou en double-cliquant sur le signal. Nous avons ajouté un script "
"sur notre nœud principal et implémenté notre signal comme ceci :"

msgid "Every second, we output our position to the console."
msgstr "Chaque seconde, on envoie notre position à la console."

msgid "Next steps"
msgstr "La suite"

#, fuzzy
msgid ""
"We hope the above example showed you the basics. You can build upon this "
"example to create full-fledged scripts to control nodes in Godot using C++."
msgstr ""
"Ce qui précède était un simple exemple, mais nous espérons qu’il vous ait "
"montré les bases. Vous pouvez partir de là pour créer des scripts complets "
"afin de contrôler des nœuds dans Godot, en utilisant C++."

msgid "Translation status"
msgstr "État de la traduction"
