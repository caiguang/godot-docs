# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Using navigation meshes"
msgstr "Maillages de Navigation"

msgid ""
"2D and 3D versions of the navigation mesh are available as :ref:"
"`NavigationPolygon<class_NavigationPolygon>` and :ref:"
"`NavigationMesh<class_NavigationMesh>`  respectively."
msgstr ""

msgid ""
"A navigation mesh only describes a traversable area for an agent's center "
"position. Any radius values an agent may have are ignored. If you want "
"pathfinding to account for an agent's (collision) size you need to shrink "
"the navigation mesh accordingly."
msgstr ""

msgid ""
"Navigation works independently from other engine parts like rendering or "
"physics. Navigation meshes are the only things considered when doing "
"pathfinding, e.g. visuals and collision shapes for example are completely "
"ignored by the navigation system. If you need to take other data (like "
"visuals for example) into account when doing pathfinding, you need to adapt "
"your navigation meshes accordingly. The process of factoring in navigation "
"restrictions in navigation meshes is commonly referred to as navigation mesh "
"baking."
msgstr ""

#, fuzzy
msgid "Navigation mesh polygon convex vs concave comparison"
msgstr ""
"Les maillages de navigation et les polygones seront visibles sur le jeu en "
"cours d’exécution."

msgid ""
"A navigation mesh describes a surface that an agent can stand on safely with "
"its center compared to physics shapes that describe outer collision bounds."
msgstr ""

msgid ""
"If you experience clipping or collision problems while following navigation "
"paths, always remember that you need to tell the navigation system what your "
"intentions are through an appropriate navigation mesh. By itself the "
"navigation system will never know \"this is a tree / rock / wall collision "
"shape or visual mesh\" because it only knows that \"here I was told I can "
"path safely because it is on a navigation mesh\"."
msgstr ""

msgid ""
"Navigation mesh baking can be done either by using a :ref:"
"`NavigationRegion2D<class_NavigationRegion2D>` or :ref:"
"`NavigationRegion3D<class_NavigationRegion3D>`, or by using the :ref:"
"`NavigationServer2D<class_NavigationServer2D>` and :ref:"
"`NavigationServer3D<class_NavigationServer3D>` API directly."
msgstr ""

msgid "Baking a navigation mesh with a NavigationRegion"
msgstr ""

#, fuzzy
msgid "Navigation mesh baking steps"
msgstr "Maillages de Navigation"

msgid "Baking a navigation mesh with agent radius offset from geometry."
msgstr ""

msgid ""
"The navigation mesh baking is made more accessible with the NavigationRegion "
"node. When baking with a NavigationRegion node, the individual parsing, "
"baking, and region update steps are all combined into one function."
msgstr ""

msgid ""
"The nodes are available in 2D and 3D as :ref:"
"`NavigationRegion2D<class_NavigationRegion2D>` and :ref:"
"`NavigationRegion3D<class_NavigationRegion3D>` respectively."
msgstr ""

#, fuzzy
msgid "Baking with a NavigationRegion2D"
msgstr "Utilisation de l'éditeur d'animation"

msgid ""
"When a NavigationRegion2D node is selected in the Editor, bake options as "
"well as polygon draw tools appear in the top bar of the Editor."
msgstr ""

#, fuzzy
msgid ""
"In order for the region to work a :ref:"
"`NavigationPolygon<class_NavigationPolygon>` resource needs to be added."
msgstr ":ref:`NavigationAgent<class_NavigationAgent>`"

msgid ""
"The properties to parse and bake a navigation mesh are then part of the used "
"resource and can be found in the resource Inspector."
msgstr ""

#, fuzzy
msgid ""
"The result of the source geometry parsing can be influenced with the "
"following properties."
msgstr ""
"Le résultat de la recherche de chemin peut être influencé par les propriétés "
"suivantes."

msgid ""
"The ``parsed_geometry_type`` that filters if visual objects or physics "
"objects or both should be parsed from the :ref:`SceneTree<class_SceneTree>`. "
"For more details on what objects are parsed and how, see the section about "
"parsing source geometry below."
msgstr ""

msgid ""
"The ``collision_mask`` filters which physics collision objects are included "
"when the ``parsed_geometry_type`` includes static colliders."
msgstr ""

msgid ""
"The ``source_geometry_mode`` that defines on which node(s) to start the "
"parsing, and how to traverse the :ref:`SceneTree<class_SceneTree>`."
msgstr ""

msgid ""
"The ``source_geometry_group_name`` is used when only a certain node group "
"should be parsed. Depends on the selected ``source_geometry_mode``."
msgstr ""

#, fuzzy
msgid ""
"With the source geometry added, the result of the baking can be controlled "
"with the following properties."
msgstr ""
"Le résultat de la recherche de chemin peut être influencé par les propriétés "
"suivantes."

msgid ""
"The ``cell_size`` sets the rasterization grid size and should match the "
"navigation map size."
msgstr ""

msgid ""
"The ``agent_radius`` shrinks the baked navigation mesh to have enough margin "
"for the agent (collision) size."
msgstr ""

msgid "The NavigationRegion2D baking can also be used at runtime with scripts."
msgstr ""

msgid "To quickly test the 2D baking with default settings:"
msgstr ""

#, fuzzy
msgid "Add a :ref:`NavigationRegion2D<class_NavigationRegion2D>`."
msgstr ":ref:`NavigationAgent<class_NavigationAgent>`"

#, fuzzy
msgid ""
"Add a :ref:`NavigationPolygon<class_NavigationPolygon>` resource to the "
"NavigationRegion2D."
msgstr ":ref:`NavigationAgent<class_NavigationAgent>`"

msgid "Add a :ref:`Polygon2D<class_Polygon2D>` below the NavigationRegion2D."
msgstr ""

msgid ""
"Draw 1 NavigationPolygon outline with the selected NavigationRegion2D draw "
"tool."
msgstr ""

msgid ""
"Draw 1 Polygon2D outline inside the NavigationPolygon outline with the "
"selected Polygon2D draw tool."
msgstr ""

msgid "Hit the Editor bake button and a navigation mesh should appear."
msgstr ""

#, fuzzy
msgid "Baking with a NavigationRegion3D"
msgstr "Utilisation de l'éditeur d'animation"

msgid ""
"When a NavigationRegion3D node is selected in the Editor, bake options "
"appear in the top bar of the Editor."
msgstr ""

#, fuzzy
msgid ""
"In order for the region to work a :ref:"
"`NavigationMesh<class_NavigationMesh>` resource needs to be added."
msgstr "Ressource :ref:`NavigationMesh<class_NavigationMesh>`"

msgid ""
"The ``cell_size`` and ``cell_height`` sets the rasterization voxel grid size "
"and should match the navigation map size."
msgstr ""

msgid ""
"The ``agent_height`` excludes areas from the navigation mesh where the agent "
"is too tall to fit in."
msgstr ""

msgid ""
"The ``agent_max_climb`` and ``agent_max_slope`` removes areas where the "
"height difference between neighboring voxels is too large, or where their "
"surface is too steep."
msgstr ""

msgid ""
"A too small ``cell_size`` or ``cell_height`` can create so many voxels that "
"it has the potential to freeze the game or even crash."
msgstr ""

msgid "The NavigationRegion3D baking can also be used at runtime with scripts."
msgstr ""

msgid "To quickly test the 3D baking with default settings:"
msgstr ""

#, fuzzy
msgid "Add a :ref:`NavigationRegion3D<class_NavigationRegion3D>`."
msgstr "Nœud :ref:`NavigationRegion3D<class_NavigationRegion3D>`"

#, fuzzy
msgid ""
"Add a :ref:`NavigationMesh<class_NavigationMesh>` resource to the "
"NavigationRegion3D."
msgstr "Ressource :ref:`NavigationMesh<class_NavigationMesh>`"

#, fuzzy
msgid ""
"Add a :ref:`MeshInstance3D<class_MeshInstance3D>` below the "
"NavigationRegion3D."
msgstr ""
"Ajoutez un nouveau nœud :ref:`MeshInstance <class_meshinstance>` à votre "
"scène."

#, fuzzy
msgid "Add a :ref:`PlaneMesh<class_PlaneMesh>` to the MeshInstance3D."
msgstr "Cela ajoute un :ref:`PlaneMesh <class_planemesh>` à notre scène."

#, fuzzy
msgid "Baking a navigation mesh with the NavigationServer"
msgstr "Communiquer avec d'autres langages de script"

msgid ""
"The :ref:`NavigationServer2D<class_NavigationServer2D>` and :ref:"
"`NavigationServer3D<class_NavigationServer3D>` have API functions to call "
"each step of the navigation mesh baking process individually."
msgstr ""

msgid ""
"``parse_source_geometry_data()`` can be used to parse source geometry to a "
"reusable and serializable resource."
msgstr ""

msgid ""
"``bake_from_source_geometry_data()`` can be used to bake a navigation mesh "
"from already parsed data e.g. to avoid runtime performance issues with "
"(redundant) parsing."
msgstr ""

msgid ""
"``bake_from_source_geometry_data_async()`` is the same but bakes the "
"navigation mesh deferred with threads, not blocking the main thread."
msgstr ""

msgid ""
"Compared to a NavigationRegion, the NavigationServer offers finer control "
"over the navigation mesh baking process. In turn it is more complex to use "
"but also provides more advanced options."
msgstr ""

msgid ""
"Some other advantages of the NavigationServer over a NavigationRegion are:"
msgstr ""

msgid ""
"The server can parse source geometry without baking, e.g. to cache it for "
"later use."
msgstr ""

msgid ""
"The server allows selecting the root node at which to start the source "
"geometry parsing manually."
msgstr ""

msgid ""
"The server can accept and bake from procedurally generated source geometry "
"data."
msgstr ""

msgid ""
"The server can bake multiple navigation meshes in sequence while (re)using "
"the same source geometry data."
msgstr ""

msgid ""
"To bake navigation meshes with the NavigationServer, source geometry is "
"required. Source geometry is geometry data that should be considered in a "
"navigation mesh baking process. Both navigation meshes for 2D and 3D are "
"created by baking them from source geometry."
msgstr ""

msgid ""
"2D and 3D versions of the source geometry resources are available as :ref:"
"`NavigationMeshSourceGeometryData2D<class_NavigationMeshSourceGeometryData2D>` "
"and :ref:"
"`NavigationMeshSourceGeometryData3D<class_NavigationMeshSourceGeometryData3D>`  "
"respectively."
msgstr ""

msgid ""
"Source geometry can be geometry parsed from visual meshes, from physics "
"collision, or procedural created arrays of data, like outlines (2D) and "
"triangle faces (3D). For convenience, source geometry is commonly parsed "
"directly from node setups in the SceneTree. For runtime navigation mesh "
"(re)bakes, be aware that the geometry parsing always happens on the main "
"thread."
msgstr ""

msgid ""
"The SceneTree is not thread-safe. Parsing source geometry from the SceneTree "
"can only be done on the main thread."
msgstr ""

msgid ""
"The data from visual meshes and polygons needs to be received from the GPU, "
"stalling the RenderingServer in the process. For runtime (re)baking prefer "
"using physics shapes as parsed source geometry."
msgstr ""

msgid ""
"Source geometry is stored inside resources so the created geometry can be "
"reused for multiple bakes. E.g. baking multiple navigation meshes for "
"different agent sizes from the same source geometry. This also allows to "
"save source geometry to disk so it can be loaded later, e.g. to avoid the "
"overhead of parsing it again at runtime."
msgstr ""

msgid ""
"The geometry data should be in general kept very simple. As many edges as "
"are required but as few as possible. Especially in 2D duplicated and nested "
"geometry should be avoided as it forces polygon hole calculation that can "
"result in flipped polygons. An example for nested geometry would be a "
"smaller StaticBody2D shape placed completely inside the bounds of another "
"StaticBody2D shape."
msgstr ""

#, fuzzy
msgid "Navigation mesh baking common problems"
msgstr "Maillages de Navigation"

msgid ""
"There are some common user problems and important caveats to consider when "
"creating or baking navigation meshes."
msgstr ""

#, fuzzy
msgid "Navigation mesh baking creates frame rate problems at runtime"
msgstr "Maillages de Navigation"

msgid ""
"The navigation mesh baking is by default done on a background thread, so as "
"long as the platform supports threads, the actual baking is rarely the "
"source of any performance issues (assuming a reasonably sized and complex "
"geometry for runtime rebakes)."
msgstr ""

msgid ""
"The common source for performance issues at runtime is the parsing step for "
"source geometry that involves nodes and the SceneTree. The SceneTree is not "
"thread-safe so all the nodes need to be parsed on the main thread. Some "
"nodes with a lot of data can be very heavy and slow to parse at runtime, e."
"g. a TileMap has one or more polygons for every single used cell and "
"TileMapLayer to parse. Nodes that hold meshes need to request the data from "
"the RenderingServer stalling the rendering in the process."
msgstr ""

msgid ""
"To improve performance, use more optimized shapes, e.g. collision shapes "
"over detailed visual meshes, and merge and simplify as much geometry as "
"possible upfront. If nothing helps, don't parse the SceneTree and add the "
"source geometry procedural with scripts. If only pure data arrays are used "
"as source geometry, the entire baking process can be done on a background "
"thread."
msgstr ""

msgid "Navigation mesh creates unintended holes in 2D."
msgstr ""

msgid ""
"The navigation mesh baking in 2D is done by doing polygon clipping "
"operations based on outline paths. Polygons with \"holes\" are a necessary "
"evil to create more complex 2D polygons but can become unpredictable for "
"users with many complex shapes involved."
msgstr ""

msgid ""
"To avoid any unexpected problems with polygon hole calculations, avoid "
"nesting any outlines inside other outlines of the same type (traversable / "
"obstruction). This includes the parsed shapes from nodes. E.g. placing a "
"smaller StaticBody2D shape inside a larger StaticBody2D shape can result in "
"the resulting polygon being flipped."
msgstr ""

msgid "Navigation mesh appears inside geometry in 3D."
msgstr ""

msgid ""
"The navigation mesh baking in 3D has no concept of \"inside\". The voxel "
"cells used to rasterize the geometry are either occupied or not. Remove the "
"geometry that is on the ground inside the other geometry. If that is not "
"possible, add smaller \"dummy\" geometry inside with as few triangles as "
"possible so the cells are occupied with something."
msgstr ""

#, fuzzy
msgid "Navigation mesh script templates"
msgstr "Création de modèles de script"

msgid ""
"The following script uses the NavigationServer to parse source geometry from "
"the scene tree, bakes a navigation mesh, and updates a navigation region "
"with the updated navigation mesh."
msgstr ""

#, fuzzy
msgid ""
"The following script uses the NavigationServer to update a navigation region "
"with procedurally generated navigation mesh data."
msgstr ""
"Le NavigationServer3D rejoindra les meshs de navigation des régions par "
"proximité pour un mesh de navigation combiné."

msgid "Translation status"
msgstr "État de la traduction"
