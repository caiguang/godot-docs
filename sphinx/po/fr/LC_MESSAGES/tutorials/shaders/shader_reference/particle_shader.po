# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Particle shaders"
msgstr "Shaders de particules"

#, fuzzy
msgid ""
"Particle shaders are a special type of shader that runs before the object is "
"drawn. They are used for calculating material properties such as color, "
"position, and rotation. They are drawn with any regular material for "
"CanvasItem or Spatial, depending on whether they are 2D or 3D."
msgstr ""
"Les shaders de particules sont un type spécial de vert shader qui s'exécute "
"avant que l'objet ne soit dessiné. Ils sont utilisés pour calculer les "
"propriétés des matériaux telles que la couleur, la position et la rotation. "
"Ils sont dessinés avec n'importe quel matériau de base de CanvasItem ou "
"Spatial, selon qu'ils sont 2D ou 3D."

#, fuzzy
msgid ""
"Particle shaders are unique because they are not used to draw the object "
"itself; they are used to calculate particle properties, which are then used "
"by a CanvasItem or Spatial shader. They contain two processor functions: "
"``start()`` and ``process()``."
msgstr ""
"Les shaders de particules sont uniques car ils ne sont pas utilisés pour "
"dessiner l'objet lui-même. Ils sont utilisés pour calculer les propriétés "
"des particules, qui sont ensuite utilisées par le shader du CanvasItem ou du "
"Spatial. Ils ne contiennent qu'une fonction de processeur de sommet qui a "
"plusieurs propriétés en sortie (voir les propriétés intégrées ci-dessous)."

msgid ""
"Unlike other shader types, particle shaders keep the data that was output "
"the previous frame. Therefore, particle shaders can be used for complex "
"effects that take place over multiple frames."
msgstr ""

#, fuzzy
msgid ""
"Particle shaders are only available with GPU-based particle nodes (:ref:"
"`class_GPUParticles2D` and :ref:`class_GPUParticles3D`)."
msgstr ""
"Les shaders de particules sont uniquement disponibles dans le backend GLES3. "
"Si vous avez besoin de particules dans GLES2, utilisez des :ref:"
"`CPUParticles <class_CPUParticles>`."

msgid ""
"CPU-based particle nodes (:ref:`class_CPUParticles2D` and :ref:"
"`class_CPUParticles3D`) are *rendered* on the GPU (which means they can use "
"custom CanvasItem or Spatial shaders), but their motion is *simulated* on "
"the CPU."
msgstr ""

msgid "Render modes"
msgstr "Mode de rendu"

msgid "Render mode"
msgstr "Mode de rendu"

msgid "Description"
msgstr "Description"

msgid "**keep_data**"
msgstr "**keep_data**"

msgid "Do not clear previous data on restart."
msgstr "Ne pas effacer les données précédentes au redémarrage."

msgid "**disable_force**"
msgstr "**disable_force**"

msgid "Disable attractor force."
msgstr ""

msgid "**disable_velocity**"
msgstr "**disable_velocity**"

msgid "Ignore **VELOCITY** value."
msgstr "Ignorer la valeur de **VELOCITY**."

#, fuzzy
msgid "**collision_use_scale**"
msgstr "collision_layer"

#, fuzzy
msgid "Scale the particle's size for collisions."
msgstr "Préparation pour les collisions"

msgid "Built-ins"
msgstr "Variables intégrées"

msgid ""
"Values marked as \"in\" are read-only. Values marked as \"out\" are for "
"optional writing and will not necessarily contain sensible values. Values "
"marked as \"inout\" provide a sensible default value, and can optionally be "
"written to. Samplers are not subjects of writing and they are not marked."
msgstr ""
"Les valeurs marquées comme \"in\" sont en lecture seule. Les valeurs "
"marquées comme \"out\" sont pour l'écriture facultative et ne contiendront "
"pas nécessairement de valeurs sensibles. Les valeurs marquées comme "
"\"inout\" fournissent une valeur par défaut sensible et peuvent "
"éventuellement être réécrites. Les échantillonneurs ne sont pas soumis à "
"l'écriture et ne sont pas marqués."

msgid "Global built-ins"
msgstr "Variables intégrées Globales"

msgid "Global built-ins are available everywhere, including custom functions."
msgstr ""
"Les modules intégrés globaux sont disponibles partout, y compris dans les "
"fonctions personnalisées."

msgid "Built-in"
msgstr "Intégré"

msgid "in float **TIME**"
msgstr "in float **TIME**"

msgid "Global time, in seconds."
msgstr "Temps global, en secondes."

#, fuzzy
msgid "in float **PI**"
msgstr "in float **TIME**"

msgid ""
"A ``PI`` constant (``3.141592``). A ration of circle's circumference to its "
"diameter and amount of radians in half turn."
msgstr ""

#, fuzzy
msgid "in float **TAU**"
msgstr "in float **DELTA**"

msgid ""
"A ``TAU`` constant (``6.283185``). An equivalent of ``PI * 2`` and amount of "
"radians in full turn."
msgstr ""

#, fuzzy
msgid "in float **E**"
msgstr "in float **TIME**"

msgid ""
"A ``E`` constant (``2.718281``). Euler's number and a base of the natural "
"logarithm."
msgstr ""

#, fuzzy
msgid "Start and Process built-ins"
msgstr "Variables intégrées de sommet"

#, fuzzy
msgid ""
"These properties can be accessed from both the ``start()`` and ``process()`` "
"functions."
msgstr ""
"Ensuite, configurez votre fonction ``vertex``. Les shaders de particules ne "
"contiennent qu'une fonction vertex et aucune autre."

msgid "Function"
msgstr "Fonction"

msgid "in float **LIFETIME**"
msgstr "in float **LIFETIME**"

msgid "Particle lifetime."
msgstr "Durée de vie des particules."

msgid "in float **DELTA**"
msgstr "in float **DELTA**"

msgid "Delta process time."
msgstr "Durée du processus Delta."

msgid "in uint **NUMBER**"
msgstr "in uint **NUMBER**"

msgid "Unique number since emission start."
msgstr "Numéro unique depuis le début de l'émission."

#, fuzzy
msgid "in uint **INDEX**"
msgstr "in int **INDEX**"

msgid "Particle index (from total particles)."
msgstr "Indice de particule (sur le nombre total de particules)."

msgid "in mat4 **EMISSION_TRANSFORM**"
msgstr "in mat4 **EMISSION_TRANSFORM**"

msgid "Emitter transform (used for non-local systems)."
msgstr "Transformation de l'émetteur (utilisée pour les systèmes non locaux)."

msgid "in uint **RANDOM_SEED**"
msgstr "in uint **RANDOM_SEED**"

msgid "Random seed used as base for random."
msgstr "Graine aléatoire utilisée comme base pour le hasard."

msgid "inout bool **ACTIVE**"
msgstr "inout bool **ACTIVE**"

#, fuzzy
msgid "``true`` when the particle is active, can be set ``false``."
msgstr "``true`` quand la particule est active, peut être réglé sur ``false``."

msgid "inout vec4 **COLOR**"
msgstr "inout vec4 **COLOR**"

msgid ""
"Particle color, can be written to and accessed in mesh's vertex function."
msgstr ""
"Couleur de particule, peut être écrit et accessible dans la fonction vertex "
"du mesh."

msgid "inout vec3 **VELOCITY**"
msgstr "inout vec3 **VELOCITY**"

msgid "Particle velocity, can be modified."
msgstr "La vélocité des particules, peut être modifiée."

msgid "inout mat4 **TRANSFORM**"
msgstr "inout mat4 **TRANSFORM**"

msgid "Particle transform."
msgstr "Transformation de particules."

msgid "inout vec4 **CUSTOM**"
msgstr "inout vec4 **CUSTOM**"

msgid ""
"Custom particle data. Accessible from shader of mesh as **INSTANCE_CUSTOM**."
msgstr ""
"Données personnalisées des particules. Accessible depuis le shader de la "
"maille comme **INSTANCE_CUSTOM**."

#, fuzzy
msgid "inout float **MASS**"
msgstr "out float **MASS**"

msgid ""
"Particle mass, intended to be used with attractors. Equals ``1.0`` by "
"default."
msgstr ""

#, fuzzy
msgid "in vec4 **USERDATAX**"
msgstr "in vec3 **VERTEX**"

msgid ""
"Vector that enables the integration of supplementary user-defined data into "
"the particle process shader. ``USERDATAX`` are six built-ins identified by "
"number, ``X`` can be numbers between 1 and 6."
msgstr ""

#, fuzzy
msgid "in uint **FLAG_EMIT_POSITION**"
msgstr "in uint **RANDOM_SEED**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle`` function to "
"assign a position to a new particle's transform."
msgstr ""

#, fuzzy
msgid "in uint **FLAG_EMIT_ROT_SCALE**"
msgstr "in uint **RANDOM_SEED**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle`` function to "
"assign the rotation and scale to a new particle's transform."
msgstr ""

#, fuzzy
msgid "in uint **FLAG_EMIT_VELOCITY**"
msgstr "inout vec3 **VELOCITY**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle`` function to "
"assign a velocity to a new particle."
msgstr ""

#, fuzzy
msgid "in uint **FLAG_EMIT_COLOR**"
msgstr "in vec3 **LIGHT_COLOR**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle`` function to "
"assign a color to a new particle."
msgstr ""

#, fuzzy
msgid "in uint **FLAG_EMIT_CUSTOM**"
msgstr "in uint **RANDOM_SEED**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle`` function to "
"assign a custom data vector to a new particle."
msgstr ""

#, fuzzy
msgid "in vec3 **EMITTER_VELOCITY**"
msgstr "inout vec3 **VELOCITY**"

#, fuzzy
msgid "Velocity of the Particles node."
msgstr "Connectez-le au noeud *Main*."

#, fuzzy
msgid "in float **INTERPOLATE_TO_END**"
msgstr "in vec3 **ATTENUATION**"

msgid "Value of ``interp_to_end`` property of Particles node."
msgstr ""

#, fuzzy
msgid "in uint **AMOUNT_RATIO**"
msgstr "in uint **RANDOM_SEED**"

msgid "Value of ``amount_ratio`` property of Particles node."
msgstr ""

#, fuzzy
msgid ""
"In order to use the ``COLOR`` variable in a StandardMaterial3D, set "
"``vertex_color_use_as_albedo`` to ``true``. In a ShaderMaterial, access it "
"with the ``COLOR`` variable."
msgstr ""
"Afin d'utiliser la variable ``COLOR`` dans un SpatialMaterial, définissez "
"``use_vertex_as_albedo`` sur ``true``. Dans un ShaderMaterial, accédez-y "
"avec la variable ``COLOR``."

#, fuzzy
msgid "Start built-ins"
msgstr "Variables intégrées de sommet"

#, fuzzy
msgid "in bool **RESTART_POSITION**"
msgstr "in bool **RESTART**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom position (i."
"e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_POSITION`` flag)."
msgstr ""

#, fuzzy
msgid "in bool **RESTART_ROT_SCALE**"
msgstr "in bool **RESTART**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom rotation or "
"scale (i.e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_ROT_SCALE`` flag)."
msgstr ""

#, fuzzy
msgid "in bool **RESTART_VELOCITY**"
msgstr "in bool **RESTART**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom velocity (i."
"e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_VELOCITY`` flag)."
msgstr ""

#, fuzzy
msgid "in bool **RESTART_COLOR**"
msgstr "in bool **RESTART**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom color (i.e. "
"this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_COLOR`` flag)."
msgstr ""

#, fuzzy
msgid "in bool **RESTART_CUSTOM**"
msgstr "in bool **RESTART**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom property (i."
"e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_CUSTOM`` flag)."
msgstr ""

#, fuzzy
msgid "Process built-ins"
msgstr "Variables intégrées de sommet"

msgid "in bool **RESTART**"
msgstr "in bool **RESTART**"

#, fuzzy
msgid "``true`` if the current process frame is first for the particle."
msgstr "``true`` si la face actuelle est la face avant."

#, fuzzy
msgid "in bool **COLLIDED**"
msgstr "inout bool **ACTIVE**"

#, fuzzy
msgid "``true`` when the particle has collided with a particle collider."
msgstr "``true`` quand la particule doit redémarrer (cycle de vie)."

#, fuzzy
msgid "in vec3 **COLLISION_NORMAL**"
msgstr "in vec3 **NORMAL**"

msgid ""
"A normal of the last collision. If there is no collision detected it is "
"equal to ``vec3(0.0)``."
msgstr ""

#, fuzzy
msgid "in float **COLLISION_DEPTH**"
msgstr "inout float **NORMALMAP_DEPTH**"

msgid ""
"A length of normal of the last collision. If there is no collision detected "
"it is equal to ``0.0``."
msgstr ""

#, fuzzy
msgid "in vec3 **ATTRACTOR_FORCE**"
msgstr "in vec3 **ATTENUATION**"

msgid "A combined force of the attractors at the moment on that particle."
msgstr ""

#, fuzzy
msgid "Process functions"
msgstr "Fonctions processeur"

msgid ""
"``emit_subparticle`` is currently the only custom function supported by "
"particles shaders. It allows users to add a new particle with specified "
"parameters from a sub-emitter. The newly created particle will only use the "
"properties that match the ``flags`` parameter. For example, the following "
"code will emit a particle with a specified position, velocity, and color, "
"but unspecified rotation, scale, and custom value:"
msgstr ""

msgid ""
"bool **emit_subparticle** (mat4 xform, vec3 velocity, vec4 color, vec4 "
"custom, uint flags)"
msgstr ""

msgid "Emits a particle from a sub-emitter."
msgstr ""

msgid "Translation status"
msgstr "État de la traduction"
