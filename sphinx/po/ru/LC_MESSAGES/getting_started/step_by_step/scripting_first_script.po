# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating your first script"
msgstr "Создание вашего первого скрипта"

msgid ""
"In this lesson, you will code your first script to make the Godot icon turn "
"in circles using GDScript. As we mentioned :ref:`in the introduction <toc-"
"learn-introduction>`, we assume you have programming foundations. The "
"equivalent C# code has been included in another tab for convenience."
msgstr ""
"В этом уроке вы напишете свой первый скрипт для вращения иконки Godot "
"кругами, используя GDScript. Как мы упоминали :ref:`во Введении <toc-learn-"
"introduction>`, этот урок рассчитан на тех, кто обладает базовыми знаниями в "
"программировании. Для удобства, в другой вкладке приведен код C#."

msgid ""
"To learn more about GDScript, its keywords, and its syntax, head to the :ref:"
"`GDScript reference<doc_gdscript>`."
msgstr ""
"Подробнее о GDScript, его ключевых словах и синтаксисе, читайте в :ref:"
"`Основы GDScript<doc_gdscript>`."

msgid ""
"To learn more about C#, head to the :ref:`C# basics <doc_c_sharp>` page."
msgstr ""
"За дополнительно информацией по C#, обратитесь к странице: :ref:`Основы C# "
"<doc_c_sharp>`."

msgid "Project setup"
msgstr "Настройка проекта"

msgid ""
"Please :ref:`create a new project <doc_creating_and_importing_projects>` to "
"start with a clean slate. Your project should contain one picture: the Godot "
"icon, which we often use for prototyping in the community."
msgstr ""
"Пожалуйста, :ref:`создайте новый проект "
"<doc_creating_and_importing_projects>`, чтобы начать с чистого листа. Ваш "
"проект должен содержать одно изображение: иконку Godot, которую мы в "
"сообществе часто используем для прототипирования."

msgid ""
"We need to create a Sprite2D node to display it in the game. In the Scene "
"dock, click the Other Node button."
msgstr ""
"Нам нужно создать узел Sprite2D для отображения в игре. В панели Сцена "
"(Scene), кликните на кнопку Другой Узел (Other Node)."

msgid ""
"Type \"Sprite2D\" in the search bar to filter nodes and double-click on "
"Sprite2D to create the node."
msgstr ""
"Наберите \"Sprite2D\" в поисковой строке, чтобы отобразились нужные узлы, "
"затем дважды кликните на Sprite2D, чтобы создать узел."

msgid "Your Scene tab should now only have a Sprite2D node."
msgstr "Вкладка Сцена (Scene) теперь должна содержать только узел Sprite2D."

msgid ""
"A Sprite2D node needs a texture to display. In the Inspector on the right, "
"you can see that the Texture property says \"[empty]\". To display the Godot "
"icon, click and drag the file ``icon.svg`` from the FileSystem dock onto the "
"Texture slot."
msgstr ""
"Узлу Sprite2D нужна текстура для отображения. В Инспекторе справа вы можете "
"увидеть, что в свойстве текстуры указано \"[пусто]\". Чтобы отобразить иноку "
"Godot, кликните и перетащите файл ``icon.png``из файловой системы панели на "
"слот текстуры."

msgid ""
"You can create Sprite2D nodes automatically by dragging and dropping images "
"on the viewport."
msgstr ""
"Также вы можете создавать узлы Sprite2D автоматически, перетаскивая "
"изображения в Окно просмотра."

msgid ""
"Then, click and drag the icon in the viewport to center it in the game view."
msgstr ""
"Затем нажмите и перетащите значок в окне просмотра, чтобы отцентрировать его "
"в игровом представлении."

msgid "Creating a new script"
msgstr "Создание нового скрипта"

msgid ""
"To create and attach a new script to our node, right-click on Sprite2D in "
"the scene dock and select \"Attach Script\"."
msgstr ""
"Чтобы создать и прикрепить новый скрипт к нашему узлу, нажмите правой "
"кнопкой мыши на Sprite2D в панели сцены и выберите \"Прикрепить "
"Скрипт\" (Attach Script)."

msgid ""
"The Attach Node Script window appears. It allows you to select the script's "
"language and file path, among other options."
msgstr ""
"Откроется окно \"Прикрепить скрипт\" (Attach Node Script). В этом окне вы "
"можете указать язык программирования скрипта, путь в корневой папке и другие "
"параметры."

msgid ""
"Change the Template field from \"Node: Default\" to \"Object: Empty\" to "
"start with a clean file. Leave the other options set to their default values "
"and click the Create button to create the script."
msgstr ""
"Измените Template (Шаблон) с Default на Empty, чтобы начать с чистого файла. "
"Оставьте остальные параметры по умолчанию и нажмите кнопку Create (Создать), "
"чтобы создать скрипт."

msgid ""
"C# script names need to match their class name. In this case, you should "
"name the file ``MySprite2D.cs``."
msgstr ""

msgid ""
"The Script workspace should appear with your new ``sprite_2d.gd`` file open "
"and the following line of code:"
msgstr ""
"В рабочей области Script должен появиться новый файл ``sprite_2d.gd`` и "
"следующая строка кода:"

msgid ""
"Every GDScript file is implicitly a class. The ``extends`` keyword defines "
"the class this script inherits or extends. In this case, it's ``Sprite2D``, "
"meaning our script will get access to all the properties and functions of "
"the Sprite2D node, including classes it extends, like ``Node2D``, "
"``CanvasItem``, and ``Node``."
msgstr ""
"Каждый файл GDScript неявно является классом. Ключевое слово ``extends`` "
"определяет класс, который наследует или расширяет данный скрипт. В этом "
"случае ``Sprite2D`` означает, что наш скрипт получит доступ к свойствам и "
"функциям узла ``Sprite2D``, включая классы, которые он расширяет, такие как "
"``Node2D``, ``CanvasItem`` и ``Node``."

msgid ""
"In GDScript, if you omit the line with the ``extends`` keyword, your class "
"will implicitly extend :ref:`RefCounted <class_RefCounted>`, which Godot "
"uses to manage your application's memory."
msgstr ""
"В GDScript, если вы опустите строку с ключевым словом ``extends``, ваш класс "
"будет неявно расширять :ref:`RefCounted <class_RefCounted>`, который Godot "
"использует для управления памятью вашего приложения."

msgid ""
"Inherited properties include the ones you can see in the Inspector dock, "
"like our node's ``texture``."
msgstr ""
"К унаследованным свойствам относятся те, которые вы можете видеть в "
"инспекторе, например, ``texture`` узла."

msgid ""
"By default, the Inspector displays a node's properties in \"Title Case\", "
"with capitalized words separated by a space. In GDScript code, these "
"properties are in \"snake_case\", which is lowercase with words separated by "
"an underscore."
msgstr ""
"По умолчанию, Инспектор отображает свойства узла в \"Title Case\", с "
"заглавными буквами вначале, разделенные пробелом. В GDScript эти свойства "
"записываются в \"snake_case\", строчными буквами, разделенными "
"подчёркиванием."

#, fuzzy
msgid ""
"You can hover over any property's name in the Inspector to see a description "
"and its identifier in code."
msgstr ""
"Вы можете навести курсор на имя любого свойства в инспекторе, и увидеть его "
"описание и идентификатор в коде."

msgid "Hello, world!"
msgstr "Привет, мир!"

msgid ""
"Our script currently doesn't do anything. Let's make it print the text "
"\"Hello, world!\" to the Output bottom panel to get started."
msgstr ""
"Наш скрипт ничего не делает. Давайте заставим его вывести \"Hello, world!\" "
"в панель вывода в нижней части экрана."

msgid "Add the following code to your script:"
msgstr "Добавьте следующий код в ваш скрипт:"

msgid ""
"Let's break it down. The ``func`` keyword defines a new function named "
"``_init``. This is a special name for our class's constructor. The engine "
"calls ``_init()`` on every object or node upon creating it in memory, if you "
"define this function."
msgstr ""
"Давайте разберём это. Слово ``func`` объявляет новую функцию ``_init``. Это "
"конструктор нашего класса. Движок вызывает ``_init`` при создании объекта в "
"памяти, если вы определили эту функцию."

msgid ""
"GDScript is an indent-based language. The tab at the start of the line that "
"says ``print()`` is necessary for the code to work. If you omit it or don't "
"indent a line correctly, the editor will highlight it in red and display the "
"following error message: \"Indented block expected\"."
msgstr ""
"GDScript - язык с отступами. Отступ (табуляция) в начале строки ``print()`` "
"обязателен для работы кода. Если вы пропустите отступ или отступите "
"неправильно, редактор выделит строку красным и выведет сообщение:\"Indented "
"block expected\" (\"Блок отступа пропущен\")."

msgid ""
"Save the scene as ``sprite_2d.tscn`` if you haven't already, then press :kbd:"
"`F6` (:kbd:`Cmd + R` on macOS) to run it. Look at the **Output** bottom "
"panel that expands. It should display \"Hello, world!\"."
msgstr ""
"Сохраните сцену как ``sprite_2d.tscn``, если ещё не сделали этого, затем "
"нажмите :kbd:`F6` (:kbd:`Cmd + R` на macOS) для запуска. Посмотрите в окно "
"вывода **Вывод** (Output) в панели внизу. Там должно отобразится \"Hello, "
"world!\"."

msgid ""
"Delete the ``_init()`` function, so you're only left with the line ``extends "
"Sprite2D``."
msgstr ""
"Удалите функцию ``_init()``, оставив только строку ``extends Sprite2D``."

msgid "Turning around"
msgstr "Поворот вокруг"

msgid ""
"It's time to make our node move and rotate. To do so, we're going to add two "
"member variables to our script: the movement speed in pixels per second and "
"the angular speed in radians per second.  Add the following after the "
"``extends Sprite2D`` line."
msgstr ""
"Теперь сделаем наш узел двигающимся и вращающимся. Для этого добавим две "
"переменных-члена в наш скрипт: скорость перемещения в пикселях в секунду и "
"угловую скорость в радианах в секунду. Добавим следующий код после строки "
"``extends Sprite2D``."

msgid ""
"Member variables sit near the top of the script, after any \"extends\" "
"lines, but before functions. Every node instance with this script attached "
"to it will have its own copy of the ``speed`` and ``angular_speed`` "
"properties."
msgstr ""
"Переменные-члены располагаются в начале скрипта, после всех строк "
"\"extends\", но перед функциями. Каждый экземпляр узла с прикреплённым к "
"нему скриптом имеет собственную копию свойств ``speed`` и ``angular_speed``."

msgid ""
"Angles in Godot work in radians by default, but you have built-in functions "
"and properties available if you prefer to calculate angles in degrees "
"instead."
msgstr ""
"Углы в Godot по умолчанию задаются в радианах, как и в некоторых других "
"движках, но вы можете использовать встроенные функции и свойства для работы "
"с градусами."

msgid ""
"To move our icon, we need to update its position and rotation every frame in "
"the game loop. We can use the ``_process()`` virtual function of the "
"``Node`` class. If you define it in any class that extends the Node class, "
"like Sprite2D, Godot will call the function every frame and pass it an "
"argument named ``delta``, the time elapsed since the last frame."
msgstr ""
"Для перемещения иконки мы должны обновлять её позицию и вращение каждый кадр "
"игрового цикла. Для этого используем виртуальную функцию ``_process()`` "
"класса ``Node``. При объявлении этой функции в любом классе, наследуемом от "
"``Node`` (например, ``Sprite``), Godot будет вызывать её каждый кадр и "
"передавать в аргументе ``delta`` время, прошедшее от предыдущего кадра."

msgid ""
"Games work by rendering many images per second, each called a frame, and "
"they do so in a loop. We measure the rate at which a game produces images in "
"Frames Per Second (FPS). Most games aim for 60 FPS, although you might find "
"figures like 30 FPS on slower mobile devices or 90 to 240 for virtual "
"reality games."
msgstr ""
"Игры работают в цикле, отображая множество изображений в секунду, каждое из "
"которых называется кадром. Скорость, с которой игра создаёт эти изображения, "
"измеряется в кадрах в секунду (Frame Per Second). Большинство игр нацелены "
"на 60 FPS, хотя вы можете найти такие цифры, как 30 кадров в секунду на "
"более медленных мобильных устройствах или от 90 до 240 для игр виртуальной "
"реальности."

msgid ""
"The engine and game developers do their best to update the game world and "
"render images at a constant time interval, but there are always small "
"variations in frame render times. That's why the engine provides us with "
"this delta time value, making our motion independent of our framerate."
msgstr ""
"Движок и разработчики игры делают все возможное, чтобы обновлять игровой мир "
"и рендерить изображения с постоянным интервалом времени, но всегда "
"существуют небольшие отклонения во времени рендеринга кадров. Поэтому движок "
"предоставляет нам это значение дельта-времени, делая наше движение "
"независимым от частоты кадров."

msgid "At the bottom of the script, define the function:"
msgstr "В нижней части скрипта определите функцию:"

msgid ""
"The ``func`` keyword defines a new function. After it, we have to write the "
"function's name and arguments it takes in parentheses. A colon ends the "
"definition, and the indented blocks that follow are the function's content "
"or instructions."
msgstr ""
"Ключевое слово ``func`` определяет (создаёт) новую функцию. После него в "
"нужно написать имя функции и в скобках аргументы, которые она принимает. "
"Двоеточие завершает определение, а следующие за ним блоки с отступом "
"представляют собой содержимое или инструкции функции."

msgid ""
"Notice how ``_process()``, like ``_init()``, starts with a leading "
"underscore. By convention, Godot's virtual functions, that is to say, built-"
"in functions you can override to communicate with the engine, start with an "
"underscore."
msgstr ""
"Обратите внимание, что ``_process()``, как и ``_init()``, начинается с "
"символа подчёркивания. По соглашению, виртуальные функции, то есть "
"встроенные функции Godot, которые вы можете переопределить - начинаются с "
"символа подчёркивания."

msgid ""
"The line inside the function, ``rotation += angular_speed * delta``, "
"increments our sprite's rotation every frame. Here, ``rotation`` is a "
"property inherited from the class ``Node2D``, which ``Sprite2D`` extends. It "
"controls the rotation of our node and works with radians."
msgstr ""
"Строка внутри функции, ``rotation += angular_speed * delta``, увеличивает "
"угол поворота нашего спрайта каждый кадр. Здесь ``rotation`` — это свойство, "
"унаследованное от класса ``Node2D``, который расширяет класс ``Sprite2D``. "
"Он контролирует поворот нашего узла и работает с радианами."

msgid ""
"In the code editor, you can ctrl-click on any built-in property or function "
"like ``position``, ``rotation``, or ``_process`` to open the corresponding "
"documentation in a new tab."
msgstr ""
"В редакторе кода вы можете нажать Ctrl+ЛКМ на любом встроенном свойстве или "
"функции, таких как ``position``, ``rotation``, или ``_process``, чтобы "
"открыть соответствующую документацию в новой вкладке."

msgid "Run the scene to see the Godot icon turn in-place."
msgstr "Запустите сцену, чтобы увидеть, что иконка Godot крутится на месте."

msgid ""
"In C#, notice how the ``delta`` argument taken by ``_Process()`` is a "
"``double``. We therefore need to convert it to ``float`` when we apply it to "
"the rotation."
msgstr ""
"Заметьте, что в C# аргумент ``delta``, принимаемый ``_Process()`` – это "
"``double``. Поэтому нам нужно конвертировать его в ``float``, когда мы "
"применяем его к углу вращения."

msgid "Moving forward"
msgstr "Движение вперёд"

#, fuzzy
msgid ""
"Let's now make the node move. Add the following two lines inside of the "
"``_process()`` function, ensuring the new lines are indented the same way as "
"the ``rotation += angular_speed * delta`` line before them."
msgstr ""
"Теперь давайте заставим узел двигаться. Добавьте следующие две строки в "
"функцию ``_process()``, убедившись, что новые строки имеют такой же отступ, "
"как и предыдущие."

msgid ""
"As we already saw, the ``var`` keyword defines a new variable. If you put it "
"at the top of the script, it defines a property of the class. Inside a "
"function, it defines a local variable: it only exists within the function's "
"scope."
msgstr ""
"Как мы уже видели, ключевое слово ``var`` определяет новую переменную. Если "
"вы поместите его в верхней части скрипта, оно определит свойство класса. "
"Внутри функции оно определяет локальную переменную: данная переменная "
"существует только в области действия функции."

msgid ""
"We define a local variable named ``velocity``, a 2D vector representing both "
"a direction and a speed. To make the node move forward, we start from the "
"Vector2 class's constant ``Vector2.UP``, a vector pointing up, and rotate it "
"by calling the Vector2 method ``rotated()``. This expression, ``Vector2.UP."
"rotated(rotation)``, is a vector pointing forward relative to our icon. "
"Multiplied by our ``speed`` property, it gives us a velocity we can use to "
"move the node forward."
msgstr ""
"Мы определяем локальную переменную ``velocity``, 2D-вектор, представляющий "
"собой направление и скорость. Чтобы заставить узел двигаться вперёд, мы "
"берём константу ``Vector2.UP`` класса Vector2, вектор, указывающий вверх, и "
"вращаем его, вызывая метод ``rotated()``. Данное выражение ``Vector2.UP."
"rotated(rotation)`` - вектор, указывающий вперёд относительно нашей иконки. "
"Умноженное на наше свойство ``speed``, это выражение даёт нам скорость, "
"которую мы можем использовать для перемещения узла вперёд."

msgid ""
"We add ``velocity * delta`` to the node's ``position`` to move it. The "
"position itself is of type :ref:`Vector2 <class_Vector2>`, a built-in type "
"in Godot representing a 2D vector."
msgstr ""
"Мы добавляем ``velocity * delta`` к узлу ``position``, чтобы переместить "
"его. Сама позиция имеет тип :ref:`Vector2 <class_Vector2>`, встроенный тип в "
"Godot, представляющий двумерный вектор."

msgid "Run the scene to see the Godot head run in circles."
msgstr "Запустите сцену, чтобы увидеть, что голова Godot движется по кругу."

msgid ""
"Moving a node like that does not take into account colliding with walls or "
"the floor. In :ref:`doc_your_first_2d_game`, you will learn another approach "
"to moving objects while detecting collisions."
msgstr ""
"При таком перемещении узла не учитывается столкновение со стенами или полом. "
"В :ref:`doc_your_first_2d_game` вы узнаете другой подход к перемещению "
"объектов с обнаруженем столкновений."

#, fuzzy
msgid ""
"Our node currently moves by itself. In the next part, :ref:"
"`doc_scripting_player_input`, we'll use player input to control it."
msgstr ""
"Наш узел сейчас движется самостоятельно. В следующей части :ref:"
"`doc_scripting_player_input` мы будем использовать пользовательский ввод, "
"чтобы контролировать его."

msgid "Complete script"
msgstr "Готовый скрипт"

#, fuzzy
msgid "Here is the complete ``sprite_2d.gd`` file for reference."
msgstr "Это полный файл ``Sprite.gd`` для справки."

msgid "Translation status"
msgstr "Статус перевода"
