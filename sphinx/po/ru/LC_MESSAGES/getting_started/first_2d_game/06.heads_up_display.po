# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Heads up display"
msgstr "Графический интерфейс"

msgid ""
"The final piece our game needs is a User Interface (UI) to display things "
"like score, a \"game over\" message, and a restart button."
msgstr ""
"Заключительный этап нашей игры нуждается в Пользовательском интерфейсе (UI), "
"чтобы отображать такие вещи, как рейтинг, сообщение \"игра окончена\" и "
"кнопку перезапуска."

msgid ""
"Create a new scene, click the \"Other Node\" button and add a :ref:"
"`CanvasLayer <class_CanvasLayer>` node named ``HUD``. \"HUD\" stands for "
"\"heads-up display\", an informational display that appears as an overlay on "
"top of the game view."
msgstr ""
"Создайте новую сцену и добавьте узел :ref:`CanvasLayer <class_CanvasLayer>` "
"с именем ``HUD``. \"HUD\" означает \"heads-up display\" (\"графический "
"интерфейс пользователя\"), дисплей, отображающийся поверх игры."

msgid ""
"The :ref:`CanvasLayer <class_CanvasLayer>` node lets us draw our UI elements "
"on a layer above the rest of the game, so that the information it displays "
"isn't covered up by any game elements like the player or mobs."
msgstr ""
"Узел :ref:`CanvasLayer <class_CanvasLayer>` позволяет нам прорисовывать "
"элементы нашего UI на слое поверх всей остальной игры, поэтому отображаемая "
"информация не перекрывается никакими игровыми элементами, такими как игрок "
"или мобы."

msgid "The HUD needs to display the following information:"
msgstr "HUD должен отображать следующую информацию:"

msgid "Score, changed by ``ScoreTimer``."
msgstr "Счет, измененный ``ScoreTimer``."

msgid "A message, such as \"Game Over\" or \"Get Ready!\""
msgstr "Сообщение, например \"Game Over\" или \"Get Ready!\""

msgid "A \"Start\" button to begin the game."
msgstr "Кнопка \"Start\", чтобы начать игру."

msgid ""
"The basic node for UI elements is :ref:`Control <class_Control>`. To create "
"our UI, we'll use two types of :ref:`Control <class_Control>` nodes: :ref:"
"`Label <class_Label>` and :ref:`Button <class_Button>`."
msgstr ""
"Основной узел для элементов UI — это :ref:`Control <class_Control>`. Чтобы "
"создать наш UI, мы будем использовать два типа узлов :ref:`Control "
"<class_Control>`: :ref:`Label <class_Label>` и :ref:`Button <class_Button>`."

msgid "Create the following as children of the ``HUD`` node:"
msgstr "Создайте следующие узлы, как дочерние узла ``HUD``:"

msgid ":ref:`Label <class_Label>` named ``ScoreLabel``."
msgstr ":ref:`Label <class_Label>` с именем ``ScoreLabel``."

msgid ":ref:`Label <class_Label>` named ``Message``."
msgstr ":ref:`Label <class_Label>` с именем ``Message``."

msgid ":ref:`Button <class_Button>` named ``StartButton``."
msgstr ":ref:`Button <class_Button>` с именем ``StartButton``."

msgid ":ref:`Timer <class_Timer>` named ``MessageTimer``."
msgstr ":ref:`Timer <class_Timer>` с именем ``MessageTimer``."

msgid ""
"Click on the ``ScoreLabel`` and type a number into the ``Text`` field in the "
"Inspector. The default font for ``Control`` nodes is small and doesn't scale "
"well. There is a font file included in the game assets called \"Xolonium-"
"Regular.ttf\". To use this font, do the following:"
msgstr ""
"Нажмите на ``ScoreLabel`` и введите число в поле ``Text`` в Инспекторе. "
"Стандартный шрифт для узлов ``Control`` мал и плохо масштабируется. В "
"ресурсы игры включен файл шрифта под названием \"Xolonium-Regular.ttf\". "
"Чтобы использовать этот шрифт, сделайте следующее:"

msgid ""
"Under \"Theme Overrides > Fonts\", choose \"Load\" and select the \"Xolonium-"
"Regular.ttf\" file."
msgstr ""
"В \"Theme Overrides > Fonts\" выберите \"Загрузить\" и выберите файл "
"\"Xolonium-Regular.ttf\"."

msgid ""
"The font size is still too small, increase it to ``64`` under \"Theme "
"Overrides > Font Sizes\". Once you've done this with the ``ScoreLabel``, "
"repeat the changes for the ``Message`` and ``StartButton`` nodes."
msgstr ""
"Размер шрифта все еще слишком мал, увеличьте его до ``64`` в разделе «Theme "
"Overrides > Font Sizes». Сделав это для ``ScoreLabel``, повторите изменения "
"для узлов ``Message`` и ``StartButton``."

#, fuzzy
msgid ""
"**Anchors:** ``Control`` nodes have a position and size, but they also have "
"anchors. Anchors define the origin - the reference point for the edges of "
"the node."
msgstr ""
"**Якоря и Отступы:** Узлы ``Control`` имеют не только положение и размер, но "
"также якоря и отступы. Якоря определяют начало координат - опорную точку для "
"краев узла. Отступы обновляются автоматически при перемещении или изменении "
"размера узла управления. Они представляют расстояние от краев узла "
"``Control`` до его якоря. См. :ref:"
"`doc_design_interfaces_with_the_control_nodes` для получения более подробной "
"информации."

msgid ""
"Arrange the nodes as shown below. You can drag the nodes to place them "
"manually, or for more precise placement, use \"Anchor Presets\"."
msgstr ""
"Расположите узлы, как показано ниже. Вы можете перетаскивать узлы, чтобы "
"разместить их вручную, или для более точного размещения используйте "
"\"Пресеты для значения якорей\"."

msgid "ScoreLabel"
msgstr "ScoreLabеl"

msgid "Add the text ``0``."
msgstr "Установите текст на ``0``."

msgid ""
"Set the \"Horizontal Alignment\" and \"Vertical Alignment\" to ``Center``."
msgstr ""
"В Инспекторе, установите \"Horizontal Alignment\" и \"Vertical Alignment\" "
"на ``Center``."

msgid "Choose the \"Anchor Preset\" ``Center Top``."
msgstr "Установите \"пресет якорей\" на ``Вверху посередине``."

msgid "Message"
msgstr "Message"

msgid "Add the text ``Dodge the Creeps!``."
msgstr "Установите текст на ``Увернись от Крипов!``."

msgid ""
"Set the \"Autowrap Mode\" to ``Word``, otherwise the label will stay on one "
"line."
msgstr ""
"Установите \"Autowrap Mode\" на ``Word``, в противном случае надпись "
"останется на одной строке."

msgid ""
"Under \"Control - Layout/Transform\" set \"Size X\"  to ``480`` to use the "
"entire width of the screen."
msgstr ""
"В разделе \"Control - Layout/Transform\" установите для параметра «Size X» "
"значение ``480``, чтобы использовать всю ширину экрана."

msgid "Choose the \"Anchor Preset\" ``Center``."
msgstr "Установите \"Пресет якорей\" на ``Центр``."

msgid "StartButton"
msgstr "StartButtоn"

msgid "Add the text ``Start``."
msgstr "Установите текст на ``Старт``."

msgid ""
"Under \"Control - Layout/Transform\", set \"Size X\" to ``200`` and \"Size "
"Y\" to ``100`` to add a little bit more padding between the border and text."
msgstr ""
"В разделе \"Control - Layout/Transform\" установите для параметра «Size X» "
"значение ``480``, а для параметра \"Size Y\" значение ``100``, чтобы "
"добавить немного больше отступа между границей экрана и текстом."

msgid "Choose the \"Anchor Preset\" ``Center Bottom``."
msgstr "Установите \"Пресет якорей \" на ``Внизу посередине``."

msgid "Under \"Control - Layout/Transform\", set \"Position Y\" to ``580``."
msgstr ""
"В разделе \"Control - Layout/Transform\" установите для параметра \"Position "
"Y\" значение ``580``."

msgid ""
"On the ``MessageTimer``, set the ``Wait Time`` to ``2`` and set the ``One "
"Shot`` property to \"On\"."
msgstr ""
"В ``MessageTimer`` установите параметр ``Wait Time`` на ``2``, а параметр "
"``One Shot`` на значение \"Вкл\"."

msgid "Now add this script to ``HUD``:"
msgstr "Теперь добавьте этот скрипт в ``HUD``:"

msgid ""
"We now want to display a message temporarily, such as \"Get Ready\", so we "
"add the following code"
msgstr ""
"Теперь мы хотим временно отобразить сообщение, например \"Get "
"Ready\" (Приготовьтесь), поэтому мы добавляем следующий код"

msgid ""
"We also need to process what happens when the player loses. The code below "
"will show \"Game Over\" for 2 seconds, then return to the title screen and, "
"after a brief pause, show the \"Start\" button."
msgstr ""
"Также нам нужна функция, которая будет вызываться, когда игрок проигрывает. "
"Она покажет надпись \"Game Over\" на 2 секунды, затем произойдет возврат к "
"основному экрану, и после короткой паузы появится кнопка \"Старт\"."

msgid ""
"This function is called when the player loses. It will show \"Game Over\" "
"for 2 seconds, then return to the title screen and, after a brief pause, "
"show the \"Start\" button."
msgstr ""
"Эта функция вызывается, когда игрок проигрывает. Она покажет надпись \"Game "
"Over\" на 2 секунды, затем произойдет возврат к основному экрану, и после "
"короткой паузы появится кнопка \"Start\"."

msgid ""
"When you need to pause for a brief time, an alternative to using a Timer "
"node is to use the SceneTree's ``create_timer()`` function. This can be very "
"useful to add delays such as in the above code, where we want to wait some "
"time before showing the \"Start\" button."
msgstr ""
"Если вам нужно сделать паузу на короткое время, то альтернативой "
"использованию узла Timer является использование функции SceneTree "
"``create_timer()``. Может быть очень полезно добавлять задержки наподобие "
"таких, как в вышеприведенном коде, где нам хотелось бы подождать немного "
"времени, прежде чем показывать кнопку \"Start\"."

msgid "Add the code below to ``HUD`` to update the score"
msgstr "Добавьте приведенный ниже код в ``HUD``, чтобы обновлять счет"

#, fuzzy
msgid ""
"Connect the ``pressed()`` signal of ``StartButton`` and the ``timeout()`` "
"signal of ``MessageTimer``, and add the following code to the new functions:"
msgstr ""
"Присоедините сигнал ``timeout()`` из ``MessageTimer`` и сигнал ``pressed()`` "
"из ``StartButton`` и добавьте следующий код к новым функциям:"

msgid "Connecting HUD to Main"
msgstr "Подключение HUD к Main"

msgid ""
"Now that we're done creating the ``HUD`` scene, go back to ``Main``. "
"Instance the ``HUD`` scene in ``Main`` like you did the ``Player`` scene. "
"The scene tree should look like this, so make sure you didn't miss anything:"
msgstr ""
"Теперь, когда мы закончили создание сцены ``HUD``, вернитесь к ``Main``. "
"Инстанцируйте сцену ``HUD`` в ``Main`` подобно тому, как вы это делали со "
"сценой ``Player``. Дерево сцены должно выглядеть так, поэтому убедитесь, что "
"вы ничего не упустили:"

msgid ""
"Now we need to connect the ``HUD`` functionality to our ``Main`` script. "
"This requires a few additions to the ``Main`` scene:"
msgstr ""
"Теперь нам нужно подключить функционал ``HUD`` в наш ``Main``-скрипт. Для "
"этого потребуются некоторые дополнения к сцене ``Main``:"

msgid ""
"In the Node tab, connect the HUD's ``start_game`` signal to the "
"``new_game()`` function of the Main node by clicking the \"Pick\" button in "
"the \"Connect a Signal\" window and selecting the ``new_game()`` method or "
"type \"new_game\" below \"Receiver Method\" in the window. Verify that the "
"green connection icon now appears next to ``func new_game()`` in the script."
msgstr ""
"Во вкладке \"Узел\" присоедините сигнал HUD ``start_game`` к функции узла "
"Main ``new_game()``, введя \"new_game\" в поле \"Принимающий метод\" в окне "
"\"Присоединить сигнал к методу\" . Убедитесь, что в скрипте рядом с функцией "
"``func new_game()`` теперь появилась зелёная иконка подключения."

msgid ""
"In ``new_game()``, update the score display and show the \"Get Ready\" "
"message:"
msgstr ""
"В ``new_game()`` обновим отображение счёта и выведем сообщение \"Get Ready\":"

msgid "In ``game_over()`` we need to call the corresponding ``HUD`` function:"
msgstr "В ``game_over()`` нам нужно вызвать соответствующую функцию ``HUD``:"

msgid ""
"Finally, add this to ``_on_score_timer_timeout()`` to keep the display in "
"sync with the changing score:"
msgstr ""
"Наконец добавьте этот код в ``_on_score_Ttmer_timeout()``, чтобы "
"синхронизировать отображение с изменением количества очков:"

msgid ""
"Remember to remove the call to ``new_game()`` from ``_ready()`` if you "
"haven't already, otherwise your game will start automatically."
msgstr ""
"Когда вы убедитесь, что всё работает, удалите вызов ``new_game()`` из "
"``_ready()``, иначе ваша игра запустится автоматически."

msgid ""
"Now you're ready to play! Click the \"Play the Project\" button. You will be "
"asked to select a main scene, so choose ``main.tscn``."
msgstr ""
"Теперь можно поиграть! Нажмите на кнопку \"Запустить проект\". Вам будет "
"предложено выбрать основную сцену, выбирайте ``main.tscn``."

msgid "Removing old creeps"
msgstr "Удаляем старых крипов"

msgid ""
"If you play until \"Game Over\" and then start a new game right away, the "
"creeps from the previous game may still be on the screen. It would be better "
"if they all disappeared at the start of a new game. We just need a way to "
"tell *all* the mobs to remove themselves. We can do this with the \"group\" "
"feature."
msgstr ""
"Если вы играете до \"Game Over\", а затем сразу начинаете новую игру, то "
"крипы из предыдущей игры могут все еще оставаться на экране. Было бы лучше, "
"если бы все они исчезали в начале новой игры. Нам просто нужен способ "
"сказать *всем* мобам, чтобы они удалились. Мы можем сделать это с помощью "
"функции \"group\" (\"группа\")."

msgid ""
"In the ``Mob`` scene, select the root node and click the \"Node\" tab next "
"to the Inspector (the same place where you find the node's signals). Next to "
"\"Signals\", click \"Groups\" and you can type a new group name and click "
"\"Add\"."
msgstr ""
"В сцене ``Mob`` выберите корневой узел и нажмите вкладку \"Узел\" рядом с "
"Инспектором (там же, где вы находите сигналы узла). Рядом с \"Сигналы\" "
"нажмите \"Группы\", введите новое имя группы и нажмите \"Добавить\"."

msgid ""
"Now all mobs will be in the \"mobs\" group. We can then add the following "
"line to the ``new_game()`` function in ``Main``:"
msgstr ""
"Теперь все мобы будут в группе \"mobs\". Затем мы можем добавить следующие "
"строки к функции ``new_game()`` в ``Main``:"

msgid ""
"The ``call_group()`` function calls the named function on every node in a "
"group - in this case we are telling every mob to delete itself."
msgstr ""
"Функция ``call_group()`` вызывает каждую именованную функцию на каждом узле "
"в группе - в этом случае мы говорим каждому мобу удалять себя."

msgid ""
"The game's mostly done at this point. In the next and last part, we'll "
"polish it a bit by adding a background, looping music, and some keyboard "
"shortcuts."
msgstr ""
"Игра на данный момент по большей части готова. В следующей и последней части "
"мы немного отполируем её с помощью добавления фона, проигрывания музыки и "
"нескольких сочетаний клавиш."

msgid "Translation status"
msgstr "Статус перевода"
