# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Node type customization using name suffixes"
msgstr "Настройка типов узлов при помощи суффиксов в названиях"

msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr ""
"Часто при редактировании сцены есть общие задачи, которые необходимо "
"выполнить после экспорта:"

msgid "Adding collision detection to objects."
msgstr "Добавление обнаружения столкновений объектов."

msgid "Setting objects as navigation meshes."
msgstr "Настройка объектов в качестве навигационной сетки."

#, fuzzy
msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modeling)."
msgstr ""
"Удаление узлов, которые не используются в игровом движке (например, "
"специфические источники света, используемые для моделирования)."

#, fuzzy
msgid ""
"To simplify this workflow, Godot offers several suffixes that can be added "
"to the names of the objects in your 3D modeling software. When imported, "
"Godot will detect suffixes in object names and will perform actions "
"automatically."
msgstr ""
"Чтобы упростить этот рабочий процесс, Godot предлагает несколько суффиксов, "
"которые можно добавлять к именам объектов в вашем программном обеспечении "
"для 3D-моделирования. При импорте Godot обнаружит суффиксы в именах объектов "
"и выполнит действия автоматически."

#, fuzzy
msgid "All the suffixes described below are **case-sensitive**."
msgstr "Все описанные ниже суффиксы *чувствительны к регистру*."

msgid "Remove nodes (-noimp)"
msgstr "Удаление узлов (-noimp)"

msgid ""
"Objects that have the ``-noimp`` suffix will be removed at import-time no "
"matter what their type is. They will not appear in the imported scene."
msgstr ""
"Объекты с суффиксом`` -noimp`` будут удалены во время импорта независимо от "
"их типа. Они не появятся в импортированной сцене."

msgid ""
"This is equivalent to enabling **Skip Import** for a node in the Advanced "
"Import Settings dialog."
msgstr ""

msgid "Create collisions (-col, -convcol, -colonly, -convcolonly)"
msgstr "Создание столкновений (-col, -convcol, -colonly, -convcolonly)"

msgid ""
"The option ``-col`` will work only for Mesh objects. If it is detected, a "
"child static collision node will be added, using the same geometry as the "
"mesh. This will create a triangle mesh collision shape, which is a slow, but "
"accurate option for collision detection. This option is usually what you "
"want for level geometry (but see also ``-colonly`` below)."
msgstr ""
"Параметр ``-col`` будет работать только для объектов Mesh. Если это "
"обнаружено, будет добавлен дочерний статический узел столкновения, "
"использующий ту же геометрию, что и сетка. Это создаст форму столкновения "
"треугольной сетки, которая является медленным, но точным вариантом для "
"обнаружения столкновений. Этот параметр обычно подходит для геометрии уровня "
"(но см. также ``-colonly`` ниже)."

#, fuzzy
msgid ""
"The option ``-convcol`` will create a :ref:`class_ConvexPolygonShape3D` "
"instead of a :ref:`class_ConcavePolygonShape3D`. Unlike triangle meshes "
"which can be concave, a convex shape can only accurately represent a shape "
"that doesn't have any concave angles (a pyramid is convex, but a hollow box "
"is concave). Due to this, convex collision shapes are generally not suited "
"for level geometry. When representing simple enough meshes, convex collision "
"shapes can result in better performance compared to a triangle collision "
"shape. This option is ideal for simple or dynamic objects that require "
"mostly-accurate collision detection."
msgstr ""
"Параметр ``-convcol`` создаст :ref:`class_convexpolygonshape` вместо :ref:"
"`class_concavepolygonshape`. В отличие от треугольных сеток, которые могут "
"быть вогнутыми, выпуклая форма может точно представлять только ту форму, "
"которая не имеет вогнутых углов (пирамида является выпуклой, а полый "
"прямоугольник вогнутым). Из-за этого выпуклые формы столкновения обычно не "
"подходят для геометрии уровня. При представлении достаточно простых сеток "
"выпуклые формы столкновения могут обеспечить лучшую производительность по "
"сравнению с треугольной формой столкновения. Этот вариант идеально подходит "
"для простых или динамических объектов, для которых требуется наиболее точное "
"обнаружение столкновений."

#, fuzzy
msgid ""
"However, in both cases, the visual geometry may be too complex or not smooth "
"enough for collisions. This can create physics glitches and slow down the "
"engine unnecessarily."
msgstr ""
"Однако в обоих случаях визуальная геометрия может быть слишком сложной или "
"недостаточно гладкой для столкновений. Это может привести к сбоям в физике и "
"без надобности замедлить работу движка."

#, fuzzy
msgid ""
"To solve this, the ``-colonly`` modifier exists. It will remove the mesh "
"upon importing and will create a :ref:`class_StaticBody3D` collision "
"instead. This helps the visual mesh and actual collision to be separated."
msgstr ""
"Чтобы решить эту проблему, существует модификатор ``-colonly``. Он удалит "
"сетку при импорте и вместо этого создаст столкновение :ref:"
"`class_staticbody`. Это помогает разделить визуальную сетку и фактическое "
"столкновение."

#, fuzzy
msgid ""
"The option ``-convcolonly`` works in a similar way, but will create a :ref:"
"`class_ConvexPolygonShape3D` instead using convex decomposition."
msgstr ""
"Параметр ``-convcolonly`` работает аналогичным образом, но вместо этого "
"создаст :ref:`class_convexpolygonshape`."

#, fuzzy
msgid ""
"With Collada files, the option ``-colonly`` can also be used with Blender's "
"empty objects. On import, it will create a :ref:`class_StaticBody3D` with a "
"collision node as a child. The collision node will have one of a number of "
"predefined shapes, depending on Blender's empty draw type:"
msgstr ""
"Опцию ``-colonly`` также можно использовать с пустыми объектами Blender. При "
"импорте он создаст :ref:`class_staticbody` с узлом столкновения в качестве "
"дочернего. Узел столкновения будет иметь одну из нескольких предопределенных "
"форм, в зависимости от типа отрисовки пустого Blender:"

msgid "Choosing a draw type for an Empty on creation in Blender"
msgstr ""

#, fuzzy
msgid "Single arrow will create a :ref:`class_SeparationRayShape3D`."
msgstr "Одиночная стрелка создаст :ref:`class_rayshape`."

#, fuzzy
msgid "Cube will create a :ref:`class_BoxShape3D`."
msgstr "Куб создаст форму :ref:`class_boxshape`."

#, fuzzy
msgid "Image will create a :ref:`class_WorldBoundaryShape3D`."
msgstr "Изображение создаст :ref:`class_planeshape`."

#, fuzzy
msgid ""
"Sphere (and the others not listed) will create a :ref:`class_SphereShape3D`."
msgstr ""
"Сфера (и другие, не указанные в списке) создадут :ref:`class_sphereshape`."

msgid ""
"When possible, **try to use a few primitive collision shapes** instead of "
"triangle mesh or convex shapes. Primitive shapes often have the best "
"performance and reliability."
msgstr ""
"По возможности, **попробуйте использовать несколько примитивных форм "
"столкновения** вместо треугольной сетки (triangle mesh) или выпуклых фигур "
"(convex shapes). Примитивные формы часто имеют лучшую производительность и "
"надёжность."

#, fuzzy
msgid ""
"For better visibility on Blender's editor, you can set the \"X-Ray\" option "
"on collision empties and set some distinct color for them by changing **Edit "
"> Preferences > Themes > 3D Viewport > Empty**."
msgstr ""
"Для лучшей видимости в редакторе Blender вы можете установить опцию \"X-"
"Ray\" для пустых полей столкновений и установить для них определенный цвет в "
"Blender **User Preferences > Themes > 3D View > Empty**."

msgid ""
"If using Blender 2.79 or older, follow these steps instead: **User "
"Preferences > Themes > 3D View > Empty**."
msgstr ""

msgid ""
"See :ref:`doc_collision_shapes_3d` for a comprehensive overview of collision "
"shapes."
msgstr ""
"См. :ref:`doc_collision_shapes_3d` для исчерпывающего обзора форм "
"столкновения."

msgid "Create Occluder (-occ, -occonly)"
msgstr ""

msgid ""
"If a mesh is imported with the ``-occ`` suffix an :ref:`class_occluder3D` "
"node will be created based on the geometry of the mesh, it does not replace "
"the mesh. A mesh node with the ``-occonly`` suffix will be converted to an :"
"ref:`class_occluder3D` on import."
msgstr ""

msgid "Create navigation (-navmesh)"
msgstr "Создание навигации (-navmesh) (создание навигации)"

msgid ""
"A mesh node with the ``-navmesh`` suffix will be converted to a navigation "
"mesh. The original Mesh object will be removed at import-time."
msgstr ""
"Узел сетки с суффиксом ``-navmesh`` будет преобразован в сетку навигации. "
"Исходный объект Mesh будет удален во время импорта."

msgid "Create a VehicleBody (-vehicle)"
msgstr "Создать VehicleBody (-vehicle) (тело-транспортное средство)"

#, fuzzy
msgid ""
"A mesh node with the ``-vehicle`` suffix will be imported as a child to a :"
"ref:`class_VehicleBody3D` node."
msgstr ""
"Узел сетки с суффиксом ``-vehicle`` будет импортирован как дочерний для "
"узла :ref:`class_VehicleBody`."

msgid "Create a VehicleWheel (-wheel)"
msgstr "Создать VehicleWheel (-wheel) (колесо транспортного средства)"

#, fuzzy
msgid ""
"A mesh node with the ``-wheel`` suffix will be imported as a child to a :ref:"
"`class_VehicleWheel3D` node."
msgstr ""
"Узел сетки с суффиксом ``-wheel`` будет импортирован как дочерний узел :ref:"
"`class_VehicleWheel`."

msgid "Rigid Body (-rigid)"
msgstr "Твердое тело (-rigid)"

#, fuzzy
msgid ""
"A mesh node with the ``-rigid`` suffix will be imported as a :ref:"
"`class_RigidBody3D`."
msgstr ""
"Узел сетки с суффиксом ``-rigid`` будет импортирован как :ref:"
"`class_RigidBody`."

msgid "Animation loop (-loop, -cycle)"
msgstr "Цикл анимации (-loop, -cycle)"

#, fuzzy
msgid ""
"Animation clips in the source 3D file that start or end with the token "
"``loop`` or ``cycle`` will be imported as a Godot :ref:`class_Animation` "
"with the loop flag set. **Unlike the other suffixes described above, this "
"does not require a hyphen.**"
msgstr ""
"Анимационные клипы в документе COLLADA, которые начинаются или заканчиваются "
"маркером ``loop`` или ``cycle``, будут импортированы как Godot Animation с "
"установленным флагом цикла. **В отличие от других суффиксов, описанных выше, "
"для этого не требуется дефис.**"

msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the ``loop`` or ``cycle`` prefix or suffix."
msgstr ""
"В Blender для этого требуется использование NLA редактора и именование "
"Действия (Action) с суффиксом или префиксом ``loop`` или ``cycle``."

msgid "Translation status"
msgstr "Статус перевода"
