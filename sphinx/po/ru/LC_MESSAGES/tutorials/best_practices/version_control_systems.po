# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Version control systems"
msgstr "Системы контроля версий"

msgid "Introduction"
msgstr "Введение"

msgid ""
"Godot aims to be VCS-friendly and generate mostly readable and mergeable "
"files."
msgstr ""
"Godot стремится быть дружественным к системам контроля версий и генерировать "
"в основном читаемые и объединяемые файлы."

msgid "Version control plugins"
msgstr "Плагины контроля версий"

msgid ""
"Godot also supports the use of version control systems in the editor itself. "
"However, version control in the editor requires a plugin for the specific "
"VCS you're using."
msgstr ""
"Godot также поддерживает использование систем контроля версий в самом "
"редакторе. Однако для контроля версий в редакторе требуется плагин для "
"конкретной системы управления версиями, которую вы используете."

msgid ""
"As of July 2023, there is only a Git plugin available, but the community may "
"create additional VCS plugins."
msgstr ""
"По состоянию на июль 2023 года доступен только плагин Git, но сообщество "
"может создавать дополнительные плагины контроля версий."

msgid "Official Git plugin"
msgstr "Официальный плагин для Git"

msgid ""
"Using Git from inside the editor is supported with an official plugin. You "
"can find the latest releases on `GitHub <https://github.com/godotengine/"
"godot-git-plugin/releases>`__."
msgstr ""
"Использование Git из редактора поддерживается официальным плагином. Вы "
"можете найти последние версии на `GitHub <https://github.com/godotengine/"
"godot-git-plugin/releases>`__."

msgid ""
"Documentation on how to use the Git plugin can be found on its `wiki "
"<https://github.com/godotengine/godot-git-plugin/wiki>`__."
msgstr ""
"Документацию по использованию плагина Git можно найти на его `wiki <https://"
"github.com/godotengine/godot-git-plugin/wiki>`__."

msgid "Files to exclude from VCS"
msgstr "Файлы, которые необходимо исключить из систем контроля версий"

msgid ""
"This lists files and folders that should be ignored from version control in "
"Godot 4.1 and later."
msgstr ""
"Здесь перечислены файлы и папки, которые следует игнорировать при контроле "
"версий в Godot 4.1 и более поздних версиях."

msgid ""
"The list of files of folders that should be ignored from version control in "
"Godot 3.x and Godot 4.0 is **entirely** different. This is important, as "
"Godot 3.x and 4.0 may store sensitive credentials in ``export_presets.cfg`` "
"(unlike Godot 4.1 and later)."
msgstr ""
"Список файлов папок, которые следует игнорировать при контроле версий в "
"Godot 3.x и Godot 4.0, **совершенно** разный. Это важно, поскольку Godot 3.x "
"и 4.0 могут хранить конфиденциальные учетные данные в файле ``export_presets."
"cfg`` (в отличие от Godot 4.1 и более поздних версий)."

msgid ""
"If you are using Godot 3, check the ``3.5`` version of this documentation "
"page instead."
msgstr ""
"Если вы используете Godot 3, вместо этого проверьте версию ``3.5`` на этой "
"странице документации."

msgid ""
"There are some files and folders Godot automatically creates when opening a "
"project in the editor for the first time. To avoid bloating your version "
"control repository with generated data, you should add them to your VCS "
"ignore:"
msgstr ""
"Некоторые файлы и папки Godot создает автоматически при первом открытии "
"проекта в редакторе. Чтобы избежать переполнения репозитория контроля версий "
"сгенерированными данными, вам следует добавить их в игнор контроля версий:"

msgid "``.godot/``: This folder stores various project cache data."
msgstr "``.godot/``: В этой папке хранятся различные данные кэша проекта."

msgid ""
"``*.translation``: These files are binary imported :ref:`translations "
"<doc_internationalizing_games>` generated from CSV files."
msgstr ""
"``*.translation``: Эти файлы представляют собой двоичные импортированные "
"переводы, сгенерированные из файлов контроля версий."

msgid ""
"You can make the Godot project manager generate version control metadata for "
"you automatically when creating a project. When choosing the **Git** option, "
"this creates ``.gitignore`` and ``.gitattributes`` files in the project root:"
msgstr ""
"Вы можете заставить менеджера проектов Godot автоматически генерировать "
"метаданные контроля версий при создании проекта. При выборе опции Git в "
"корне проекта создаются файлы ``.gitignore`` и ``.gitattributes``:"

msgid ""
"Creating version control metadata in the project manager's New Project dialog"
msgstr ""
"Создание метаданных контроля версий в диалоговом окне Новый проект менеджера "
"проекта"

msgid ""
"Creating version control metadata in the project manager's **New Project** "
"dialog"
msgstr ""
"Создание метаданных контроля версий в диалоговом окне **Новый проект** "
"менеджера проекта"

msgid ""
"In existing projects, select the **Project** menu at the top of the editor, "
"then choose **Version Control > Generate Version Control Metadata**. This "
"creates the same files as if the operation was performed in the project "
"manager."
msgstr ""
"В существующих проектах выберите меню **Проект** в верхней части редактора, "
"затем выберите **Контроль версий > Создание метаданных контроля версий**. "
"При этом создаются те же файлы, как если бы операция выполнялась в менеджере "
"проекта."

msgid "Working with Git on Windows"
msgstr "Работа с Git на Windows"

msgid ""
"Most Git for Windows clients are configured with the ``core.autocrlf`` set "
"to ``true``. This can lead to files unnecessarily being marked as modified "
"by Git due to their line endings being converted from LF to CRLF "
"automatically."
msgstr ""
"Большинство клиентов Git для Windows настроены с параметром ``core."
"autocrlf``, установленным в значение ``true``. Это может привести к тому, "
"что файлы будут без необходимости помечены Git как измененные, поскольку "
"окончания их строк автоматически преобразуются из LF в CRLF."

msgid "It is better to set this option as:"
msgstr "Лучше установить этот параметр как:"

msgid ""
"Creating version control metadata using the project manager or editor will "
"automatically enforce LF line endings using the ``.gitattributes`` file. In "
"this case, you don't need to change your Git configuration."
msgstr ""
"При создании метаданных контроля версий с помощью менеджера проекта или "
"редактора автоматически применяются окончания строк LF с использованием "
"файла ``.gitattributes``. В этом случае вам не нужно менять конфигурацию Git."

msgid "Translation status"
msgstr "Статус перевода"
