# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating script templates"
msgstr "Создание сценарных шаблонов"

msgid ""
"Godot provides a way to use script templates as seen in the ``Script Create "
"Dialog`` while creating a new script:"
msgstr ""
"Godot предоставляет способ использования сценарных шаблонов, как показано в "
"``Script Create Dialog``, при создании нового скрипта:"

#, fuzzy
msgid ""
"A set of built-in script templates are provided with the editor, but it is "
"also possible to create new ones and set them by default, both per project "
"and at editor scope."
msgstr ""
"Набор сценарных шаблонов предоставляется по умолчанию, но также можно "
"изменять существующие и создавать новые, как для каждого проекта, так и для "
"редактора."

msgid ""
"Templates are linked to a specific node type, so when you create a script "
"you will only see the templates corresponding to that particular node, or "
"one of its parent types. For example, if you are creating a script for a "
"CharacterBody3D, you will only see templates defined for CharacterBody3Ds, "
"Node3Ds or Nodes."
msgstr ""

msgid "Locating the templates"
msgstr "Расположение шаблонов"

msgid "There are two places where templates can be managed."
msgstr "Есть два места, где можно управлять шаблонами."

msgid "Editor-defined templates"
msgstr "Шаблоны, определенные редактором"

msgid ""
"These are available globally throughout any project. The location of these "
"templates are determined per each OS:"
msgstr ""
"Они доступны глобально в рамках любого проекта. Расположение этих шаблонов "
"определяется для каждой ОС:"

msgid "Windows: ``%APPDATA%\\Godot\\script_templates\\``"
msgstr "Windows: ``%APPDATA%\\Godot\\script_templates\\``"

msgid "Linux: ``$HOME/.config/godot/script_templates/``"
msgstr "Linux: ``$HOME/.config/godot/script_templates/``"

msgid "macOS: ``$HOME/Library/Application Support/Godot/script_templates/``"
msgstr "macOS: ``$HOME/Library/Application Support/Godot/script_templates/``"

msgid ""
"If no ``script_templates`` is detected, Godot will create a default set of "
"built-in templates automatically, so this logic can be used to reset the "
"default templates in case you've accidentally overwritten them."
msgstr ""
"Если ``script_templates`` не обнаружен, Godot автоматически создаст набор "
"встроенных шаблонов по умолчанию, поэтому эта логика может быть использована "
"для сброса шаблонов по умолчанию в случае их случайной перезаписи."

msgid "Project-defined templates"
msgstr "Шаблоны, определенные проектом"

msgid ""
"The default path to search for templates is the ``res://script_templates/`` "
"directory. The path can be changed by configuring the ``editor/"
"script_templates_search_path`` setting in the :ref:`ProjectSettings "
"<class_ProjectSettings>`, both via code and the editor."
msgstr ""
"По умолчанию для поиска шаблонов используется каталог ``res://"
"script_templates/``. Путь можно изменить, настроив параметр ``editor/"
"script_templates_search_path`` в :ref:`ProjectSettings "
"<class_ProjectSettings>`, как с помощью кода, так и с помощью редактора."

msgid ""
"If no ``script_templates`` directory is found within a project, it is simply "
"ignored."
msgstr ""
"Если в проекте не найден каталог ``script_templates``, он просто "
"игнорируется."

#, fuzzy
msgid "Template organization and naming"
msgstr "Превращение типов и кастинг"

msgid ""
"Both editor and project defined templates are organized in the following way:"
msgstr ""

msgid "where:"
msgstr ""

msgid ""
"``template_path`` is one of the 2 locations discussed in the previous two "
"sections"
msgstr ""

msgid ""
"``node_type`` is the node it will apply to (for example, :ref:`Node "
"<class_Node>`, or :ref:`CharacterBody3D <class_CharacterBody3D>`)"
msgstr ""

msgid ""
"``file`` is the custom name you can chose for the template (for example: "
"``platformer_movement`` or ``smooth_camera``)"
msgstr ""

msgid ""
"``extension``: will indicate which language the template will apply to (it "
"should be ``gd`` for GDScript or ``cs`` for C#)"
msgstr ""

msgid "For example:"
msgstr "Например:"

msgid "``template_scripts/Node/smooth_camera.gd``"
msgstr ""

msgid "``template_scripts/CharacterBody3D/platformer_movement.gd``"
msgstr ""

msgid "Default behaviour and overriding it"
msgstr ""

#, fuzzy
msgid "By default:"
msgstr "Основные особенности"

msgid ""
"the template's name is the same as the file name (minus the extension, "
"prettyfied)"
msgstr ""

#, fuzzy
msgid "the description is empty"
msgstr "Текстовое описание ассета."

msgid "the space indent is set to 4"
msgstr ""

#, fuzzy
msgid "the template will not be set as the default for the given node"
msgstr ""
"Все эти настройки могут быть оставлены в их значениях по-умолчанию для этой "
"демонстрации."

msgid ""
"It is possible to customize this behaviour by adding meta headers at the "
"start of your file, like this:"
msgstr ""

msgid ""
"In this case, the name will be set to \"Platformer movement\", with the "
"given custom description, and it will be set as the default template for the "
"node in which directory it has been saved."
msgstr ""

msgid ""
"This is an example of utilizing custom templates at editor and project level:"
msgstr ""

msgid ""
"The script templates have the same extension as the regular script files. "
"This may lead to an issue of a script parser treating those templates as "
"actual scripts within a project. To avoid this, make sure to ignore the "
"directory containing them by creating an empty ``.gdignore`` file. The "
"directory won't be visible throughout the project's filesystem anymore, yet "
"the templates can be modified by an external text editor anytime."
msgstr ""
"Шаблоны сценариев имеют то же расширение, что и обычные файлы сценариев. Это "
"может привести к тому, что парсер скриптов будет воспринимать эти шаблоны "
"как реальные скрипты в проекте. Чтобы избежать этого, убедитесь, что "
"игнорируете каталог, содержащий их, создав пустой ``.gdignore`` файл. "
"Директория больше не будет видна в файловой системе проекта, но шаблоны "
"могут быть изменены внешним текстовым редактором в любое время."

msgid ""
"By default, every C# file inside the project directory is included in the "
"compilation. Script templates must be manually excluded from the C# project "
"to avoid build errors. See `Exclude files from the build <https://learn."
"microsoft.com/en-us/visualstudio/msbuild/how-to-exclude-files-from-the-"
"build>`_ in the Microsoft documentation."
msgstr ""

msgid ""
"It is possible to create editor-level templates that have the same level as "
"a project-specific templates, and also that have the same name as a built-in "
"one, all will be shown on the new script dialog."
msgstr ""

msgid "Default template"
msgstr "Шаблон по умолчанию"

msgid ""
"To override the default template, create a custom template at editor or "
"project level inside a ``Node`` directory (or a more specific type, if only "
"a subtype wants to be overridden) and start the file with the ``meta-"
"default: true`` header."
msgstr ""

msgid ""
"Only one template can be set as default at the same time for the same node "
"type."
msgstr ""

#, fuzzy
msgid ""
"The ``Default`` templates for basic Nodes, for both GDScript and C#, are "
"shown here so you can use these as the base for creating other templates:"
msgstr ""
"Шаблон ``Default`` всегда генерируется динамически для каждого языка и не "
"может быть настроен или переопределен, но вы можете использовать его в "
"качестве основы для создания других шаблонов."

msgid ""
"The Godot editor provides a set of useful built-in node-specific templates, "
"such as ``basic_movement`` for both :ref:`CharacterBody2D "
"<class_CharacterBody2D>` and :ref:`CharacterBody3D <class_CharacterBody3D>` "
"and ``plugin`` for :ref:`EditorPlugin <class_EditorPlugin>`."
msgstr ""

msgid "List of template placeholders"
msgstr "Список заполнителей шаблонов"

msgid ""
"The following describes the complete list of built-in template placeholders "
"which are currently implemented."
msgstr ""
"Ниже приведен полный список встроенных заполнителей шаблонов, которые в "
"настоящее время реализованы."

msgid "Base placeholders"
msgstr "Базовые заполнители"

msgid "Placeholder"
msgstr "Заполнитель"

msgid "Description"
msgstr "Описание"

msgid "``_BINDINGS_NAMESPACE_``"
msgstr ""

#, fuzzy
msgid "The name of the Godot namespace (used in C# only)."
msgstr "Имя нового класса (используется только в C#)."

#, fuzzy
msgid "``_CLASS_``"
msgstr "``%CLASS%``"

msgid "The name of the new class (used in C# only)."
msgstr "Имя нового класса (используется только в C#)."

#, fuzzy
msgid "``_BASE_``"
msgstr "``%BASE%``"

msgid "The base type a new script inherits from."
msgstr "Базовый тип, от которого наследуется новый сценарий."

msgid "``_TS_``"
msgstr ""

#, fuzzy
msgid ""
"Indentation placeholder. The exact type and number of whitespace characters "
"used for indentation is determined by the ``text_editor/indent/type`` and "
"``text_editor/indent/size`` settings in the :ref:`EditorSettings "
"<class_EditorSettings>` respectively. Can be overridden by the ``meta-space-"
"indent`` header on the template."
msgstr ""
"Заполнитель вдавливания. Точный тип и количество пробелов, используемых для "
"отступа, определяются настройками ``text_editor/indent/type`` и "
"``text_editor/indent/size`` в файле :ref:`EditorSettings "
"<class_EditorSettings>` соответственно."

msgid "Type placeholders"
msgstr "Типы заполнителей"

msgid ""
"There used to be, in Godot 3.x, placeholders for GDScript type hints that "
"would get replaced whenever a template was used to create a new script, such "
"as: ``%INT_TYPE%``, ``%STRING_TYPE%``, ``%FLOAT_TYPE%`` or ``%VOID_RETURN%``."
msgstr ""

msgid ""
"The placeholders no longer work for Godot 4.x, but if the setting "
"``text_editor/completion/add_type_hints`` from :ref:`EditorSettings "
"<class_EditorSettings>` is disabled, type hints for parameters and return "
"types will be automatically removed for a few base types:"
msgstr ""

#, fuzzy
msgid "``int``"
msgstr "``in``"

#, fuzzy
msgid "``String``"
msgstr "``String[]``"

#, fuzzy
msgid "``Array[String]``"
msgstr "``String[]``"

#, fuzzy
msgid "``float``"
msgstr "``float[]``"

#, fuzzy
msgid "``void``"
msgstr "``-> void``"

msgid "``:=`` will be transformed into ``=``"
msgstr ""

msgid "Translation status"
msgstr "Статус перевода"
