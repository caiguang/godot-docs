# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to 3D"
msgstr "Введение в 3D"

#, fuzzy
msgid ""
"Creating a 3D game can be challenging. That extra Z coordinate makes many of "
"the common techniques that helped to make 2D games simpler no longer work. "
"To aid in this transition, it is worth mentioning that Godot uses similar "
"APIs for 2D and 3D. Most nodes are the same and are present in both 2D and "
"3D versions. In fact, it is worth checking the 3D platformer tutorial, or "
"the 3D kinematic character tutorials, which are almost identical to their 2D "
"counterparts."
msgstr ""
"Создание 3D игры может быть трудоемким. Дополнительная Z координата делает "
"многие обычные техники для создания 2D игр неработоспособными. Для помощи в "
"этом переходе, стоит упомянуть что Godot использует похожие API для 2D и 3D. "
"Большинство узлов одинаковые и представлены в 2D и 3D версиях. На самом "
"деле, стоит проверить пример с 3D платформером, или примеры с кинематикой 3D "
"персонажей, чтобы убедиться что они почти идентичны с их 2D версиями."

msgid ""
"In 3D, math is a little more complex than in 2D, so also checking the :ref:"
"`doc_vector_math` entry in the wiki (which was especially created for game "
"developers, not mathematicians or engineers) will help pave the way for you "
"to develop 3D games efficiently."
msgstr ""
"В 3D, математика немного более сложная чем в 2D, так что мы рекомендуем "
"посмотреть статью :ref:`doc_vector_math` (которая была создана для "
"разработчиков игр, а не математиков или инженеров) которая поможет вам "
"создавать 3D игры эффективно."

#, fuzzy
msgid "Node3D node"
msgstr "Логическое ИЛИ"

msgid ""
":ref:`Node2D <class_Node2D>` is the base node for 2D. :ref:`Control "
"<class_Control>` is the base node for everything GUI. Following this "
"reasoning, the 3D engine uses the :ref:`Node3D <class_Node3D>` node for "
"everything 3D."
msgstr ""
":ref:`Node2D <class_Node2D>` является базовым узлом для 2D. :ref:`Control "
"<class_Control>` — базовый узел для всегоGUI. Следуя той же логике, движок "
"3D использует :ref:`Node3D <class_Node3D>` для всего 3D."

msgid ""
"Be aware that \"Spatial\" Nodes are now called \"Node3D\" starting with "
"Godot 4. Any Godot 3.x references to \"Spatial\" Nodes refer to \"Node3D\" "
"in Godot 4."
msgstr ""
"Имейте в виду, что узлы «Spatial» теперь называются «Node3D», начиная с "
"Godot 4. Любые ссылки в Godot 3.x на узлы «Spatial» относятся к «Node3D» в "
"Godot 4."

msgid ""
"Node3Ds have a local transform, which is relative to the parent node (as "
"long as the parent node is also of **or inherits from** the type Node3D). "
"This transform can be accessed as a 4×3 :ref:`Transform3D "
"<class_Transform3D>`, or as 3 :ref:`Vector3 <class_Vector3>` members "
"representing location, Euler rotation (X, Y and Z angles) and scale."
msgstr ""
"Узлы Node3D имеют локальную трансформацию относительно родительского узла "
"(если родительский узел также **наследуется** от типа Node3D). Эта "
"трансформация может быть доступна как 4x3 :ref:`Transform "
"<class_Transform>`, или как 3 :ref:`Vector3 <class_Vector3>` в членах, "
"представляющих позицию, вращение по Эйлеру (углы поворота относительно осей "
"X, Y и Z) и масштабирование."

msgid "3D content"
msgstr "3D контент"

msgid ""
"Unlike 2D, where loading image content and drawing is straightforward, 3D is "
"a little more difficult. The content needs to be created with special 3D "
"tools (also called Digital Content Creation tools, or DCCs) and exported to "
"an exchange file format to be imported in Godot. This is required since 3D "
"formats are not as standardized as images."
msgstr ""
"В отличие от 2D, где загрузка изображения и рисование происходит просто, в "
"3D немного сложнее. Контент должен быть создан с помощью специальных 3D-"
"инструментов (также называемых инструментами создания цифрового контента, "
"или DCC) и экспортирован в файл с форматом обмена для импорта в Godot. Это "
"необходимо, поскольку 3D-форматы не так стандартизированы, как изображения."

msgid "Manually authored models (using 3D modeling software)"
msgstr ""
"Модели, созданные вручную (с использованием программного обеспечения для 3D-"
"моделирования)"

msgid ""
"There are two pipelines to import 3D models in Godot. The first and most "
"common one is by :ref:`doc_importing_3d_scenes`, which allows you to import "
"entire scenes (exactly as they look in the 3D modeling software), including "
"animation, skeletal rigs, blend shapes, etc."
msgstr ""
"В Godot есть два способа импорта 3D-моделей. Первый и наиболее "
"распространенный - :ref:`doc_importing_3d_scenes`, который позволяет Вам "
"импортировать целые сцены (так же, как они выглядят в DCC), включая "
"анимацию, скелетные риги, смешанные формы и т.д."

msgid ""
"The second pipeline is by importing simple .OBJ files as mesh resources, "
"which can be then put inside a :ref:`MeshInstance3D <class_MeshInstance3D>` "
"node for display."
msgstr ""
"Второй способ заключается в импорте простых файлов .OBJ в качестве ресурсов "
"сетки, которые затем можно поместить в узел :ref:`MeshInstance "
"3D<class_MeshInstance3D>` для отображения."

msgid "Generated geometry"
msgstr "Генерация геометрии"

msgid ""
"It is possible to create custom geometry by using the :ref:`ArrayMesh "
"<class_ArrayMesh>` resource directly. Simply create your arrays and use the :"
"ref:`ArrayMesh.add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>` function. A helper class "
"is also available, :ref:`SurfaceTool <class_SurfaceTool>`, which provides a "
"more straightforward API and helpers for indexing, generating normals, "
"tangents, etc."
msgstr ""
"Возможно создание пользовательской геометрии используя ресурс :ref:"
"`ArrayMesh <class_ArrayMesh>` напрямую. Просто создавайте ваши массивы и "
"используйте функцию :ref:`ArrayMesh.add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>`. Существует "
"вспомогательный класс :ref:`SurfaceTool <class_SurfaceTool>`, который "
"предоставляет более простой API и вспомогательные функции для индексации, "
"генерации нормалей, тангенсов, итд."

msgid ""
"In any case, this method is meant for generating static geometry (models "
"that will not be updated often), as creating vertex arrays and submitting "
"them to the 3D API has a significant performance cost."
msgstr ""
"В любом случае, этот метод предназначен для генерации статичной геометрии "
"(модели которая не будет обновляться часто), так как создание массивов "
"вершин и передача их в 3D API несет существенные затраты в "
"производительности."

msgid "Immediate geometry"
msgstr "Непосредственная геометрия"

msgid ""
"If, instead, you need to generate simple geometry that will be updated "
"often, Godot provides a special :ref:`ImmediateMesh <class_ImmediateMesh>` "
"resource that can be used in a :ref:`MeshInstance3D <class_MeshInstance3D>` "
"node. This provides an OpenGL 1.x-style immediate-mode API to create points, "
"lines, triangles, etc."
msgstr ""
"Если существует потребность в создании простой геометрии, которая будет "
"часто обновляться, Godot предоставляет специальный ресурс :ref:"
"`ImmediateMesh<class_ImmediateMesh>`, который можно использовать в узле :ref:"
"`MeshInstance3D <class_MeshInstance3D>`. Это предоставляет API для создания "
"точек, линий, треугольников и т. д. в стиле непосредственного режима OpenGL "
"1.x."

msgid "2D in 3D"
msgstr "2D в 3D"

msgid ""
"While Godot packs a powerful 2D engine, many types of games use 2D in a 3D "
"environment. By using a fixed camera (either orthogonal or perspective) that "
"does not rotate, nodes such as :ref:`Sprite3D <class_Sprite3D>` and :ref:"
"`AnimatedSprite3D <class_AnimatedSprite3D>` can be used to create 2D games "
"that take advantage of mixing with 3D backgrounds, more realistic parallax, "
"lighting/shadow effects, etc."
msgstr ""
"Хотя Godot обладает мощным 2D-движком, во многих играх 2D используется в 3D-"
"среде. Используя фиксированную камеру (ортогональную или перспективную), "
"которая не вращается, такие узлы как :ref:`Sprite3D <class_Sprite3D>` и :ref:"
"`AnimatedSprite3D <class_AnimatedSprite3D>`, могут использоваться для "
"создания 2D-игр, в которых плоские фигуры сочетаются с 3D-фоном, более "
"реалистичным параллаксом, эффектами освещения / тенями и т. д."

msgid ""
"The disadvantage is, of course, that added complexity and reduced "
"performance in comparison to plain 2D, as well as the lack of reference of "
"working in pixels."
msgstr ""
"Недостатком, конечно же, является увеличение сложности и снижение "
"производительности по сравнению с обычным 2D, а также отсутствие привязки к "
"работе в пикселях."

msgid "Environment"
msgstr "Окружение"

msgid ""
"Besides editing a scene, it is often common to edit the environment. Godot "
"provides a :ref:`WorldEnvironment <class_WorldEnvironment>` node that allows "
"changing the background color, mode (as in, put a skybox), and applying "
"several types of built-in post-processing effects. Environments can also be "
"overridden in the Camera."
msgstr ""
"Помимо редактирования сцены, частенько требуется редактировать окружение. "
"Godot предоставляет узел :ref:`WorldEnvironment <class_WorldEnvironment>`, "
"который позволяет изменять цвет фона, режим (например, можно установить "
"скайбокс) и применять несколько типов встроенных эффектов постобработки. "
"Окружения также можно переопределить в камере."

msgid "3D viewport"
msgstr "Окно просмотра 3D"

msgid ""
"Editing 3D scenes is done in the 3D tab. This tab can be selected manually, "
"but it will be automatically enabled when a Node3D node is selected."
msgstr ""
"Редактирование 3D-сцен выполняется во вкладке 3D. Эта вкладка может быть "
"выбрана вручную, либо, она будет автоматически включаться при выборе узла "
"Node3D."

msgid ""
"Default 3D scene navigation controls are similar to Blender (aiming to have "
"some sort of consistency in the free software pipeline..), but options are "
"included to customize mouse buttons and behavior to be similar to other "
"tools in the Editor Settings:"
msgstr ""
"Элементы управления навигацией по трехмерной сцене по умолчанию аналогичны "
"Blender (стремясь обеспечить некоторую согласованность в конвейере "
"бесплатного программного обеспечения...), но включены параметры для "
"настройки кнопок и поведения мыши, чтобы они были похожи на другие "
"инструменты в настройках редактора:"

msgid "Coordinate system"
msgstr "Система координат"

msgid ""
"Godot uses the `metric <https://en.wikipedia.org/wiki/Metric_system>`__ "
"system for everything in 3D, with 1 unit being equal to 1 meter. Physics and "
"other areas are tuned for this scale. Therefore, attempting to use a "
"different scale is usually a bad idea (unless you know what you are doing)."
msgstr ""
"Godot использует `метрическую <https://en.wikipedia.org/wiki/"
"Metric_system>`__ систему для всего. 3D-физика и прочие области настроены на "
"неё, так что попытка использовать другую размерность обычно плохая идея "
"(если вы точно не уверены что делаете)."

msgid ""
"When working with 3D assets, it's always best to work in the correct scale "
"(set the unit to metric in your 3D modeling software). Godot allows scaling "
"post-import and, while this works in most cases, in rare situations it may "
"introduce floating-point precision issues (and thus, glitches or artifacts) "
"in delicate areas such as rendering or physics. Make sure your artists "
"always work in the right scale!"
msgstr ""
"Во время работы с 3D-ассетами всегда лучше использовать правильный масштаб "
"(установите единицу измерения в метрику в программном обеспечении для 3D-"
"моделирования). Godot позволяет масштабировать их после импорта, и, это "
"работает в большинстве случаев, но, изредка, это может привести к проблемам "
"точности с плавающей запятой (и, следовательно, к сбоям или артефактам) в "
"таких деликатных областях, таких как рендеринг, или физика. Убедитесь , что "
"Ваши художники всегда работают в правильном масштабе!"

msgid ""
"The Y coordinate is used for \"up\". As for the horizontal X/Z axes, Godot "
"uses a **right-handed** coordinate system. This means that for most objects "
"that need alignment (such as lights or cameras), the Z axis is used as a "
"\"pointing towards\" direction. This convention roughly means that:"
msgstr ""
"Координата Y используется для направления «вверх». Что касается "
"горизонтальных осей X/Z, Godot использует правую систему координат. Это "
"означает, что для большинства объектов, требующих выравнивания (например, "
"источников света или камер), ось Z используется в качестве направления "
"«указывающего на нас». Это соглашение означает, примерно, что:"

msgid "**X** is sides"
msgstr "**X** это влево/вправо"

msgid "**Y** is up/down"
msgstr "**Y** это вверх/вниз"

msgid "**Z** is front/back"
msgstr "**Z** это вперед/назад"

msgid "See this chart for comparison with other 3D software:"
msgstr ""
"Для сравнения с другим 3D программным обеспечением см. следующую таблицу:"

msgid "3D coordinate systems comparison chart"
msgstr ""

msgid "Image by `Freya Holmér <https://twitter.com/FreyaHolmer>`__"
msgstr ""

msgid "Space and manipulation gizmos"
msgstr "Пространство и гизмо манипуляции"

msgid ""
"Moving objects in the 3D view is done through the manipulator gizmos. Each "
"axis is represented by a color: Red, Green, Blue represent X, Y, Z "
"respectively. This convention applies to the grid and other gizmos too (and "
"also to the shader language, ordering of components for Vector3, Color, "
"etc.)."
msgstr ""
"Перемещение объектов в 3D-виде осуществляется с помощью манипуляторов гизмо. "
"Каждая ось представлена цветом: красный, зеленый, синий представляют X, Y, Z "
"соответственно. Это соглашение применяется также к сетке и другим гизмо (а "
"также к языку шейдеров, порядку компонентов для Vector3, Color и т.д.)."

msgid "Some useful keybindings:"
msgstr "Некоторые полезные сочетания клавиш:"

msgid ""
"To snap placement or rotation, press :kbd:`Ctrl` while moving, scaling or "
"rotating."
msgstr ""
"Чтобы привязать расположение или поворот, нажмите :kbd:`Ctrl` при "
"перемещении, масштабировании или повороте."

msgid "To center the view on the selected object, press :kbd:`F`."
msgstr "Чтобы центрировать вид на выбранном объекте, нажмите :kbd:`F`."

msgid "Using Blender-style transform shortcuts"
msgstr "Использование горячих клавиш трансформации в стиле Blender"

msgid ""
"Since Godot 4.2, you can enable Blender-style shortcuts for translating, "
"rotating and scaling nodes. In Blender, these shortcuts are:"
msgstr ""
"Начиная с версии Godot 4.2 можно включить горячие клавиши для перемещения, "
"поворота и масштабирования узлов в стиле Blender. В Blender такими горячими "
"клавишами являются:"

msgid ":kbd:`G` for translating"
msgstr ":kbd:`G` для перемещения"

msgid ":kbd:`R` for rotating"
msgstr ":kbd:`R` для вращения"

msgid ":kbd:`S` for scaling"
msgstr ":kbd:`S` для масштабирования"

msgid ""
"After pressing a shortcut key while focusing on the 3D editor viewport, move "
"the mouse or enter a number to move the selected node(s) by the specified "
"amount in 3D units. You can constrain movement to a specific axis by "
"specifying the axis as a letter, then the distance (if entering a value with "
"the keyboard)."
msgstr ""
"После нажатия горячей клавиши при наведении фокуса на видовой экран 3D-"
"редактора переместите мышь или введите число для перемещения выбранного узла "
"(узлов) на заданную величину в 3D-единицах. Можно ограничить перемещение для "
"определенной оси, указав ось в виде буквы, а так же расстояние (если ввести "
"значение с клавиатуры)."

msgid ""
"For instance, to move the selection upwards by 2.5 units, enter the "
"following sequence in order (Y+ is upwards in Godot):"
msgstr ""
"Например, чтобы переместить выделение вверх на 2,5 единицы, введите "
"следующую последовательность (Y + - вверх в Godot):"

msgid ":kbd:`G`-:kbd:`Y`-:kbd:`2`-:kbd:`.`-:kbd:`5`-:kbd:`Enter`"
msgstr ""

msgid ""
"To use Blender-style transform shortcuts in Godot, go to the Editor "
"Settings' **Shortcuts** tab, then in the Spatial Editor section:"
msgstr ""
"Чтобы в Godot использовать горячие клавиши преобразования в стиле Blender, "
"перейдите на вкладку «Сочетания клавиш» параметров редактора, а затем в "
"разделе «Spatial Editor»:"

msgid "Bind **Begin Translate Transformation** to :kbd:`G`."
msgstr "Назначьте **Начать трансформацию перемещения** на :kbd:`G`."

msgid "Bind **Begin Rotate Transformation** to :kbd:`R`."
msgstr "Назначьте **Начать трансформацию поворота** на :kbd:`R`."

msgid "Bind **Begin Scale Transformation** to :kbd:`S`."
msgstr "Назначьте **Начать трансформацию размера** на :kbd:`S`."

msgid ""
"Finally, unbind **Scale Mode** so that its shortcut won't conflict with "
"**Begin Rotate Transformation**."
msgstr ""
"Наконец, отмените горячую клавишу для «Режим масштабирования», чтобы она не "
"конфликтовала с «Начать трансформацию поворота»."

msgid "View menu"
msgstr "Меню \"Обзор\""

msgid ""
"The view options are controlled by the \"View\" menu in the viewport's "
"toolbar."
msgstr ""
"Параметры просмотра контролируются меню \"Обзор\" на панели инструментов "
"области просмотра."

msgid "You can hide the gizmos in the 3D view of the editor through this menu:"
msgstr "Вы можете скрыть гизмо в 3D-виде редактора через это меню:"

msgid ""
"To hide a specific type of gizmos, you can toggle them off in the \"View\" "
"menu."
msgstr "Чтобы скрыть определенные типы гизмо, отключите их в меню \"Обзор\"."

msgid "Default environment"
msgstr "Окружение по умолчанию"

msgid ""
"When created from the Project Manager, the 3D environment has a default sky."
msgstr ""
"При создании из Менеджера проектов в 3D окружении по умолчанию установлено "
"небо."

msgid ""
"Given how physically-based rendering works, it is advised to always try to "
"work with a default environment in order to provide indirect and reflected "
"light to your objects."
msgstr ""
"Учитывая, как работает основанный на физике рендеринг, рекомендуется всегда "
"стараться работать с окружением по умолчанию, чтобы обеспечить непрямой и "
"отраженный свет для Ваших объектов."

msgid "Cameras"
msgstr "Камеры"

msgid ""
"No matter how many objects are placed in the 3D space, nothing will be "
"displayed unless a :ref:`Camera3D <class_Camera3D>` is also added to the "
"scene. Cameras can work in either orthogonal or perspective projections:"
msgstr ""
"Независимо от того, сколько объектов размещено в 3D пространстве, ничего не "
"будет отображаться, если :ref:`Camera3D <class_Camera3D>` также не будет "
"добавлена в сцену. Камеры могут работать как в ортогональных, так и в "
"перспективных проекциях:"

msgid ""
"Cameras are associated with (and only display to) a parent or grandparent "
"viewport. Since the root of the scene tree is a viewport, cameras will "
"display on it by default, but if sub-viewports (either as render target or "
"picture-in-picture) are desired, they need their own children cameras to "
"display."
msgstr ""
"Камеры связаны с родительским окном просмотра и отображают только его. "
"Поскольку корнем дерева сцены является область просмотра, камеры будут "
"отображаться на ней по умолчанию, но если требуются дополнительные области "
"просмотра (либо в качестве цели рендеринга, либо в качестве изображения в "
"картинке), для отображения им нужны их собственные дочерние камеры."

msgid ""
"When dealing with multiple cameras, the following rules are enforced for "
"each viewport:"
msgstr ""
"При работе с несколькими камерами для каждого окна просмотра применяются "
"следующие правила:"

msgid ""
"If no cameras are present in the scene tree, the first one that enters it "
"will become the active camera. Further cameras entering the scene will be "
"ignored (unless they are set as *current*)."
msgstr ""
"Если в дереве сцены нет камер, то первая, которая войдет в него, станет "
"активной камерой. Дальнейшие камеры, входящие в сцену, будут игнорироваться "
"(если они не установлены как *текущие*)."

msgid ""
"If a camera has the \"*current*\" property set, it will be used regardless "
"of any other camera in the scene. If the property is set, it will become "
"active, replacing the previous camera."
msgstr ""
"Если для камеры установлено свойство \"*текущая*\", она будет использоваться "
"независимо от любой другой камеры в сцене. Если свойство установлено, камера "
"станет активной, заменив предыдущую камеру."

msgid ""
"If an active camera leaves the scene tree, the first camera in tree-order "
"will take its place."
msgstr ""
"Если активная камера покидает дерево сцены, её место займет первая камера в "
"древовидной структуре."

msgid "Lights"
msgstr "Свет"

msgid ""
"The background environment emits some ambient light which appears on "
"surfaces. Still, without any light sources placed in the scene, the scene "
"will appear quite dark unless the background environment is very bright."
msgstr ""

msgid ""
"Most outdoor scenes have a directional light (the sun or moon), while indoor "
"scenes typically have several positional lights (lamps, torches, …). See :"
"ref:`doc_lights_and_shadows` for more information on setting up lights in "
"Godot."
msgstr ""

msgid "Translation status"
msgstr "Статус перевода"
