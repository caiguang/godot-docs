# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "GDScript exported properties"
msgstr "Exports no GDScript"

#, fuzzy
msgid ""
"In Godot, class members can be exported. This means their value gets saved "
"along with the resource (such as the :ref:`scene <class_PackedScene>`) "
"they're attached to. They will also be available for editing in the property "
"editor. Exporting is done by using the ``@export`` annotation."
msgstr ""
"No Godot, membros de classe podem ser exportados. Isso significa que seus "
"valores são salvos junto com o recurso (por exemplo, a :ref:`cena "
"<class_PackedScene>`) a que estão anexados. Eles também ficarão disponíveis "
"para edição no editor de propriedades. A exportação é feita pela palavra-"
"chave ``export``::"

msgid ""
"In that example the value ``5`` will be saved and visible in the property "
"editor."
msgstr ""

#, fuzzy
msgid ""
"An exported variable must be initialized to a constant expression or have a "
"type specifier in the variable. Some of the export annotations have a "
"specific type and don't need the variable to be typed (see the *Examples* "
"section below)."
msgstr ""
"Uma variável exportada deve inicializada por uma expressão constante ou ter "
"uma inferência de exportação na forma de um argumento da palavra-chave "
"``export`` (veja abaixo a seção *Exemplos*)."

msgid ""
"One of the fundamental benefits of exporting member variables is to have "
"them visible and editable in the editor. This way, artists and game "
"designers can modify values that later influence how the program runs. For "
"this, a special export syntax is provided."
msgstr ""
"Um dos benefícios fundamentais de exportar variáveis membros é tê-las "
"visíveis e editáveis no editor. Dessa forma, artistas e projetistas de jogos "
"podem modificar valores que influenciam como o programa funciona. Para isso, "
"há uma sintaxe especial para exportação."

#, fuzzy
msgid ""
"Exporting properties can also be done in other languages such as C#. The "
"syntax varies depending on the language. See :ref:`doc_c_sharp_exports` for "
"information on C# exports."
msgstr ""
"Exportar propriedades também é possível em outras linguagens como C#. A "
"sintaxe varia dependendo da linguagem."

#, fuzzy
msgid "Basic use"
msgstr "Uso básico"

msgid ""
"If the exported value assigns a constant or constant expression, the type "
"will be inferred and used in the editor."
msgstr ""

msgid "If there's no default value, you can add a type to the variable."
msgstr ""

#, fuzzy
msgid "Resources and nodes can be exported."
msgstr "ShaderMaterials não podem ser exportados."

#, fuzzy
msgid "Grouping Exports"
msgstr "Agrupando propriedades"

msgid ""
"It is possible to group your exported properties inside the Inspector with "
"the :ref:`@export_group <class_@GDScript_annotation_@export_group>` "
"annotation. Every exported property after this annotation will be added to "
"the group. Start a new group or use ``@export_group(\"\")`` to break out."
msgstr ""

msgid ""
"The second argument of the annotation can be used to only group properties "
"with the specified prefix."
msgstr ""

msgid ""
"Groups cannot be nested, use :ref:`@export_subgroup "
"<class_@GDScript_annotation_@export_subgroup>` to create subgroups within a "
"group."
msgstr ""

msgid ""
"You can also change the name of your main category, or create additional "
"categories in the property list with the :ref:`@export_category "
"<class_@GDScript_annotation_@export_category>` annotation."
msgstr ""

msgid ""
"The list of properties is organized based on the class inheritance and new "
"categories break that expectation. Use them carefully, especially when "
"creating projects for public use."
msgstr ""

#, fuzzy
msgid "Strings as paths"
msgstr "Tamanho de string"

#, fuzzy
msgid "String as a path to a file."
msgstr "Compartilhando um perfil"

msgid "String as a path to a directory."
msgstr ""

msgid "String as a path to a file, custom filter provided as hint."
msgstr ""

msgid ""
"Using paths in the global filesystem is also possible, but only in scripts "
"in tool mode."
msgstr ""

msgid "String as a path to a PNG file in the global filesystem."
msgstr ""

msgid "String as a path to a directory in the global filesystem."
msgstr ""

msgid ""
"The multiline annotation tells the editor to show a large input field for "
"editing over multiple lines."
msgstr ""

#, fuzzy
msgid "Limiting editor input ranges"
msgstr "Traduzindo páginas existentes"

msgid "Allow integer values from 0 to 20."
msgstr ""

msgid "Allow integer values from -10 to 20."
msgstr ""

msgid "Allow floats from -10 to 20 and snap the value to multiples of 0.2."
msgstr ""

msgid ""
"The limits can be only for the slider if you add the hints \"or_greater\" "
"and/or \"or_less\"."
msgstr ""

msgid "Floats with easing hint"
msgstr ""

msgid "Display a visual representation of the 'ease()' function when editing."
msgstr ""

#, fuzzy
msgid "Colors"
msgstr "Cor"

msgid "Regular color given as red-green-blue-alpha value."
msgstr ""

msgid "Color given as red-green-blue value (alpha will always be 1)."
msgstr ""

msgid "Nodes"
msgstr "Nós"

msgid ""
"Since Godot 4.0, nodes can be directly exported as properties in a script "
"without having to use NodePaths:"
msgstr ""

msgid ""
"Exporting NodePaths like in Godot 3.x is still possible, in case you need it:"
msgstr ""

msgid ""
"If you want to limit the types of nodes for NodePaths, you can use the :ref:"
"`@export_node_path<class_@GDScript_annotation_@export_node_path>` annotation:"
msgstr ""

msgid "Resources"
msgstr "Recursos"

msgid ""
"In the Inspector, you can then drag and drop a resource file from the "
"FileSystem dock into the variable slot."
msgstr ""

msgid ""
"Opening the inspector dropdown may result in an extremely long list of "
"possible classes to create, however. Therefore, if you specify an extension "
"of Resource such as:"
msgstr ""

msgid ""
"The drop-down menu will be limited to AnimationNode and all its inherited "
"classes."
msgstr ""

msgid ""
"It must be noted that even if the script is not being run while in the "
"editor, the exported properties are still editable. This can be used in "
"conjunction with a :ref:`script in \"tool\" mode <doc_gdscript_tool_mode>`."
msgstr ""
"Perceba que mesmo se o script não estiver em execução enquanto estiver no "
"editor, as propriedades exportadas ainda são editáveis. Isso pode ser usado "
"em conjunto com um :ref:`script em modo \"tool\" <doc_gdscript_tool_mode>`."

msgid "Exporting bit flags"
msgstr "Exportando sinalizadores de bits"

#, fuzzy
msgid ""
"Integers used as bit flags can store multiple ``true``/``false`` (boolean) "
"values in one property. By using the ``@export_flags`` annotation, they can "
"be set from the editor::"
msgstr ""
"Inteiros usados como sinalizadores podem armazenar múltiplos valores "
"``true``/``false`` (booleanos) em uma propriedade. Usando a inferência de "
"exportação ``int, FLAGS, ...``, eles podem ser configurados a partir do "
"editor::"

msgid ""
"You must provide a string description for each flag. In this example, "
"``Fire`` has value 1, ``Water`` has value 2, ``Earth`` has value 4 and "
"``Wind`` corresponds to value 8. Usually, constants should be defined "
"accordingly (e.g. ``const ELEMENT_WIND = 8`` and so on)."
msgstr ""
"Você deve fornecer uma descrição em string para cada sinalizador. Neste "
"exemplo, ``Fire`` tem valor 1, ``Water`` tem valor 2, ``Earth`` tem valor 4 "
"e ``Wind`` corresponde ao valor 8. Normalmente, constantes deveriam ser "
"definidas em conformidade (por exemplo, ``const ELEMENT_WIND = 8`` e assim "
"por diante)."

msgid "You can add explicit values using a colon::"
msgstr ""

msgid ""
"Only power of 2 values are valid as bit flags options. The lowest allowed "
"value is 1, as 0 means that nothing is selected. You can also add options "
"that are a combination of other flags::"
msgstr ""

#, fuzzy
msgid ""
"Export annotations are also provided for the physics, render, and navigation "
"layers defined in the project settings::"
msgstr ""
"Inferências de exportação também são fornecidas para as camadas de física e "
"de renderização definidas nas configurações do projeto::"

msgid ""
"Using bit flags requires some understanding of bitwise operations. If in "
"doubt, use boolean variables instead."
msgstr ""
"O uso de sinalizadores de bit exige certo conhecimento de operações bit a "
"bit. Na dúvida, exporte variáveis booleanas."

#, fuzzy
msgid "Exporting enums"
msgstr "Menu de exportação"

msgid ""
"Properties can be exported with a type hint referencing an enum to limit "
"their values to the values of the enumeration. The editor will create a "
"widget in the Inspector, enumerating the following as \"Thing 1\", \"Thing "
"2\", \"Another Thing\". The value will be stored as an integer."
msgstr ""

msgid ""
"Integer and string properties can also be limited to a specific list of "
"values using the :ref:`@export_enum "
"<class_@GDScript_annotation_@export_enum>` annotation. The editor will "
"create a widget in the Inspector, enumerating the following as Warrior, "
"Magician, Thief. The value will be stored as an integer, corresponding to "
"the index of the selected option (i.e. ``0``, ``1``,  or ``2``)."
msgstr ""

#, fuzzy
msgid "If the type is String, the value will be stored as a string."
msgstr ""
"Se for uma ``string``, o arquivo será carregado a partir desse caminho."

msgid "If you want to set an initial value, you must specify it explicitly::"
msgstr ""

msgid "Exporting arrays"
msgstr "Exportando arrays"

msgid ""
"Exported arrays can have initializers, but they must be constant expressions."
msgstr ""
"Arrays exportados podem ter inicializadores, mas devem ser expressões "
"constantes."

msgid ""
"If the exported array specifies a type which inherits from Resource, the "
"array values can be set in the inspector by dragging and dropping multiple "
"files from the FileSystem dock at once."
msgstr ""
"Se o array exportado especificar um tipo que herda de Resource, os valores "
"do array podem ser definidos no inspetor arrastando e soltando vários "
"arquivos da dock Arquivos de uma vez."

msgid "The default value **must** be a constant expression."
msgstr ""

msgid "Exported arrays can specify type (using the same hints as before)."
msgstr ""

msgid ""
"You can omit the default value, but it would then be ``null`` if not "
"assigned."
msgstr ""

#, fuzzy
msgid ""
"Arrays with specified types which inherit from resource can be set by drag-"
"and-dropping multiple files from the FileSystem dock."
msgstr ""
"Se o array exportado especificar um tipo que herda de Resource, os valores "
"do array podem ser definidos no inspetor arrastando e soltando vários "
"arquivos da dock Arquivos de uma vez."

msgid "Packed type arrays also work, but only initialized empty:"
msgstr ""

msgid "Setting exported variables from a tool script"
msgstr "Definindo variáveis exportadas a partir de um script de ferramenta"

#, fuzzy
msgid ""
"When changing an exported variable's value from a script in :ref:"
"`doc_gdscript_tool_mode`, the value in the inspector won't be updated "
"automatically. To update it, call :ref:`notify_property_list_changed() "
"<class_Object_method_notify_property_list_changed>` after setting the "
"exported variable's value."
msgstr ""
"Ao alterar o valor de uma variável exportada de um script em :ref:"
"`doc_gdscript_tool_mode`, o valor no inspetor não será atualizado "
"automaticamente. Para atualizá-lo chame :ref:`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>` após definir o valor da "
"variável exportada."

msgid "Advanced exports"
msgstr "Exports avançados"

msgid ""
"Not every type of export can be provided on the level of the language itself "
"to avoid unnecessary design complexity. The following describes some more or "
"less common exporting features which can be implemented with a low-level API."
msgstr ""
"Nem todo tipo de export pode ser fornecido no nível da própria linguagem "
"para evitar complexidade de design desnecessária. O seguinte descreve mais "
"ou menos alguns recursos de exportação comuns que podem ser implementados "
"com uma API de baixo nível."

#, fuzzy
msgid ""
"Before reading further, you should get familiar with the way properties are "
"handled and how they can be customized with :ref:`_set() "
"<class_Object_private_method__set>`, :ref:`_get() "
"<class_Object_private_method__get>`, and :ref:`_get_property_list() "
"<class_Object_private_method__get_property_list>` methods as described in :"
"ref:`doc_accessing_data_or_logic_from_object`."
msgstr ""
"Antes de continuar lendo, você deve se familiarizar com a forma como "
"propriedades são tratadas e como elas podem ser personalizadas com os "
"métodos :ref:`_set() <class_Object_method__get_property_list>`, :ref:`_get() "
"<class_Object_method__get_property_list>`, e :ref:`_get_property_list() "
"<class_Object_method__get_property_list>` como descrito em :ref:"
"`doc_accessing_data_or_logic_from_object`."

msgid ""
"For binding properties using the above methods in C++, see :ref:"
"`doc_binding_properties_using_set_get_property_list`."
msgstr ""
"Para propriedades de ligação usando os métodos acima em C++, veja :ref:"
"`doc_binding_properties_using_set_get_property_list`."

msgid ""
"The script must operate in the ``tool`` mode so the above methods can work "
"from within the editor."
msgstr ""
"O script deve operar no modo de ``ferramenta`` para que os métodos acima "
"possam funcionar dentro do editor."

msgid "Translation status"
msgstr "Progresso da Tradução"
