# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# basics"
msgstr "Noções básicas de C#"

msgid "Introduction"
msgstr "Introdução"

#, fuzzy
msgid ""
"This page provides a brief introduction to C#, both what it is and how to "
"use it in Godot. Afterwards, you may want to look at :ref:`how to use "
"specific features <doc_c_sharp_features>`, read about the :ref:`differences "
"between the C# and the GDScript API <doc_c_sharp_differences>`, and "
"(re)visit the :ref:`Scripting section <doc_scripting>` of the step-by-step "
"tutorial."
msgstr ""
"Esta página fornece uma breve introdução ao C#, tanto o que ele é como como "
"usá-lo no Godot. Depois, você pode querer olhar para :ref:`como utilizar "
"características específicas <doc_c_sharp_features>`, leia sobre a :ref:"
"`diferenças entre o C# e o GDScript API <doc_c_c_sharp_differences>` e "
"(re)visite a :ref:`seção deScript <doc_scripting>` do tutorial passo-a-passo."

msgid ""
"C# is a high-level programming language developed by Microsoft. In Godot, it "
"is implemented with .NET 6.0."
msgstr ""

msgid ""
"Projects written in C# using Godot 4 currently cannot be exported to the web "
"platform. To use C# on the web platform, consider Godot 3 instead. Android "
"and iOS platform support is available as of Godot 4.2, but is experimental "
"and :ref:`some limitations apply <doc_c_sharp_platforms>`."
msgstr ""

msgid ""
"This is **not** a full-scale tutorial on the C# language as a whole. If you "
"aren't already familiar with its syntax or features, see the `Microsoft C# "
"guide <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ or look for a "
"suitable introduction elsewhere."
msgstr ""
"Esse **não** é um tutorial completo e abrangente sobre a linguagem C#. Se "
"você ainda não estiver familiarizado com sua sintaxe ou recursos, consulte o "
"`guia C# da Microsoft <https://docs.microsoft.com/en-us/dotnet/csharp/"
"index>`_ ou procure uma introdução adequada em outro lugar."

msgid "Prerequisites"
msgstr "Pré-requisitos"

#, fuzzy
msgid ""
"Godot bundles the parts of .NET needed to run already compiled games. "
"However, Godot does not bundle the tools required to build and compile "
"games, such as MSBuild and the C# compiler. These are included in the .NET "
"SDK, and need to be installed separately."
msgstr ""
"Godot agrupa as partes do Mono necessárias para executar jogos já "
"compilados. Entretanto, o Godot não reúne as ferramentas necessárias para "
"construir e compilar jogos, como o MSBuild e o compilador C#. Estas estão "
"incluídas no SDK .NET, que precisa ser instalado separadamente."

#, fuzzy
msgid ""
"In summary, you must have installed the .NET SDK **and** the .NET-enabled "
"version of Godot."
msgstr ""
"Em resumo, você deve ter instalado o .NET SDK **e** a versão do Godot com "
"Mono habilitada."

#, fuzzy
msgid ""
"Download and install the latest stable version of the SDK from the `.NET "
"download page <https://dotnet.microsoft.com/download>`__."
msgstr ""
"Instalar a última versão estável do `.NET SDK <https://dotnet.microsoft.com/"
"download>`__, anteriormente conhecido como o .NET Core SDK."

msgid ""
"Be sure to install the 64-bit version of the SDK(s) if you are using the 64-"
"bit version of Godot."
msgstr ""
"Certifique-se de instalar a versão de 64 bits do(s) SDK(s) se estiver usando "
"a versão de 64 bits do Godot."

#, fuzzy
msgid ""
"If you are building Godot from source, make sure to follow the steps to "
"enable .NET support in your build as outlined in the :ref:"
"`doc_compiling_with_dotnet` page."
msgstr ""
"Se você estiver compilando o Godot a partir do código-fonte, instale a "
"versão estável mais recente do `Mono <https://www.mono-project.com/download/"
"stable/>`__, e certifique-se de seguir os passos para habilitar o suporte ao "
"Mono conforme descrito na página :ref:`doc_compiling_with_mono`."

msgid "Configuring an external editor"
msgstr "Configurando um editor externo"

#, fuzzy
msgid ""
"C# support in Godot's built-in script editor is minimal. Consider using an "
"external IDE or editor, such as  `Visual Studio Code <https://code."
"visualstudio.com/>`__ or MonoDevelop. These provide autocompletion, "
"debugging, and other useful features for C#. To select an external editor in "
"Godot, click on **Editor → Editor Settings** and scroll down to **Dotnet**. "
"Under **Dotnet**, click on **Editor**, and select your external editor of "
"choice. Godot currently supports the following external editors:"
msgstr ""
"O suporte a C# no editor de scripts embutido do Godot é minimo. Considere "
"usar uma IDE ou editor externos, como por exemplo `Visual Studio Code "
"<https://code.visualstudio.com/>`_ ou MonoDevelop. Estes editores possuem "
"preenchimento automático, ferramentas de depuração e outras funcionalidades "
"úteis para o desenvolvimento em C#. Para selecionar um editor externo no "
"Godot, clique em **Editor -> Configurações do Editor** e role a página até o "
"**Mono**. Em **Mono**, clique em **Editor** então selecione o editor de sua "
"preferência. Godot atualmente dá suporte aos seguintes editores externos:"

#, fuzzy
msgid "Visual Studio 2022"
msgstr "Visual Studio 2019"

msgid "Visual Studio Code"
msgstr "Visual Studio Code"

msgid "MonoDevelop"
msgstr "MonoDevelop"

msgid "Visual Studio for Mac"
msgstr "Visual Studio para Mac"

msgid "JetBrains Rider"
msgstr "JetBrains Rider"

msgid "See the following sections for how to configure an external editor:"
msgstr "Veja as seções a seguir sobre como configurar um editor externo:"

msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`JetBrains Rider <https://www.jetbrains.com/rider/download>`__."
msgstr ""
"Após ler a seção \"Pré-requisitos\", você pode baixar e instalar o "
"`JetBrains Rider <https://www.jetbrains.com/rider/download>`__."

msgid "In Godot's **Editor → Editor Settings** menu:"
msgstr "No menu **Editor → Configurações do Editor** do Godot:"

#, fuzzy
msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **JetBrains Rider**."
msgstr ""
"Defina **Mono** -> **Editor** -> **External Editor** como **JetBrains "
"Rider**."

msgid "In Rider:"
msgstr "No Rider:"

msgid "Set **MSBuild version** to **.NET Core**."
msgstr "Defina a **versão do MSBuild** para **.NET Core**."

msgid "Install the **Godot support** plugin."
msgstr "Instale o plugin de **suporte do Godot**."

msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`Visual Studio Code <https://code.visualstudio.com/download>`__ (aka VS "
"Code)."
msgstr ""
"Após ler a seção \"Pré-requisitos\", você pode baixar e instalar o `Visual "
"Studio Code <https://code.visualstudio.com/download>`__ (também conhecido "
"como VS Code)."

#, fuzzy
msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **Visual Studio "
"Code**."
msgstr ""
"Defina **Mono** -> **Editor** -> **External Editor** para **Visual Studio "
"Code**."

msgid "In Visual Studio Code:"
msgstr "No Visual Studio Code:"

msgid ""
"Install the `C# <https://marketplace.visualstudio.com/items?itemName=ms-"
"dotnettools.csharp>`__ extension."
msgstr ""
"Instale a extensão `C# <https://marketplace.visualstudio.com/items?"
"itemName=ms-dotnettools.csharp>`__."

msgid ""
"If you are using Linux you need to install the `Mono SDK <https://www.mono-"
"project.com/download/stable/#download-lin>`__ for the C# tools plugin to "
"work."
msgstr ""
"Se você está usando Linux, você precisa instalar o `Mono SDK <https://www."
"mono-project.com/download/stable/#download-lin>` para que o plugin de "
"ferramentas C# funcione."

msgid ""
"To configure a project for debugging, you need a ``tasks.json`` and ``launch."
"json`` file in the ``.vscode`` folder with the necessary configuration. An "
"example configuration can be found `here <https://github.com/godotengine/"
"godot-csharp-vscode/issues/43#issuecomment-1258321229>`__ . In the ``launch."
"json`` file, make sure the ``program`` parameter in the relevant "
"configuration points to your Godot executable, either by changing it to the "
"path of the executable or by defining a ``GODOT4`` environment variable that "
"points to the executable. Now, when you start the debugger in Visual Studio "
"Code, your Godot project will run."
msgstr ""

msgid "Visual Studio (Windows only)"
msgstr "Visual Studio (somente Windows)"

msgid ""
"Download and install the latest version of `Visual Studio <https://"
"visualstudio.microsoft.com/downloads/>`__. Visual Studio will include the "
"required SDKs if you have the correct workloads selected, so you don't need "
"to manually install the things listed in the \"Prerequisites\" section."
msgstr ""
"Baixe e instale a última versão do `Visual Studio <https://visualstudio."
"microsoft.com/downloads/>`__. O Visual Studio incluirá os SDKs necessários "
"se você tiver as cargas de trabalho corretas selecionadas, para que você não "
"precise instalar manualmente as coisas listadas na seção \"Pré-requisitos\"."

#, fuzzy
msgid "While installing Visual Studio, select this workload:"
msgstr "Ao instalar o Visual Studio, selecione estas cargas de trabalho:"

#, fuzzy
msgid ".NET desktop development"
msgstr "Desenvolvimento do editor"

#, fuzzy
msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **Visual Studio**."
msgstr ""
"Defina **Mono** -> **Editor** -> **External Editor** para **Visual Studio**."

msgid ""
"If you see an error like \"Unable to find package Godot.NET.Sdk\", your "
"NuGet configuration may be incorrect and need to be fixed."
msgstr ""

msgid ""
"A simple way to fix the NuGet configuration file is to regenerate it. In a "
"file explorer window, go to ``%AppData%\\NuGet``. Rename or delete the "
"``NuGet.Config`` file. When you build your Godot project again, the file "
"will be automatically created with default values."
msgstr ""

msgid "Creating a C# script"
msgstr "Criando um script C#"

msgid ""
"After you successfully set up C# for Godot, you should see the following "
"option when selecting **Attach Script** in the context menu of a node in "
"your scene:"
msgstr ""
"Depois de configurar com sucesso o C# para Godot, você deverá ver a seguinte "
"opção ao selecionar **Attach Script** no menu de contexto de um nó em sua "
"cena:"

#, fuzzy
msgid ""
"Note that while some specifics change, most concepts work the same when "
"using C# for scripting. If you're new to Godot, you may want to follow the "
"tutorials on :ref:`doc_scripting` at this point. While some documentation "
"pages still lack C# examples, most notions can be transferred from GDScript."
msgstr ""
"Observe que, embora alguns detalhes sejam alterados, a maioria dos conceitos "
"funcionam da mesma maneira quando se usa o C# para criação de scripts. Se "
"você é novo no Godot, você pode querer examinar os tutoriais em :ref:"
"`doc_scripting` neste ponto. Enquanto alguns lugares na documentação ainda "
"não tenham exemplos de C#, a maioria dos conceitos podem ser facilmente "
"transferidos do GDScript."

msgid "Project setup and workflow"
msgstr "Configuração de projeto e fluxo de trabalho"

#, fuzzy
msgid ""
"When you create the first C# script, Godot initializes the C# project files "
"for your Godot project. This includes generating a C# solution (``.sln``) "
"and a project file (``.csproj``), as well as some utility files and folders "
"(``.godot/mono``). All of these but ``.godot/mono`` are important and should "
"be committed to your version control system. Everything under ``.godot`` can "
"be safely added to the ignore list of your VCS. When troubleshooting, it can "
"sometimes help to delete the ``.godot/mono`` folder and let it regenerate."
msgstr ""
"Quando você cria o primeiro script C#, o Godot inicializa os arquivos de "
"projeto C# para seu projeto Godot. Isto inclui gerar uma solução C# (``."
"sln``) e um arquivo de projeto (``.csproj``) assim como alguns arquivos e "
"pastas de utilitários (``.mono``, as vezes ``Properties/AssemblyInfo.cs``). "
"Todos estes, exceto ``.mono``, são importantes e devem ser mantidos em seu "
"sistema de controle de versão. O ``.mono`` pode ser adicionado com segurança "
"à lista de ignorados do seu VCS. Para solucionar problemas, às vezes pode "
"ajudar excluir a pasta ``.mono`` e deixá-la regenerar."

msgid "Example"
msgstr "Exemplo"

msgid ""
"Here's a blank C# script with some comments to demonstrate how it works."
msgstr ""
"Aqui está um script C# em branco com alguns comentários para demonstrar como "
"funciona."

#, fuzzy
msgid ""
"As you can see, functions normally in global scope in GDScript like Godot's "
"``print`` function are available in the ``GD`` static class which is part of "
"the ``Godot`` namespace. For a full list of methods in the ``GD`` class, see "
"the class reference pages for :ref:`@GDScript <class_@gdscript>` and :ref:"
"`@GlobalScope <class_@globalscope>`."
msgstr ""
"Como você pode ver, funções normalmente em escopo global no GDScript como a "
"função ``print`` do Godot estão disponíveis na classe ``GD`` que é parte do "
"namespace ``Godot``. Para uma lista de métodos na classe ``GD``, veja as "
"páginas de referência de classe para :ref:`@GDScript <class_@gdscript>` e :"
"ref:`@GlobalScope <class_@globalscope>`."

#, fuzzy
msgid ""
"Keep in mind that the class you wish to attach to your node should have the "
"same name as the ``.cs`` file. Otherwise, you will get the following error:"
msgstr ""
"Tenha em mente que a classe que você deseja anexar ao seu nó deve ser "
"nomeada como um arquivo ``.cs``. Caso contrário, você receberá o seguinte "
"erro e não poderá executar a cena: *\"Não é possível encontrar a classe XXX "
"para o script res://XXX.cs\"*"

msgid "*\"Cannot find class XXX for script res://XXX.cs\"*"
msgstr ""

msgid "General differences between C# and GDScript"
msgstr "Diferenças gerais entre o C# e o GDScript"

msgid ""
"The C# API uses ``PascalCase`` instead of ``snake_case`` in GDScript/C++. "
"Where possible, fields and getters/setters have been converted to "
"properties. In general, the C# Godot API strives to be as idiomatic as is "
"reasonably possible."
msgstr ""
"A API do C# usa o ``PascalCase`` em vez do ``snake_case`` no GDScript/C++. "
"Sempre que possível, fields e getters/setters foram convertidos em "
"propriedades. Em geral, a API C# Godot se esforça para ser tão idiomática "
"quanto for razoavelmente possível."

msgid "For more information, see the :ref:`doc_c_sharp_differences` page."
msgstr "Para mais informações, veja a página :ref:`doc_c_sharp_differences`."

#, fuzzy
msgid ""
"You need to (re)build the project assemblies whenever you want to see new "
"exported variables or signals in the editor. This build can be manually "
"triggered by clicking the **Build** button in the top right corner of the "
"editor."
msgstr ""
"Se você estiver usando o C#, precisará (re)construir os assemblies do "
"projeto sempre que desejar ver as novas variáveis exportadas ou os novos "
"sinais. Essa construção pode ser acionada manualmente clicando na palavra "
"\"Mono\" na parte inferior da janela do editor para revelar o Painel Mono e, "
"em seguida, clicando no botão \"Construir Projeto\"."

msgid ""
"You will also need to rebuild the project assemblies to apply changes in "
"\"tool\" scripts."
msgstr ""
"Você também precisará reconstruir os assemblies do projeto para aplicar "
"alterações nos scripts de \"ferramenta\"."

msgid "Current gotchas and known issues"
msgstr "Pegadas gerais e problemas conhecidos"

#, fuzzy
msgid ""
"As C# support is quite new in Godot, there are some growing pains and things "
"that need to be ironed out. Below is a list of the most important issues you "
"should be aware of when diving into C# in Godot, but if in doubt, also take "
"a look over the official `issue tracker for .NET issues <https://github.com/"
"godotengine/godot/labels/topic%3Adotnet>`_."
msgstr ""
"Como o suporte ao C# é bastante novo no Godot, existem alguns sacrifícios e "
"coisas que ainda precisam ser resolvidas. Abaixo segue uma lista das "
"questões mais importantes que você deve estar ciente ao mergulhar em C# no "
"Godot, mas em caso de dúvida, também dê uma olhada no `rastreador de "
"problemas para Mono <https://github.com/godotengine/godot/labels/"
"topic%3Amono>`_ oficial."

msgid ""
"Writing editor plugins is possible, but it is currently quite convoluted."
msgstr ""
"Escrever plugins para o editor é possível, mas atualmente é bastante "
"complicado."

msgid ""
"State is currently not saved and restored when hot-reloading, with the "
"exception of exported variables."
msgstr ""
"Atualmente o estado não é salvo e restaurado durante o \"hot-reloading\", "
"com exceção das variáveis exportadas."

msgid ""
"Attached C# scripts should refer to a class that has a class name that "
"matches the file name."
msgstr ""
"Os scripts C# anexados devem se referir a uma classe que tenha um nome de "
"classe que corresponda ao nome do arquivo."

#, fuzzy
msgid ""
"There are some methods such as ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` and signal connection method ``Connect()`` that rely on "
"Godot's ``snake_case`` API naming conventions. So when using e.g. "
"``CallDeferred(\"AddChild\")``, ``AddChild`` will not work because the API "
"is expecting the original ``snake_case`` version ``add_child``. However, you "
"can use any custom properties or methods without this limitation. Prefer "
"using the exposed ``StringName`` in the ``PropertyName``, ``MethodName`` and "
"``SignalName`` to avoid extra ``StringName`` allocations and worrying about "
"snake_case naming."
msgstr ""
"Existem alguns métodos como ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` e método de conexão de sinal ``Connect()`` que dependem "
"dos padrões de nomeação da API ``snake_case`` de Godot. Então, por exemplo "
"ao usar ``CallDeferred(\"AddChild\")``, ``AddChild`` não vai funcionar "
"porque a API está esperando a chamada no formato ``snake_case`` como "
"``add_child``. No entanto, você pode usar quaisquer propriedades ou métodos "
"personalizados sem essa limitação."

#, fuzzy
msgid ""
"As of Godot 4.0, exporting .NET projects is supported for desktop platforms "
"(Linux, Windows and macOS). Other platforms will gain support in future 4.x "
"releases."
msgstr ""
"A exportação de projetos Mono é suportada apenas para plataformas desktop "
"(Linux, Windows e macOS), Android, HTML5 e iOS. A única plataforma ainda não "
"suportada é UWP."

#, fuzzy
msgid "Common pitfalls"
msgstr "Comentários"

msgid ""
"You might encounter the following error when trying to modify some values in "
"Godot objects, e.g. when trying to change the X coordinate of a ``Node2D``:"
msgstr ""

msgid ""
"This is perfectly normal. Structs (in this example, a ``Vector2``) in C# are "
"copied on assignment, meaning that when you retrieve such an object from a "
"property or an indexer, you get a copy of it, not the object itself. "
"Modifying said copy without reassigning it afterwards won't achieve anything."
msgstr ""

msgid ""
"The workaround is simple: retrieve the entire struct, modify the value you "
"want to modify, and reassign the property."
msgstr ""

msgid ""
"Since C# 10, it is also possible to use `with expressions <https://learn."
"microsoft.com/en-us/dotnet/csharp/language-reference/operators/with-"
"expression>`_ on structs, allowing you to do the same thing in a single line."
msgstr ""

msgid ""
"You can read more about this error on the `C# language reference <https://"
"learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/"
"cs1612>`_."
msgstr ""

msgid "Performance of C# in Godot"
msgstr "Desempenho do C# no Godot"

#, fuzzy
msgid ""
"According to some preliminary `benchmarks <https://github.com/cart/godot3-"
"bunnymark>`_, the performance of C# in Godot — while generally in the same "
"order of magnitude — is roughly **~4×** that of GDScript in some naive "
"cases. C++ is still a little faster; the specifics are going to vary "
"according to your use case. GDScript is likely fast enough for most general "
"scripting workloads."
msgstr ""
"De acordo com alguns `benchmarks <https://github.com/cart/godot3-"
"bunnymark>`_ preliminares, o desempenho do C# no Godot — embora geralmente "
"na mesma ordem de magnitude — é aproximadamente **~ 4x** o do GDScript em "
"alguns casos simples. Para o desempenho total, o C++ ainda é um pouco mais "
"rápido; os detalhes vão variar de acordo com o seu caso de uso. O GDScript "
"provavelmente é rápido o suficiente para a maioria das cargas de trabalho de "
"scripts gerais. O C# é mais rápido, mas requer algum treinamento custoso "
"quando falamos do Godot."

msgid ""
"Most properties of Godot C# objects that are based on ``GodotObject`` (e.g. "
"any ``Node`` like ``Control`` or ``Node3D`` like ``Camera3D``) require "
"native (interop) calls as they talk to Godot's C++ core. Consider assigning "
"values of such properties into a local variable if you need to modify or "
"read them multiple times at a single code location:"
msgstr ""

msgid ""
"Passing raw arrays (such as ``byte[]``) or ``string`` to Godot's C# API "
"requires marshalling which is comparatively pricey."
msgstr ""

msgid ""
"The implicit conversion from ``string`` to ``NodePath`` or ``StringName`` "
"incur both the native interop and marshalling costs as the ``string`` has to "
"be marshalled and passed to the respective native constructor."
msgstr ""

msgid "Using NuGet packages in Godot"
msgstr "Usando pacotes NuGet no Godot"

msgid ""
"`NuGet <https://www.nuget.org/>`_ packages can be installed and used with "
"Godot, as with any C# project. Many IDEs are able to add packages directly. "
"They can also be added manually by adding the package reference in the ``."
"csproj`` file located in the project root:"
msgstr ""
"Pacotes `NuGet <https://www.nuget.org/>`_ podem ser instalados e usados com "
"o Godot, como qualquer projeto. Muitas IDEs podem adicionar pacotes "
"diretamente. Eles também podem ser adicionados manualmente adicionando a "
"referência do pacote no arquivo ``.csproj`` localizado na pasta principal do "
"projeto:"

msgid ""
"As of Godot 3.2.3, Godot automatically downloads and sets up newly added "
"NuGet packages the next time it builds the project."
msgstr ""
"A partir da versão 3.2.3, o Godot automaticamente baixa e instala os últimos "
"pacotes NuGet na próxima vez que ele compila o projeto."

msgid "Profiling your C# code"
msgstr "Perfilando seu código C#"

msgid ""
"The following tools may be used for performance and memory profiling of your "
"managed code:"
msgstr ""

msgid "JetBrains Rider with dotTrace/dotMemory plugin."
msgstr ""

msgid "Standalone JetBrains dotTrace/dotMemory."
msgstr ""

#, fuzzy
msgid "Visual Studio."
msgstr "Visual Studio"

msgid ""
"Profiling managed and unmanaged code at once is possible with both JetBrains "
"tools and Visual Studio, but limited to Windows."
msgstr ""

msgid "Translation status"
msgstr "Progresso da Tradução"
