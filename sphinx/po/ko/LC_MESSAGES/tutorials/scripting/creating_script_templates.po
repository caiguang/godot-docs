# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating script templates"
msgstr "스크립트 템플릿 만들기"

msgid ""
"Godot provides a way to use script templates as seen in the ``Script Create "
"Dialog`` while creating a new script:"
msgstr ""
"Godot는 새 스크립트를 생성하는 중에 ``스크립트 생성 대화 상자``\\ 에서 볼 수 "
"있는 것처럼 스크립트 템플릿을 사용하는 방법을 제공합니다:"

#, fuzzy
msgid ""
"A set of built-in script templates are provided with the editor, but it is "
"also possible to create new ones and set them by default, both per project "
"and at editor scope."
msgstr ""
"기본 스크립트 템플릿 세트가 기본적으로 제공되지만 프로젝트 및 에디터 별로 기"
"존 템플릿을 수정하고 새 템플릿을 생성할 수도 있습니다."

msgid ""
"Templates are linked to a specific node type, so when you create a script "
"you will only see the templates corresponding to that particular node, or "
"one of its parent types. For example, if you are creating a script for a "
"CharacterBody3D, you will only see templates defined for CharacterBody3Ds, "
"Node3Ds or Nodes."
msgstr ""

msgid "Locating the templates"
msgstr "템플릿 위치시키기"

msgid "There are two places where templates can be managed."
msgstr "두 장소에서 템플릿을 관리할 수 있습니다."

msgid "Editor-defined templates"
msgstr "에디터에서 정의된 템플릿"

msgid ""
"These are available globally throughout any project. The location of these "
"templates are determined per each OS:"
msgstr ""
"이 부류의 템플릿은 모든 프로젝트에서 전 세계적으로 사용할 수 있습니다. 템플릿"
"의 위치는 각 OS 별로 결정됩니다:"

msgid "Windows: ``%APPDATA%\\Godot\\script_templates\\``"
msgstr "Windows: ``%APPDATA%\\Godot\\script_templates\\``"

msgid "Linux: ``$HOME/.config/godot/script_templates/``"
msgstr "Linux: ``$HOME/.config/godot/script_templates/``"

msgid "macOS: ``$HOME/Library/Application Support/Godot/script_templates/``"
msgstr "macOS: ``$HOME/Library/Application Support/Godot/script_templates/``"

msgid ""
"If no ``script_templates`` is detected, Godot will create a default set of "
"built-in templates automatically, so this logic can be used to reset the "
"default templates in case you've accidentally overwritten them."
msgstr ""
"만약 ``script_templates``\\ 가 감지되지 않으면 Godot에서 기본 내장 템플릿 집"
"합을 자동으로 생성하므로 실수로 경로를 덮어쓴 경우 기본 템플릿을 재설정하는 "
"데 이 로직을 사용할 수 있습니다."

msgid "Project-defined templates"
msgstr "프로젝트에서 정의된 템플릿"

msgid ""
"The default path to search for templates is the ``res://script_templates/`` "
"directory. The path can be changed by configuring the ``editor/"
"script_templates_search_path`` setting in the :ref:`ProjectSettings "
"<class_ProjectSettings>`, both via code and the editor."
msgstr ""
"템플릿을 검색하는 기본 경로는 ``res://script_templates/`` 디렉토리입니다. 경"
"로는 코드나 에디터를 통해 :ref:`ProjectSettings <class_ProjectSettings>`\\ 에"
"서 ``editor/script_templates_search_path`` 경로를 설정하여 변경할 수 있습니"
"다."

msgid ""
"If no ``script_templates`` directory is found within a project, it is simply "
"ignored."
msgstr "프로젝트 안에 ``script_templates`` 디렉토리가 없으면 무시됩니다."

#, fuzzy
msgid "Template organization and naming"
msgstr "형 변환(Type conversion)과 캐스팅(casting)"

msgid ""
"Both editor and project defined templates are organized in the following way:"
msgstr ""

msgid "where:"
msgstr ""

msgid ""
"``template_path`` is one of the 2 locations discussed in the previous two "
"sections"
msgstr ""

msgid ""
"``node_type`` is the node it will apply to (for example, :ref:`Node "
"<class_Node>`, or :ref:`CharacterBody3D <class_CharacterBody3D>`)"
msgstr ""

msgid ""
"``file`` is the custom name you can chose for the template (for example: "
"``platformer_movement`` or ``smooth_camera``)"
msgstr ""

msgid ""
"``extension``: will indicate which language the template will apply to (it "
"should be ``gd`` for GDScript or ``cs`` for C#)"
msgstr ""

msgid "For example:"
msgstr ""

msgid "``template_scripts/Node/smooth_camera.gd``"
msgstr ""

msgid "``template_scripts/CharacterBody3D/platformer_movement.gd``"
msgstr ""

msgid "Default behaviour and overriding it"
msgstr ""

#, fuzzy
msgid "By default:"
msgstr "기본 기능"

msgid ""
"the template's name is the same as the file name (minus the extension, "
"prettyfied)"
msgstr ""

msgid "the description is empty"
msgstr ""

msgid "the space indent is set to 4"
msgstr ""

msgid "the template will not be set as the default for the given node"
msgstr ""

msgid ""
"It is possible to customize this behaviour by adding meta headers at the "
"start of your file, like this:"
msgstr ""

msgid ""
"In this case, the name will be set to \"Platformer movement\", with the "
"given custom description, and it will be set as the default template for the "
"node in which directory it has been saved."
msgstr ""

msgid ""
"This is an example of utilizing custom templates at editor and project level:"
msgstr ""

msgid ""
"The script templates have the same extension as the regular script files. "
"This may lead to an issue of a script parser treating those templates as "
"actual scripts within a project. To avoid this, make sure to ignore the "
"directory containing them by creating an empty ``.gdignore`` file. The "
"directory won't be visible throughout the project's filesystem anymore, yet "
"the templates can be modified by an external text editor anytime."
msgstr ""
"스크립트 템플릿은 일반 스크립트 파일과 동일한 확장자를 가집니다. 이로 인해 해"
"당 템플릿을 프로젝트 내에서 실제 스크립트로 취급하는 스크립트 파서에서 문제"
"가 발생할 수 있습니다. 이를 피하려면 빈 ``.gdignore`` 파일을 만들어 해당 디렉"
"토리를 무시해야 합니다. 디렉토리는 더 이상 프로젝트의 파일 시스템 전체에서 "
"볼 수 없지만 템플릿은 언제든지 외부 텍스트 에디터에서 수정할 수 있습니다."

msgid ""
"By default, every C# file inside the project directory is included in the "
"compilation. Script templates must be manually excluded from the C# project "
"to avoid build errors. See `Exclude files from the build <https://learn."
"microsoft.com/en-us/visualstudio/msbuild/how-to-exclude-files-from-the-"
"build>`_ in the Microsoft documentation."
msgstr ""

msgid ""
"It is possible to create editor-level templates that have the same level as "
"a project-specific templates, and also that have the same name as a built-in "
"one, all will be shown on the new script dialog."
msgstr ""

msgid "Default template"
msgstr "기본(Default) 템플릿"

msgid ""
"To override the default template, create a custom template at editor or "
"project level inside a ``Node`` directory (or a more specific type, if only "
"a subtype wants to be overridden) and start the file with the ``meta-"
"default: true`` header."
msgstr ""

msgid ""
"Only one template can be set as default at the same time for the same node "
"type."
msgstr ""

#, fuzzy
msgid ""
"The ``Default`` templates for basic Nodes, for both GDScript and C#, are "
"shown here so you can use these as the base for creating other templates:"
msgstr ""
"``기본`` 템플릿은 항상 언어별로 동적으로 생성되며 설정하거나 재정의할 수 없지"
"만 다른 템플릿을 만들기 위한 기반으로 사용할 수 있습니다."

msgid ""
"The Godot editor provides a set of useful built-in node-specific templates, "
"such as ``basic_movement`` for both :ref:`CharacterBody2D "
"<class_CharacterBody2D>` and :ref:`CharacterBody3D <class_CharacterBody3D>` "
"and ``plugin`` for :ref:`EditorPlugin <class_EditorPlugin>`."
msgstr ""

msgid "List of template placeholders"
msgstr "템플릿 플레이스홀더 목록"

msgid ""
"The following describes the complete list of built-in template placeholders "
"which are currently implemented."
msgstr ""
"다음은 현재 구현된 기본 제공 템플릿 플레이스홀더의 전체 목록을 설명합니다."

msgid "Base placeholders"
msgstr "기본 플레이스홀더"

msgid "Placeholder"
msgstr "플레이스홀더"

msgid "Description"
msgstr "설명"

msgid "``_BINDINGS_NAMESPACE_``"
msgstr ""

#, fuzzy
msgid "The name of the Godot namespace (used in C# only)."
msgstr "새 클래스의 이름(C#에서만 사용)."

#, fuzzy
msgid "``_CLASS_``"
msgstr "``%CLASS%``"

msgid "The name of the new class (used in C# only)."
msgstr "새 클래스의 이름(C#에서만 사용)."

#, fuzzy
msgid "``_BASE_``"
msgstr "``%BASE%``"

msgid "The base type a new script inherits from."
msgstr "새 스크립트가 상속받는 기본 타입."

msgid "``_TS_``"
msgstr ""

#, fuzzy
msgid ""
"Indentation placeholder. The exact type and number of whitespace characters "
"used for indentation is determined by the ``text_editor/indent/type`` and "
"``text_editor/indent/size`` settings in the :ref:`EditorSettings "
"<class_EditorSettings>` respectively. Can be overridden by the ``meta-space-"
"indent`` header on the template."
msgstr ""
"들여쓰기 플레이스홀더. 들여쓰기에 사용되는 공백 문자의 정확한 유형과 수는 각"
"각 :ref:`EditorSettings <class_EditorSettings>`\\ 의 ``text_editor/indent/"
"type``\\ 와 ``text_editor/indent/size`` 설정에 의해 결정됩니다."

msgid "Type placeholders"
msgstr "타입 플레이스홀더"

msgid ""
"There used to be, in Godot 3.x, placeholders for GDScript type hints that "
"would get replaced whenever a template was used to create a new script, such "
"as: ``%INT_TYPE%``, ``%STRING_TYPE%``, ``%FLOAT_TYPE%`` or ``%VOID_RETURN%``."
msgstr ""

msgid ""
"The placeholders no longer work for Godot 4.x, but if the setting "
"``text_editor/completion/add_type_hints`` from :ref:`EditorSettings "
"<class_EditorSettings>` is disabled, type hints for parameters and return "
"types will be automatically removed for a few base types:"
msgstr ""

#, fuzzy
msgid "``int``"
msgstr "``in``"

#, fuzzy
msgid "``String``"
msgstr "``String[]``"

#, fuzzy
msgid "``Array[String]``"
msgstr "``String[]``"

#, fuzzy
msgid "``float``"
msgstr "``float[]``"

#, fuzzy
msgid "``void``"
msgstr "``-> void``"

msgid "``:=`` will be transformed into ``=``"
msgstr ""

msgid "Translation status"
msgstr "번역 상태"
