# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "C# exported properties"
msgstr "노드 속성"

#, fuzzy
msgid ""
"In Godot, class members can be exported. This means their value gets saved "
"along with the resource (such as the :ref:`scene <class_PackedScene>`) "
"they're attached to. They will also be available for editing in the property "
"editor. Exporting is done by using the ``[Export]`` attribute."
msgstr ""
"Godot에서 클래스 멤버는 내보낼 수 있습니다. 즉, 멤버의 값은 (:ref:`씬 "
"<class_PackedScene>`\\ 처럼) 붙어있는 리소스와 함께 저장됩니다. 그리고 속성"
"(Property) 편집기에서 편집할 수 있습니다. 내보내려면 ``export`` 키워드를 사용"
"합니다::"

msgid ""
"In that example the value ``5`` will be saved, and after building the "
"current project it will be visible in the property editor."
msgstr ""

msgid ""
"One of the fundamental benefits of exporting member variables is to have "
"them visible and editable in the editor. This way, artists and game "
"designers can modify values that later influence how the program runs. For "
"this, a special export syntax is provided."
msgstr ""
"멤버 변수 내보내기의 기본적인 장점 중 하나는 에디터에서 멤버 변수를 보고 편집"
"할 수 있다는 점입니다. 이런 식으로 아티스트와 게임 디자이너는 나중에 프로그"
"램 실행 방식에 영향을 주는 값을 수정할 수 있습니다. 이를 위해 특별한 내보내"
"기 구문이 제공됩니다."

msgid ""
"Exporting can only be done with :ref:`Variant-compatible "
"<doc_c_sharp_variant>` types."
msgstr ""

msgid ""
"Exporting properties can also be done in GDScript, for information on that "
"see :ref:`doc_gdscript_exports`."
msgstr ""

#, fuzzy
msgid "Basic use"
msgstr "기초적인 사용법"

#, fuzzy
msgid "Exporting can work with fields and properties."
msgstr "패키지, 패치, 모드 내보내기"

msgid ""
"Exported members can specify a default value; otherwise, the `default value "
"of the type <https://learn.microsoft.com/en-us/dotnet/csharp/language-"
"reference/builtin-types/default-values>`_ is used instead."
msgstr ""

#, fuzzy
msgid "Resources and nodes can be exported."
msgstr "Shadermaterials는 내보낼 수 없습니다."

#, fuzzy
msgid "Grouping exports"
msgstr "속성 그루핑(Grouping)"

msgid ""
"It is possible to group your exported properties inside the Inspector with "
"the ``[ExportGroup]`` attribute. Every exported property after this "
"attribute will be added to the group. Start a new group or use "
"``[ExportGroup(\"\")]`` to break out."
msgstr ""

msgid ""
"The second argument of the attribute can be used to only group properties "
"with the specified prefix."
msgstr ""

msgid ""
"Groups cannot be nested, use ``[ExportSubgroup]`` to create subgroups within "
"a group."
msgstr ""

msgid ""
"You can also change the name of your main category, or create additional "
"categories in the property list with the ``[ExportCategory]`` attribute."
msgstr ""

msgid ""
"The list of properties is organized based on the class inheritance, and new "
"categories break that expectation. Use them carefully, especially when "
"creating projects for public use."
msgstr ""

#, fuzzy
msgid "Strings as paths"
msgstr "줄 길이"

msgid "Property hints can be used to export strings as paths"
msgstr ""

#, fuzzy
msgid "String as a path to a file."
msgstr "타일맵 사용하기"

msgid "String as a path to a directory."
msgstr ""

msgid "String as a path to a file, custom filter provided as hint."
msgstr ""

msgid ""
"Using paths in the global filesystem is also possible, but only in scripts "
"in tool mode."
msgstr ""

msgid "String as a path to a PNG file in the global filesystem."
msgstr ""

msgid "String as a path to a directory in the global filesystem."
msgstr ""

msgid ""
"The multiline annotation tells the editor to show a large input field for "
"editing over multiple lines."
msgstr ""

#, fuzzy
msgid "Limiting editor input ranges"
msgstr "인스턴스 편집하기"

msgid ""
"Using the range property hint allows you to limit what can be input as a "
"value using the editor."
msgstr ""

msgid "Allow integer values from 0 to 20."
msgstr ""

msgid "Allow integer values from -10 to 20."
msgstr ""

msgid "Allow floats from -10 to 20 and snap the value to multiples of 0.2."
msgstr ""

msgid ""
"If you add the hints \"or_greater\" and/or \"or_less\" you can go above or "
"below the limits when adjusting the value by typing it instead of using the "
"slider."
msgstr ""

msgid "Floats with easing hint"
msgstr ""

msgid "Display a visual representation of the 'ease()' function when editing."
msgstr ""

#, fuzzy
msgid "Colors"
msgstr "색상"

msgid "Regular color given as red-green-blue-alpha value."
msgstr ""

msgid "Color given as red-green-blue value (alpha will always be 1)."
msgstr ""

msgid "Nodes"
msgstr "노드"

msgid ""
"Since Godot 4.0, nodes can be directly exported without having to use "
"NodePaths."
msgstr ""

msgid ""
"Custom node classes can also be used, see :ref:`doc_c_sharp_global_classes`."
msgstr ""

msgid ""
"Exporting NodePaths like in Godot 3.x is still possible, in case you need it:"
msgstr ""

msgid "Resources"
msgstr "리소스"

msgid ""
"In the Inspector, you can then drag and drop a resource file from the "
"FileSystem dock into the variable slot."
msgstr ""

msgid ""
"Opening the inspector dropdown may result in an extremely long list of "
"possible classes to create, however. Therefore, if you specify a type "
"derived from Resource such as:"
msgstr ""

msgid ""
"The drop-down menu will be limited to AnimationNode and all its inherited "
"classes. Custom resource classes can also be used, see :ref:"
"`doc_c_sharp_global_classes`."
msgstr ""

msgid ""
"It must be noted that even if the script is not being run while in the "
"editor, the exported properties are still editable. This can be used in "
"conjunction with a :ref:`script in \"tool\" mode <doc_gdscript_tool_mode>`."
msgstr ""
"에디터에서 스크립트가 실행되지 않더라도 내보낸 속성은 계속 편집할 수 있습니"
"다. 속성은 :ref:`\"툴(Tool)\" 모드 <doc_gdscript_tool_mode>`\\ 의 스크립트와 "
"함께 사용할 수 있습니다."

msgid "Exporting bit flags"
msgstr "비트 플래그(bit flags) 내보내기"

msgid ""
"Members whose type is an enum with the ``[Flags]`` attribute can be exported "
"and their values are limited to the members of the enum type. The editor "
"will create a widget in the Inspector, allowing to select none, one, or "
"multiple of the enum members. The value will be stored as an integer."
msgstr ""

#, fuzzy
msgid ""
"Integers used as bit flags can store multiple ``true``/``false`` (boolean) "
"values in one property. By using the ``Flags`` property hint, they can be "
"set from the editor."
msgstr ""
"비트 플래그로 사용되는 정수는 하나의 속성에 여러 ``true``/``false``\\ (불리"
"언) 값을 저장할 수 있습니다. 다음과 같이 내보내기 힌트 ``int, FLAGS, ...``\\ "
"를 사용해 에디터에서 설정할 수 있습니다::"

#, fuzzy
msgid ""
"You must provide a string description for each flag. In this example, "
"``Fire`` has value 1, ``Water`` has value 2, ``Earth`` has value 4 and "
"``Wind`` corresponds to value 8. Usually, constants should be defined "
"accordingly (e.g. ``private const int ElementWind = 8`` and so on)."
msgstr ""
"각 플래그에 대한 문자열 설명을 제공해야 합니다. 이 예제에서 ``Fire``\\ 는 값 "
"1, ``Water``\\ 는 값 2, ``Earth``\\ 는 값 4, ``Wind``\\ 는 값 8에 해당합니"
"다. 일반적으로 상수는 이에 따라 정의되어야 합니다(예: ``const ELEMENT_WIND = "
"8`` 등등)."

msgid "You can add explicit values using a colon:"
msgstr ""

msgid ""
"Only power of 2 values are valid as bit flags options. The lowest allowed "
"value is 1, as 0 means that nothing is selected. You can also add options "
"that are a combination of other flags:"
msgstr ""

#, fuzzy
msgid ""
"Export annotations are also provided for the physics and render layers "
"defined in the project settings."
msgstr ""
"프로젝트 설정에 정의된 물리 및 렌더 레이어에 대한 내보내기 힌트도 제공됩니"
"다::"

msgid ""
"Using bit flags requires some understanding of bitwise operations. If in "
"doubt, use boolean variables instead."
msgstr ""
"비트 플래그를 사용하려면 비트 연산에 대한 이해가 필요합니다. 확실하지 않은 경"
"우 대신 boolean 변수를 사용하세요."

#, fuzzy
msgid "Exporting enums"
msgstr "내보내기 메뉴"

msgid ""
"Members whose type is an enum can be exported and their values are limited "
"to the members of the enum type. The editor will create a widget in the "
"Inspector, enumerating the following as \"Thing 1\", \"Thing 2\", \"Another "
"Thing\". The value will be stored as an integer."
msgstr ""

msgid ""
"Integer and string members can also be limited to a specific list of values "
"using the ``[Export]`` annotation with the ``PropertyHint.Enum`` hint. The "
"editor will create a widget in the Inspector, enumerating the following as "
"Warrior, Magician, Thief. The value will be stored as an integer, "
"corresponding to the index of the selected option (i.e. ``0``, ``1``, or "
"``2``)."
msgstr ""

msgid "If the type is ``string``, the value will be stored as a string."
msgstr ""

msgid "If you want to set an initial value, you must specify it explicitly:"
msgstr ""

#, fuzzy
msgid "Exporting collections"
msgstr "내보내기 고려 사항"

msgid ""
"As explained in the :ref:`C# Variant <doc_c_sharp_variant>` documentation, "
"only certain C# arrays and the collection types defined in the ``Godot."
"Collections`` namespace are Variant-compatible, therefore, only those types "
"can be exported."
msgstr ""

#, fuzzy
msgid "Exporting Godot arrays"
msgstr "배열 내보내기"

msgid ""
"Using the generic ``Godot.Collections.Array<T>`` allows to specify the type "
"of the array elements which will be used as a hint for the editor. The "
"Inspector will restrict the elements to the specified type."
msgstr ""

msgid ""
"The default value of Godot arrays is null, a different default can be "
"specified:"
msgstr ""

#, fuzzy
msgid ""
"Arrays with specified types which inherit from resource can be set by drag-"
"and-dropping multiple files from the FileSystem dock."
msgstr ""
"내보낸 배열이 Resource를 상속받는 타입을 지정하는 경우 파일시스템"
"(FileSystem) 독에서 여러 파일을 한 번에 끌어다 놓으면 인스펙터(Inspector)에"
"서 배열 값을 설정할 수 있습니다."

#, fuzzy
msgid "Exporting Godot dictionaries"
msgstr "내보내기 고려 사항"

msgid ""
"Using the generic ``Godot.Collections.Dictionary<TKey, TValue>`` allows to "
"specify the type of the key and value elements of the dictionary."
msgstr ""

msgid ""
"Typed dictionaries are currently unsupported in the Godot editor, so the "
"Inspector will not restrict the types that can be assigned, potentially "
"resulting in runtime exceptions."
msgstr ""

msgid ""
"The default value of Godot dictionaries is null, a different default can be "
"specified:"
msgstr ""

#, fuzzy
msgid "Exporting C# arrays"
msgstr "배열 내보내기"

msgid ""
"C# arrays can exported as long as the element type is a :ref:`Variant-"
"compatible <doc_c_sharp_variant>` type."
msgstr ""

msgid ""
"The default value of C# arrays is null, a different default can be specified:"
msgstr ""

msgid "Setting exported variables from a tool script"
msgstr "툴 스크립트에서 내보낸 변수 설정"

#, fuzzy
msgid ""
"When changing an exported variable's value from a script in :ref:"
"`doc_gdscript_tool_mode`, the value in the inspector won't be updated "
"automatically. To update it, call :ref:`NotifyPropertyListChanged() "
"<class_Object_method_notify_property_list_changed>` after setting the "
"exported variable's value."
msgstr ""
":ref:`doc_gdscript_tool_mode` 스크립트에서 내보낸 변수의 값을 변경할 때 인스"
"펙터(Inspector)의 값은 자동으로 업데이트되지 않습니다. 업데이트하려면 내보낸 "
"변수의 값을 설정한 후 :ref:`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>`\\ 를 호출하세요."

msgid "Advanced exports"
msgstr "고급 내보내기"

msgid ""
"Not every type of export can be provided on the level of the language itself "
"to avoid unnecessary design complexity. The following describes some more or "
"less common exporting features which can be implemented with a low-level API."
msgstr ""
"불필요한 디자인 복잡성을 피하기 위해 모든 타입의 내보내기를 언어 자체 수준에"
"서 제공할 수 있는 것은 아닙니다. 다음은 로우 레벨 API로 구현할 수 있는 다소 "
"일반적인 내보내기 기능에 대해 설명합니다."

#, fuzzy
msgid ""
"Before reading further, you should get familiar with the way properties are "
"handled and how they can be customized with :ref:`_Set() "
"<class_Object_private_method__set>`, :ref:`_Get() "
"<class_Object_private_method__get>`, and :ref:`_GetPropertyList() "
"<class_Object_private_method__get_property_list>` methods as described in :"
"ref:`doc_accessing_data_or_logic_from_object`."
msgstr ""
"더 읽기 전에 속성이 처리되는 방식과 :ref:"
"`doc_accessing_data_or_logic_from_object`에 설명된 대로 :ref:`_set() "
"<class_Object_method__get_property_list>`, :ref:`_get() "
"<class_Object_method__get_property_list>`, :ref:`_get_property_list() "
"<class_Object_method__get_property_list>` 메서드를 동해 속성을 커스텀하는 방"
"법에 대해 알고 있어야 합니다."

msgid ""
"For binding properties using the above methods in C++, see :ref:"
"`doc_binding_properties_using_set_get_property_list`."
msgstr ""
"C++에서 위의 방법을 사용해 속성을 바인딩하려면 :ref:"
"`doc_binding_properties_using_set_get_property_list`\\ 를 참고하세요."

msgid ""
"The script must operate in the ``tool`` mode so the above methods can work "
"from within the editor."
msgstr ""
"위의 방법이 에디터 안에서 작동할 수 있도록 스크립트는 ``툴(tool)`` 모드에서 "
"작동해야 합니다."

msgid "Translation status"
msgstr "번역 상태"
