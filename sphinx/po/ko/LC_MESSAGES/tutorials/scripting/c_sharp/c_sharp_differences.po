# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# API differences to GDScript"
msgstr "C#과 GDScript의 API 차이점"

msgid "This is a (incomplete) list of API differences between C# and GDScript."
msgstr "이것은 C#과 GDScript간의 (불완전한) API 차이점 목록입니다."

msgid "General differences"
msgstr "일반적인 차이점"

msgid ""
"As explained in the :ref:`doc_c_sharp`, C# generally uses ``PascalCase`` "
"instead of the ``snake_case`` used in GDScript and C++."
msgstr ""
":ref:`doc_c_sharp`\\ 에서 설명했듯이, GDScript와 C++에서 ``snake_case``\\ 가 "
"사용되는 반면, C#은 ``PascalCase``\\ 를 사용합니다."

msgid "Global scope"
msgstr "전역 범위"

msgid ""
"Global functions and some constants had to be moved to classes, since C# "
"does not allow declaring them in namespaces. Most global constants were "
"moved to their own enums."
msgstr ""
"C#은 네임 스페이스에서 전역 함수와 일부 상수는 선언하지 않기 때문에 이 둘은 "
"클래스로 이동해야 합니다. 대부분의 전역 상수는 자신의 열거형으로 이동합니다."

msgid "Constants"
msgstr "상수"

msgid ""
"In C#, only primitive types can be constant. For example, the ``TAU`` "
"constant is replaced by the ``Mathf.Tau`` constant, but the ``Vector2."
"RIGHT`` constant is replaced by the ``Vector2.Right`` read-only property. "
"This behaves similarly to a constant, but can't be used in some contexts "
"like ``switch`` statements."
msgstr ""

#, fuzzy
msgid ""
"Global enum constants were moved to their own enums. For example, ``ERR_*`` "
"constants were moved to the ``Error`` enum."
msgstr ""
"전역 상수는 자신의 열거형으로 이동합니다. 예를 들어 ``ERR_*`` 상수는 "
"``Error`` 열거형으로 이동합니다."

msgid "Special cases:"
msgstr "특별한 경우:"

msgid "GDScript"
msgstr "GDScript"

msgid "C#"
msgstr "C#"

msgid "``TYPE_*``"
msgstr "``TYPE_*``"

msgid "``Variant.Type`` enum"
msgstr "``Variant.Type`` 열거형"

msgid "``OP_*``"
msgstr "``OP_*``"

msgid "``Variant.Operator`` enum"
msgstr "``Variant.Operator`` 열거형"

msgid "Math functions"
msgstr "수학 함수"

msgid ""
"Math global functions, like ``abs``, ``acos``, ``asin``, ``atan`` and "
"``atan2``, are located under ``Mathf`` as ``Abs``, ``Acos``, ``Asin``, "
"``Atan`` and ``Atan2``. The ``PI`` constant can be found as ``Mathf.Pi``."
msgstr ""
"``abs``, ``acos``, ``asin``, ``atan`` 그리고 ``atan2``\\ 와 같은 수학 전역 함"
"수는 ``Mathf``\\ 에 위치하며, ``Abs``, ``Acos``, ``Asin``, ``Atan`` 그리고 "
"``Atan2``\\ 로 존재합니다. ``PI`` 상수는 ``Mathf.Pi``\\ 입니다."

msgid ""
"C# also provides static `System.Math`_ and `System.MathF`_ classes that may "
"contain other useful mathematical operations."
msgstr ""

msgid "Random functions"
msgstr "랜덤 함수"

msgid ""
"Random global functions, like ``rand_range`` and ``rand_seed``, are located "
"under ``GD``. Example: ``GD.RandRange`` and ``GD.RandSeed``."
msgstr ""
"``rand_range``\\ 와 ``rand_seed``\\ 와 같은 랜덤 전역 함수는 ``GD``\\ 에 위치"
"합니다. 예: ``GD.RandRange``\\ 와 ``GD.RandSeed``."

msgid ""
"Consider using `System.Random`_ or, if you need cryptographically strong "
"randomness, `System.Security.Cryptography.RandomNumberGenerator`_."
msgstr ""

msgid "Other functions"
msgstr "기타 함수"

#, fuzzy
msgid ""
"Many other global functions like ``print`` and ``var_to_str`` are located "
"under ``GD``. Example: ``GD.Print`` and ``GD.VarToStr``."
msgstr ""
"``print``\\ 와 ``var2str``\\ 와 같은 기타 다른 전역 함수는 ``GD``\\ 에 위치합"
"니다. 예: ``GD.Print``\\ 와 ``GD.Var2Str``."

msgid "Exceptions:"
msgstr "예외:"

msgid "``weakref(obj)``"
msgstr "``weakref(obj)``"

#, fuzzy
msgid "``GodotObject.WeakRef(obj)``"
msgstr "``Object.WeakRef(obj)``"

#, fuzzy
msgid "``instance_from_id(id)``"
msgstr "``is_instance_valid(obj)``"

#, fuzzy
msgid "``GodotObject.InstanceFromId(id)``"
msgstr "``Object.IsInstanceValid(obj)``"

#, fuzzy
msgid "``is_instance_id_valid(id)``"
msgstr "``is_instance_valid(obj)``"

#, fuzzy
msgid "``GodotObject.IsInstanceIdValid(id)``"
msgstr "``Object.IsInstanceValid(obj)``"

msgid "``is_instance_valid(obj)``"
msgstr "``is_instance_valid(obj)``"

#, fuzzy
msgid "``GodotObject.IsInstanceValid(obj)``"
msgstr "``Object.IsInstanceValid(obj)``"

msgid "Tips"
msgstr "팁"

msgid ""
"Sometimes it can be useful to use the ``using static`` directive. This "
"directive allows to access the members and nested types of a class without "
"specifying the class name."
msgstr ""
"때로는 ``using static`` 지시문을 사용하는 게 유용할 수 있습니다. 이 지시문이"
"면 클래스 이름을 지정하지 않고도 클래스의 멤버와 중첩된 타입에 접근할 수 있습"
"니다."

msgid "Example:"
msgstr "예시:"

#, fuzzy
msgid "Full list of equivalences"
msgstr "모든 지시문"

msgid "List of Godot's global scope functions and their equivalent in C#:"
msgstr ""

#, fuzzy
msgid "abs"
msgstr "as"

#, fuzzy
msgid "Mathf.Abs"
msgstr "수학"

msgid "absf"
msgstr ""

msgid "absi"
msgstr ""

msgid "acos"
msgstr ""

#, fuzzy
msgid "Mathf.Acos"
msgstr "수학 함수"

msgid "acosh"
msgstr ""

#, fuzzy
msgid "Mathf.Acosh"
msgstr "수학 함수"

#, fuzzy
msgid "angle_difference"
msgstr "일반적인 차이점"

msgid "Mathf.AngleDifference"
msgstr ""

msgid "asin"
msgstr ""

msgid "Mathf.Asin"
msgstr ""

msgid "asinh"
msgstr ""

#, fuzzy
msgid "Mathf.Asinh"
msgstr "수학"

msgid "atan"
msgstr ""

msgid "Mathf.Atan"
msgstr ""

msgid "atan2"
msgstr ""

msgid "Mathf.Atan2"
msgstr ""

msgid "atanh"
msgstr ""

#, fuzzy
msgid "Mathf.Atanh"
msgstr "수학"

msgid "bezier_derivative"
msgstr ""

msgid "Mathf.BezierDerivative"
msgstr ""

#, fuzzy
msgid "bezier_interpolate"
msgstr "보간법 (Interpolation)"

#, fuzzy
msgid "Mathf.BezierInterpolate"
msgstr "보간법 (Interpolation)"

msgid "bytes_to_var"
msgstr ""

msgid "GD.BytesToVar"
msgstr ""

msgid "bytes_to_var_with_objects"
msgstr ""

msgid "GD.BytesToVarWithObjects"
msgstr ""

msgid "ceil"
msgstr ""

msgid "Mathf.Ceil"
msgstr ""

msgid "ceilf"
msgstr ""

msgid "ceili"
msgstr ""

msgid "Mathf.CeilToInt"
msgstr ""

msgid "clamp"
msgstr ""

msgid "Mathf.Clamp"
msgstr ""

msgid "clampf"
msgstr ""

#, fuzzy
msgid "clampi"
msgstr "댐핑"

#, fuzzy
msgid "cos"
msgstr "const"

#, fuzzy
msgid "Mathf.Cos"
msgstr "수학"

msgid "cosh"
msgstr ""

msgid "Mathf.Cosh"
msgstr ""

#, fuzzy
msgid "cubic_interpolate"
msgstr "보간법 (Interpolation)"

#, fuzzy
msgid "Mathf.CubicInterpolate"
msgstr "물리 보간"

#, fuzzy
msgid "cubic_interpolate_angle"
msgstr "보간법 (Interpolation)"

msgid "Mathf.CubicInterpolateAngle"
msgstr ""

msgid "cubic_interpolate_angle_in_time"
msgstr ""

msgid "Mathf.CubicInterpolateInTime"
msgstr ""

msgid "cubic_interpolate_in_time"
msgstr ""

msgid "Mathf.CubicInterpolateAngleInTime"
msgstr ""

msgid "db_to_linear"
msgstr ""

msgid "Mathf.DbToLinear"
msgstr ""

msgid "deg_to_rad"
msgstr ""

msgid "Mathf.DegToRad"
msgstr ""

msgid "ease"
msgstr ""

msgid "Mathf.Ease"
msgstr ""

#, fuzzy
msgid "error_string"
msgstr "문자열"

#, fuzzy
msgid "Error.ToString"
msgstr "String"

#, fuzzy
msgid "exp"
msgstr "export"

#, fuzzy
msgid "Mathf.Exp"
msgstr "수학"

#, fuzzy
msgid "floor"
msgstr "바닥"

#, fuzzy
msgid "Mathf.Floor"
msgstr "바닥"

#, fuzzy
msgid "floorf"
msgstr "바닥"

#, fuzzy
msgid "floori"
msgstr "바닥"

msgid "Mathf.FloorToInt"
msgstr ""

msgid "fmod"
msgstr ""

#, fuzzy
msgid "operator %"
msgstr "연산자"

msgid "fposmod"
msgstr ""

msgid "Mathf.PosMod"
msgstr ""

msgid "hash"
msgstr ""

msgid "GD.Hash"
msgstr ""

msgid "instance_from_id"
msgstr ""

msgid "GodotObject.InstanceFromId"
msgstr ""

msgid "inverse_lerp"
msgstr ""

msgid "Mathf.InverseLerp"
msgstr ""

msgid "is_equal_approx"
msgstr ""

msgid "Mathf.IsEqualApprox"
msgstr ""

msgid "is_finite"
msgstr ""

msgid "Mathf.IsFinite or `float.IsFinite`_ or `double.IsFinite`_"
msgstr ""

#, fuzzy
msgid "is_inf"
msgstr "``is_inf``"

msgid "Mathf.IsInf or `float.IsInfinity`_ or `double.IsInfinity`_"
msgstr ""

#, fuzzy
msgid "is_instance_id_valid"
msgstr "``is_instance_valid(obj)``"

#, fuzzy
msgid "GodotObject.IsInstanceIdValid"
msgstr "``Object.IsInstanceValid(obj)``"

#, fuzzy
msgid "is_instance_valid"
msgstr "``is_instance_valid(obj)``"

#, fuzzy
msgid "GodotObject.IsInstanceValid"
msgstr "``Object.IsInstanceValid(obj)``"

#, fuzzy
msgid "is_nan"
msgstr "``is_nan``"

msgid "Mathf.IsNaN or `float.IsNaN`_ or `double.IsNaN`_"
msgstr ""

msgid "is_same"
msgstr ""

msgid "operator == or `object.ReferenceEquals`_"
msgstr ""

msgid "is_zero_approx"
msgstr ""

msgid "Mathf.IsZeroApprox"
msgstr ""

msgid "lerp"
msgstr ""

msgid "Mathf.Lerp"
msgstr ""

msgid "lerp_angle"
msgstr ""

msgid "Mathf.LerpAngle"
msgstr ""

msgid "lerpf"
msgstr ""

msgid "linear_to_db"
msgstr ""

msgid "Mathf.LinearToDb"
msgstr ""

#, fuzzy
msgid "log"
msgstr "포그"

#, fuzzy
msgid "Mathf.Log"
msgstr "수학"

msgid "max"
msgstr ""

#, fuzzy
msgid "Mathf.Max"
msgstr "수학"

msgid "maxf"
msgstr ""

msgid "maxi"
msgstr ""

#, fuzzy
msgid "min"
msgstr "믹스"

#, fuzzy
msgid "Mathf.Min"
msgstr "수학"

msgid "minf"
msgstr ""

msgid "mini"
msgstr ""

msgid "move_toward"
msgstr ""

msgid "Mathf.MoveToward"
msgstr ""

msgid "nearest_po2"
msgstr ""

msgid "Mathf.NearestPo2"
msgstr ""

msgid "pingpong"
msgstr ""

msgid "Mathf.PingPong"
msgstr ""

msgid "posmod"
msgstr ""

msgid "pow"
msgstr ""

#, fuzzy
msgid "Mathf.Pow"
msgstr "수학"

msgid "print"
msgstr ""

msgid "GD.Print"
msgstr ""

msgid "print_rich"
msgstr ""

msgid "GD.PrintRich"
msgstr ""

msgid "print_verbose"
msgstr ""

msgid "Use OS.IsStdoutVerbose and GD.Print"
msgstr ""

msgid "printerr"
msgstr ""

msgid "GD.PrintErr"
msgstr ""

msgid "printraw"
msgstr ""

msgid "GD.PrintRaw"
msgstr ""

#, fuzzy
msgid "prints"
msgstr "가져오기 힌트"

msgid "GD.PrintS"
msgstr ""

msgid "printt"
msgstr ""

msgid "GD.PrintT"
msgstr ""

msgid "push_error"
msgstr ""

msgid "GD.PushError"
msgstr ""

msgid "push_warning"
msgstr ""

msgid "GD.PushWarning"
msgstr ""

msgid "rad_to_deg"
msgstr ""

msgid "Mathf.RadToDeg"
msgstr ""

msgid "rand_from_seed"
msgstr ""

msgid "GD.RandFromSeed"
msgstr ""

msgid "randf"
msgstr ""

msgid "GD.Randf"
msgstr ""

msgid "randf_range"
msgstr ""

msgid "GD.RandRange"
msgstr ""

msgid "randfn"
msgstr ""

msgid "GD.Randfn"
msgstr ""

msgid "randi"
msgstr ""

msgid "GD.Randi"
msgstr ""

msgid "randi_range"
msgstr ""

#, fuzzy
msgid "randomize"
msgstr "랜덤성(Randomness)"

#, fuzzy
msgid "GD.Randomize"
msgstr "랜덤성(Randomness)"

#, fuzzy
msgid "remap"
msgstr "톤맵"

msgid "Mathf.Remap"
msgstr ""

msgid "rid_allocate_id"
msgstr ""

#, fuzzy
msgid "N/A"
msgstr "NAN"

msgid "rid_from_int64"
msgstr ""

msgid "rotate_toward"
msgstr ""

#, fuzzy
msgid "Mathf.RotateToward"
msgstr "바닥"

#, fuzzy
msgid "round"
msgstr "배경(Background)"

msgid "Mathf.Round"
msgstr ""

#, fuzzy
msgid "roundf"
msgstr "배경(Background)"

#, fuzzy
msgid "roundi"
msgstr "배경(Background)"

#, fuzzy
msgid "Mathf.RoundToInt"
msgstr "수학 함수"

msgid "seed"
msgstr ""

msgid "GD.Seed"
msgstr ""

#, fuzzy
msgid "sign"
msgstr "signal"

msgid "Mathf.Sign"
msgstr ""

#, fuzzy
msgid "signf"
msgstr "signal"

#, fuzzy
msgid "signi"
msgstr "signal"

#, fuzzy
msgid "sin"
msgstr "문자열"

#, fuzzy
msgid "Mathf.Sin"
msgstr "수학"

msgid "sinh"
msgstr ""

msgid "Mathf.Sinh"
msgstr ""

msgid "smoothstep"
msgstr ""

msgid "Mathf.SmoothStep"
msgstr ""

msgid "snapped"
msgstr ""

msgid "Mathf.Snapped"
msgstr ""

msgid "snappedf"
msgstr ""

msgid "snappedi"
msgstr ""

msgid "sqrt"
msgstr ""

msgid "Mathf.Sqrt"
msgstr ""

msgid "step_decimals"
msgstr ""

msgid "Mathf.StepDecimals"
msgstr ""

#, fuzzy
msgid "str"
msgstr "문자열"

#, fuzzy
msgid "Use `$ string interpolation`_"
msgstr "벡터 보간"

msgid "str_to_var"
msgstr ""

msgid "GD.StrToVar"
msgstr ""

#, fuzzy
msgid "tan"
msgstr "그리고"

#, fuzzy
msgid "Mathf.Tan"
msgstr "수학"

msgid "tanh"
msgstr ""

msgid "Mathf.Tanh"
msgstr ""

msgid "type_convert"
msgstr ""

msgid "Variant.As<T> or GD.Convert"
msgstr ""

#, fuzzy
msgid "type_string"
msgstr "문자열"

#, fuzzy
msgid "Variant.Type.ToString"
msgstr "변종"

#, fuzzy
msgid "typeof"
msgstr "타입"

#, fuzzy
msgid "Variant.VariantType"
msgstr "``Variant.Type`` 열거형"

msgid "var_to_bytes"
msgstr ""

msgid "GD.VarToBytes"
msgstr ""

msgid "var_to_bytes_with_objects"
msgstr ""

msgid "GD.VarToBytesWithObjects"
msgstr ""

msgid "var_to_str"
msgstr ""

msgid "GD.VarToStr"
msgstr ""

#, fuzzy
msgid "weakref"
msgstr "트윅"

#, fuzzy
msgid "GodotObject.WeakRef"
msgstr "``Object.WeakRef(obj)``"

msgid "wrap"
msgstr ""

msgid "Mathf.Wrap"
msgstr ""

msgid "wrapf"
msgstr ""

msgid "wrapi"
msgstr ""

msgid "List of GDScript utility functions and their equivalent in C#:"
msgstr ""

msgid "assert"
msgstr "assert"

msgid "`System.Diagnostics.Debug.Assert`_"
msgstr ""

msgid "char"
msgstr ""

msgid "Use explicit conversion: ``(char)65``"
msgstr ""

msgid "convert"
msgstr ""

msgid "GD.Convert"
msgstr ""

#, fuzzy
msgid "dict_to_inst"
msgstr "``dict2inst``"

msgid "get_stack"
msgstr ""

msgid "`System.Environment.StackTrace`_"
msgstr ""

#, fuzzy
msgid "inst_to_dict"
msgstr "``inst2dict``"

#, fuzzy
msgid "len"
msgstr "en"

#, fuzzy
msgid "load"
msgstr "preload"

msgid "GD.Load"
msgstr ""

msgid "preload"
msgstr "preload"

msgid "print_debug"
msgstr ""

msgid "print_stack"
msgstr ""

msgid "GD.Print(`System.Environment.StackTrace`_)"
msgstr ""

#, fuzzy
msgid "range"
msgstr "변경사항"

msgid "GD.Range or `System.Linq.Enumerable.Range`_"
msgstr ""

msgid "type_exists"
msgstr ""

msgid "ClassDB.ClassExists(type)"
msgstr ""

msgid ""
"``preload``, as it works in GDScript, is not available in C#. Use ``GD."
"Load`` or ``ResourceLoader.Load`` instead."
msgstr ""
"GDScript에서 쓰이는 ``preload``\\ 는 C#에서 사용할 수 없습니다. 대신 ``GD."
"Load`` 또는 ``ResourceLoader.Load``\\ 를 사용합니다."

#, fuzzy
msgid "``@export`` annotation"
msgstr "내보내기 설정"

#, fuzzy
msgid ""
"Use the ``[Export]`` attribute instead of the GDScript ``@export`` "
"annotation. This attribute can also be provided with optional :ref:"
"`PropertyHint<enum_@GlobalScope_PropertyHint>` and ``hintString`` "
"parameters. Default values can be set by assigning a value."
msgstr ""
"GDScript의 ``export`` 키워드 대신 ``[Export]`` 어트리뷰트를 사용하십시오. 이 "
"어트리뷰트는 필요에 따라 :ref:`PropertyHint<enum_@GlobalScope_PropertyHint>` "
"와 ``hintString`` 매개변수를 포함할 수도 있으며, 값을 전달해 기본값을 설정할 "
"수 있습니다."

#, fuzzy
msgid "See also: :ref:`doc_c_sharp_exports`."
msgstr "다음 또한 확인하십시오: :ref:`c_sharp_signals`."

#, fuzzy
msgid "``signal`` keyword"
msgstr "Signal 키워드"

#, fuzzy
msgid ""
"Use the ``[Signal]`` attribute to declare a signal instead of the GDScript "
"``signal`` keyword. This attribute should be used on a `delegate`, whose "
"name signature will be used to define the signal. The `delegate` must have "
"the ``EventHandler`` suffix, an `event` will be generated in the class with "
"the same name but without the suffix, use that event's name with "
"``EmitSignal``."
msgstr ""
"GDScript의 ``signal`` 키워드 대신 ``[Signal]`` 속성을 사용하여 시그널을 선언"
"합니다. 이 속성은 `delegate`\\ 에 사용되어야 하며, 이름은 시그널을 정의하는 "
"데 사용됩니다."

msgid "See also: :ref:`doc_c_sharp_signals`."
msgstr "다음 또한 확인하십시오: :ref:`c_sharp_signals`."

msgid "`@onready` annotation"
msgstr ""

#, fuzzy
msgid ""
"GDScript has the ability to defer the initialization of a member variable "
"until the ready function is called with `@onready` (cf. :ref:"
"`doc_gdscript_onready_annotation`). For example:"
msgstr ""
"GDScript에서는 아래와 같이 ready 함수가 `onready` (다음을 참조하십시오 :ref:"
"`doc_gdscript_onready_keyword`)로 호출될 때까지 멤버 변수의 초기화를 연기할 "
"수 있습니다:"

msgid ""
"However C# does not have this ability. To achieve the same effect you need "
"to do this."
msgstr ""
"반면 C#에는 이런 기능이 존재하지 않습니다. 같은 효과를 위해서는 아래와 같이 "
"작성해야 합니다."

msgid "Singletons"
msgstr "싱글톤"

msgid ""
"Singletons are available as static classes rather than using the singleton "
"pattern. This is to make code less verbose than it would be with an "
"``Instance`` property."
msgstr ""
"싱글톤은 싱글톤 패턴을 사용하는 대신 정적 클래스로 사용할 수 있습니다. 이것으"
"로 ``Instance`` 속성으로 작업하는 것과 비슷하면서도 더 적은 문장의 코드를 만"
"들 수 있습니다."

#, fuzzy
msgid ""
"However, in some very rare cases this is not enough. For example, you may "
"want to access a member from the base class ``GodotObject``, like "
"``Connect``. For such use cases we provide a static property named "
"``Singleton`` that returns the singleton instance. The type of this instance "
"is ``GodotObject``."
msgstr ""
"하지만, 일부 드문 경우가 있어 충분하지 않습니다. 예를 들어 ``Connect``\\ 처"
"럼 기본 클래스 ``Godot.Object``\\ 의 멤버로 접근해야하는 경우가 있습니다. 이"
"런 경우를 위해, 싱글톤 인스턴스를 반환하는 ``Singleton`` 정적 속성을 제공합니"
"다. 인스턴스의 타입은 ``Godot.Object``\\ 입니다."

msgid "String"
msgstr "String"

#, fuzzy
msgid ""
"Use ``System.String`` (``string``). Most of Godot's String methods have an "
"equivalent in ``System.String`` or are provided by the ``StringExtensions`` "
"class as extension methods."
msgstr ""
"``System.String`` (``string``)을 사용합니다. 모든 Godot 문자열 메서드는 "
"``StringExtensions`` 클래스에서 확장 메서드 형태로 제공됩니다."

msgid ""
"Strings are immutable in .NET, so all methods that manipulate a string don't "
"modify the original string and return a newly created string with the "
"modifications applied. To avoid creating multiple string allocations "
"consider using a `StringBuilder`_."
msgstr ""

msgid "List of Godot's String methods and their equivalent in C#:"
msgstr ""

msgid "begins_with"
msgstr ""

msgid "`string.StartsWith`_"
msgstr ""

msgid "bigrams"
msgstr ""

msgid "StringExtensions.Bigrams"
msgstr ""

msgid "bin_to_int"
msgstr ""

msgid "StringExtensions.BinToInt"
msgstr ""

msgid "c_escape"
msgstr ""

msgid "StringExtensions.CEscape"
msgstr ""

msgid "c_unescape"
msgstr ""

msgid "StringExtensions.CUnescape"
msgstr ""

#, fuzzy
msgid "capitalize"
msgstr "대문자로 시작"

msgid "StringExtensions.Capitalize"
msgstr ""

msgid "casecmp_to"
msgstr ""

msgid ""
"StringExtensions.CasecmpTo or StringExtensions.CompareTo (Consider using "
"`string.Equals`_ or `string.Compare`_)"
msgstr ""

msgid "chr"
msgstr ""

#, fuzzy
msgid "contains"
msgstr "continue"

#, fuzzy
msgid "`string.Contains`_"
msgstr "맞춤 데이터 타입 생성하기"

#, fuzzy
msgid "count"
msgstr "양"

msgid "StringExtensions.Count (Consider using `RegEx`_)"
msgstr ""

#, fuzzy
msgid "countn"
msgstr "양"

msgid "StringExtensions.CountN (Consider using `RegEx`_)"
msgstr ""

msgid "dedent"
msgstr ""

msgid "StringExtensions.Dedent"
msgstr ""

msgid "ends_with"
msgstr ""

msgid "`string.EndsWith`_"
msgstr ""

#, fuzzy
msgid "erase"
msgstr "카메라"

msgid ""
"`string.Remove`_ (Consider using `StringBuilder`_ to manipulate strings)"
msgstr ""

msgid "find"
msgstr ""

msgid ""
"StringExtensions.Find (Consider using `string.IndexOf`_ or `string."
"IndexOfAny`_)"
msgstr ""

msgid "findn"
msgstr ""

msgid ""
"StringExtensions.FindN (Consider using `string.IndexOf`_ or `string."
"IndexOfAny`_)"
msgstr ""

#, fuzzy
msgid "format"
msgstr "형식"

msgid "get_base_dir"
msgstr ""

msgid "StringExtensions.GetBaseDir"
msgstr ""

msgid "get_basename"
msgstr ""

msgid "StringExtensions.GetBaseName"
msgstr ""

#, fuzzy
msgid "get_extension"
msgstr "extends"

msgid "StringExtensions.GetExtension"
msgstr ""

msgid "get_file"
msgstr ""

msgid "StringExtensions.GetFile"
msgstr ""

msgid "get_slice"
msgstr ""

msgid "get_slice_count"
msgstr ""

msgid "get_slicec"
msgstr ""

msgid ""
"StringExtensions.Hash (Consider using `object.GetHashCode`_ unless you need "
"to guarantee the same behavior as in GDScript)"
msgstr ""

msgid "hex_decode"
msgstr ""

msgid ""
"StringExtensions.HexDecode (Consider using `System.Convert.FromHexString`_)"
msgstr ""

msgid "hex_to_int"
msgstr ""

msgid ""
"StringExtensions.HexToInt (Consider using `int.Parse`_ or `long.Parse`_ with "
"`System.Globalization.NumberStyles.HexNumber`_)"
msgstr ""

msgid "humanize_size"
msgstr ""

#, fuzzy
msgid "indent"
msgstr "인덱스"

msgid "StringExtensions.Indent"
msgstr ""

#, fuzzy
msgid "insert"
msgstr "assert"

msgid ""
"`string.Insert`_ (Consider using `StringBuilder`_ to manipulate strings)"
msgstr ""

msgid "is_absolute_path"
msgstr ""

msgid "StringExtensions.IsAbsolutePath"
msgstr ""

msgid "is_empty"
msgstr ""

msgid "`string.IsNullOrEmpty`_ or `string.IsNullOrWhiteSpace`_"
msgstr ""

msgid "is_relative_path"
msgstr ""

msgid "StringExtensions.IsRelativePath"
msgstr ""

msgid "is_subsequence_of"
msgstr ""

msgid "StringExtensions.IsSubsequenceOf"
msgstr ""

msgid "is_subsequence_ofn"
msgstr ""

msgid "StringExtensions.IsSubsequenceOfN"
msgstr ""

msgid "is_valid_filename"
msgstr ""

msgid "StringExtensions.IsValidFileName"
msgstr ""

msgid "is_valid_float"
msgstr ""

msgid ""
"StringExtensions.IsValidFloat (Consider using `float.TryParse`_ or `double."
"TryParse`_)"
msgstr ""

msgid "is_valid_hex_number"
msgstr ""

msgid "StringExtensions.IsValidHexNumber"
msgstr ""

msgid "is_valid_html_color"
msgstr ""

msgid "StringExtensions.IsValidHtmlColor"
msgstr ""

#, fuzzy
msgid "is_valid_identifier"
msgstr "식별자(Identifier)"

msgid "StringExtensions.IsValidIdentifier"
msgstr ""

msgid "is_valid_int"
msgstr ""

msgid ""
"StringExtensions.IsValidInt (Consider using `int.TryParse`_ or `long."
"TryParse`_)"
msgstr ""

msgid "is_valid_ip_address"
msgstr ""

msgid "StringExtensions.IsValidIPAddress"
msgstr ""

msgid "join"
msgstr ""

#, fuzzy
msgid "`string.Join`_"
msgstr "문자열"

msgid "json_escape"
msgstr ""

msgid "StringExtensions.JSONEscape"
msgstr ""

msgid "left"
msgstr ""

msgid ""
"StringExtensions.Left (Consider using `string.Substring`_ or `string."
"AsSpan`_)"
msgstr ""

#, fuzzy
msgid "length"
msgstr "줄 길이"

#, fuzzy
msgid "`string.Length`_"
msgstr "줄 길이"

msgid "lpad"
msgstr ""

msgid "`string.PadLeft`_"
msgstr ""

#, fuzzy
msgid "lstrip"
msgstr "문자열"

msgid "`string.TrimStart`_"
msgstr ""

msgid "match"
msgstr "match"

msgid "StringExtensions.Match (Consider using `RegEx`_)"
msgstr ""

#, fuzzy
msgid "matchn"
msgstr "match"

msgid "StringExtensions.MatchN (Consider using `RegEx`_)"
msgstr ""

msgid "md5_buffer"
msgstr ""

msgid ""
"StringExtensions.Md5Buffer (Consider using `System.Security.Cryptography.MD5."
"HashData`_)"
msgstr ""

msgid "md5_text"
msgstr ""

msgid ""
"StringExtensions.Md5Text (Consider using `System.Security.Cryptography.MD5."
"HashData`_ with StringExtensions.HexEncode)"
msgstr ""

msgid "naturalnocasecmp_to"
msgstr ""

msgid "N/A (Consider using `string.Equals`_ or `string.Compare`_)"
msgstr ""

msgid "nocasecmp_to"
msgstr ""

msgid ""
"StringExtensions.NocasecmpTo or StringExtensions.CompareTo (Consider using "
"`string.Equals`_ or `string.Compare`_)"
msgstr ""

#, fuzzy
msgid "num"
msgstr "enum"

msgid "`float.ToString`_ or `double.ToString`_"
msgstr ""

msgid "num_int64"
msgstr ""

msgid "`int.ToString`_ or `long.ToString`_"
msgstr ""

msgid "num_scientific"
msgstr ""

msgid "num_uint64"
msgstr ""

msgid "`uint.ToString`_ or `ulong.ToString`_"
msgstr ""

msgid "pad_decimals"
msgstr ""

msgid "StringExtensions.PadDecimals"
msgstr ""

msgid "pad_zeros"
msgstr ""

msgid "StringExtensions.PadZeros"
msgstr ""

msgid "path_join"
msgstr ""

msgid "StringExtensions.PathJoin"
msgstr ""

#, fuzzy
msgid "repeat"
msgstr "반복"

msgid "Use `string constructor`_ or a `StringBuilder`_"
msgstr ""

#, fuzzy
msgid "replace"
msgstr "바꾸기"

msgid "`string.Replace`_ or `RegEx`_"
msgstr ""

#, fuzzy
msgid "replacen"
msgstr "바꾸기"

msgid ""
"StringExtensions.ReplaceN (Consider using `string.Replace`_ or `RegEx`_)"
msgstr ""

#, fuzzy
msgid "reverse"
msgstr "**Server**"

msgid "rfind"
msgstr ""

msgid ""
"StringExtensions.RFind (Consider using `string.LastIndexOf`_ or `string."
"LastIndexOfAny`_)"
msgstr ""

msgid "rfindn"
msgstr ""

msgid ""
"StringExtensions.RFindN (Consider using `string.LastIndexOf`_ or `string."
"LastIndexOfAny`_)"
msgstr ""

#, fuzzy
msgid "right"
msgstr "빛"

msgid ""
"StringExtensions.Right (Consider using `string.Substring`_ or `string."
"AsSpan`_)"
msgstr ""

msgid "rpad"
msgstr ""

msgid "`string.PadRight`_"
msgstr ""

msgid "rsplit"
msgstr ""

#, fuzzy
msgid "rstrip"
msgstr "문자열"

msgid "`string.TrimEnd`_"
msgstr ""

msgid "sha1_buffer"
msgstr ""

msgid ""
"StringExtensions.Sha1Buffer (Consider using `System.Security.Cryptography."
"SHA1.HashData`_)"
msgstr ""

msgid "sha1_text"
msgstr ""

msgid ""
"StringExtensions.Sha1Text (Consider using `System.Security.Cryptography.SHA1."
"HashData`_ with StringExtensions.HexEncode)"
msgstr ""

msgid "sha256_buffer"
msgstr ""

msgid ""
"StringExtensions.Sha256Buffer (Consider using `System.Security.Cryptography."
"SHA256.HashData`_)"
msgstr ""

msgid "sha256_text"
msgstr ""

msgid ""
"StringExtensions.Sha256Text (Consider using `System.Security.Cryptography."
"SHA256.HashData`_ with StringExtensions.HexEncode)"
msgstr ""

msgid "similarity"
msgstr ""

msgid "StringExtensions.Similarity"
msgstr ""

msgid "simplify_path"
msgstr ""

msgid "StringExtensions.SimplifyPath"
msgstr ""

msgid "split"
msgstr ""

msgid "StringExtensions.Split (Consider using `string.Split`_)"
msgstr ""

msgid "split_floats"
msgstr ""

msgid "StringExtensions.SplitFloat"
msgstr ""

msgid "strip_edges"
msgstr ""

msgid ""
"StringExtensions.StripEdges (Consider using `string.Trim`_, `string."
"TrimStart`_ or `string.TrimEnd`_)"
msgstr ""

msgid "strip_escapes"
msgstr ""

msgid "StringExtensions.StripEscapes"
msgstr ""

msgid "substr"
msgstr ""

msgid ""
"StringExtensions.Substr (Consider using `string.Substring`_ or `string."
"AsSpan`_)"
msgstr ""

msgid "to_ascii_buffer"
msgstr ""

msgid ""
"StringExtensions.ToAsciiBuffer (Consider using `System.Text.Encoding.ASCII."
"GetBytes`_)"
msgstr ""

msgid "to_camel_case"
msgstr ""

msgid "StringExtensions.ToCamelCase"
msgstr ""

#, fuzzy
msgid "to_float"
msgstr "float"

msgid ""
"StringExtensions.ToFloat (Consider using `float.TryParse`_ or `double."
"TryParse`_)"
msgstr ""

msgid "to_int"
msgstr ""

msgid ""
"StringExtensions.ToInt (Consider using `int.TryParse`_ or `long.TryParse`_)"
msgstr ""

msgid "to_lower"
msgstr ""

msgid "`string.ToLower`_"
msgstr ""

msgid "to_pascal_case"
msgstr ""

msgid "StringExtensions.ToPascalCase"
msgstr ""

msgid "to_snake_case"
msgstr ""

msgid "StringExtensions.ToSnakeCase"
msgstr ""

msgid "to_upper"
msgstr ""

msgid "`string.ToUpper`_"
msgstr ""

msgid "to_utf16_buffer"
msgstr ""

msgid ""
"StringExtensions.ToUtf16Buffer (Consider using `System.Text.Encoding.UTF16."
"GetBytes`_)"
msgstr ""

msgid "to_utf32_buffer"
msgstr ""

msgid ""
"StringExtensions.ToUtf32Buffer (Consider using `System.Text.Encoding.UTF32."
"GetBytes`_)"
msgstr ""

msgid "to_utf8_buffer"
msgstr ""

msgid ""
"StringExtensions.ToUtf8Buffer (Consider using `System.Text.Encoding.UTF8."
"GetBytes`_)"
msgstr ""

msgid "to_wchar_buffer"
msgstr ""

msgid ""
"StringExtensions.ToUtf16Buffer in Windows and StringExtensions.ToUtf32Buffer "
"in other platforms"
msgstr ""

msgid "trim_prefix"
msgstr ""

msgid "StringExtensions.TrimPrefix"
msgstr ""

msgid "trim_suffix"
msgstr ""

msgid "StringExtensions.TrimSuffix"
msgstr ""

msgid "unicode_at"
msgstr ""

msgid "`string[int]`_ indexer"
msgstr ""

msgid "uri_decode"
msgstr ""

msgid ""
"StringExtensions.URIDecode (Consider using `System.Uri.UnescapeDataString`_)"
msgstr ""

#, fuzzy
msgid "uri_encode"
msgstr "RigidBody2D 사용하기"

msgid ""
"StringExtensions.URIEncode (Consider using `System.Uri.EscapeDataString`_)"
msgstr ""

msgid "validate_node_name"
msgstr ""

msgid "StringExtensions.ValidateNodeName"
msgstr ""

msgid "xml_escape"
msgstr ""

msgid "StringExtensions.XMLEscape"
msgstr ""

msgid "xml_unescape"
msgstr ""

msgid "StringExtensions.XMLUnescape"
msgstr ""

msgid ""
"List of Godot's PackedByteArray methods that create a String and their C# "
"equivalent:"
msgstr ""

msgid "get_string_from_ascii"
msgstr ""

msgid ""
"StringExtensions.GetStringFromAscii (Consider using `System.Text.Encoding."
"ASCII.GetString`_)"
msgstr ""

msgid "get_string_from_utf16"
msgstr ""

msgid ""
"StringExtensions.GetStringFromUtf16 (Consider using `System.Text.Encoding."
"UTF16.GetString`_)"
msgstr ""

msgid "get_string_from_utf32"
msgstr ""

msgid ""
"StringExtensions.GetStringFromUtf32 (Consider using `System.Text.Encoding."
"UTF32.GetString`_)"
msgstr ""

msgid "get_string_from_utf8"
msgstr ""

msgid ""
"StringExtensions.GetStringFromUtf8 (Consider using `System.Text.Encoding."
"UTF8.GetString`_)"
msgstr ""

msgid "hex_encode"
msgstr ""

msgid ""
"StringExtensions.HexEncode (Consider using `System.Convert.ToHexString`_)"
msgstr ""

msgid ""
".NET contains many path utility methods available under the `System.IO."
"Path`_ class that can be used when not dealing with Godot paths (paths that "
"start with ``res://`` or ``user://``)"
msgstr ""

msgid "NodePath"
msgstr ""

msgid "The following method was converted to a property with a different name:"
msgstr "다음 메서드들는 다른 이름으로 변경된 속성들입니다:"

#, fuzzy
msgid "``is_empty()``"
msgstr "``center()``"

msgid "``IsEmpty``"
msgstr ""

msgid "Signal"
msgstr "시그널"

msgid ""
"The following methods were converted to properties with their respective "
"names changed:"
msgstr "다음 메서드들은 관련된 이름으로 변경된 속성들입니다:"

#, fuzzy
msgid "``get_name()``"
msgstr "``get_area()``"

msgid "``Name``"
msgstr ""

#, fuzzy
msgid "``get_object()``"
msgstr "``get_area()``"

#, fuzzy
msgid "``Owner``"
msgstr "``Center``"

msgid ""
"The ``Signal`` type implements the awaitable pattern which means it can be "
"used with the ``await`` keyword. See :ref:`doc_c_sharp_differences_await`."
msgstr ""

msgid ""
"Instead of using the ``Signal`` type, the recommended way to use Godot "
"signals in C# is to use the generated C# events. See :ref:"
"`doc_c_sharp_signals`."
msgstr ""

#, fuzzy
msgid "Callable"
msgstr "Call(호출)"

#, fuzzy
msgid "``Target``"
msgstr "대상"

#, fuzzy
msgid "``get_method()``"
msgstr "메서드"

#, fuzzy
msgid "``Method``"
msgstr "메서드"

msgid "Currently C# supports ``Callable`` if one of the following holds:"
msgstr ""

msgid "``Callable`` was created using the C# ``Callable`` type."
msgstr ""

msgid ""
"``Callable`` is a basic version of the engine's ``Callable``. Custom "
"``Callable``\\ s are unsupported. A ``Callable`` is custom when any of the "
"following holds:"
msgstr ""

msgid ""
"``Callable`` has bound information (``Callable``\\ s created with ``bind``/"
"``unbind`` are unsupported)."
msgstr ""

msgid ""
"``Callable`` was created from other languages through the GDExtension API."
msgstr ""

msgid ""
"Some methods such as ``bind`` and ``unbind`` are not implemented, use "
"lambdas instead:"
msgstr ""

msgid ""
"The lambda captures the ``name`` variable so it can be bound to the "
"``SayHello`` method."
msgstr ""

msgid "RID"
msgstr ""

#, fuzzy
msgid "This type is named ``Rid`` in C# to follow the .NET naming convention."
msgstr "이 프로젝트에서, 우리는 Godot의 명명 규칙을 따를 것입니다."

#, fuzzy
msgid "``get_id()``"
msgstr "``get_area()``"

msgid "``Id``"
msgstr ""

#, fuzzy
msgid "``is_valid()``"
msgstr "``is_instance_valid(obj)``"

msgid "``IsValid``"
msgstr ""

msgid "Basis"
msgstr "기저"

msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Basis()`` initializes all primitive members to their default value. Use "
"``Basis.Identity`` for the equivalent of ``Basis()`` in GDScript and C++."
msgstr ""
"C#에서 Struct은 매개변수 없는 생성자를 가질 수 없습니다. 따라서 ``new "
"Basis()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C++에서 "
"``Basis()``\\ 에 해당하는 것으로 ``Basis.Identity``\\ 를 사용합니다."

msgid "``get_scale()``"
msgstr "``get_scale()``"

msgid "``Scale``"
msgstr "``Scale``"

msgid "Transform2D"
msgstr "Transform2D"

msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Transform2D()`` initializes all primitive members to their default value. "
"Please use ``Transform2D.Identity`` for the equivalent of ``Transform2D()`` "
"in GDScript and C++."
msgstr ""
"C#에서 Struct는 매개변수 없는 생성자를 가질 수 없습니다. 따라서, ``new "
"Transform2D()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C+"
"+에서 ``Transform2D()``\\ 에 해당하는 것으로 ``Transform2D.Identity``\\ 를 사"
"용해주세요."

msgid "``get_rotation()``"
msgstr "``get_rotation()``"

msgid "``Rotation``"
msgstr "``Rotation``"

#, fuzzy
msgid "``get_skew()``"
msgstr "``get_scale()``"

msgid "``Skew``"
msgstr ""

#, fuzzy
msgid "Transform3D"
msgstr "Transform2D"

#, fuzzy
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Transform3D()`` initializes all primitive members to their default value. "
"Please use ``Transform3D.Identity`` for the equivalent of ``Transform3D()`` "
"in GDScript and C++."
msgstr ""
"C#에서 Struct는 매개변수 없는 생성자를 가질 수 없습니다. 따라서, ``new "
"Transform2D()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C+"
"+에서 ``Transform2D()``\\ 에 해당하는 것으로 ``Transform2D.Identity``\\ 를 사"
"용해주세요."

msgid "Rect2"
msgstr "Rect2"

msgid ""
"The following field was converted to a property with a *slightly* different "
"name:"
msgstr "다음 영역은 *약간* 다른 이름으로 변경된 속성입니다:"

msgid "``end``"
msgstr "``end``"

msgid "``End``"
msgstr "``End``"

msgid "``get_area()``"
msgstr "``get_area()``"

msgid "``Area``"
msgstr "``Area``"

#, fuzzy
msgid "Rect2i"
msgstr "Rect2"

msgid ""
"This type is named ``Rect2I`` in C# to follow the .NET naming convention."
msgstr ""

msgid "AABB"
msgstr ""

#, fuzzy
msgid "This type is named ``Aabb`` in C# to follow the .NET naming convention."
msgstr "이 프로젝트에서, 우리는 Godot의 명명 규칙을 따를 것입니다."

#, fuzzy
msgid "``get_volume()``"
msgstr "``get_scale()``"

msgid "``Volume``"
msgstr ""

msgid "Quaternion"
msgstr ""

#, fuzzy
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Quaternion()`` initializes all primitive members to their default value. "
"Please use ``Quaternion.Identity`` for the equivalent of ``Quaternion()`` in "
"GDScript and C++."
msgstr ""
"C#에서 Struct는 매개변수 없는 생성자를 가질 수 없습니다. 따라서, ``new "
"Quat()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C++에서 "
"``Quat()``\\ 에 해당하는 것으로 ``Quat.Identity``\\ 를 사용해주세요."

#, fuzzy
msgid "Projection"
msgstr "방향"

#, fuzzy
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Projection()`` initializes all primitive members to their default value. "
"Please use ``Projection.Identity`` for the equivalent of ``Projection()`` in "
"GDScript and C++."
msgstr ""
"C#에서 Struct는 매개변수 없는 생성자를 가질 수 없습니다. 따라서, ``new "
"Quat()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C++에서 "
"``Quat()``\\ 에 해당하는 것으로 ``Quat.Identity``\\ 를 사용해주세요."

msgid "Color"
msgstr "색상"

#, fuzzy
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Color()`` initializes all primitive members to their default value (which "
"represents the transparent black color). Please use ``Colors.Black`` for the "
"equivalent of ``Color()`` in GDScript and C++."
msgstr ""
"C#에서 Struct는 매개변수 없는 생성자를 가질 수 없습니다. 따라서, ``new "
"Quat()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C++에서 "
"``Quat()``\\ 에 해당하는 것으로 ``Quat.Identity``\\ 를 사용해주세요."

msgid ""
"The global ``Color8`` method to construct a Color from bytes is available as "
"a static method in the Color type."
msgstr ""

msgid ""
"The Color constants are available in the ``Colors`` static class as readonly "
"properties."
msgstr ""

#, fuzzy
msgid "``get_luminance()``"
msgstr "``get_area()``"

#, fuzzy
msgid "``Luminance``"
msgstr "``inst2dict``"

#, fuzzy
msgid "The following method was converted to a method with a different name:"
msgstr "다음 메서드들는 다른 이름으로 변경된 속성들입니다:"

#, fuzzy
msgid "``html(String)``"
msgstr "``String[]``"

msgid "``FromHtml(ReadOnlySpan<char>)``"
msgstr ""

msgid "The following methods are available as constructors:"
msgstr ""

msgid "``hex(int)``"
msgstr ""

#, fuzzy
msgid "``Color(uint)``"
msgstr "``Color8``"

msgid "``hex64(int)``"
msgstr ""

#, fuzzy
msgid "``Color(ulong)``"
msgstr "``Color8``"

msgid "Array"
msgstr "배열"

msgid "The equivalent of packed arrays are ``System.Array``."
msgstr ""

msgid ""
"See also :ref:`PackedArray in C# <doc_c_sharp_collections_packedarray>`."
msgstr ""

#, fuzzy
msgid ""
"Use ``Godot.Collections.Array`` for an untyped ``Variant`` array. ``Godot."
"Collections.Array<T>`` is a type-safe wrapper around ``Godot.Collections."
"Array``."
msgstr ""
"``Godot.Collections.Array<T>`` 는 ``Godot.Collections.Array`` 를 둘러싸는 "
"type-safe wrapper 입니다. ``Godot.Collections.Array<T>(Godot.Collections."
"Array)`` 생성자를 사용해 만들 수 있습니다."

#, fuzzy
msgid "See also :ref:`Array in C# <doc_c_sharp_collections_array>`."
msgstr "다음 또한 확인하십시오: :ref:`c_sharp_signals`."

msgid "Dictionary"
msgstr "딕셔너리"

#, fuzzy
msgid ""
"Use ``Godot.Collections.Dictionary`` for an untyped ``Variant`` dictionary. "
"``Godot.Collections.Dictionary<TKey, TValue>`` is a type-safe wrapper around "
"``Godot.Collections.Dictionary``."
msgstr ""
"``Godot.Collections.Dictionary<T>`` 는 ``Godot.Collections.Dictionary`` 를 둘"
"러싸는 type-safe wrapper입니다. ``Godot.Collections.Dictionary<T>(Godot."
"Collections.Dictionary)`` 생성자를 사용해 만들 수 있습니다."

#, fuzzy
msgid "See also :ref:`Dictionary in C# <doc_c_sharp_collections_dictionary>`."
msgstr ":ref:`Dictionary <class_Dictionary>`"

msgid "Variant"
msgstr "변종"

msgid ""
"``Godot.Variant`` is used to represent Godot's native :ref:`Variant "
"<class_Variant>` type. Any Variant-compatible type can be converted from/to "
"it."
msgstr ""

#, fuzzy
msgid "See also: :ref:`doc_c_sharp_variant`."
msgstr "다음 또한 확인하십시오: :ref:`c_sharp_signals`."

msgid "Communicating with other scripting languages"
msgstr "다른 스크립팅 언어와 소통하기"

msgid "This is explained extensively in :ref:`doc_cross_language_scripting`."
msgstr ""
"이것은 : ref :`doc_cross_language_scripting`에 광범위하게 설명되어 있습니다."

#, fuzzy
msgid "``await`` keyword"
msgstr "`onready` 키워드"

#, fuzzy
msgid ""
"Something similar to GDScript's ``await`` keyword can be achieved with C#'s "
"`await keyword <https://docs.microsoft.com/en-US/dotnet/csharp/language-"
"reference/keywords/await>`_."
msgstr ""
"단일 매개변수를 사용하는 GDScript의 ``yield``\\ 와 비슷한 C#의 `yield 키워드 "
"<https://docs.microsoft.com/ko/dotnet/csharp/language-reference/keywords/"
"yield>`_."

msgid ""
"The ``await`` keyword in C# can be used with any awaitable expression. It's "
"commonly used with operands of the types `Task`_, `Task<TResult>`_, "
"`ValueTask`_, or `ValueTask<TResult>`_."
msgstr ""

#, fuzzy
msgid "An expression ``t`` is awaitable if one of the following holds:"
msgstr "응답 이벤트는 다음 필드가 있는 딕셔너리일 것입니다:"

msgid "``t`` is of compile-time type ``dynamic``."
msgstr ""

msgid ""
"``t`` has an accessible instance or extension method called ``GetAwaiter`` "
"with no parameters and no type parameters, and a return type ``A`` for which "
"all of the following hold:"
msgstr ""

msgid ""
"``A`` implements the interface ``System.Runtime.CompilerServices."
"INotifyCompletion``."
msgstr ""

msgid ""
"``A`` has an accessible, readable instance property ``IsCompleted`` of type "
"``bool``."
msgstr ""

msgid ""
"``A`` has an accessible instance method ``GetResult`` with no parameters and "
"no type parameters."
msgstr ""

#, fuzzy
msgid ""
"An equivalent of awaiting a signal in GDScript can be achieved with the "
"``await`` keyword and ``GodotObject.ToSignal``."
msgstr ""
"async/await와 ``Godot.Object.ToSignal``\\로 시그널에서 yield와 동일한 효과를 "
"얻을 수 있습니다."

msgid "Translation status"
msgstr "번역 상태"
