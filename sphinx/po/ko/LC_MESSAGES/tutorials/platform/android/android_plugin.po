# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Godot Android plugins"
msgstr "플러그인에 대해서"

msgid "Introduction"
msgstr "소개"

msgid ""
"Android plugins are powerful tools to extend the capabilities of the Godot "
"engine by tapping into the functionality provided by Android platforms and "
"ecosystem."
msgstr ""

msgid ""
"For example in Godot 4, Android plugins are used to support multiple Android-"
"based XR platforms without encumbering the core codebase with vendor "
"specific code or binaries."
msgstr ""

#, fuzzy
msgid "Android plugin"
msgstr "Android"

msgid ""
"**Version 1 (v1)** of the Android plugin system was introduced in Godot 3 "
"and compatible with Godot 4.0 and 4.1. That version allowed developers to "
"augment the Godot engine with Java, Kotlin and native functionality."
msgstr ""

msgid ""
"Starting in Godot 4.2, Android plugins built on the v1 architecture are now "
"deprecated. Instead, Godot 4.2 introduces a new **Version 2 (v2)** "
"architecture for Android plugins."
msgstr ""

#, fuzzy
msgid "v2 Architecture"
msgstr "텍스처"

msgid ""
"Godot Android plugin leverages the :ref:`Gradle build system "
"<doc_android_gradle_build>`."
msgstr ""

msgid ""
"Building on the previous v1 architecture, Android plugins continue to be "
"derived from the `Android archive library <https://developer.android.com/"
"studio/projects/android-library#aar-contents>`_."
msgstr ""

msgid ""
"At its core, a Godot Android plugin v2 is an Android library with a "
"dependency on the :ref:`Godot Android library <doc_android_library>`, and a "
"custom Android library manifest."
msgstr ""

msgid ""
"This architecture allows Android plugins to extend the functionality of the "
"engine with:"
msgstr ""

#, fuzzy
msgid "Android platform APIs"
msgstr "Android SDK Platform 29"

#, fuzzy
msgid "Android libraries"
msgstr "플랫폼 이름."

#, fuzzy
msgid "Kotlin and Java libraries"
msgstr "애니메이션 트리"

msgid "Native libraries (via JNI)"
msgstr ""

#, fuzzy
msgid "GDExtension libraries"
msgstr "능동적 개발 고려사항"

msgid ""
"Each plugin has an init class extending from the `GodotPlugin <https://"
"github.com/godotengine/godot/blob/0a7f75ec7b465604b6496c8f5f1d638aed250d6d/"
"platform/android/java/lib/src/org/godotengine/godot/plugin/GodotPlugin."
"java#L80>`_ class which is provided by the :ref:`Godot Android library "
"<doc_android_library>`."
msgstr ""

msgid ""
"The ``GodotPlugin`` class provides APIs to access the running Godot instance "
"and hook into its lifecycle. It is loaded at runtime by the Godot engine."
msgstr ""

msgid "v2 Packaging format"
msgstr ""

msgid ""
"v1 Android plugins required a custom ``gdap`` configuration file that was "
"used by the Godot Editor to detect and load them. However this approach had "
"several drawbacks, primary ones being that it lacked flexibility and "
"departed from the `existing Godot EditorExportPlugin format, delivery and "
"installation flow <https://docs.godotengine.org/en/stable/tutorials/plugins/"
"editor/installing_plugins.html>`_."
msgstr ""

msgid ""
"This has been resolved for v2 Android plugins by deprecating the ``gdap`` "
"packaging and configuration mechanism in favor of the existing Godot "
"``EditorExportPlugin`` packaging format. The ``EditorExportPlugin`` API in "
"turn has been extended to properly support Android plugins."
msgstr ""

#, fuzzy
msgid "Building a v2 Android plugin"
msgstr "간단한 플러그인 만들기"

msgid ""
"A github project template **is provided** at https://github.com/m4gr3d/Godot-"
"Android-Plugin-Template as a **quickstart for building Godot Android plugins "
"for Godot 4.2+**. You can follow the `template README <https://github.com/"
"m4gr3d/Godot-Android-Plugin-Template#readme>`_ to set up your own Godot "
"Android plugin project."
msgstr ""

msgid ""
"To provide further understanding, here is a break-down of the steps used to "
"create the project template:"
msgstr ""

#, fuzzy
msgid ""
"Create an Android library module using `these instructions <https://"
"developer.android.com/studio/projects/android-library>`_"
msgstr ""
"실행한 뒤 `설명 <https://developer.android.com/studio/intro/update#sdk-"
"manager>`__ 을 참고해 SDK 설정을 마치십시오."

msgid ""
"Add the Godot Android library as a dependency by updating the module's "
"``gradle`` `build file <https://github.com/m4gr3d/Godot-Android-Plugin-"
"Template/blob/main/plugin/build.gradle.kts#L42>`_::"
msgstr ""

msgid ""
"The Godot Android library is `hosted on MavenCentral <https://central."
"sonatype.com/artifact/org.godotengine/godot>`_, and updated for each release."
msgstr ""

msgid ""
"Create `GodotAndroidPlugin <https://github.com/m4gr3d/Godot-Android-Plugin-"
"Template/blob/a01286b4cb459133bf07b11dfabdfd3980268797/plugin/src/main/java/"
"org/godotengine/plugin/android/template/GodotAndroidPlugin.kt#L10>`_, an "
"init class for the plugin extending `GodotPlugin <https://github.com/"
"godotengine/godot/blob/0a7f75ec7b465604b6496c8f5f1d638aed250d6d/platform/"
"android/java/lib/src/org/godotengine/godot/plugin/GodotPlugin.java#L80>`_."
msgstr ""

msgid ""
"If the plugin exposes Kotlin or Java methods to be called from GDScript, "
"they must be annotated with `@UsedByGodot <https://github.com/godotengine/"
"godot/blob/0a7f75ec7b465604b6496c8f5f1d638aed250d6d/platform/android/java/"
"lib/src/org/godotengine/godot/plugin/UsedByGodot.java#L45>`_. The name "
"called from GDScript **must match the method name exactly**. There is **no** "
"coercing ``snake_case`` to ``camelCase``. For example, from GDScript::"
msgstr ""

msgid ""
"If the plugin uses `signals <https://docs.godotengine.org/en/stable/"
"getting_started/step_by_step/signals.html>`_, the init class must return the "
"set of signals used by overriding `GodotPlugin::getPluginSignals() <https://"
"github.com/godotengine/godot/blob/fa3428ff25bc577d2a3433090478a6d615567056/"
"platform/android/java/lib/src/org/godotengine/godot/plugin/GodotPlugin."
"java#L302>`_. To emit signals, the plugin can use the `GodotPlugin::"
"emitSignal(...) method <https://github.com/godotengine/godot/"
"blob/0a7f75ec7b465604b6496c8f5f1d638aed250d6d/platform/android/java/lib/src/"
"org/godotengine/godot/plugin/GodotPlugin.java#L317>`_."
msgstr ""

msgid ""
"Update the plugin ``AndroidManifest.xml`` `file <https://github.com/m4gr3d/"
"Godot-Android-Plugin-Template/blob/main/plugin/src/main/AndroidManifest."
"xml>`_ with the following meta-data::"
msgstr ""

msgid "Where:"
msgstr ""

msgid "``PluginName`` is the name of the plugin"
msgstr ""

msgid ""
"``plugin.init.ClassFullName`` is the full component name (package + class "
"name) of the plugin init class (e.g: ``org.godotengine.plugin.android."
"template.GodotAndroidPlugin``)."
msgstr ""

msgid ""
"Create the `EditorExportPlugin configuration <https://github.com/m4gr3d/"
"Godot-Android-Plugin-Template/tree/main/plugin/export_scripts_template>`_ to "
"package the plugin. The steps used to create the configuration can be seen "
"in the `Packaging a v2 Android plugin`_ section."
msgstr ""

msgid "Building a v2 Android plugin with GDExtension capabilities"
msgstr ""

msgid ""
"Similar to GDNative support in v1 Android plugins, v2 Android plugins "
"support the ability to integrate GDExtension capabilities."
msgstr ""

msgid ""
"A github project template is provided at https://github.com/m4gr3d/"
"GDExtension-Android-Plugin-Template as a quickstart for building GDExtension "
"Android plugins for Godot 4.2+. You can follow the `template's README "
"<https://github.com/m4gr3d/GDExtension-Android-Plugin-Template#readme>`_ to "
"set up your own Godot Android plugin project."
msgstr ""

#, fuzzy
msgid "Migrating a v1 Android plugin to v2"
msgstr "플러그인에 대해서"

msgid ""
"Use the following steps if you have a v1 Android plugin you want to migrate "
"to v2:"
msgstr ""

msgid "Update the plugin's manifest file:"
msgstr ""

msgid ""
"Change the ``org.godotengine.plugin.v1`` prefix to ``org.godotengine.plugin."
"v2``"
msgstr ""

msgid "Update the Godot Android library build dependency:"
msgstr ""

msgid ""
"You can continue using the ``godot-lib.<version>.<status>.aar`` binary from "
"`Godot's download page <https://godotengine.org/download>`_ if that's your "
"preference. Make sure it's updated to the latest stable version."
msgstr ""

msgid "Or you can switch to the MavenCentral provided dependency::"
msgstr ""

msgid ""
"After updating the Godot Android library dependency, sync or build the "
"plugin and resolve any compile errors:"
msgstr ""

msgid ""
"The ``Godot`` instance provided by ``GodotPlugin::getGodot()`` no longer has "
"access to a ``android.content.Context`` reference. Use ``GodotPlugin::"
"getActivity()`` instead."
msgstr ""

msgid ""
"Delete the ``gdap`` configuration file(s) and follow the instructions in the "
"`Packaging a v2 Android plugin`_ section to set up the plugin configuration."
msgstr ""

#, fuzzy
msgid "Packaging a v2 Android plugin"
msgstr "간단한 플러그인 만들기"

msgid ""
"As mentioned, a v2 Android plugin is now provided to the Godot Editor as an "
"``EditorExportPlugin`` plugin, so it shares a lot of the `same packaging "
"steps <https://docs.godotengine.org/en/stable/tutorials/plugins/editor/"
"making_plugins.html#creating-a-plugin>`_."
msgstr ""

msgid ""
"Add the plugin output binaries within the plugin directory (e.g: in ``addons/"
"<plugin_name>/``)"
msgstr ""

msgid ""
"Add the `tool script <https://docs.godotengine.org/en/stable/tutorials/"
"plugins/editor/making_plugins.html#the-script-file>`_ for the export "
"functionality within the plugin directory (e.g: in ``addons/<plugin_name>/``)"
msgstr ""

msgid ""
"The created script must be a ``@tool`` script, or else it will not work "
"properly"
msgstr ""

msgid ""
"The export tool script is used to configure the Android plugin and hook it "
"within the Godot Editor's export process. It should look something like "
"this::"
msgstr ""

msgid ""
"Here are the set of `EditorExportPlugin APIs <https://docs.godotengine.org/"
"en/stable/classes/class_editorexportplugin.html>`_ most relevant to use in "
"this tool script:"
msgstr ""

msgid ""
"`_supports_platform <https://docs.godotengine.org/en/latest/classes/"
"class_editorexportplugin.html#class-editorexportplugin-method-supports-"
"platform>`_: returns ``true`` if the plugin supports the given platform. For "
"Android plugins, this must return ``true`` when ``platform`` is "
"`EditorExportPlatformAndroid <https://docs.godotengine.org/en/stable/classes/"
"class_editorexportplatformandroid.html>`_"
msgstr ""

msgid ""
"`_get_android_libraries <https://docs.godotengine.org/en/latest/classes/"
"class_editorexportplugin.html#class-editorexportplugin-method-get-android-"
"libraries>`_: retrieve the local paths of the Android libraries binaries "
"(AAR files) provided by the plugin"
msgstr ""

msgid ""
"`_get_android_dependencies <https://docs.godotengine.org/en/latest/classes/"
"class_editorexportplugin.html#class-editorexportplugin-method-get-android-"
"dependencies>`_: retrieve the set of Android maven dependencies (e.g: `org."
"godot.example:my-plugin:0.0.0`) provided by the plugin"
msgstr ""

msgid ""
"`_get_android_dependencies_maven_repos <https://docs.godotengine.org/en/"
"latest/classes/class_editorexportplugin.html#class-editorexportplugin-method-"
"get-android-dependencies-maven-repos>`_: retrieve the urls of the maven "
"repos for the android dependencies provided by ``_get_android_dependencies``"
msgstr ""

msgid ""
"`_get_android_manifest_activity_element_contents <https://docs.godotengine."
"org/en/latest/classes/class_editorexportplugin.html#class-editorexportplugin-"
"method-get-android-manifest-activity-element-contents>`_: update the "
"contents of the `<activity>` element in the generated Android manifest"
msgstr ""

msgid ""
"`_get_android_manifest_application_element_contents <https://docs."
"godotengine.org/en/latest/classes/class_editorexportplugin.html#class-"
"editorexportplugin-method-get-android-manifest-application-element-"
"contents>`_: update the contents of the `<application>` element in the "
"generated Android manifest"
msgstr ""

msgid ""
"`_get_android_manifest_element_contents <https://docs.godotengine.org/en/"
"latest/classes/class_editorexportplugin.html#class-editorexportplugin-method-"
"get-android-manifest-element-contents>`_: update the contents of the "
"`<manifest>` element in the generated Android manifest"
msgstr ""

msgid ""
"The ``_get_android_manifest_*`` methods allow the plugin to automatically "
"provide changes to the app's manifest which are preserved when the Godot "
"Editor is updated, resolving a long standing issue with v1 Android plugins."
msgstr ""

msgid ""
"Create a ``plugin.cfg``. This is an INI file with metadata about your "
"plugin::"
msgstr ""

msgid ""
"For reference, here is the `folder structure for the Godot Android plugin "
"project template <https://github.com/m4gr3d/Godot-Android-Plugin-Template/"
"tree/main/plugin/export_scripts_template>`_. At build time, the contents of "
"the ``export_scripts_template`` directory as well as the generated plugin "
"binaries are copied to the ``addons/<plugin_name>`` directory:"
msgstr ""

msgid "Packaging a v2 Android plugin with GDExtension capabilities"
msgstr ""

msgid ""
"For GDExtension, we follow the same steps as for `Packaging a v2 Android "
"plugin`_ and add the `GDExtension config file <https://docs.godotengine.org/"
"en/stable/tutorials/scripting/gdextension/gdextension_cpp_example.html#using-"
"the-gdextension-module>`_ in the same location as ``plugin.cfg``."
msgstr ""

msgid ""
"For reference, here is the `folder structure for the GDExtension Android "
"plugin project template <https://github.com/m4gr3d/GDExtension-Android-"
"Plugin-Template/tree/main/plugin/export_scripts_template>`_. At build time, "
"the contents of the ``export_scripts_template`` directory as well as the "
"generated plugin binaries are copied to the ``addons/<plugin_name>`` "
"directory:"
msgstr ""

msgid "Here is what the ``plugin.gdextension`` config file should look like::"
msgstr ""

msgid ""
"Of note is the ``android_aar_plugin`` field that specifies this GDExtension "
"module is provided as part of a v2 Android plugin. During the export "
"process, this will indicate to the Godot Editor that the GDExtension native "
"shared libraries are exported by the Android plugin AAR binaries."
msgstr ""

msgid ""
"For GDExtension Android plugins, the plugin init class must override "
"`GodotPlugin::getPluginGDExtensionLibrariesPaths() <https://github.com/"
"godotengine/godot/blob/0a7f75ec7b465604b6496c8f5f1d638aed250d6d/platform/"
"android/java/lib/src/org/godotengine/godot/plugin/GodotPlugin.java#L277>`_, "
"and return the paths to the bundled GDExtension libraries config files (``*."
"gdextension``)."
msgstr ""

msgid ""
"The paths must be relative to the Android library's ``assets`` directory. At "
"runtime, the plugin will provide these paths to the Godot engine which will "
"use them to load and initialize the bundled GDExtension libraries."
msgstr ""

#, fuzzy
msgid "Using a v2 Android plugin"
msgstr "간단한 플러그인 만들기"

msgid "Godot 4.2 or higher is required"
msgstr ""

msgid ""
"v2 Android plugin requires the use of the `Gradle build process <https://"
"docs.godotengine.org/en/stable/classes/class_editorexportplatformandroid."
"html#class-editorexportplatformandroid-property-gradle-build-use-gradle-"
"build>`_."
msgstr ""

msgid ""
"The provided github project templates include demo Godot projects for quick "
"testing."
msgstr ""

msgid ""
"Copy the plugin's output directory (``addons/<plugin_name>``) to the target "
"Godot project's directory"
msgstr ""

msgid ""
"Open the project in the Godot Editor; the Editor should detect the plugin"
msgstr ""

msgid ""
"Navigate to ``Project`` -> ``Project Settings...`` -> ``Plugins``, and "
"ensure the plugin is enabled"
msgstr ""

msgid ""
"Install the Godot Android build template by clicking on ``Project`` -> "
"``Install Android Build Template...``"
msgstr ""

msgid "Navigate to ``Project`` -> ``Export...``"
msgstr ""

msgid "In the ``Export`` window, create an ``Android export preset``"
msgstr ""

msgid ""
"In the ``Android export preset``, scroll to ``Gradle Build`` and set ``Use "
"Gradle Build`` to ``true``"
msgstr ""

msgid ""
"Update the project's scripts as needed to access the plugin's functionality. "
"For example::"
msgstr ""

msgid "Connect an Android device to your machine and run the project on it"
msgstr ""

#, fuzzy
msgid "Using a v2 Android plugin as an Android library"
msgstr "간단한 플러그인 만들기"

msgid ""
"Since they are also Android libraries, Godot v2 Android plugins can be "
"stripped from their ``EditorExportPlugin`` packaging and provided as raw "
"``AAR`` binaries for use as libraries alongside the :ref:`Godot Android "
"library <doc_android_library>` by Android apps."
msgstr ""

msgid ""
"If targetting this use-case, make sure to include additional instructions "
"for how the ``AAR`` binaries should be included (e.g: custom additions to "
"the Android app's manifest)."
msgstr ""

#, fuzzy
msgid "Reference implementations"
msgstr "구현"

#, fuzzy
msgid ""
"`Godot Android Plugins Samples <https://github.com/m4gr3d/Godot-Android-"
"Samples/tree/master/plugins>`_"
msgstr "https://github.com/godotengine/godot-demo-projects"

#, fuzzy
msgid ""
"`Godot Android Plugin Template <https://github.com/m4gr3d/Godot-Android-"
"Plugin-Template>`_"
msgstr "https://github.com/godotengine/godot-demo-projects"

msgid ""
"`GDExtension Android Plugin Template <https://github.com/m4gr3d/GDExtension-"
"Android-Plugin-Template>`_"
msgstr ""

#, fuzzy
msgid ""
"`Godot OpenXR Loaders <https://github.com/GodotVR/godot_openxr_loaders>`_"
msgstr ""
"`godot-cpp 저장소 <https://github.com/GodotNativeTools/godot-cpp>`_ 의 사본."

#, fuzzy
msgid "Tips and Guidelines"
msgstr "가이드라인"

msgid "Simplify access to the exposed Java / Kotlin APIs"
msgstr ""

msgid ""
"To make it easier to access the exposed Java / Kotlin APIs in the Godot "
"Editor, it's recommended to provide one (or multiple) gdscript wrapper "
"class(es) for your plugin users to interface with."
msgstr ""

#, fuzzy
msgid "For example::"
msgstr "예:"

msgid "Support using the GDExtension functionality in the Godot Editor"
msgstr ""

msgid ""
"If planning to use the GDExtension functionality in the Godot Editor, it is "
"recommended that the GDExtension's native binaries are compiled not just for "
"Android, but also for the OS onto which developers / users intend to run the "
"Godot Editor. Not doing so may prevent developers / users from writing code "
"that accesses the plugin from within the Godot Editor."
msgstr ""

msgid ""
"This may involve creating dummy plugins for the host OS just so the API is "
"published to the editor. You can use the [godot-cpp-template](https://github."
"com/godotengine/godot-cpp-template) github template for reference on how to "
"do so."
msgstr ""

msgid "Godot crashes upon load"
msgstr ""

msgid "Check ``adb logcat`` for possible problems, then:"
msgstr ""

msgid ""
"Check that the methods exposed by the plugin used the following Java types: "
"``void``, ``boolean``, ``int``, ``float``, ``java.lang.String``, ``org."
"godotengine.godot.Dictionary``, ``int[]``, ``byte[]``, ``float[]``, ``java."
"lang.String[]``."
msgstr ""

msgid "More complex datatypes are not supported for now."
msgstr ""

msgid "Translation status"
msgstr "번역 상태"
