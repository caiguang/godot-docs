# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Available 3D formats"
msgstr "파일 형식"

msgid ""
"When dealing with 3D assets, Godot has a flexible and configurable importer."
msgstr ""
"3D 애셋을 다룰 때, Godot는 유연하면서 설정할 수 있는 임포터를 가지고 있습니"
"다."

#, fuzzy
msgid ""
"Godot works with *scenes*. This means that the entire scene being worked on "
"in your favorite 3D modeling software will be transferred as close as "
"possible."
msgstr ""
"Godot는 *씬*\\ 으로 작업합니다. 이는 즉, 좋아하는 3D DCC에서 작업한 전체 씬"
"을 최대한 가깝게 전송한다는 것입니다."

msgid "Godot supports the following 3D *scene file formats*:"
msgstr "Godot는 아래와 같은 3D *씬 파일 형식* 을 지원합니다:"

#, fuzzy
msgid ""
"glTF 2.0 **(recommended)**. Godot has support for both text (``.gltf``) and "
"binary (``.glb``) formats."
msgstr ""
"glTF 2.0 **(권장)**. Godot은 텍스트(``.gltf``)와 이진 파일 형식 (``.glb``) 모"
"두를 지원합니다."

msgid ""
"``.blend`` (Blender). This works by calling Blender to export to glTF in a "
"transparent manner (requires Blender to be installed)."
msgstr ""

#, fuzzy
msgid "DAE (COLLADA), an older format that is supported."
msgstr "DAE (COLLADA), 완전히 지원되는 오래단 파일 형식입니다."

#, fuzzy
msgid ""
"OBJ (Wavefront) format + their MTL material files. This is also supported, "
"but pretty limited given the format's limitations (no support for pivots, "
"skeletons, animations, UV2, PBR materials, ...)."
msgstr ""
"OBJ (Wavefront) 형식 + MTL 재질 파일. 완전히 지원하지만, 꽤 제한적입니다 (피"
"봇, 스켈레톤, 애니메이션, PBR 재질 등을 지원하지 않음)."

#, fuzzy
msgid ""
"FBX, supported via `FBX2glTF <https://github.com/godotengine/FBX2glTF>`__ "
"integration. This requires installing an external program that links against "
"the proprietary FBX SDK, so we recommend using other formats listed above "
"(if suitable for your workflow)."
msgstr ""
"FBX, 공개 에셋 가져오기 라이브러리를 통해 지원됩니다. 하지만, FBX는 사유 소프"
"트웨어이므로 워크플로우에 적합한 경우, 위에 나열된 다른 형식을 사용하는 것이 "
"좋습니다."

#, fuzzy
msgid ""
"Copy the scene file together with the textures and mesh data (if separate) "
"to the project repository, then Godot will do a full import when focusing "
"the editor window."
msgstr ""
"텍스처와 씬 파일을 함께 프로젝트 저장소에 복사하면 Godot가 완전히 가져올 것입"
"니다."

#, fuzzy
msgid "Exporting glTF 2.0 files from Blender (recommended)"
msgstr "블렌더에서 glTF 2.0 파일 내보내기"

#, fuzzy
msgid "There are 3 ways to export glTF files from Blender:"
msgstr "서버로 프로젝트를 내보낼 수 있는 방법이 두 가지 있습니다:"

msgid "As a glTF binary file (``.glb``)."
msgstr ""

msgid "As a glTF text-based file with embedded binary data (``.gltf`` file)"
msgstr ""

msgid ""
"As a glTF text-based file with separate binary data and textures (``.gltf`` "
"file + ``.bin`` file + textures)."
msgstr ""

#, fuzzy
msgid ""
"glTF binary files (``.glb``) are the smallest of the three options. They "
"include the mesh and textures set up in Blender. When brought into Godot the "
"textures are part of the object's material file."
msgstr ""
"glTF 이진 파일은 세 선택지중 용량이 가장 작습니다. Blender에서 설정된 메시와 "
"텍스처를 포함하고 있습니다. Godot에 불러왔을 때 텍스처는 오브젝트의 재질 파일"
"의 일부입니다."

#, fuzzy
msgid ""
"glTF embedded files (``.gltf``) function the same way as binary files. They "
"don't provide extra functionality in Godot, and shouldn't be used since they "
"have a larger file size."
msgstr ""
"glTF 임베디드 파일은 이진 파일과 같은 방식으로 동작합니다. Godot에서 추가적"
"인 기능을 제공하지 않으며 파일의 크기도 크므로 사용하지 않는 것이 좋습니다."

#, fuzzy
msgid ""
"There are two reasons to use glTF with the textures separate. One is to have "
"the scene description in a text based format and the binary data in a "
"separate binary file. This can be useful for version control if you want to "
"review changes in a text-based format. The second is you need the texture "
"files separate from the material file. If you don't need either of those, "
"glTF binary files are fine."
msgstr ""
"glTF을 텍스처와 분리해 사용해야하는 이유는 두 가지가 있습니다. 첫 번째는 씬"
"의 설명을 텍스트 기반의 포맷과 이진 데이터로 각각의 이진 파일에 저장하기 위함"
"입니다. 이 경우 버전 관리에서 텍스트 기반 포맷의 변경점을 검토해야 할 때 유용"
"합니다. 두 번째는 텍스처 파일을 재질 파일과 분리하기 위해서 입니다. 위 두 가"
"지 이점이 필요하지 않다면 glTF 이진 파일을 사용하는 것도 좋습니다."

msgid ""
"The glTF import process first loads the glTF file's data into an in-memory "
"GLTFState class. This data is then used to generate a Godot scene. When "
"importing files at runtime, this scene can be directly added to the tree. "
"The export process is the reverse of this, a Godot scene is converted to a "
"GLTFState class, then the glTF file is generated from that."
msgstr ""

msgid ""
"Diagram explaining the runtime import and export process for glTF files in "
"Godot"
msgstr ""

msgid ""
"When importing glTF files in the editor, there are two more steps. After "
"generating the Godot scene, the ResourceImporterScene class is used to apply "
"additional import settings, including settings you set through the Import "
"dock and the Advanced Import Settings dialog. This is then saved as a Godot "
"scene file, which is what gets used when you run/export your game."
msgstr ""

msgid "Diagram explaining the editor import process for glTF files in Godot"
msgstr ""

msgid ""
"If your model contains blend shapes (also known as \"shape keys\" and "
"\"morph targets\"), your glTF export setting **Export Deformation Bones "
"Only** needs to be configured to **Enabled** under the Animation export "
"configurations."
msgstr ""

msgid "Exporting non-deforming bones anyway will lead to incorrect shading."
msgstr ""

#, fuzzy
msgid ""
"Blender versions older than 3.2 do not export emissive textures with the "
"glTF file. If your model uses one and you're using an older version of "
"Blender, it must be brought in separately."
msgstr ""
"Blender는 emissive 텍스처를 glTF 파일로 내보내는 것을 지원하지 않습니다. 만"
"약 모델이 emmisive 텍스처를 사용한다면 glTF를 나누어 불러와야 합니다."

msgid ""
"By default, Blender has backface culling disabled on materials and will "
"export materials to match how they render in Blender. This means that "
"materials in Godot will have their cull mode set to **Disabled**. This can "
"decrease performance since backfaces will be rendered, even when they are "
"being culled by other faces. To resolve this, enable **Backface Culling** in "
"Blender's Materials tab, then export the scene to glTF again."
msgstr ""
"Blender는 기본적으로 재질의 backface culling이 비활성화 되어 있으며 Blender에"
"서 렌더링되는 것과 같이 재질을 내보내려고 할 것입니다. 따라서 Godot에서도 재"
"질의 cull mode 옵션을 **Disabled** 로 설정해야 합니다. 이 경우 다른 면에 가려"
"질 때에도 backface가 렌더링 되므로 성능을 떨어뜨릴 수 있습니다. 이를 해결하려"
"면 Blender의 재질 탭에서 **Backface culling** 옵션을 활성화하십시오."

msgid "Importing ``.blend`` files directly within Godot"
msgstr ""

msgid ""
"This functionality requires Blender 3.0 or later. For best results, we "
"recommend using Blender 3.5 or later, as it includes many fixes to the glTF "
"exporter."
msgstr ""

msgid ""
"It is **strongly** recommended to use an official Blender release downloaded "
"from blender.org, as opposed to a Linux distribution package or Flatpak. "
"This avoids any issues related to packaging, such as different library "
"versions that can cause incompatibilities or sandboxing restrictions."
msgstr ""

msgid ""
"From Godot 4.0 onwards, the editor can directly import ``.blend`` files by "
"calling `Blender <https://www.blender.org/>`__'s glTF export functionality "
"in a transparent manner."
msgstr ""

msgid ""
"This allows you to iterate on your 3D scenes faster, as you can save the "
"scene in Blender, alt-tab back to Godot then see your changes immediately. "
"When working with version control, this is also more efficient as you no "
"longer need to commit a copy of the exported glTF file to version control."
msgstr ""

msgid ""
"To use ``.blend`` import, you must install Blender before opening the Godot "
"editor (if opening a project that already contains ``.blend`` files). If you "
"keep Blender installed at its default location, Godot should be able to "
"detect its path automatically. If this isn't the case, configure the path to "
"the directory containing the Blender executable in the Editor Settings "
"(**Filesystem > Import > Blender > Blender 3 Path**)."
msgstr ""

msgid ""
"If you keep ``.blend`` files within your project folder but don't want them "
"to be imported by Godot, disable **Filesystem > Import > Blender > Enabled** "
"in the advanced Project Settings."
msgstr ""

msgid ""
"The ``.blend`` import process converts to glTF first, so it still uses "
"Godot's glTF import code. Therefore, the ``.blend`` import process is the "
"same as the glTF import process, but with an extra step at the beginning."
msgstr ""

msgid "Diagram explaining the import process for Blender files in Godot"
msgstr ""

msgid ""
"When working in a team, keep in mind using ``.blend`` files in your project "
"will require *all* team members to have Blender installed. While Blender is "
"a free download, this may add friction when working on the project. ``."
"blend`` import is also not available on the Android and web editors, as "
"these platforms can't call external programs."
msgstr ""

msgid ""
"If this is problematic, consider using glTF scenes exported from Blender "
"instead."
msgstr ""

msgid "Exporting DAE files from Blender"
msgstr "블렌더에서 DAE 파일 내보내기"

#, fuzzy
msgid ""
"Blender has built-in COLLADA support, but it does not work properly for the "
"needs of game engines and shouldn't be used as-is. However, scenes exported "
"with the built-in Collada support may still work for simple scenes without "
"animation."
msgstr ""
"블렌더도 내장 COLLADA를 지원하지만, 게임 엔진의 필요에 맞게 동작하지 않으므"
"로 그대로 사용하지 않는 것이 좋습니다."

#, fuzzy
msgid ""
"For complex scenes or scenes that contain animations, Godot provides a "
"`Blender plugin <https://github.com/godotengine/collada-exporter>`_ that "
"will correctly export COLLADA scenes for use in Godot."
msgstr ""
"Godot는 Godot에 맞게 COLLADA 씬을 제대로 내보낼 수 있도록 `Blender 플러그인 "
"<https://github.com/godotengine/collada-exporter>`_ 을 지원합니다. Blender "
"2.8 이상의 버전에서는 동작하지 않지만 추후 업데이트가 있을 예정입니다."

#, fuzzy
msgid "Importing OBJ files in Godot"
msgstr "Godot 3.0+에서 애셋 가져오기"

msgid ""
"OBJ is one of the simplest 3D formats out there, so Godot should be able to "
"import most OBJ files successfully. However, OBJ is also a very limited "
"format: it doesn't support skinning, animation, UV2 or PBR materials."
msgstr ""

#, fuzzy
msgid "There are 2 ways to use OBJ meshes in Godot:"
msgstr ""
"리소스를 저장하는 두 가지 방법이 있습니다. 두 가지 방법은 다음과 같습니다:"

msgid ""
"Load them directly in a MeshInstance3D node, or any other property that "
"expects as mesh (such as GPUParticles3D). This is the default mode."
msgstr ""

msgid ""
"Change their import mode to **OBJ as Scene** in the Import dock then restart "
"the editor. This allows you to use the same import options as glTF or "
"Collada scenes, such as unwrapping UV2 on import (for :ref:"
"`doc_using_lightmap_gi`)."
msgstr ""

msgid ""
"Blender 3.4 and later can export RGB vertex colors in OBJ files (this is a "
"nonstandard extension of the OBJ format). Godot is able to import those "
"vertex colors since Godot 4.0, but they will not be displayed on the "
"material unless you enable **Vertex Color > Use As Albedo** on the material."
msgstr ""

msgid ""
"Vertex colors from OBJ meshes keep their original color space once imported "
"(sRGB/linear), but their brightness is clamped to 1.0 (they can't be "
"overbright)."
msgstr ""

#, fuzzy
msgid "Importing FBX files in Godot"
msgstr "Godot 3.0+에서 애셋 가져오기"

msgid ""
"When opening a project containing FBX scenes, you will see a dialog asking "
"you to configure FBX import. Click the link in the dialog to download an "
"FBX2glTF binary, then extract the ZIP archive, place the binary anywhere you "
"wish, then specify its path in the dialog."
msgstr ""

msgid ""
"If you keep ``.fbx`` files within your project folder but don't want them to "
"be imported by Godot, disable **Filesystem > Import > FBX > Enabled** in the "
"advanced Project Settings."
msgstr ""

msgid ""
"The FBX import process converts to glTF first, so it still uses Godot's glTF "
"import code. Therefore, the FBX import process is the same as the glTF "
"import process, but with an extra step at the beginning."
msgstr ""

msgid "Diagram explaining the import process for FBX files in Godot"
msgstr ""

msgid ""
"The full installation process for using FBX in Godot is described on the "
"`FBX import page of the Godot website <https://godotengine.org/fbx-"
"import>`__."
msgstr ""

msgid "Translation status"
msgstr "번역 상태"
