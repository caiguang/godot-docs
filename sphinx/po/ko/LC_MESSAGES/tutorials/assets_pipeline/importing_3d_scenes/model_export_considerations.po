# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Model export considerations"
msgstr "내보내기 고려 사항"

msgid ""
"Before exporting a 3D model from a 3D modeling application, such as Blender, "
"there are some considerations that should be taken into account to ensure "
"that the model follows the conventions and best practices for Godot."
msgstr ""

#, fuzzy
msgid "3D asset direction conventions"
msgstr "명명 규칙"

msgid ""
"Godot uses a right-handed, Y-is-up coordinate system, with the -Z axis as "
"the camera's forward direction. This is the same as OpenGL. This implies "
"that +Z is back, +X is right, and -X is left for a camera."
msgstr ""

msgid ""
"The convention for 3D assets is to face the opposite direction as the "
"camera, so that characters and other assets are facing the camera by "
"default. This convention is extremely common in 3D modeling applications, "
"and is `codified in glTF as part of the glTF 2.0 specification <https://"
"registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#coordinate-system-and-"
"units>`__. This means that for oriented 3D assets (such as characters), the "
"+Z axis is the direction of the front, so -Z is the rear, +X is the left "
"side, and -X is the right side for a 3D asset. In Blender, this means that "
"+Y is rear and -Y is front for an asset."
msgstr ""

msgid ""
"When rotating an oriented 3D asset in Godot, use the ``use_model_front`` "
"option on the ``look_at`` functions, and use the ``Vector3.MODEL_*`` "
"constants to perform calculations in the oriented asset's local space."
msgstr ""

msgid ""
"For assets without an intrinsic front side or forward direction, such as a "
"game map or terrain, take note of the cardinal directions instead. The "
"convention in Godot and the vast majority of other applications is that +X "
"is east and -X is west. Due to Godot's right-handed Y-is-up coordinate "
"system, this implies that +Z is south and -Z is north. In Blender, this "
"means that +Y is north and -Y is south."
msgstr ""

msgid "Exporting textures separately"
msgstr "텍스처를 각각 내보내기"

#, fuzzy
msgid ""
"While textures can be exported with a model in certain file formats, such as "
"glTF 2.0, you can also export them separately. Godot uses PBR (physically "
"based rendering) for its materials, so if a texturing program can export PBR "
"textures they can work in Godot. This includes the `Substance suite <https://"
"www.substance3d.com/>`__, `ArmorPaint (open source) <https://armorpaint.org/"
">`__, and `Material Maker (open source) <https://github.com/RodZill4/"
"material-maker>`__."
msgstr ""
"glTF 2.0같은 몇몇 파일 포맷에서는 텍스처를 모델과 함께 내보낼 수 있지만, 따"
"로 내보내는 것도 가능합니다. Godot은 재질에 PBR(물리 기반 렌더링)을 사용하는"
"데, 텍스처 프로그램이 PBR 텍스처를 내보낼 수 있다면 Godot에서도 사용이 가능합"
"니다. `Substance suite <https://www.substance3d.com/>`__, `ArmorPaint (오픈 "
"소스) <https://armorpaint.org/>`__, 그리고`Material Maker (오픈 소스) "
"<https://github.com/RodZill4/material-maker>`__ 가 이에 해당됩니다."

#, fuzzy
msgid ""
"For more information on Godot's materials, see :ref:"
"`doc_standard_material_3d`."
msgstr "자세한 정보는 :ref:`doc_spatial_material` 페이지를 참고하십시오."

msgid "Exporting considerations"
msgstr "내보내기 고려 사항"

msgid ""
"Since GPUs can only render triangles, meshes that contain quads or N-gons "
"have to be *triangulated* before they can be rendered. Godot can triangulate "
"meshes on import, but results may be unpredictable or incorrect, especially "
"with N-gons. Regardless of the target application, triangulating *before* "
"exporting the scene will lead to more consistent results and should be done "
"whenever possible."
msgstr ""
"GPU가 삼각형만을 렌더링 할 수 있기 때문에 사각형 혹은 초과의 n각형을 포함하"
"는 메시는 렌더링 이전에 *triangulate* 되어야 합니다. Godot은 가져오기 과정에"
"서 메시를 triangulate 할 수 있지만, 특히 n각형의 경우는 예측 불가능하거나 잘"
"못된 결과가 나올 수 있습니다. 목표 애플리케이션에 관계 없이 씬을 내보내기 이"
"전에 triangulate하는 편이 더 안정적인 결과물을 만들기 때문에 가능하면 내보내"
"기 이전에 수행해야 합니다."

#, fuzzy
msgid ""
"To avoid issues with incorrect triangulation after importing in Godot, it is "
"recommended to make the 3D modeling software triangulate objects on its own. "
"In Blender, this can be done by adding a Triangulate modifier to your "
"objects and making sure **Apply Modifiers** is checked in the export dialog. "
"Alternatively, depending on the exporter, you may be able to find and enable "
"a **Triangulate Faces** option in the export dialog."
msgstr ""
"Godot에 가져오기 이후 잘못된 triangulation이 수행되는 것을 방지하기 위해 오브"
"젝트 자신의 3D DCC triangulate 오브젝트를 만드는 것을 권장합니다. Blender의 "
"경우 오브젝트에 Triangulate modifier를 추가한 뒤 내보내기 창에서 **Apply "
"Modifiers** 에 체크해 이 작업을 수행할 수 있습니다."

#, fuzzy
msgid ""
"To avoid issues with 3D selection in the editor, it is recommended to apply "
"the object transform in the 3D modeling software before exporting the scene."
msgstr ""
"에디터에서 3D 선택 항목에 문제가 생기는 것을 방지하기 위해 씬을 내보내기 전"
"에 3D DCC에 오브젝트 변환을 적용하는 것을 권장합니다."

msgid ""
"It is important that the mesh is not deformed by bones when exporting. Make "
"sure that the skeleton is reset to its T-pose or default rest pose before "
"exporting with your favorite 3D editor."
msgstr ""
"메시를 내보낼 때, 메시가 본에 의해 형태가 변하지 않는 것이 중요합니다. 좋아하"
"는 3D 편집기에서 메시를 내보낼 때, 스켈레톤이 기존의 T 포즈나 기본 휴식 포즈"
"로 되어있는지 확인하세요."

#, fuzzy
msgid "Lighting considerations"
msgstr "내보내기 고려 사항"

msgid ""
"While it's possible to import lights from a 3D scene using the glTF, ``."
"blend`` or Collada formats, it's generally advised to design the scene's "
"lighting in the Godot editor after importing the scene."
msgstr ""

msgid ""
"This allows you to get a more accurate feel for the final result, as "
"different engines will render lights in a different manner. This also avoids "
"any issues with lights appearing excessively strong or faint as a result of "
"the import process."
msgstr ""

msgid "Translation status"
msgstr "번역 상태"
