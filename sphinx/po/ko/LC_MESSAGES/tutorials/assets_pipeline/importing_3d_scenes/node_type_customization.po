# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Node type customization using name suffixes"
msgstr ""

msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr "여러번 씬을 편집할 때, 내보낸 후 해야 하는 일반적인 작업이 있습니다:"

msgid "Adding collision detection to objects."
msgstr "오브젝트에 콜리전 감지를 추가하기."

msgid "Setting objects as navigation meshes."
msgstr "오브젝트를 내비게이션 메시로 설정하기."

#, fuzzy
msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modeling)."
msgstr ""
"(모델링에 사용되는 특정 빛과 같이) 게임 엔진에 사용되는 않는 노드 지우기"

#, fuzzy
msgid ""
"To simplify this workflow, Godot offers several suffixes that can be added "
"to the names of the objects in your 3D modeling software. When imported, "
"Godot will detect suffixes in object names and will perform actions "
"automatically."
msgstr ""
"이 워크플로를 간단히 하기 위해, Godot는 3D 모델링 소프트웨어에서 오브젝트의 "
"이름에 붙일 수 있는 몇몇 접미사를 제공합니다. 가져올 때, Godot는 이를 감지하"
"고 자동으로 동작을 수행합니다:"

#, fuzzy
msgid "All the suffixes described below are **case-sensitive**."
msgstr "아래에 설명된 모든 접미사들은 *대소문자를 구분합니다*."

msgid "Remove nodes (-noimp)"
msgstr "노드 삭제 (-noimp)"

msgid ""
"Objects that have the ``-noimp`` suffix will be removed at import-time no "
"matter what their type is. They will not appear in the imported scene."
msgstr ""
"``-noimp`` 접미사를 갖고 있는 오브젝트가 어떤 타입이든지 가져올 때 제거될 것"
"입니다. 가져온 씬에서 나타나지 않습니다."

msgid ""
"This is equivalent to enabling **Skip Import** for a node in the Advanced "
"Import Settings dialog."
msgstr ""

msgid "Create collisions (-col, -convcol, -colonly, -convcolonly)"
msgstr "콜리전 생성 (-col, -convcol, -colonly, -convcolonly)"

msgid ""
"The option ``-col`` will work only for Mesh objects. If it is detected, a "
"child static collision node will be added, using the same geometry as the "
"mesh. This will create a triangle mesh collision shape, which is a slow, but "
"accurate option for collision detection. This option is usually what you "
"want for level geometry (but see also ``-colonly`` below)."
msgstr ""
"``-col`` 옵션은 메시 오브젝트에만 적용됩니다. 만약 접미사가 감지되면 동일한 "
"도형을 메시로 사용해 자식 정적 콜리전 노드가 추가됩니다. 이 옵션에서는 느리지"
"만 충돌 감지가 정확한 삼각형 메시 콜리전 모양이 생성됩니다. 레벨 지형을 만드"
"는데 적합한 옵션입니다 (하지만 하단의 ``-colony`` 또한 확인해보십시오)."

#, fuzzy
msgid ""
"The option ``-convcol`` will create a :ref:`class_ConvexPolygonShape3D` "
"instead of a :ref:`class_ConcavePolygonShape3D`. Unlike triangle meshes "
"which can be concave, a convex shape can only accurately represent a shape "
"that doesn't have any concave angles (a pyramid is convex, but a hollow box "
"is concave). Due to this, convex collision shapes are generally not suited "
"for level geometry. When representing simple enough meshes, convex collision "
"shapes can result in better performance compared to a triangle collision "
"shape. This option is ideal for simple or dynamic objects that require "
"mostly-accurate collision detection."
msgstr ""
"``-convcol`` 옵션은 :ref:`class_concavepolygonshape` 대신 :ref:"
"`class_convexpolygonshape`를 생성합니다. 오목한 부분을 묘사할 수 있는 삼각형 "
"메시와는 달리 볼록 다면체 형상은 오목한 각이 없는(예를 들어 피라미드는 볼록 "
"다면체 형상이지만 빈 박스는 오목한 형상입니다) 도형만을 정확히 묘사할 수 있습"
"니다. 때문에 볼록 다면체 콜리전 형상은 레벨 지형을 묘사하는데에는 적합하지 않"
"습니다. 충분히 간단한 메시를 표현하고자 할 때는 볼록 다면체 콜리전 형상을 사"
"용하는 것이 삼각형 콜리전 형상보다 성능 면에서 원활합니다. 이 옵션은 비교적 "
"정확한 충돌 감지가 필요한 간단하고 동적인 오브젝트에 적합합니다."

#, fuzzy
msgid ""
"However, in both cases, the visual geometry may be too complex or not smooth "
"enough for collisions. This can create physics glitches and slow down the "
"engine unnecessarily."
msgstr ""
"하지만 충돌 감지를 적용할 도형이 너무 복잡하거나 각진 경우에 두 옵션 모두 물"
"리 계산에 오류를 일으키거나 엔진을 느리게 만들 수 있습니다."

#, fuzzy
msgid ""
"To solve this, the ``-colonly`` modifier exists. It will remove the mesh "
"upon importing and will create a :ref:`class_StaticBody3D` collision "
"instead. This helps the visual mesh and actual collision to be separated."
msgstr ""
"이를 해결하기 위해, ``-colonly`` 모디파이어(modifier)가 존재합니다, 가져올 "
"때 메시를 제거하고 대신 :ref:`class_staticbody` 콜리전을 생성합니다. 이렇게 "
"하면 시각적 메시와 실제 콜리전을 분리할 수 있습니다."

#, fuzzy
msgid ""
"The option ``-convcolonly`` works in a similar way, but will create a :ref:"
"`class_ConvexPolygonShape3D` instead using convex decomposition."
msgstr ""
"``-convcolonly`` 옵션 또한 위와 유사하지만 :ref:`class_convexpolygonshape`를 "
"생성한다는 차이가 있습니다."

#, fuzzy
msgid ""
"With Collada files, the option ``-colonly`` can also be used with Blender's "
"empty objects. On import, it will create a :ref:`class_StaticBody3D` with a "
"collision node as a child. The collision node will have one of a number of "
"predefined shapes, depending on Blender's empty draw type:"
msgstr ""
"``-colonly`` 옵션은 블렌더의 empty 오브젝트와 함께 사용될 수도 있습니다. 가져"
"올 때, 자손으로 콜리전 노드가 있는 :ref:`class_staticbody`\\ 를 생성할 것입니"
"다. 콜리전 노드는 미리 정의된 모양 중 하나를 가지며, 블렌더의 empty 드로우 타"
"입에 따라 다릅니다:"

msgid "Choosing a draw type for an Empty on creation in Blender"
msgstr ""

#, fuzzy
msgid "Single arrow will create a :ref:`class_SeparationRayShape3D`."
msgstr "Single arrow는 :ref:`class_rayshape`를 생성합니다."

#, fuzzy
msgid "Cube will create a :ref:`class_BoxShape3D`."
msgstr "Cube는 :ref:`class_boxshape` 를 생성합니다."

#, fuzzy
msgid "Image will create a :ref:`class_WorldBoundaryShape3D`."
msgstr "Image는 :ref:`class_planeshape` 를 생성합니다."

#, fuzzy
msgid ""
"Sphere (and the others not listed) will create a :ref:`class_SphereShape3D`."
msgstr ""
"Sphere (그리고 나열되지 않은 나머지)는 :ref:`class_sphereshape` 를 생성합니"
"다."

msgid ""
"When possible, **try to use a few primitive collision shapes** instead of "
"triangle mesh or convex shapes. Primitive shapes often have the best "
"performance and reliability."
msgstr ""
"가능하다면 삼각형이나 볼록 다면체 대신 **primitive 충돌 감지 형상을 사용해보"
"십시오**. Primitive 형상이 많은 경우 성능 및 안전성 면에서 더 뛰어납니다."

#, fuzzy
msgid ""
"For better visibility on Blender's editor, you can set the \"X-Ray\" option "
"on collision empties and set some distinct color for them by changing **Edit "
"> Preferences > Themes > 3D Viewport > Empty**."
msgstr ""
"블렌더의 편집기에서 더 좋은 가시성을 위해, 콜리전 Empty에 \"X-Ray\"를 설정하"
"고 **User Preferences / Themes / 3D View / Empty**\\ 에서 뚜렷한 색상을 설정"
"할 수 있습니다."

msgid ""
"If using Blender 2.79 or older, follow these steps instead: **User "
"Preferences > Themes > 3D View > Empty**."
msgstr ""

msgid ""
"See :ref:`doc_collision_shapes_3d` for a comprehensive overview of collision "
"shapes."
msgstr ""
"모든 콜리전 형상을 확인하고 싶다면 :ref:`doc_collision_shapes_3d`을 참고하십"
"시오."

msgid "Create Occluder (-occ, -occonly)"
msgstr ""

msgid ""
"If a mesh is imported with the ``-occ`` suffix an :ref:`class_occluder3D` "
"node will be created based on the geometry of the mesh, it does not replace "
"the mesh. A mesh node with the ``-occonly`` suffix will be converted to an :"
"ref:`class_occluder3D` on import."
msgstr ""

msgid "Create navigation (-navmesh)"
msgstr "내비게이션 생성 (-navmesh)"

msgid ""
"A mesh node with the ``-navmesh`` suffix will be converted to a navigation "
"mesh. The original Mesh object will be removed at import-time."
msgstr ""
"``-navmesh`` 접미사를 가진 메시 노드는 내비게이션 메시로 변환되고 기존 메시 "
"오브젝트는 import-time 때 삭제될 것입니다."

msgid "Create a VehicleBody (-vehicle)"
msgstr "VehicleBody 만들기 (-vehicle)"

#, fuzzy
msgid ""
"A mesh node with the ``-vehicle`` suffix will be imported as a child to a :"
"ref:`class_VehicleBody3D` node."
msgstr ""
"``-vehicle`` 접미사를 가진 메시 노드는 :ref:`VehicleBody "
"<class_VehicleBody>` 노드의 자손으로 가져오게 됩니다."

msgid "Create a VehicleWheel (-wheel)"
msgstr "VehicleWheel 만들기 (-wheel)"

#, fuzzy
msgid ""
"A mesh node with the ``-wheel`` suffix will be imported as a child to a :ref:"
"`class_VehicleWheel3D` node."
msgstr ""
"``-wheel`` 접미사를 가진 메시 노드는 :ref:`VehicleWheel "
"<class_VehicleWheel>` 노드의 자손으로 가져오게 됩니다."

msgid "Rigid Body (-rigid)"
msgstr "리지드 바디 (-rigid)"

#, fuzzy
msgid ""
"A mesh node with the ``-rigid`` suffix will be imported as a :ref:"
"`class_RigidBody3D`."
msgstr ""
"``-rigid`` 접미사를 가진 메시 노드는 :ref:`VehicleBody <class_VehicleBody>` "
"노드의 자손으로 가져오게 됩니다."

msgid "Animation loop (-loop, -cycle)"
msgstr "애니메이션 루프 (-loop, -cycle)"

#, fuzzy
msgid ""
"Animation clips in the source 3D file that start or end with the token "
"``loop`` or ``cycle`` will be imported as a Godot :ref:`class_Animation` "
"with the loop flag set. **Unlike the other suffixes described above, this "
"does not require a hyphen.**"
msgstr ""
"COLLADA 문서에서 ``loop``\\ 나 ``cycle``\\ 토큰으로 시작하거나 끝나는 애니메"
"이션 클립은 루프 플래그가 설정된 Godot 애니메이션으로 가져와질 것입니다. **위"
"에서 설명된 다른 접미사와 다르게, 하이픈(-)이 필요하지 않습니다.**"

#, fuzzy
msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the ``loop`` or ``cycle`` prefix or suffix."
msgstr ""
"블렌더에서, 이를 위해 NLA 편집기를 사용하여 Action 이름에 \"loop\"나 "
"\"cycle\" 접두사 혹은 접미사를 붙여야 합니다."

msgid "Translation status"
msgstr "번역 상태"
