# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Importing images"
msgstr "이미지 가져오기"

msgid "Supported image formats"
msgstr "지원되는 이미지 포맷"

msgid "Godot can import the following image formats:"
msgstr "Godot는 다음의 이미지 포맷을 지원합니다:"

msgid ""
"BMP (``.bmp``) - No support for 16-bit per pixel images. Only 1-bit, 4-bit, "
"8-bit, 24-bit, and 32-bit per pixel images are supported."
msgstr ""
"BMP (``.bmp``) - 16-bit per pixel 이미지는 지원되지 않습니다. 1-bit, 4-bit, "
"8-bit, 24-bit, and 32-bit per pixel 이미지만이 지원됩니다."

msgid ""
"DirectDraw Surface (``.dds``) - If mipmaps are present in the texture, they "
"will be loaded directly. This can be used to achieve effects using custom "
"mipmaps."
msgstr ""
"DirectDraw Surface (``.dds``) - 만약 텍스처에 밉맵이 있다면 곧바로 로딩됩니"
"다. 커스텀 밉맵을 사용하는 것과 같은 효과를 구현하는데 쓸 수 있습니다."

msgid ""
"Khronos Texture (``.ktx``) - Decoding is done using `libktx <https://github."
"com/KhronosGroup/KTX-Software>`__. Only supports 2D images. Cubemaps, "
"texture arrays and de-padding are not supported."
msgstr ""

#, fuzzy
msgid ""
"OpenEXR (``.exr``) - Supports HDR (highly recommended for panorama skies)."
msgstr ""
"OpenEXR (``.exr``) - HDR 을 지원합니다. (파노라믹한 하늘을 구현하는데 사용하"
"는 것을 권장합니다)."

#, fuzzy
msgid ""
"Radiance HDR (``.hdr``) - Supports HDR (highly recommended for panorama "
"skies)."
msgstr ""
"Radiance HDR (``.hdr``) - HDR 을 지원합니다. (파노라믹한 하늘을 구현하는데 사"
"용하는 것을 권장합니다)."

msgid ""
"JPEG (``.jpg``, ``.jpeg``) - Doesn't support transparency per the format's "
"limitations."
msgstr ""
"JPEG (``.jpg``, ``.jpeg``) - 포맷의 한계로 투명한 이미지를 지원하지 않습니다."

msgid ""
"PNG (``.png``) - Precision is limited to 8 bits per channel upon importing "
"(no HDR images)."
msgstr ""
"PNG (``.png``) - 정확도가 채널당 8 bit로 제한됩니다(따라서 HDR 이미지는 지원"
"하지 않습니다)."

msgid "Truevision Targa (``.tga``)"
msgstr "Truevision Targa (``.tga``)"

#, fuzzy
msgid ""
"SVG (``.svg``) - SVGs are rasterized using `ThorVG <https://www.thorvg.org/"
">`__ when importing them. `Support is limited <https://www.thorvg.org/about#:"
"~:"
"text=among%20the%20svg%20tiny%20specs%2C%20yet%20unsupported%20features%20in%20the%20thorvg%20are%20the%20following>`__; "
"complex vectors may not render correctly. :ref:`Text must be converted to "
"paths <doc_importing_images_svg_text>`; otherwise, it won't appear in the "
"rasterized image. You can check whether ThorVG can render a certain vector "
"correctly using its `web-based viewer <https://www.thorvg.org/viewer>`__. "
"For complex vectors, rendering them to PNGs using `Inkscape <https://"
"inkscape.org/>`__ is often a better solution. This can be automated thanks "
"to its `command-line interface <https://wiki.inkscape.org/wiki/index.php/"
"Using_the_Command_Line#Export_files>`__."
msgstr ""
"SVG (``.svg``, ``.svgz``) - SVG는 가져올 때 `NanoSVG <https://github.com/"
"memononen/nanosvg>`__ 로 래스터화 됩니다. 복잡한 벡터가 제대로 렌더링되지 않"
"을 수 있으므로 지원은 제한적입니다. 복잡한 벡터는 보통 Inkscape를 이용해 PNG"
"로 렌더링 하는 것이 더 낫습니다. 이 작업은 `command-line interface <https://"
"wiki.inkscape.org/wiki/index.php/Using_the_Command_Line#Export_files>`__ 을 "
"이용해 자동화 할 수 있습니다."

msgid ""
"WebP (``.webp``) - WebP files support transparency and can be compressed "
"lossily or losslessly. The precision is limited to 8 bits per channel."
msgstr ""
"WebP (``.webp``) - WebP 파일은 투명도를 지원하고 손실 압축과 무손실 압축을 모"
"두 지원합니다. 정확도는 채널당 8 bit로 제한됩니다."

msgid ""
"If you've compiled the Godot editor from source with specific modules "
"disabled, some formats may not be available."
msgstr ""
"만약 특정 모듈을 비활성화 한 채로 Godot 에디터를 직접 컴파일했다면, 몇몇 포맷"
"을 사용할 수 없을 수 있습니다."

msgid "Importing textures"
msgstr "텍스처 가져오기"

#, fuzzy
msgid ""
"The default action in Godot is to import images as textures. Textures are "
"stored in video memory. Their pixel data can't be accessed directly from the "
"CPU without converting them back to an :ref:`class_Image` in a script. This "
"is what makes drawing them efficient."
msgstr ""
"Godot에서 디폴트 행동은 이미지를 텍스처로 가져오는 것입니다. 텍스처는 비디오 "
"메모리에 저장되며 직접 접근할 수 없습니다. 이것이 그리기를 효율적으로 만들어"
"줍니다."

msgid ""
"There are over a dozen import options that can be adjusted after selecting "
"an image in the FileSystem dock:"
msgstr ""

msgid ""
"Import options in the Import dock after selecting an image in the FileSystem "
"dock"
msgstr ""

msgid ""
"Import options in the Import dock after selecting an image in the FileSystem "
"dock. Some of these options are only visible with certain compression modes."
msgstr ""

#, fuzzy
msgid "Changing import type"
msgstr "가져오기 리소스 타입 변경하기"

msgid ""
"It is possible to choose other types of imported resources in the Import "
"dock:"
msgstr ""

msgid ""
"**BitMap:** 1-bit monochrome texture (intended to be used as a click mask "
"in :ref:`class_TextureButton` and :ref:`class_TouchScreenButton`). This "
"resource type cannot be displayed directly onto 2D or 3D nodes, but the "
"pixel values can be queried from a script using :ref:`get_bit "
"<class_BitMap_method_get_bit>`."
msgstr ""

msgid ""
"**Cubemap:** Import the texture as a 6-sided cubemap, with interpolation "
"between the cubemap's sides (seamless cubemaps), which can be sampled in "
"custom shaders."
msgstr ""

msgid ""
"**CubemapArray:** Import the texture as a collection of 6-sided cubemaps, "
"which can be sampled in custom shaders. This resource type can only be "
"displayed when using the Forward+ or Forward Mobile rendering methods, not "
"Compatibility."
msgstr ""

msgid ""
"**Font Data (Monospace Image Font):** Import the image as a bitmap font "
"where all characters have the same width. See :ref:`doc_gui_using_fonts`."
msgstr ""

msgid ""
"**Image:** Import the image as-is. This resource type cannot be displayed "
"directly onto 2D or 3D nodes, but the pixel values can be queried from a "
"script using :ref:`get_pixel<class_Image_method_get_pixel>`."
msgstr ""

msgid ""
"**Texture2D:** Import the image as a 2-dimensional texture, suited for "
"display on 2D and 3D surfaces. This is the default import mode."
msgstr ""

msgid ""
"**Texture2DArray:** Import the image as a collection of 2-dimensional "
"textures. Texture2DArray is similar to a 3-dimensional texture, but without "
"interpolation between layers. Built-in 2D and 3D shaders cannot display "
"texture arrays, so you must create a custom shader in :ref:`2D "
"<doc_canvas_item_shader>` or :ref:`3D <doc_spatial_shader>` to display a "
"texture from a texture array."
msgstr ""

msgid ""
"**Texture3D:** Import the image as a 3-dimensional texture. This is *not* a "
"2D texture applied onto a 3D surface. Texture3D is similar to a texture "
"array, but with interpolation between layers. Texture3D is typically used "
"for :ref:`class_FogMaterial` density maps in :ref:`volumetric fog "
"<doc_volumetric_fog>`, :ref:`class_Environment` 3D LUT color correction and "
"custom shaders."
msgstr ""

msgid ""
"**TextureAtlas:** Import the image as an *atlas* of different textures. Can "
"be used to reduce memory usage for animated 2D sprites. Only supported in 2D "
"due to missing support in built-in 3D shaders."
msgstr ""

msgid "Detect 3D"
msgstr "3D 감지"

msgid ""
"The default import options (no mipmaps and **Lossless** compression) are "
"suited for 2D, but are not ideal for most 3D projects. **Detect 3D** makes "
"Godot aware of when a texture is used in a 3D scene (such as a texture in a :"
"ref:`class_BaseMaterial3D`). If this happens, several import options are "
"changed so the texture flags are friendlier to 3D. Mipmaps are enabled and "
"the compression mode is changed to **VRAM Compressed** unless :ref:"
"`doc_importing_images_detect_3d_compress_to` is changed. The texture is also "
"reimported automatically."
msgstr ""

msgid ""
"A message is printed to the Output panel when a texture is detected to be "
"used in 3D."
msgstr ""

msgid ""
"If you run into quality issues when a texture is detected to be used in 3D "
"(e.g. for pixel art textures), change the :ref:"
"`doc_importing_images_detect_3d_compress_to` option before using the texture "
"in 3D, or change :ref:`doc_importing_images_compress_mode` to **Lossless** "
"after using the texture in 3D. This is preferable to disabling **Detect "
"3D**, as mipmap generation remains enabled to prevent textures from looking "
"grainy at a distance."
msgstr ""

msgid "Import options"
msgstr "옵션 가져오기"

msgid ""
"In Godot 4.0, changing the texture filter and repeat mode is no longer done "
"in the import options."
msgstr ""

msgid ""
"Instead, texture filter and repeat modes are changed in the CanvasItem "
"properties in 2D (with a project setting acting as a default), and in a :ref:"
"`per-material configuration in 3D <doc_standard_material_3d_sampling>`. In "
"custom shaders, filter and repeat mode is changed on the ``sampler2D`` "
"uniform using hints described in the :ref:`doc_shading_language` "
"documentation."
msgstr ""

#, fuzzy
msgid "Compress > Mode"
msgstr "압축 모드"

msgid ""
"Images are one of the largest assets in a game. To handle them efficiently, "
"they need to be compressed. Godot offers several compression methods, "
"depending on the use case."
msgstr ""
"이미지는 게임의 거대한 애셋들 중 하나 입니다. 이를 효율적으로 다루기 위해, 압"
"축이 필요합니다. Godot는 여러 압축 방식을 제공하며, 사용 사례에 따라 다릅니"
"다."

#, fuzzy
msgid ""
"**Lossless:** This is the default and most common compression mode for 2D "
"assets. It shows assets without any kind of artifacting, and disk "
"compression is decent. It will use considerably more amount of video memory "
"than VRAM Compression, though. This is also the recommended setting for "
"pixel art."
msgstr ""
"**무손실 압축**: 가장 일반적인 2D 애셋 압축 방법입니다. 변형 없이 애셋을 보여"
"주고, 디스크 압축률 또한 훌륭합니다. VRAM 압축 방식보다 상당히 많은 양의 VRAM"
"을 사용할 것입니다."

#, fuzzy
msgid ""
"**Lossy:** This is a good choice for large 2D assets. It has some artifacts, "
"but less than VRAM compression and the file size is several times lower "
"compared to Lossless or VRAM Uncompressed. Video memory usage isn't "
"decreased by this mode; it's the same as with Lossless or VRAM Uncompressed."
msgstr ""
"**손실 압축:** 큰 2D 애셋를 압축할 때 좋은 선택지입니다. 약간의 변형이 있지"
"만 VRAM보다는 적고 무손실 압축보다 파일의 크기도 수 배는 작습니다. 이 방식으"
"로는 VRAM 사용량을 줄일 수 없어 무손실 압축 및 압축되지 않은 애셋과 사용량이 "
"같습니다."

#, fuzzy
msgid ""
"**VRAM Compressed:** This is the default and most common compression mode "
"for 3D assets. Size on disk is reduced and video memory usage is also "
"decreased considerably (usually by a factor between 4 and 6). This mode "
"should be avoided for 2D as it exhibits noticeable artifacts, especially for "
"lower-resolution textures."
msgstr ""
"**VRAM 압축** 가장 일반적인 3D 애셋 압축 방법입니다. 디스크의 공간을 줄일 수 "
"있고 VRAM 사용량도 상당히 줄어듭니다(보통 4에서 6 정도). 2D에 사용하면 눈에 "
"띄는 변형이 발생하므로 사용을 피하십시오."

#, fuzzy
msgid ""
"**VRAM Uncompressed:** Only useful for formats that can't be compressed, "
"such as raw floating-point images."
msgstr ""
"**압축하지 않음:** raw float 이미지처럼 압축할 수 없는 포맷에만 유용합니다."

msgid ""
"**Basis Universal:** This alternative VRAM compression mode encodes the "
"texture to a format that can be transcoded to most GPU-compressed formats at "
"load-time. This provides very small files that make use of VRAM compression, "
"at the cost of lower quality compared to VRAM Compressed and slow "
"compression times. VRAM usage is usually the same as VRAM Compressed. Basis "
"Universal does not support floating-point image formats (the engine will "
"internally fall back to VRAM Compressed instead)."
msgstr ""

msgid ""
"Even in 3D, \"pixel art\" textures should have VRAM compression disabled as "
"it will negatively affect their appearance, without improving performance "
"significantly due to their low resolution."
msgstr ""

#, fuzzy
msgid ""
"In this table, each of the 5 options are described together with their "
"advantages and disadvantages (|good| = best, |bad| = worst):"
msgstr ""
"아래의 표에 상기 4가지 설정 모두의 장점과 단점이 정리되어 있습니다( |good| = "
"최고, |bad| = 최악):"

msgid "good"
msgstr ""

#, fuzzy
msgid "bad"
msgstr "그리고"

#, fuzzy
msgid "Compress mode"
msgstr "압축 모드"

#, fuzzy
msgid "Lossless"
msgstr "무손실 압축"

msgid "Lossy"
msgstr ""

#, fuzzy
msgid "VRAM Compressed"
msgstr "컴프레스"

#, fuzzy
msgid "VRAM Uncompressed"
msgstr "압축하지 않음"

msgid "Basis Universal"
msgstr ""

msgid "**Description**"
msgstr "**설명**"

msgid "Stored as Lossless WebP / PNG"
msgstr "무손실 WebP / PNG로 저장됨"

msgid "Stored as Lossy WebP"
msgstr "손실 압축된 WebP로 저장됨"

#, fuzzy
msgid "Stored as S3TC, BPTC or ETC2 depending on platform"
msgstr "플랫폼에 따라 S3TC/BC 또는 PVRTC/ETC로 저장됨"

msgid "Stored as raw pixels"
msgstr "압축되지 않은 픽셀로 저장됨"

msgid "Transcoded to VRAM Compressed format"
msgstr ""

#, fuzzy
msgid "**Size on disk**"
msgstr "파일 용량"

msgid "|regular| Small"
msgstr "|regular| 작음"

#, fuzzy
msgid "regular"
msgstr "|regular| 작음"

#, fuzzy
msgid "|good| Very small"
msgstr "|good| 매우 작음"

msgid "|bad| Large"
msgstr "|bad| 거대함"

#, fuzzy
msgid "**Memory usage**"
msgstr "메모리 사용량"

msgid "|good| Small"
msgstr "|good| 작음"

#, fuzzy
msgid "**Performance**"
msgstr "**성능:**"

msgid "|regular| Normal"
msgstr "|regular| 보통"

msgid "|good| Fast"
msgstr "|good| 빠름"

#, fuzzy
msgid "**Quality loss**"
msgstr "품질 손실"

msgid "|good| None"
msgstr "|good| 없음"

msgid "|regular| Slight"
msgstr "|regular| 약간 있음"

msgid "|bad| Moderate"
msgstr "|bad| 보통"

#, fuzzy
msgid "**Load time**"
msgstr "불러오기 시간"

msgid "|bad| Slow"
msgstr "|bad| 느림"

msgid "Estimated memory usage for a single RGBA8 texture with mipmaps enabled:"
msgstr ""

#, fuzzy
msgid "Texture size"
msgstr "TextureRect"

msgid "**128×128**"
msgstr ""

msgid "|good| 85 KiB"
msgstr ""

msgid "|good| 21 KiB"
msgstr ""

msgid "**256×256**"
msgstr ""

msgid "|good| 341 KiB"
msgstr ""

msgid "**512×512**"
msgstr ""

msgid "|good| 1.33 MiB"
msgstr ""

msgid "**1024×1024**"
msgstr ""

#, fuzzy
msgid "|regular| 5.33 MiB"
msgstr "|regular| 약간 있음"

msgid "**2048×2048**"
msgstr ""

msgid "|bad| 21.33 MiB"
msgstr ""

msgid "**4096×4096**"
msgstr ""

msgid "|bad| 85.33 MiB"
msgstr ""

msgid ""
"In the above table, memory usage will be reduced by 25% for images that do "
"not have an alpha channel (RGB8). Memory usage will be further decreased by "
"25% for images that have mipmaps disabled."
msgstr ""

msgid ""
"Notice how at larger resolutions, the impact of VRAM compression is much "
"greater. With a 4:1 compression ratio (6:1 for opaque textures with S3TC), "
"VRAM compression effectively allows a texture to be twice as large on each "
"axis, while using the same amount of memory on the GPU."
msgstr ""

msgid ""
"VRAM compression also reduces the memory bandwidth required to sample the "
"texture, which can speed up rendering in memory bandwidth-constrained "
"scenarios (which are frequent on integrated graphics and mobile). These "
"factors combined make VRAM compression a must-have for 3D games with high-"
"resolution textures."
msgstr ""

msgid ""
"You can preview how much memory a texture takes by double-clicking it in the "
"FileSystem dock, then looking at the Inspector:"
msgstr ""

msgid "Previewing a texture in the Inspector"
msgstr ""

msgid ""
"Previewing a texture in the Inspector. Credit: `Red Brick 03 - Poly Haven "
"<https://polyhaven.com/a/red_brick_03>`__"
msgstr ""

msgid "Compress > High Quality"
msgstr ""

msgid ""
"High-quality VRAM texture compression is only supported in the Forward+ and "
"Forward Mobile rendering methods."
msgstr ""

msgid ""
"When using the Compatibility rendering method, this option is always "
"considered disabled."
msgstr ""

msgid ""
"If enabled, uses BPTC compression on desktop platforms and :abbr:`ASTC "
"(Adaptive Scalable Texture Compression)` compression on mobile platforms. "
"When using BPTC, BC7 is used for SDR textures and BC6H is used for HDR "
"textures."
msgstr ""

msgid ""
"If disabled (default), uses the faster but lower-quality S3TC compression on "
"desktop platforms and ETC2 on mobile/web platforms. When using S3TC, DXT1 "
"(BC1) is used for opaque textures and DXT5 (BC3) is used for transparent or "
"normal map (:abbr:`RGTC (Red-Green Texture Compression)`) textures."
msgstr ""

msgid ""
"BPTC and ASTC support VRAM compression for HDR textures, but S3TC and ETC2 "
"do not (see **HDR Compression** below)."
msgstr ""

#, fuzzy
msgid "Compress > HDR Compression"
msgstr "무손실 압축"

msgid ""
"This option only has an effect on textures that are imported as HDR formats "
"in Godot (``.hdr`` and ``.exr`` files)."
msgstr ""

msgid ""
"If set to **Disabled**, never uses VRAM compression for HDR textures, "
"regardless of whether they're opaque or transparent. Instead, the texture is "
"converted to RGBE9995 (9-bits per channel + 5-bit exponent = 32 bits per "
"pixel) to reduce memory usage compared to a half-float or single-precision "
"float image format."
msgstr ""

msgid ""
"If set to **Opaque Only** (default), only uses VRAM compression for opaque "
"HDR textures. This is due to a limitation of HDR formats, as there is no "
"VRAM-compressed HDR format that supports transparency at the same time."
msgstr ""

msgid ""
"If set to **Always**, will force VRAM compression even for HDR textures with "
"an alpha channel. To perform this, the alpha channel is discarded on import."
msgstr ""

#, fuzzy
msgid "Compress > Normal Map"
msgstr "일반 맵"

#, fuzzy
msgid ""
"When using a texture as normal map, only the red and green channels are "
"required. Given regular texture compression algorithms produce artifacts "
"that don't look that nice in normal maps, the :abbr:`RGTC (Red-Green Texture "
"Compression)` compression format is the best fit for this data. Forcing this "
"option to **Enable** will make Godot import the image as :abbr:`RGTC (Red-"
"Green Texture Compression)` compressed. By default, it's set to **Detect**. "
"This means that if the texture is ever detected to be used as a normal map, "
"it will be changed to **Enable** and reimported automatically."
msgstr ""
"텍스처를 노말맵으로 사용할 때, 빨강과 초록 채널만을 사용합니다. 일반적인 텍스"
"처 압축 알고리즘은 노말맵에서 보기 흉한 변형을 일으키므로 RGTC 압축 형식이 "
"이 데이터에 가장 적합합니다. 이 설정을 \"Enabled\"로 변경하면 Godot는 이미지"
"를 RGTC 압축 형식으로 가져올 것입니다. 기본적으로는 \"Detect\"로 설정되어 있"
"는데, 텍스처가 노말맵으로 사용된다면 자동으로 \"Enabled\"로 바뀌며 다시 가져"
"온다는 것을 뜻합니다."

#, fuzzy
msgid ""
"Note that :abbr:`RGTC (Red-Green Texture Compression)` compression affects "
"the resulting normal map image. You will have to adjust custom shaders that "
"use the normal map's blue channel to take this into account. Built-in "
"material shaders already ignore the blue channel in a normal map (regardless "
"of the actual normal map's contents)."
msgstr ""
"RGTC 압축이 노멀맵 결과 이미지에 영향을 끼친다는 것을 명심하십시오. 이 점을 "
"고려해 노멀맵을 사용하는 커스텀 쉐이더를 조정해줘야 합니다."

msgid ""
"In the example below, the normal map with :abbr:`RGTC (Red-Green Texture "
"Compression)` compression is able to preserve its detail much better, while "
"using the same amount of memory as a standard RGBA VRAM-compressed texture:"
msgstr ""

msgid ""
"Normal map with standard VRAM compression (left) and with RGTC VRAM "
"compression (right)"
msgstr ""

#, fuzzy
msgid ""
"Godot requires the normal map to use the X+, Y+ and Z+ coordinates, which is "
"known as an OpenGL-style normal map. If you've imported a material made to "
"be used with another engine, it may be DirectX-style. In this case, the "
"normal map needs to be converted by enabling the **Normal Map Invert Y** "
"import option."
msgstr ""
"Godot은 노멀맵에서 X+, Y-와 Z+ 좌표를 사용합니다. 따라서 다른 엔진용으로 나"
"온 재질을 가져왔다면 노멀맵의 Y좌표를 반전시켜야 할 수 있습니다. 그렇지 않으"
"면 노멀맵 Y축 방향이 반전된 상태로 나타날 수 있습니다."

msgid ""
"More information about normal maps (including a coordinate order table for "
"popular engines) can be found `here <http://wiki.polycount.com/wiki/"
"Normal_Map_Technical_Details>`__."
msgstr ""
"노멀맵에 관한 추가적인 정보(유명 엔진 등의 좌표 순서가 정리된 테이블 등)는 `"
"이 곳 <http://wiki.polycount.com/wiki/Normal_Map_Technical_Details>`__ 에서 "
"찾을 수 있습니다."

msgid "Compress > Channel Pack"
msgstr ""

msgid ""
"If set to **sRGB Friendly** (default), prevents the RG color format from "
"being used as it does not support sRGB color."
msgstr ""

msgid ""
"If set to **Optimized**, allows the RG color format to be used if the "
"texture does not use the blue channel."
msgstr ""

msgid ""
"A third option **Normal Map (RG Channels)** is *only* available in layered "
"textures (:ref:`class_Cubemap`, :ref:`class_CubemapArray`, :ref:"
"`class_Texture2DArray` and :ref:`class_Texture3D`). This forces all layers "
"from the texture to be imported with the RG color format to reduce memory "
"usage, with only the red and green channels preserved. This only has an "
"effect on textures with the **VRAM Compressed** or **Basis Universal** "
"compression modes."
msgstr ""

#, fuzzy
msgid "Mipmaps > Generate"
msgstr "생성된 파일"

msgid ""
"If enabled, smaller versions of the texture are generated on import. For "
"example, a 64×64 texture will generate 6 mipmaps (32×32, 16×16, 8×8, 4×4, "
"2×2, 1×1). This has several benefits:"
msgstr ""

msgid ""
"Textures will not become grainy in the distance (in 3D), or if scaled down "
"due to camera zoom or CanvasItem scale (in 2D)."
msgstr ""

msgid ""
"Performance will improve if the texture is displayed in the distance, since "
"sampling smaller versions of the original texture is faster and requires "
"less memory bandwidth."
msgstr ""

msgid ""
"The downside of mipmaps is that they increase memory usage by roughly 33%."
msgstr ""

msgid ""
"It's recommended to enable mipmaps in 3D. However, in 2D, this should only "
"be enabled if your project visibly benefits from having mipmaps enabled. If "
"the camera never zooms out significantly, there won't be a benefit to "
"enabling mipmaps but memory usage will increase."
msgstr ""

#, fuzzy
msgid "Mipmaps > Limit"
msgstr "밉맵"

msgid ""
"**Mipmaps > Limit** is currently not implemented and has no effect when "
"changed."
msgstr ""

msgid ""
"If set to a value greater than ``-1``, limits the maximum number of mipmaps "
"that can be generated. This can be decreased if you don't want textures to "
"become too low-resolution at extreme distances, at the cost of some "
"graininess."
msgstr ""

#, fuzzy
msgid "Roughness > Mode"
msgstr "굵기"

msgid ""
"The color channel to consider as a roughness map in this texture. Only "
"effective if **Roughness > Src Normal** is not empty."
msgstr ""

#, fuzzy
msgid "Roughness > Src Normal"
msgstr "굵기"

msgid ""
"The path to the texture to consider as a normal map for roughness filtering "
"on import. Specifying this can help decrease specular aliasing slightly in "
"3D."
msgstr ""

msgid "Roughness filtering on import is only used in 3D rendering, not 2D."
msgstr ""

#, fuzzy
msgid "Process > Fix Alpha Border"
msgstr "알파 테두리 수정"

#, fuzzy
msgid ""
"This puts pixels of the same surrounding color in transition from "
"transparent to opaque areas. For textures displayed with bilinear filtering, "
"this helps mitigate the outline effect when exporting images from an image "
"editor."
msgstr ""
"이렇게 하면 같은 주변 색상의 픽셀을 넣어서 테두리를 투명에서 불투명으로 만듭"
"니다. 포토샵 등에서 이미지를 내보낼 때 테두리 효과를 완화하는데 도움을 줍니"
"다."

msgid ""
"It's recommended to leave this enabled (as it is by default), unless this "
"causes issues for a particular image."
msgstr ""

#, fuzzy
msgid "Process > Premult Alpha"
msgstr "Premultiplied Alpha(미리 곱하기 알파)"

#, fuzzy
msgid ""
"An alternative to fixing darkened borders with **Fix Alpha Border** is to "
"use premultiplied alpha. By enabling this option, the texture will be "
"converted to this format. A premultiplied alpha texture requires specific "
"materials to be displayed correctly:"
msgstr ""
"어두워진 테두리를 고치는 법으로 Premultiplied Alpha를 사용하는 것입니다. 이 "
"설정을 키면, 텍스처는 이 형식으로 변환될 것입니다. 이 텍스처가 필요한 캔버스 "
"항목에 PREMULT ALPHA 블렌드 모드를 사용하는 머티리얼을 만들어야 합니다."

msgid ""
"In 2D, a :ref:`class_CanvasItemMaterial` will need to be created and "
"configured to use the **Premul Alpha** blend mode on CanvasItems that use "
"this texture."
msgstr ""

msgid ""
"In 3D, there is no support for premultiplied alpha blend mode yet, so this "
"option is only suited for 2D."
msgstr ""

msgid "Process > Normal Map Invert Y"
msgstr ""

#, fuzzy
msgid "Process > HDR as sRGB"
msgstr "HDR을 sRGB로"

#, fuzzy
msgid ""
"Some HDR images you can find online may be broken and contain sRGB color "
"data (instead of linear color data). It is advised not to use those files. "
"If you absolutely have to, enabling this option on will make them look "
"correct."
msgstr ""
"몇 몇 HDR 파일은 손상되고 sRGB 색상 데이터를 갖고 있습니다. 사용하지 않는 것"
"이 좋지만, 최악의 경우에서, 이 설정을 켜면 좋게 보이게 만듭니다."

msgid ""
"Enabling **HDR as sRGB** on well-formatted HDR images will cause the "
"resulting image to look too dark, so leave this disabled if unsure."
msgstr ""

msgid "Process > HDR Clamp Exposure"
msgstr ""

msgid ""
"Some HDR panorama images you can find online may contain extremely bright "
"pixels, due to being taken from real life sources without any clipping."
msgstr ""

msgid ""
"While these HDR panorama images are accurate to real life, this can cause "
"the radiance map generated by Godot to contain sparkles when used as a "
"background sky. This can be seen in material reflections (even on rough "
"materials in extreme cases). Enabling **HDR Clamp Exposure** can resolve "
"this using a smart clamping formula that does not introduce *visible* "
"clipping – glow will keep working when looking at the background sky."
msgstr ""

msgid "Process > Size Limit"
msgstr ""

msgid ""
"If set to a value greater than ``0``, the size of the texture is limited on "
"import to a value smaller than or equal to the value specified here. For non-"
"square textures, the size limit affects the longer dimension, with the "
"shorter dimension scaled to preserve aspect ratio. Resizing is performed "
"using cubic interpolation."
msgstr ""

msgid ""
"This can be used to reduce memory usage without affecting the source images, "
"or avoid issues with textures not displaying on mobile/web platforms (as "
"these usually can't display textures larger than 4096×4096)."
msgstr ""

msgid "Detect 3D > Compress To"
msgstr ""

msgid ""
"This changes the :ref:`doc_importing_images_compress_mode` option that is "
"used when a texture is detected as being used in 3D."
msgstr ""

msgid ""
"Changing this import option only has an effect if a texture is detected as "
"being used in 3D. Changing this to **Disabled** then reimporting will not "
"change the existing compress mode on a texture (if it's detected to be used "
"in 3D), but choosing **VRAM Compressed** or **Basis Universal** will."
msgstr ""

#, fuzzy
msgid "SVG > Scale"
msgstr "속도 배수"

msgid "*This is only available for SVG images.*"
msgstr ""

msgid ""
"The scale the SVG should be rendered at, with ``1.0`` being the original "
"design size. Higher values result in a larger image. Note that unlike font "
"oversampling, this affects the physical size the SVG is rendered at in 2D. "
"See also **Editor > Scale With Editor Scale** below."
msgstr ""

msgid "Editor > Scale With Editor Scale"
msgstr ""

msgid ""
"If true, scales the imported image to match the editor's display scale "
"factor. This should be enabled for editor plugin icons and custom class "
"icons, but should be left disabled otherwise."
msgstr ""

msgid "Editor > Convert Colors With Editor Theme"
msgstr ""

msgid ""
"If checked, converts the imported image's colors to match the editor's icon "
"and font color palette. This assumes the image uses the exact same colors "
"as :ref:`Godot's own color palette for editor icons <doc_editor_icons>`, "
"with the source file designed for a dark editor theme. This should be "
"enabled for editor plugin icons and custom class icons, but should be left "
"disabled otherwise."
msgstr ""

#, fuzzy
msgid "Importing SVG images with text"
msgstr "이미지 가져오기"

msgid ""
"As the SVG library used in Godot doesn't support rasterizing text found in "
"SVG images, text must be converted to a path first. Otherwise, text won't "
"appear in the rasterized image."
msgstr ""

msgid ""
"There are two ways to achieve this in a non-destructive manner, so you can "
"keep editing the original text afterwards:"
msgstr ""

msgid ""
"Select your text object in Inkscape, then duplicate it in place by pressing :"
"kbd:`Ctrl + D` and use **Path > Object to Path**. Hide the original text "
"object afterwards using the **Layers and Objects** dock."
msgstr ""

msgid ""
"Use the Inkscape command line to export a SVG from another SVG file with "
"text converted to paths:"
msgstr ""

msgid "Best practices"
msgstr "모범 사례"

msgid "Supporting high-resolution texture sizes in 2D without artifacts"
msgstr ""

msgid ""
"To support :ref:`multiple resolutions <doc_multiple_resolutions>` with crisp "
"visuals at high resolutions, you will need to use high-resolution source "
"images (suited for the highest resolution you wish to support without "
"blurriness, which is typically 4K in modern desktop games)."
msgstr ""

#, fuzzy
msgid "There are 2 ways to proceed:"
msgstr "이렇게 하고 싶어하는 몇 가지 이유가 있습니다:"

msgid ""
"Use a high base resolution in the project settings (such as 4K), then use "
"the textures at original scale. This is an easier approach."
msgstr ""

msgid ""
"Use a low base resolution in the project settings (such as 1080p), then "
"downscale textures when using them. This is often more difficult and can "
"make various calculations in script tedious, so the approach described above "
"is recommended instead."
msgstr ""

msgid ""
"After doing this, you may notice that textures become grainy at lower "
"viewport resolutions. To resolve this, enable **Mipmaps** on textures used "
"in 2D in the Import dock. This will increase memory usage."
msgstr ""

msgid ""
"Enabling mipmaps can also make textures appear blurrier, but you can choose "
"to make textures sharper (at the cost of some graininess) by setting "
"**Rendering > Textures > Default Filters > Texture Mipmap Bias** to a "
"negative value."
msgstr ""

msgid "Use appropriate texture sizes in 3D"
msgstr ""

msgid ""
"While there's no \"one size fits all\" recommendation, here are some general "
"recommendations for choosing texture sizes in 3D:"
msgstr ""

msgid ""
"The size of a texture should be adjusted to have a consistent texel density "
"compared to surrounding objects. While this cannot be ensured perfectly when "
"sticking to power-of-two texture sizes, it's usually possible to keep "
"texture detail fairly consistent throughout a 3D scene."
msgstr ""

msgid ""
"The smaller the object appears on screen, the smaller its texture should be. "
"For example, a tree that only appears in the background doesn't need a "
"texture resolution as high as other objects the player may be able to walk "
"close to."
msgstr ""

msgid ""
"Using power-of-two texture sizes is recommended, but is not required. "
"Textures don't have to be square – sizes such as 1024×512 are acceptable."
msgstr ""

msgid ""
"There are diminishing returns to using large texture sizes, despite the "
"increased memory usage and loading times. Most modern 3D games not using a "
"pixel art style stick to 2048×2048 textures on average, with 1024×1024 and "
"512×512 for textures spanning smaller surfaces."
msgstr ""

msgid ""
"When working with physically-based materials in 3D, you can reduce memory "
"usage and file size without affecting quality too much by using a lower "
"resolution for certain texture maps. This works especially well for textures "
"that only feature low-frequency detail (such as a normal map for a snow "
"texture)."
msgstr ""

msgid ""
"If you have control over how the 3D models are created, these tips are also "
"worth exploring:"
msgstr ""

msgid ""
"When working with 3D models that are mostly symmetrical, you may be able to "
"use mirrored UVs to double the effective texel density. This may look "
"unnatural when used on human faces though."
msgstr ""

msgid ""
"When working with 3D models using a low-poly style and plain colors, you can "
"rely on vertex colors instead of textures to represent colors on the model's "
"surfaces."
msgstr ""

msgid ""
"Images can be loaded and saved at runtime using :ref:`runtime file loading "
"and saving <doc_runtime_file_loading_and_saving_images>`, including from an "
"exported project."
msgstr ""

msgid "Translation status"
msgstr "번역 상태"
