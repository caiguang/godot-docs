# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating the player scene"
msgstr "Die Spieler-Szene erstellen"

msgid ""
"With the project settings in place, we can start working on the player-"
"controlled character."
msgstr ""
"Mit den korrekten Projekteinstellungen können wir mit der Arbeit am vom "
"Spieler kontrollierten Charakter beginnen."

msgid ""
"The first scene will define the ``Player`` object. One of the benefits of "
"creating a separate Player scene is that we can test it separately, even "
"before we've created other parts of the game."
msgstr ""
"Die erste erstellte Szene definiert das ``Player``-Objekt. Einer der "
"Vorteile einer separaten Spieler-Szene ist, dass diese unabhängig vom Rest "
"des Spiels getestet werden kann, bevor andere Teile des Spiels existieren "
"müssen."

msgid "Node structure"
msgstr "Node-Struktur"

msgid ""
"To begin, we need to choose a root node for the player object. As a general "
"rule, a scene's root node should reflect the object's desired functionality "
"- what the object *is*. Click the \"Other Node\" button and add an :ref:"
"`Area2D <class_Area2D>` node to the scene."
msgstr ""
"Um zu beginnen, müssen wir einen Root-Node für das Spieler-Objekt wählen. "
"Als eine generelle Regel gilt, ein Root-Node einer Szene sollte immer die "
"gewünschte Funktionalität des Objektes reflektieren - was das Objekt *ist*. "
"Klicken Sie auf den \"Anderer Node\"-Button und fügen einen :ref:`Area2D "
"<class_Area2D>`-Node zu der Szene hinzu."

msgid ""
"Godot will display a warning icon next to the node in the scene tree. You "
"can ignore it for now. We will address it later."
msgstr ""
"Godot zeigt ein Icon mit einem Warnhinweis im Node des Szenenbaumes. Dieses "
"kann vorerst ignoriert werden, wir werden uns später darum kümmern."

msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change the node's name to ``Player`` by double-clicking on it. Now that "
"we've set the scene's root node, we can add additional nodes to give it more "
"functionality."
msgstr ""
"Mit ``Area2D`` können Objekte erkannt werden, die mit dem Spieler überlappen "
"oder diesen berühren. Wir ändern den Namen des Nodes zu ``Player``, indem "
"wir darauf Doppelklicken. Nun da wir den Root-Node der Szene gesetzt haben, "
"können wir weitere Nodes hinzufügen, um ihm damit mehr Funktionalität zu "
"geben."

msgid ""
"Before we add any children to the ``Player`` node, we want to make sure we "
"don't accidentally move or resize them by clicking on them. Select the node "
"and click the icon to the right of the lock. Its tooltip says \"Make "
"selected node's children not selectable.\""
msgstr ""
"Bevor wir dem ``Player``-Node untergeordnete Nodes hinzufügen, wollen wir "
"sicherstellen, dass wir sie nicht versehentlich verschieben oder in der "
"Größe verändern, indem wir auf sie klicken. Wählen Sie den Node aus und "
"klicken Sie auf das Icon rechts neben dem Schloss. Sein Tooltip sagt \"Child-"
"Elemente des ausgewählten Nodes unauswählbar machen\"."

msgid ""
"Save the scene. Click Scene -> Save, or press :kbd:`Ctrl + S` on Windows/"
"Linux or :kbd:`Cmd + S` on macOS."
msgstr ""
"Speichern Sie die Szene. Klicken Sie auf Szene -> Speichern oder drücken :"
"kbd:`Strg + S` unter Windows/Linux oder :kbd:`Cmd + S` unter MacOS."

msgid "For this project, we will be following the Godot naming conventions."
msgstr "Für dieses Projekt halten wir uns an die Godot-Namenskonvention."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Klassen (Nodes) nutzen PascalCase, Variablen und Funktionen "
"snake_case und Konstanten ALL_CAPS (Siehe :ref:`doc_gdscript_styleguide`)."

msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`). Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C#**: Klassen, Exportvariablen und Methoden PascalCase, private Felder "
"_camelCase, lokale Variablen und Parameter verwenden camelCase (Siehe :ref:"
"`doc_c_sharp_styleguide`). Beachten Sie die genaue Schreibweise, wenn Sie "
"Signale einbinden möchten."

msgid "Sprite animation"
msgstr "Sprite-Animation"

msgid ""
"Click on the ``Player`` node and add (:kbd:`Ctrl + A` on Windows/Linux or :"
"kbd:`Cmd + A` on macOS) a child node :ref:`AnimatedSprite2D "
"<class_AnimatedSprite2D>`. The ``AnimatedSprite2D`` will handle the "
"appearance and animations for our player. Notice that there is a warning "
"symbol next to the node. An ``AnimatedSprite2D`` requires a :ref:"
"`SpriteFrames <class_SpriteFrames>` resource, which is a list of the "
"animations it can display. To create one, find the ``Sprite Frames`` "
"property under the ``Animation`` tab in the Inspector and click \"[empty]\" -"
"> \"New SpriteFrames\". Click again to open the \"SpriteFrames\" panel:"
msgstr ""
"Klicken Sie auf den Node ``Player`` und fügen Sie einen Child-Node :ref:"
"`AnimatedSprite2D <class_AnimatedSprite2D>` hinzu (:kbd:`Strg + A` unter "
"Windows/Linux oder :kbd:`Cmd + A` unter macOS). Der ``AnimatedSprite2D`` "
"wird das Aussehen und die Animationen für unseren Spieler übernehmen. "
"Beachten Sie, dass neben dem Node ein Warnsymbol steht. Ein "
"``AnimatedSprite2D`` benötigt eine :ref:`SpriteFrames <class_SpriteFrames>`-"
"Ressource, die eine Liste der Animationen repräsentiert, die es anzeigen "
"kann. Um eine solche Ressource zu erstellen, suchen Sie die Eigenschaft "
"``Sprite-Frames`` unter dem ``Animation`` Tab im Inspektor und klicken Sie "
"auf \"[leer]\" -> \"Neue SpriteFrames\". Klicken Sie erneut, um das "
"\"SpriteFrames\"-Panel zu öffnen:"

msgid ""
"On the left is a list of animations. Click the \"default\" one and rename it "
"to \"walk\". Then click the \"Add Animation\" button to create a second "
"animation named \"up\". Find the player images in the \"FileSystem\" tab - "
"they're in the ``art`` folder you unzipped earlier. Drag the two images for "
"each animation, named ``playerGrey_up[1/2]`` and ``playerGrey_walk[1/2]``, "
"into the \"Animation Frames\" side of the panel for the corresponding "
"animation:"
msgstr ""
"Auf der linken Seite befindet sich eine Liste mit Animationen. Klicken Sie "
"auf die \"default\"-Animation und benennen Sie sie in \"walk\" um. Klicken "
"Sie dann auf den \"Animation Hinzufügen\"-Button, um eine zweite Animation "
"mit dem Namen \"up\" zu erstellen. Suchen Sie die Spieler-Bilder im "
"\"Dateisystem\"-Tab - sie befinden sich im Ordner ``art``, den Sie zuvor "
"entpackt haben. Ziehen Sie die beiden Bilder für jede Animation mit den "
"Namen ``playerGrey_up[1/2]`` und ``playerGrey_walk[1/2]`` in die "
"\"Animations-Frames\"-Seite des Fensters für die entsprechende Animation:"

msgid ""
"The player images are a bit too large for the game window, so we need to "
"scale them down. Click on the ``AnimatedSprite2D`` node and set the "
"``Scale`` property to ``(0.5, 0.5)``. You can find it in the Inspector under "
"the ``Node2D`` heading."
msgstr ""
"Die Bilder des Spielers sind ein wenig zu groß für das Spielfenster, also "
"müssen wir sie herunterskalieren. Klicken Sie auf den ``AnimatedSprite2D``-"
"Node und setzen Sie die Eigenschaft ``Skalierung`` auf ``(0.5, 0.5)``. Sie "
"finden diese Eigenschaft im Inspektor unter der Überschrift ``Node2D``."

msgid ""
"Finally, add a :ref:`CollisionShape2D <class_CollisionShape2D>` as a child "
"of ``Player``. This will determine the player's \"hitbox\", or the bounds of "
"its collision area. For this character, a ``CapsuleShape2D`` node gives the "
"best fit, so next to \"Shape\" in the Inspector, click \"[empty]\" -> \"New "
"CapsuleShape2D\". Using the two size handles, resize the shape to cover the "
"sprite:"
msgstr ""
"Schließlich fügen Sie ein :ref:`CollisionShape2D <class_CollisionShape2D>` "
"als Child von ``Player`` hinzu. Dies wird die \"Hitbox\" des Spielers "
"bestimmen, oder die Begrenzung seines Kollisionsbereichs. Für diesen "
"Charakter ist ein ``CapsuleShape2D``-Node am besten geeignet, also klicken "
"Sie neben \"Shape\" im Inspektor auf \"[leer]\" -> \"Neue CapsuleShape2D\". "
"Benutzen Sie die beiden Größenanfasser, um die Shape so zu verändern, dass "
"sie das Sprite abdeckt:"

msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr ""
"Wenn Sie fertig sind sollte Ihre ``Player``-Szene die folgende Struktur "
"haben:"

msgid "Make sure to save the scene again after these changes."
msgstr "Speichern Sie die Szene nach diesen Änderungen wieder ab."

msgid ""
"In the next part, we'll add a script to the player node to move and animate "
"it. Then, we'll set up collision detection to know when the player got hit "
"by something."
msgstr ""
"Im nächsten Schritt werden wir ein Skript für Bewegung und Animation zum "
"Spieler-Node hinzufügen. Anschließend werden wir eine Kollisionserkennung "
"einrichten, um zu erkennen, wenn der Player von etwas getroffen wird."

msgid "Translation status"
msgstr "Übersetzungsstatus"
