# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Signal"
msgstr "Signal"

msgid "Using signals"
msgstr "Signale nutzen"

msgid ""
"In this lesson, we will look at signals. They are messages that nodes emit "
"when something specific happens to them, like a button being pressed. Other "
"nodes can connect to that signal and call a function when the event occurs."
msgstr ""
"In dieser Lektion werden wir uns mit Signalen beschäftigen. Das sind "
"Nachrichten, die Nodes aussenden, wenn etwas Bestimmtes mit ihnen passiert, "
"z.B. wenn ein Button gedrückt wird. Andere Nodes können sich mit diesem "
"Signal verbinden und eine Funktion aufrufen, wenn das Ereignis eintritt."

msgid ""
"Signals are a delegation mechanism built into Godot that allows one game "
"object to react to a change in another without them referencing one another. "
"Using signals limits `coupling <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ and keeps your code flexible."
msgstr ""
"Signale sind ein in Godot integrierter Delegierungsmechanismus, der es einem "
"Spielobjekt ermöglicht, auf eine Änderung in einem anderen zu reagieren, "
"ohne dass sie sich gegenseitig referenzieren. Die Verwendung von Signalen "
"führt zu weniger `Kopplung <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ und hält Ihren Code flexibel."

msgid ""
"For example, you might have a life bar on the screen that represents the "
"player's health. When the player takes damage or uses a healing potion, you "
"want the bar to reflect the change. To do so, in Godot, you would use "
"signals."
msgstr ""
"Sie könnten zum Beispiel einen Lebensbalken auf dem Bildschirm haben, der "
"die Gesundheit des Spielers anzeigt. Wenn der Spieler Schaden erleidet oder "
"einen Heiltrank benutzt, soll der Balken die Veränderung anzeigen. Dazu "
"würden Sie in Godot Signale verwenden."

msgid ""
"As mentioned in the introduction, signals are Godot's version of the "
"observer pattern. You can learn more about it here: https://"
"gameprogrammingpatterns.com/observer.html"
msgstr ""
"Wie in der Einleitung erwähnt, sind Signale Godots Version des Observer-"
"Patterns. Sie können hier mehr darüber erfahren: https://"
"gameprogrammingpatterns.com/observer.html"

msgid ""
"We will now use a signal to make our Godot icon from the previous lesson (:"
"ref:`doc_scripting_player_input`) move and stop by pressing a button."
msgstr ""
"Wir werden nun ein Signal verwenden, um unser Godot-Icon aus dem letzten "
"Teil (:ref:`doc_scripting_player_input`) zu bewegen und durch Drücken eines "
"Buttons anzuhalten."

msgid "Scene setup"
msgstr "Einrichten einer Szene"

msgid ""
"To add a button to our game, we will create a new main scene which will "
"include both a :ref:`Button <class_button>` and the ``sprite_2d.tscn`` scene "
"we created in the :ref:`doc_scripting_first_script` lesson."
msgstr ""
"Um einen Button zu unserem Spiel hinzuzufügen, erstellen wir eine neue "
"Hauptszene, die sowohl einen :ref:`Button <class_button>` als auch die Szene "
"``sprite_2d.tscn`` enthält, die wir in der Lektion :ref:"
"`doc_scripting_first_script` erstellt haben."

msgid "Create a new scene by going to the menu Scene -> New Scene."
msgstr ""
"Erstellen Sie eine neue Szene, indem Sie das Menü Szene -> Neue Szene "
"aufrufen."

msgid ""
"In the Scene dock, click the 2D Scene button. This will add a :ref:`Node2D "
"<class_Node2D>` as our root."
msgstr ""
"Klicken Sie im Szenendock auf den „2D-Szene“-Button. Dadurch wird ein :ref:"
"`Node2D <class_Node2D>` als unser Root hinzugefügt."

msgid ""
"In the FileSystem dock, click and drag the ``sprite_2d.tscn`` file you saved "
"previously onto the Node2D to instantiate it."
msgstr ""
"Klicken Sie im Dateisystem-Dock auf die Datei ``sprite_2d.tscn``, die Sie "
"zuvor gespeichert haben, und ziehen Sie sie auf den Node2D, um sie zu "
"instanziieren."

msgid ""
"We want to add another node as a sibling of the Sprite2D. To do so, right-"
"click on Node2D and select Add Child Node."
msgstr ""
"Wir möchten einen weiteren Node als Nachbar-Node des Sprite2D hinzufügen. "
"Dazu klicken Sie mit der rechten Maustaste auf Node2D und wählen „Child-Node "
"hinzufügen“."

msgid "Search for the :ref:`Button <class_button>` node and add it."
msgstr ""
"Suchen Sie den :ref:`Button <class_button>`-Node und fügen Sie ihn hinzu."

msgid ""
"The node is small by default. Click and drag on the bottom-right handle of "
"the Button in the viewport to resize it."
msgstr ""
"Der Node ist standardmäßig klein. Klicken und ziehen Sie auf den unteren "
"rechten Griff des Buttons im Viewport, um die Größe zu ändern."

msgid ""
"If you don't see the handles, ensure the select tool is active in the "
"toolbar."
msgstr ""
"Wenn Sie die Griffe nicht sehen, vergewissern Sie sich, dass das Auswahl-"
"Tool in der Toolbar aktiviert ist."

msgid "Click and drag on the button itself to move it closer to the sprite."
msgstr ""
"Klicken und ziehen Sie den Button, um ihn näher an das Sprite zu bringen."

msgid ""
"You can also write a label on the Button by editing its Text property in the "
"Inspector. Enter ``Toggle motion``."
msgstr ""
"Sie können auch ein Label auf den Button setzen, indem Sie seine "
"Texteigenschaft im Inspektor bearbeiten. Geben Sie ``Bewegung ein/"
"ausschalten`` ein."

msgid "Your scene tree and viewport should look like this."
msgstr "Ihr Szenenbaum und Viewport sollten wie folgt aussehen."

msgid ""
"Save your newly created scene as ``node_2d.tscn``, if you haven't already. "
"You can then run it with :kbd:`F6` (:kbd:`Cmd + R` on macOS). At the moment, "
"the button will be visible, but nothing will happen if you press it."
msgstr ""
"Speichern Sie Ihre neu erstellte Szene unter dem Namen ``node_2d.tscn``, "
"falls Sie das nicht schon getan haben. Sie können sie dann mit :kbd:`F6` (:"
"kbd:`Cmd + R` unter macOS) starten. Im Moment ist der Button sichtbar, aber "
"es wird nichts passieren, wenn Sie ihn drücken."

msgid "Connecting a signal in the editor"
msgstr "Verbinden von Signalen im Editor"

msgid ""
"Here, we want to connect the Button's \"pressed\" signal to our Sprite2D, "
"and we want to call a new function that will toggle its motion on and off. "
"We need to have a script attached to the Sprite2D node, which we do from the "
"previous lesson."
msgstr ""
"Hier wollen wir das Signal \"pressed\" des Buttons mit unserem Sprite2D "
"verbinden und eine neue Funktion aufrufen, von der die Bewegung des Buttons "
"ein- und ausgeschaltet wird. Wir brauchen ein Skript, das an den Sprite2D-"
"Node angehängt ist, wie wir es in der vorherigen Lektion getan haben."

msgid ""
"You can connect signals in the Node dock. Select the Button node and, on the "
"right side of the editor, click on the tab named \"Node\" next to the "
"Inspector."
msgstr ""
"Sie können Signale im Node-Dock verbinden. Wählen Sie den Button-Node aus "
"und klicken Sie auf der rechten Seite des Editors auf den Tab \"Node\" neben "
"dem Inspektor."

msgid "The dock displays a list of signals available on the selected node."
msgstr ""
"Das Dock zeigt eine Liste aller verfügbaren Signale für das ausgewählte Node "
"an."

msgid "Double-click the \"pressed\" signal to open the node connection window."
msgstr ""
"Doppelklicken Sie auf das „pressed“ Signal, um das Node-Verbindungsfenster "
"zu öffnen."

msgid ""
"There, you can connect the signal to the Sprite2D node. The node needs a "
"receiver method, a function that Godot will call when the Button emits the "
"signal. The editor generates one for you. By convention, we name these "
"callback methods \"_on_node_name_signal_name\". Here, it'll be "
"\"_on_button_pressed\"."
msgstr ""
"Dort können Sie das Signal mit dem Sprite2D-Node verbinden. Der Node "
"benötigt eine Empfängermethode, eine Funktion, die Godot aufruft, wenn der "
"Button das Signal aussendet. Der Editor generiert eine für Sie. "
"Konventionell nennen wir diese Callback-Methoden nach dem Schema "
"\"_on_node_name_signal_name\". In diesem Fall wird es \"_on_button_pressed\" "
"sein."

msgid ""
"When connecting signals via the editor's Node dock, you can use two modes. "
"The simple one only allows you to connect to nodes that have a script "
"attached to them and creates a new callback function on them."
msgstr ""
"Man kann zweierlei Modi verwenden, um Signale über das Node-Dock zu "
"verbinden. Der einfache Modus erlaubt ausschließlich die Verbindung zu Nodes "
"mit dazugehörigem Skript und erstellt in diesem eine neue Callback-Funktion."

msgid ""
"The advanced view lets you connect to any node and any built-in function, "
"add arguments to the callback, and set options. You can toggle the mode in "
"the window's bottom-right by clicking the Advanced button."
msgstr ""
"In der erweiterten Ansicht können Sie sich mit jedem Node und jeder Built-in-"
"Funktion verbinden, der Callback-Funktion Argumente hinzufügen und Optionen "
"festlegen. Sie können den Modus unten rechts im Fenster ein- und "
"ausschalten, indem Sie auf den Erweitert-Button klicken."

msgid ""
"Click the Connect button to complete the signal connection and jump to the "
"Script workspace. You should see the new method with a connection icon in "
"the left margin."
msgstr ""
"Klicken Sie auf den „Verbinden“-Button, um die Signalverbindung "
"abzuschließen und zum Arbeitsbereich „Skript“ zu wechseln. Sie sollten die "
"neue Methode mit einem Verbindungs-Icon am linken Rand sehen."

msgid ""
"If you click the icon, a window pops up and displays information about the "
"connection. This feature is only available when connecting nodes in the "
"editor."
msgstr ""
"Wenn Sie auf das Icon klicken, öffnet sich ein Fenster und zeigt "
"Informationen über die Verbindung an. Dieses Feature ist nur verfügbar, wenn "
"Nodes im Editor verbunden werden."

msgid ""
"Let's replace the line with the ``pass`` keyword with code that'll toggle "
"the node's motion."
msgstr ""
"Lassen Sie uns die Zeile im Code mit dem ``pass`` Schlüsselwort durch Code "
"ersetzen, der die Bewegung des Nodes umschaltet."

msgid ""
"Our Sprite2D moves thanks to code in the ``_process()`` function. Godot "
"provides a method to toggle processing on and off: :ref:`Node.set_process() "
"<class_Node_method_set_process>`. Another method of the Node class, "
"``is_processing()``, returns ``true`` if idle processing is active. We can "
"use the ``not`` keyword to invert the value."
msgstr ""
"Unser Sprite2D bewegt sich dank des Codes in der Funktion ``_process()``. "
"Godot bietet eine Methode, um die Verarbeitung ein- und auszuschalten: :ref:"
"`Node.set_process() <class_Node_method_set_process>`. Eine andere Methode "
"der Klasse Node, ``is_processing()``, gibt ``true`` zurück, wenn die "
"Leerlauf-Verarbeitung aktiv ist. Wir können das Schlüsselwort ``not`` "
"verwenden, um den Wert zu invertieren."

msgid ""
"This function will toggle processing and, in turn, the icon's motion on and "
"off upon pressing the button."
msgstr ""
"Diese Funktion schaltet die Ausführung und damit die Bewegung des Icons beim "
"Drücken des Buttons entsprechend ein und aus."

msgid ""
"Before trying the game, we need to simplify our ``_process()`` function to "
"move the node automatically and not wait for user input. Replace it with the "
"following code, which we saw two lessons ago:"
msgstr ""
"Bevor wir das Spiel ausprobieren, müssen wir unsere ``_process()``-Funktion "
"vereinfachen, um den Node automatisch zu bewegen und nicht auf die Eingabe "
"des Anwenders warten zu müssen. Ersetzen Sie sie durch den folgenden Code, "
"der bereits in der vorletzten Lektion vorkam:"

msgid "Your complete ``sprite_2d.gd`` code should look like the following."
msgstr "Ihr vollständiger ``sprite_2d.gd``-Code sollte wie folgt aussehen."

msgid ""
"Run the scene now and click the button to see the sprite start and stop."
msgstr ""
"Starten Sie die Szene und klicken Sie auf den Button um das Sprite zum "
"Laufen und Halten zu bringen."

msgid "Connecting a signal via code"
msgstr "Ein Signal über Code verbinden"

msgid ""
"You can connect signals via code instead of using the editor. This is "
"necessary when you create nodes or instantiate scenes inside of a script."
msgstr ""
"Man kann Signale auch über den Code erzeugen, anstelle den Editor zu "
"verwenden. Dies ist notwendig, falls man Notes oder Szenen innerhalb eines "
"Skriptes erzeugen möchte."

msgid ""
"Let's use a different node here. Godot has a :ref:`Timer <class_Timer>` node "
"that's useful to implement skill cooldown times, weapon reloading, and more."
msgstr ""
"Wir verwenden an dieser Stelle einen anderen Node. Godot besitzt einen Node :"
"ref:`Timer <class_Timer>`, der hilfreich ist, um Skill-Cooldown-Zeiten, das "
"Nachladen von Waffen oder anderes zu implementieren."

msgid ""
"Head back to the 2D workspace. You can either click the \"2D\" text at the "
"top of the window or press :kbd:`Ctrl + F1` (:kbd:`Ctrl + Cmd + 1` on macOS)."
msgstr ""
"Gehen Sie zurück zum 2D-Arbeitsbereich. Sie können entweder auf den \"2D\"-"
"Text oben im Fenster klicken oder :kbd:`Strg + F1` (:kbd:`Ctrl + Cmd + 1` "
"unter macOS) drücken."

msgid ""
"In the Scene dock, right-click on the Sprite2D node and add a new child "
"node. Search for Timer and add the corresponding node. Your scene should now "
"look like this."
msgstr ""
"Klicken Sie im Szenendock mit der rechten Maustaste auf den Sprite2D-Node "
"und fügen Sie einen neuen Child-Node hinzu. Suchen Sie nach Timer und fügen "
"Sie den entsprechenden Node hinzu. Ihre Szene sollte nun wie folgt aussehen."

msgid ""
"With the Timer node selected, go to the Inspector and enable the "
"**Autostart** property."
msgstr ""
"Gehen Sie bei ausgewähltem Timer-Node zum Inspektor und aktivieren Sie die "
"Eigenschaft **Autostart**."

msgid ""
"Click the script icon next to Sprite2D to jump back to the scripting "
"workspace."
msgstr ""
"Klicken Sie auf das Skript-Icon neben Sprite2D, um zum Arbeitsbereich für "
"die Skripterstellung zurückzukehren."

msgid "We need to do two operations to connect the nodes via code:"
msgstr ""
"Es müssen zwei Schritte ausgeführt werden, um die Nodes im Code zu verbinden:"

msgid "Get a reference to the Timer from the Sprite2D."
msgstr "Eine Referenz auf den Timer aus dem Sprite2D holen."

msgid "Call the ``connect()`` method on the Timer's \"timeout\" signal."
msgstr ""
"Die Methode ``connect()`` auf das \"timeout\"-Signal des Timers aufrufen."

msgid ""
"To connect to a signal via code, you need to call the ``connect()`` method "
"of the signal you want to listen to. In this case, we want to listen to the "
"Timer's \"timeout\" signal."
msgstr ""
"Um eine Verbindung zu einem Signal mittels Code herzustellen, müssen Sie die "
"Methode ``connect()`` des Signals aufrufen, auf das Sie hören wollen. In "
"diesem Fall wollen wir auf das \"timeout\"-Signal des Timers hören."

msgid ""
"We want to connect the signal when the scene is instantiated, and we can do "
"that using the :ref:`Node._ready() <class_Node_private_method__ready>` built-"
"in function, which is called automatically by the engine when a node is "
"fully instantiated."
msgstr ""
"Wir wollen das Signal verbinden, wenn die Szene instanziiert wird und das "
"können wir über die Built-in-Funktion :ref:`Node._ready() "
"<class_Node_private_method__ready>`, welche automatisch von der Engine "
"aufgerufen wird, wenn der Node vollständig instanziiert ist."

msgid ""
"To get a reference to a node relative to the current one, we use the method :"
"ref:`Node.get_node() <class_Node_method_get_node>`. We can store the "
"reference in a variable."
msgstr ""
"Um die Referenz auf einen Node relativ zum aktuellen zu bekommen, verwenden "
"wir die Methode :ref:`Node.get_node() <class_Node_method_get_node>`. Wir "
"können die Referenz in einer Variablen speichern."

msgid ""
"The function ``get_node()`` looks at the Sprite2D's children and gets nodes "
"by their name. For example, if you renamed the Timer node to "
"\"BlinkingTimer\" in the editor, you would have to change the call to "
"``get_node(\"BlinkingTimer\")``."
msgstr ""
"Die Funktion ``get_node()`` sieht sich die Child-Nodes des Sprite2Ds an und "
"holt die Nodes anhand ihres Namens. Wenn Sie zum Beispiel den Timer-Node im "
"Editor in \"BlinkingTimer\" umbenannt haben, müssen Sie den Aufruf in "
"``get_node(\"BlinkingTimer\")`` ändern."

msgid ""
"We can now connect the Timer to the Sprite2D in the ``_ready()`` function."
msgstr ""
"Wir können nun den Timer mit dem Sprite2D in der ``_ready()`` Funktion "
"verbinden."

msgid ""
"The line reads like so: we connect the Timer's \"timeout\" signal to the "
"node to which the script is attached. When the Timer emits ``timeout``, we "
"want to call the function ``_on_timer_timeout()``, that we need to define. "
"Let's add it at the bottom of our script and use it to toggle our sprite's "
"visibility."
msgstr ""
"Die Zeile liest sich wie folgt: Wir verbinden das \"timeout\"-Signal des "
"Timers mit dem Node, an den das Skript angehängt ist. Wenn der Timer "
"``timeout`` aussendet, wollen wir die Funktion ``_on_timer_timeout()`` "
"aufrufen, die wir noch definieren müssen. Fügen wir sie am Ende unseres "
"Skripts hinzu und benutzen sie, um die Sichtbarkeit unseres Sprites ein- und "
"auszuschalten."

msgid ""
"By convention, we name these callback methods in GDScript as "
"\"_on_node_name_signal_name\" and in C# as \"OnNodeNameSignalName\". Here, "
"it'll be \"_on_timer_timeout\" for GDScript and OnTimerTimeout() for C#."
msgstr ""
"Konventionell benennen wir diese Callback-Methoden in GDScript als "
"\"_on_node_name_signal_name\" und in C# als \"OnNodeNameSignalName\". In "
"diesem Fall wird es \"_on_timer_timeout\" für GDScript und OnTimerTimeout() "
"für C# sein."

msgid ""
"The ``visible`` property is a boolean that controls the visibility of our "
"node. The line ``visible = not visible`` toggles the value. If ``visible`` "
"is ``true``, it becomes ``false``, and vice-versa."
msgstr ""
"Die Eigenschaft ``visible`` ist ein boolean-Wert, der festlegt, ob ein Node "
"sichtbar ist. Die Zeile ``visible = not visible`` wechselt den Wert zwischen "
"ein und aus. Wenn ``visible`` auf ``true`` war, wird es auf ``false`` "
"gesetzt und umgekehrt."

msgid ""
"If you run the scene now, you will see that the sprite blinks on and off, at "
"one second intervals."
msgstr ""
"Wenn Sie die Szene jetzt ausführen, werden Sie sehen, dass das Sprite im "
"Sekundentakt an und aus blinkt."

msgid "Complete script"
msgstr "Vollständiges Skript"

msgid ""
"That's it for our little moving and blinking Godot icon demo! Here is the "
"complete ``sprite_2d.gd`` file for reference."
msgstr ""
"Das war's mit unserer kleinen bewegten und blinkenden Godot-Icon-Demo! Hier "
"ist die komplette Datei ``sprite_2d.gd`` als Referenz."

msgid "Custom signals"
msgstr "Benutzerdefinierte Signale"

msgid ""
"This section is a reference on how to define and use your own signals, and "
"does not build upon the project created in previous lessons."
msgstr ""
"Dieser Abschnitt dient als Referenz für die Definition und Verwendung "
"eigener Signale und baut nicht auf dem in den vorherigen Lektionen "
"erstellten Projekt auf."

msgid ""
"You can define custom signals in a script. Say, for example, that you want "
"to show a game over screen when the player's health reaches zero. To do so, "
"you could define a signal named \"died\" or \"health_depleted\" when their "
"health reaches 0."
msgstr ""
"Man kann mehrere verschiedene Signale innerhalb eines Skriptes definieren. "
"Möchte man beispielsweise einen \"Game Over\"-Bildschirm anzeigen, sobald "
"die Lebenspunkte des Spielers auf Null gesunken sind, kann man ein Signal "
"namens \"died\" (gestorben) oder \"health_depleted\" (Lebenspunkte "
"verbraucht) definieren, das ausgesendet wird, sobald die Lebenspunkte 0 "
"erreichen."

msgid ""
"As signals represent events that just occurred, we generally use an action "
"verb in the past tense in their names."
msgstr ""
"Da sämtliche Signale Ereignisse repräsentieren, die gerade erst stattfanden, "
"verwendet man üblicherweise die Vergangenheitsform des Verbes für deren "
"Namen."

msgid ""
"Your signals work the same way as built-in ones: they appear in the Node tab "
"and you can connect to them like any other."
msgstr ""
"Diese Signale arbeiten genau so wie Built-in-Signale: Sie erscheinen im Node-"
"Tab und man kann sie wie alle anderen anbinden."

msgid "To emit a signal in your scripts, call ``emit()`` on the signal."
msgstr ""
"Um ein Signal in Ihren Skripten auszusenden, rufen Sie ``emit()`` für das "
"Signal auf."

msgid ""
"A signal can optionally declare one or more arguments. Specify the argument "
"names between parentheses:"
msgstr ""
"Ein Signal kann optional auch ein oder mehrere Argumente deklarieren. Geben "
"Sie die Argumentnamen zwischen den Klammern an:"

msgid ""
"The signal arguments show up in the editor's node dock, and Godot can use "
"them to generate callback functions for you. However, you can still emit any "
"number of arguments when you emit signals. So it's up to you to emit the "
"correct values."
msgstr ""
"Die Signal-Argumente werden im Node-Dock des Editors angezeigt, und Godot "
"kann sie verwenden, um Callback-Funktionen für Sie zu erzeugen. Allerdings "
"können Sie immer noch eine beliebige Anzahl von Argumenten aussenden, wenn "
"Sie Signale aussenden. Es liegt also an Ihnen, die richtigen Werte "
"auszusenden."

msgid ""
"To emit values along with the signal, add them as extra arguments to the "
"``emit()`` function:"
msgstr ""
"Um Werte zusammen mit dem Signal auszusenden, fügen Sie diese als "
"zusätzliche Argumente der Funktion ``emit()`` hinzu:"

msgid "Summary"
msgstr "Zusammenfassung"

msgid ""
"Any node in Godot emits signals when something specific happens to them, "
"like a button being pressed. Other nodes can connect to individual signals "
"and react to selected events."
msgstr ""
"Jeder Node in Godot sendet Signale aus, wenn etwas Spezifisches passiert, "
"beispielsweise beim Drücken eines Buttons. Andere Nodes können sich mit "
"definierten Signalen verbinden und so auf die ausgewählten Ereignisse "
"reagieren."

msgid ""
"Signals have many uses. With them, you can react to a node entering or "
"exiting the game world, to a collision, to a character entering or leaving "
"an area, to an element of the interface changing size, and much more."
msgstr ""
"Signale können vielfältig verwendet werden. Man kann auf einen Node "
"reagieren, der gerade die Spielwelt betritt oder verlässt, auf eine "
"Kollision, darauf dass ein Charakter einen bestimmten Bereich betritt oder "
"verlässt, darauf dass ein Element der Benutzeroberfläche seine Größe "
"verändert und vieles mehr."

msgid ""
"For example, an :ref:`Area2D <class_Area2D>` representing a coin emits a "
"``body_entered`` signal whenever the player's physics body enters its "
"collision shape, allowing you to know when the player collected it."
msgstr ""
"Beispielsweise sendet ein :ref:`Area2D <class_Area2D>`, das eine Münze "
"darstellt, ein ``body_entered``-Signal aus, wenn der Physik-Body des "
"Spielers in ihre Kollisions-Shape eintritt, sodass Sie wissen, wann der "
"Spieler sie eingesammelt hat."

msgid ""
"In the next section, :ref:`doc_your_first_2d_game`, you'll create a complete "
"2D game and put everything you learned so far into practice."
msgstr ""
"Im nächsten Abschnitt, :ref:`doc_your_first_2d_game`, erstellen Sie ein "
"komplettes 2D-Spiel und setzen alles, was Sie bisher gelernt haben, in die "
"Praxis um."

msgid "Translation status"
msgstr "Übersetzungsstatus"
