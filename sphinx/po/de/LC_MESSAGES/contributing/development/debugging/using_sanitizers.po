# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using sanitizers"
msgstr "Verwendung von Sanitizern"

msgid "What are sanitizers?"
msgstr "Was sind Sanitizer?"

msgid ""
"Sanitizers are static instrumentation tools that help find bugs that "
"traditional debuggers usually cannot catch. This is particularly useful when "
"combined with :ref:`doc_unit_testing` in continuous integration."
msgstr ""
"Sanitizer sind statische Instrumentierungswerkzeuge, die dabei helfen, Bugs "
"zu finden, die traditionelle Debugger normalerweise nicht aufspüren können. "
"Dies ist besonders nützlich in Kombination mit :ref:`doc_unit_testing` bei "
"der Continuous Integration."

msgid ""
"Sanitizers can be used on Windows, macOS and Linux by using the Clang "
"(LLVM), GCC or Visual Studio compilers. :ref:`Certain platforms "
"<doc_using_sanitizers_platform_specific_sanitizers>` may also have their own "
"sanitizers available. In situations where a single sanitizer is provided by "
"several different compilers, remember that their output and behavior will "
"differ slightly."
msgstr ""
"Sanitizer können unter Windows, macOS und Linux mit den Compilern Clang "
"(LLVM), GCC oder Visual Studio verwendet werden. :ref:`Bestimmte Plattformen "
"<doc_using_sanitizers_platform_specific_sanitizers>` können auch ihre "
"eigenen Sanitizer zur Verfügung stellen. In Situationen, in denen ein "
"einziger Sanitizer von mehreren verschiedenen Compilern bereitgestellt wird, "
"sollten Sie daran denken, dass sich ihre Ausgabe und ihr Verhalten leicht "
"unterscheiden werden."

msgid "Using sanitizers on Godot"
msgstr "Verwendung von Sanitizern in Godot"

msgid ""
"Sanitizers **require** recompiling the binary. This means you cannot use "
"official Godot binaries to run sanitizers."
msgstr ""
"Sanitizer **erfordern** eine Neukompilierung der Binärdatei. Das bedeutet, "
"dass Sie keine offiziellen Godot-Binärdateien verwenden können, um Sanitizer "
"auszuführen."

msgid ""
"When :ref:`compiling <toc-devel-compiling>` with any of the sanitizers "
"enabled, the resulting binary will have the ``.san`` suffix added to its "
"name to distinguish it from a binary without sanitizers."
msgstr ""
"Wenn einer der Sanitizer beim :ref:`Kompilieren <toc-devel-compiling>` "
"aktiviert ist, bekommt die resultierende Binärdatei das Suffix ``.san`` an "
"ihren Namen angehängt, um sie von einer Binärdatei ohne Sanitizer zu "
"unterscheiden."

msgid ""
"There is a performance impact as many additional runtime checks need to be "
"performed. Memory utilization will also increase. It is possible to enable "
"certain combinations of multiple sanitizers in a single build. Beware of the "
"performance impact when using multiple sanitizers at once though, as the "
"resulting binary may be excessively slow."
msgstr ""
"Dies hat Auswirkungen auf die Performance, da viele zusätzliche "
"Laufzeitprüfungen durchgeführt werden müssen. Auch die Speichernutzung wird "
"sich erhöhen. Es ist möglich, bestimmte Kombinationen von mehreren "
"Sanitizern in einem einzigen Build zu aktivieren. Beachten Sie jedoch die "
"Auswirkungen auf die Performance, wenn Sie mehrere Sanitizer gleichzeitig "
"verwenden, da die resultierende Binärdatei übermäßig langsam sein kann."

msgid ""
"Certain options can be passed to sanitizers without having to recompile the "
"binary using environment variables."
msgstr ""
"Bestimmte Optionen können mit Hilfe von Umgebungsvariablen an Sanitizer "
"übergeben werden, ohne dass die Binärdatei neu kompiliert werden muss."

msgid "Address sanitizer (ASAN)"
msgstr "Adress-Sanitizer (ASAN)"

msgid "Available in Clang and GCC."
msgstr "Verfügbar in Clang und GCC."

msgid "**Supported platforms:** Linux, macOS, Windows (Visual Studio), Web"
msgstr ""
"**Unterstützte Plattformen:** Linux, macOS, Windows (Visual Studio), Web"

msgid ""
"`Clang ASAN documentation <https://clang.llvm.org/docs/AddressSanitizer."
"html>`__"
msgstr ""
"`Clang ASAN-Dokumentation <https://clang.llvm.org/docs/AddressSanitizer."
"html>`__"

msgid ""
"The address sanitizer is generally the most frequently used sanitizer. It "
"can diagnose issues such as buffer overruns and out-of-bounds access. If the "
"engine crashes with a message such as ``free(): invalid pointer``, this is "
"typically the result of a buffer overrun. (This message is printed by the C "
"runtime, not Godot.)"
msgstr ""
"Der Adress-Sanitizer ist im Allgemeinen der am häufigsten verwendete "
"Sanitizer. Er kann Probleme wie Buffer Overruns und Out-of-Bounds-Zugriffe "
"diagnostizieren. Wenn die Engine mit einer Meldung wie ``free(): invalid "
"pointer`` abstürzt, ist dies typischerweise das Ergebnis eines Buffer "
"Overruns. (Diese Meldung wird von der C-Runtime ausgegeben, nicht von Godot)."

msgid ""
"In certain situations (such as detecting uninitialized memory reads), the "
"address sanitizer doesn't suffice. The :ref:"
"`doc_using_sanitizers_memory_sanitizer` should be used instead."
msgstr ""
"In bestimmten Situationen (z.B. beim Erkennen von nicht initialisierten "
"Speicherlesevorgängen) reicht der Adress-Sanitizer nicht aus. Stattdessen "
"sollte der :ref:`doc_using_sanitizers_memory_sanitizer` verwendet werden."

msgid ""
"It is also possible to detect use-after-return situations by specifying the "
"``ASAN_OPTIONS=detect_stack_use_after_return=1`` environment variable before "
"*running* Godot (not when compiling it). This increases the address "
"sanitizer's runtime overhead, so only enable this feature when you actually "
"need it."
msgstr ""
"Es ist auch möglich, Use-after-return-Situationen zu erkennen, indem man die "
"Umgebungsvariable ``ASAN_OPTIONS=detect_stack_use_after_return=1`` angibt, "
"bevor man Godot *ausführt* (nicht beim Kompilieren). Dies erhöht den "
"Laufzeit-Overhead des Adress-Sanitizers, daher sollten Sie dieses Feature "
"nur aktivieren, wenn Sie es tatsächlich benötigen."

msgid ""
"To enable the address sanitizer in a Godot build, pass the ``use_asan=yes`` "
"SCons option when compiling. Enabling ASAN generally makes the resulting "
"binary about 2× slower."
msgstr ""
"Um den Adress-Sanitizer in einem Godot-Build zu aktivieren, übergeben Sie "
"beim Kompilieren die SCons-Option ``use_asan=yes``. Die Aktivierung von ASAN "
"macht die resultierende Binärdatei im Allgemeinen etwa zweimal langsamer."

msgid ""
"Due to a `design decision <https://stackoverflow.com/questions/36971902/why-"
"cant-clang-enable-all-sanitizers/>`__, the address, memory and thread "
"sanitizers are mutually exclusive. This means you can only use one of those "
"sanitizers in a given binary."
msgstr ""
"Aufgrund einer `Designentscheidung <https://stackoverflow.com/"
"questions/36971902/why-cant-clang-enable-all-sanitizers/>`__ schließen sich "
"die Adress-, Memory- und Thread-Sanitizer gegenseitig aus. Das bedeutet, "
"dass Sie nur einen dieser Sanitizer in einer bestimmten Binärdatei verwenden "
"können."

msgid "Leak sanitizer (LSAN)"
msgstr "Leak-Sanitizer (LSAN)"

msgid "**Supported platforms:** Linux, Web"
msgstr "**Unterstützte Plattformen:** Linux, Web"

msgid ""
"`Clang LSAN documentation <https://clang.llvm.org/docs/LeakSanitizer.html>`__"
msgstr ""
"`Clang LSAN-Dokumentation <https://clang.llvm.org/docs/LeakSanitizer.html>`__"

msgid ""
"The leak sanitizer can detect memory leaks, which are situations where "
"memory that is no longer in use is never freed by the running program. This "
"can potentially lead to out-of-memory situations if the program runs for "
"long enough. Since Godot may run on :ref:`dedicated servers "
"<doc_exporting_for_dedicated_servers>` for months or even years without a "
"restart, it's important to fix memory leaks when they occur."
msgstr ""
"Der Leak-Sanitizer kann Speicherleaks aufspüren, d. h. Situationen, in denen "
"Speicher, der nicht mehr verwendet wird, vom laufenden Programm nie "
"freigegeben wird. Dies kann möglicherweise zu Out-of-Memory-Situationen "
"führen, wenn das Programm lange genug läuft. Da Godot auf :ref:`dedizierten "
"Servern <doc_exporting_for_dedicated_servers>` über Monate oder sogar Jahre "
"ohne Neustart laufen kann, ist es wichtig, Speicherleaks zu beheben, wenn "
"sie auftreten."

msgid ""
"To enable the leak sanitizer in a Godot build, pass the ``use_lsan=yes`` "
"SCons option when compiling. Enabling LSAN only has a small performance "
"overhead, but the program will be much slower to exit as leak detection "
"occurs when the program exits."
msgstr ""
"Um den Leak-Sanitizer in einem Godot-Build zu aktivieren, übergeben Sie beim "
"Kompilieren die SCons-Option ``use_lsan=yes``. Die Aktivierung von LSAN hat "
"nur einen geringen Performance-Overhead, aber das Programm wird viel "
"langsamer beendet, da die Leak-Erkennung beim Beenden des Programms erfolgt."

msgid "Memory sanitizer (MSAN)"
msgstr "Memory-Sanitizer (MSAN)"

msgid "Available in Clang only, not GCC."
msgstr "Nur in Clang verfügbar, nicht in GCC."

msgid "**Supported platforms:** Linux"
msgstr "**Unterstützte Plattformen:** Linux"

msgid ""
"`Clang MSAN documentation <https://clang.llvm.org/docs/MemorySanitizer."
"html>`__"
msgstr ""
"`Clang MSAN-Dokumentation <https://clang.llvm.org/docs/MemorySanitizer."
"html>`__"

msgid ""
"The memory sanitizer complements the :ref:"
"`doc_using_sanitizers_address_sanitizer`. Unlike the address sanitizer, the "
"memory sanitizer can detect uninitialized memory reads."
msgstr ""
"Der Memory-Sanitizer ergänzt den :ref:"
"`doc_using_sanitizers_address_sanitizer`. Im Gegensatz zum Adress-Sanitizer "
"kann der Memory-Sanitizer nicht-initialisierte Memory Reads erkennen."

msgid ""
"To enable the memory sanitizer in a Godot build, pass the ``use_msan=yes`` "
"SCons option when compiling. Enabling MSAN generally makes the resulting "
"binary about 3× slower."
msgstr ""
"Um den Memory-Sanitizer in einem Godot-Build zu aktivieren, übergeben Sie "
"beim Kompilieren die SCons-Option ``use_msan=yes``. Die Aktivierung von MSAN "
"macht die resultierende Binärdatei im Allgemeinen etwa 3x langsamer."

msgid "Thread sanitizer (TSAN)"
msgstr "Thread-Sanitizer (TSAN)"

msgid "**Supported platforms:** Linux, macOS"
msgstr "**Unterstützte Plattformen:** Linux, macOS"

msgid ""
"`Clang TSAN documentation <https://clang.llvm.org/docs/ThreadSanitizer."
"html>`__"
msgstr ""
"`Clang TSAN-Dokumentation <https://clang.llvm.org/docs/ThreadSanitizer."
"html>`__"

msgid ""
"The thread sanitizer is used to track down race conditions related to "
"multithreading. A race condition is when multiple threads try to modify the "
"same data at the same time. Since thread scheduling can be ordered in any "
"fashion by the operating system, this leads to incorrect behavior that only "
"occurs occasionally (and can be difficult to track as a result). To prevent "
"a race condition, you need to add a lock to ensure only one thread can "
"access the shared data at a given time."
msgstr ""
"Der Thread-Sanitizer wird verwendet, um Race Conditions im Zusammenhang mit "
"Multithreading aufzuspüren. Eine Race Condition liegt vor, wenn mehrere "
"Threads versuchen, dieselben Daten zur gleichen Zeit zu ändern. Da die "
"Threads beim Scheduling vom Betriebssystem in beliebiger Reihenfolge "
"angeordnet werden können, führt dies zu fehlerhaftem Verhalten, das aber nur "
"gelegentlich auftritt (und daher schwer zu tracken sein kann). Um eine Race "
"Condition zu verhindern, müssen Sie ein Lock hinzufügen, um sicherzustellen, "
"dass nur ein Thread zu einem bestimmten Zeitpunkt auf die gemeinsamen Daten "
"zugreifen kann."

msgid ""
"To enable the thread sanitizer in a Godot build, pass the ``use_tsan=yes`` "
"SCons option when compiling. Enabling TSAN generally makes the resulting "
"binary 10× slower, while also multiplying memory usage by an approximately "
"8× factor."
msgstr ""
"Um den Thread-Sanitizer in einem Godot-Build zu aktivieren, übergeben Sie "
"beim Kompilieren die SCons-Option ``use_tsan=yes``. Durch die Aktivierung "
"von TSAN wird die resultierende Binärdatei im Allgemeinen um das 10-fache "
"langsamer, während sich die Speichernutzung um das 8-fache erhöht."

msgid "Undefined behavior sanitizer (UBSAN)"
msgstr "Sanitizer für undefiniertes Verhalten (UBSAN)"

msgid "**Supported platforms:** Linux, macOS, Web"
msgstr "**Unterstützte Plattformen:** Linux, macOS, Web"

msgid ""
"`Clang UBSAN documentation <https://clang.llvm.org/docs/"
"UndefinedBehaviorSanitizer.html>`__"
msgstr ""
"`Clang UBSAN-Dokumentation <https://clang.llvm.org/docs/"
"UndefinedBehaviorSanitizer.html>`__"

msgid ""
"The undefined behavior sanitizer is used to track down situations where the "
"program exhibits random and unpredictable behavior. This is due to C/C++ "
"code that is accepted by the compiler, but is not *correct*. Compiling with "
"a different set of optimizations can also change the observed results of "
"undefined behavior."
msgstr ""
"Der Sanitizer für undefiniertes Verhalten wird verwendet, um Situationen "
"aufzuspüren, in denen das Programm ein zufälliges und unvorhersehbares "
"Verhalten zeigt. Dies ist auf C/C++-Code zurückzuführen, der zwar vom "
"Compiler akzeptiert wird, aber nicht *korrekt* ist. Auch das Kompilieren mit "
"einem anderen Satz von Optimierungen kann die beobachteten Ergebnisse von "
"undefiniertem Verhalten verändern."

msgid ""
"To enable the undefined behavior sanitizer in a Godot build, pass the "
"``use_ubsan=yes`` SCons option when compiling. Enabling UBSAN only has a "
"small performance overhead."
msgstr ""
"Um den Sanitizer für undefiniertes Verhalten in einem Godot-Build zu "
"aktivieren, übergeben Sie die SCons-Option ``use_ubsan=yes`` beim "
"Kompilieren. Die Aktivierung von UBSAN hat nur einen geringen Performance-"
"Overhead."

msgid "Platform-specific sanitizers"
msgstr "Plattformspezifische Sanitizer"

msgid "Web"
msgstr "Web"

msgid ""
"When :ref:`compiling for the Web <doc_compiling_for_web>`, there are 2 "
"additional sanitizer SCons options available:"
msgstr ""
"Bei der :ref:`Kompilierung für das Web <doc_compiling_for_web>` gibt es 2 "
"zusätzliche Sanitizer SCons-Optionen:"

msgid ""
"``use_assertions=yes`` enables runtime Emscripten assertions, which can "
"catch various issues."
msgstr ""
"``use_assertions=yes`` aktiviert Emscripten-Assertions zur Laufzeit, die "
"verschiedene Probleme abfangen können."

msgid ""
"``use_safe_heap=yes`` enables `Emscripten's SAFE_HEAP sanitizer <https://"
"emscripten.org/docs/debugging/Sanitizers.html>`__. It provides similar "
"functionality to ASAN, but it focuses on issues that are specific to "
"WebAssembly. ``SAFE_HEAP`` is not guaranteed to be compatible with ASAN and "
"UBSAN in the same binary, so you may have to build it separately."
msgstr ""
"``use_safe_heap=yes`` aktiviert `Emscriptens SAFE_HEAP-Sanitizer <https://"
"emscripten.org/docs/debugging/Sanitizers.html>`__. Er bietet eine ähnliche "
"Funktionalität wie ASAN, aber es konzentriert sich auf Probleme, die "
"spezifisch für WebAssembly sind. Es ist nicht garantiert, dass ``SAFE_HEAP`` "
"mit ASAN und UBSAN in der gleichen Binärdatei kompatibel ist, so dass Sie es "
"möglicherweise separat bauen müssen."

msgid "Translation status"
msgstr "Übersetzungsstatus"
