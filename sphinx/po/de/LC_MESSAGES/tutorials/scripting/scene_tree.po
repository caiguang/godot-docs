# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using SceneTree"
msgstr "Verwendung von ScreneTree"

msgid "Introduction"
msgstr "Einführung"

msgid ""
"In previous tutorials, everything revolved around the concept of nodes. "
"Scenes are collections of nodes. They become active once they enter the "
"*scene tree*."
msgstr ""
"In der vorangegangen Anleitung drehte sich alles um das Konzept der Nodes. "
"Szenen sind Sammlungen von Nodes. Sie werden aktiv sobald sie in den "
"*Szenenbaum* eingefügt werden."

msgid "MainLoop"
msgstr "MainLoop"

msgid ""
"The way Godot works internally is as follows. There is the :ref:`OS "
"<class_OS>` class, which is the only instance that runs at the beginning. "
"Afterwards, all drivers, servers, scripting languages, scene system, etc are "
"loaded."
msgstr ""
"Die interne Funktionsweise von Godot ist wie folgt. Es gibt die Klasse :ref:"
"`OS <class_OS>`, die einzige Instanz, die am Anfang läuft. Danach werden "
"alle Treiber, Server, Skriptsprachen, das Szenensystem usw. geladen."

msgid ""
"When initialization is complete, :ref:`OS <class_OS>` needs to be supplied "
"a :ref:`MainLoop <class_MainLoop>` to run. Up to this point, all this is "
"internals working (you can check main/main.cpp file in the source code if "
"you are ever interested to see how this works internally)."
msgstr ""
"Sobald die Initialisierung abgeschlossen ist, wird :ref:`OS<class_OS>` eine :"
"ref:`MainLoop<class_MainLoop>` übergeben, um ausgeführt zu werden. Bis zu "
"diesem Punkt ist alles ein interner Ablauf (siehe main/main.cpp im "
"Quellcode, falls Interesse besteht, die Internen Abläufe nachzuvollziehen)."

msgid ""
"The user program, or game, starts in the MainLoop. This class has a few "
"methods, for initialization, idle (frame-synchronized callback), fixed "
"(physics-synchronized callback), and input. Again, this is low level and "
"when making games in Godot, writing your own MainLoop seldom makes sense."
msgstr ""
"Die Nutzer-Anwendung, oder das Spiel, startet in der MainLoop. Diese Klasse "
"definiert einige Methoden für die Initialisierung, Leerlauf (Frame-"
"synchrones Callback), Fixed (Physik-synchrones Callback) und Eingabe. Auch "
"hier handelt es sich um eine Low-Level-Funktionen, und bei der Entwicklung "
"von Spielen in Godot ist es selten sinnvoll, eine eigene MainLoop zu "
"schreiben."

msgid "SceneTree"
msgstr "SceneTree"

msgid ""
"One of the ways to explain how Godot works is that it's a high level game "
"engine over a low level middleware."
msgstr ""
"Eine Möglichkeit, die Funktionsweise von Godot zu erklären, besteht darin, "
"dass es sich um eine High-Level-Spielengine über einer Low-Level-Middleware "
"handelt."

msgid ""
"The scene system is the game engine, while the :ref:`OS <class_OS>` and "
"servers are the low level API."
msgstr ""
"Das Szenensystem ist die Game Engine, wohingegen das :ref:`OS <class_OS>` "
"und die Server zur Low Level-API gehören."

msgid ""
"The scene system provides its own main loop to OS, :ref:`SceneTree "
"<class_SceneTree>`. This is automatically instanced and set when running a "
"scene, no need to do any extra work."
msgstr ""
"Das Szenensystem liefert seine eigene Hauptschleife zum OS, :ref:`SceneTree "
"<class_SceneTree>`. Dieser wird automatisch instanziiert und gesetzt, wenn "
"eine Szene ausgeführt wird, ohne dass Sie zusätzlich etwas tun müssen."

msgid ""
"It's important to know that this class exists because it has a few important "
"uses:"
msgstr ""
"Es ist wichtig zu wissen, dass es diese Klasse gibt, weil sie einige "
"wichtige Verwendungszwecke hat:"

msgid ""
"It contains the root :ref:`Viewport <class_Viewport>`, to which a scene is "
"added as a child when it's first opened to become part of the *Scene Tree* "
"(more on that next)."
msgstr ""
"Sie beinhaltet den Root-:ref:`Viewport<class_Viewport>`, zu welcher eine "
"Szene als Child-Element hinzugefügt wird, welches beim ersten Öffnen Teil "
"des Szenen-Baums (*Scene Tree*) wird."

msgid ""
"It contains information about the groups and has the means to call all nodes "
"in a group or get a list of them."
msgstr ""
"Sie enthält Informationen zu Gruppen und hat Möglichkeiten, Node-Methoden "
"einer Gruppe aufzurufen oder eine Liste dieser zu liefern."

msgid ""
"It contains some global state functionality, such as setting pause mode or "
"quitting the process."
msgstr ""
"Sie beinhaltet einige Funktionalität zum Globalen Zustand, wie dem Pausieren "
"oder Beenden des Prozesses."

msgid ""
"When a node is part of the Scene Tree, the :ref:`SceneTree "
"<class_SceneTree>` singleton can be obtained by calling :ref:`Node."
"get_tree() <class_Node_method_get_tree>`."
msgstr ""
"Wenn ein Node Teil des Szenen-Baums ist, kann auf den :ref:`Szenen-"
"Baum<class_SceneTree>` als Singleton über :ref:`Node.get_tree() "
"<class_Node_method_get_tree>` zugegriffen werden."

msgid "Root viewport"
msgstr "Root-Viewport"

msgid ""
"The root :ref:`Viewport <class_Viewport>` is always at the top of the scene. "
"From a node, it can be obtained in two different ways:"
msgstr ""
"Der Root-Viewport (:ref:`Viewport <class_Viewport>`) befindet sich immer am "
"oberen Ende der Szene. Durch einen Node kann mittels zwei verschiedener Wege "
"auf ihn zugegriffen werden:"

msgid ""
"This node contains the main viewport. Anything that is a child of a :ref:"
"`Viewport <class_Viewport>` is drawn inside of it by default, so it makes "
"sense that the top of all nodes is always a node of this type otherwise "
"nothing would be seen."
msgstr ""
"Dieser Node enthält den Haupt-Viewport. Alles, was ein Child-Element eines :"
"ref:`Viewports<class_Viewport>` ist, wird standardmäßig darin gezeichnet, "
"daher ist es sinnvoll, dass der oberste aller Nodes immer ein Node dieses "
"Typs ist, sonst würde man nichts sehen."

msgid ""
"While other viewports can be created in the scene (for split-screen effects "
"and such), this one is the only one that is never created by the user. It's "
"created automatically inside SceneTree."
msgstr ""
"Während andere Viewports in der Szene erstellt werden können (für Split-"
"Screen-Effekte und dergleichen), ist dies das einzige, das nie vom Benutzer "
"erstellt wird. Er wird automatisch im SceneTree erstellt."

msgid "Scene tree"
msgstr "Szenenbaum"

msgid ""
"When a node is connected, directly or indirectly, to the root viewport, it "
"becomes part of the *scene tree*."
msgstr ""
"Wenn ein Node direkt oder indirekt mit dem Root-Viewport verbunden ist, wird "
"er Teil des *Szenenbaums*."

msgid ""
"This means that as explained in previous tutorials, it will get the "
"``_enter_tree()`` and ``_ready()`` callbacks (as well as ``_exit_tree()``)."
msgstr ""
"Das bedeutet, dass es, wie in früheren Tutorials erklärt, die "
"``_enter_tree()`` und ``_ready()`` Callbacks (sowie ``_exit_tree()``) erhält."

msgid ""
"When nodes enter the *Scene Tree*, they become active. They get access to "
"everything they need to process, get input, display 2D and 3D visuals, "
"receive and send notifications, play sounds, etc. When they are removed from "
"the *scene tree*, they lose these abilities."
msgstr ""
"Sobald Nodes den *Szenenbaum* betreten, werden sie aktiv. Sie erhalten "
"Zugang zu allem, was sie verarbeiten müssen, erhalten Eingaben, zeigen 2D- "
"und 3D-Grafiken, erhalten und senden Benachrichtigungen, spielen Töne ab, "
"etc. Doch sobald sie vom *Szenenbaum* entfernt werden, verlieren sie jene "
"Fähigkeiten."

msgid "Tree order"
msgstr "Baum-Reihenfolge"

msgid ""
"Most node operations in Godot, such as drawing 2D, processing, or getting "
"notifications are done in *tree order*, or top to bottom as seen in the "
"editor (also known as pre-order traversal):"
msgstr ""
"Die meisten Node-Operationen in Godot, wie z.B. das Zeichnen von 2D, die "
"Verarbeitung oder das Abrufen von Benachrichtigungen, erfolgen in "
"*Baumreihenfolge*, d.h. von oben nach unten, wie im Editor zu sehen (auch "
"bekannt als Pre-Order-Traversal):"

msgid ""
"For example, the top node in a scene has its ``_process()`` function called "
"first, then the node below it has its ``_process()`` function called, then "
"the node below that and so on."
msgstr ""
"So wird z.B. beim obersten Node in einer Szene zuerst die Funktion "
"``_process()`` aufgerufen, dann beim darunterliegenden Node Funktion "
"``_process()``, dann beim darunterliegenden Node und so weiter."

msgid ""
"An important exception is the ``_ready()`` function: each parent node has "
"its ``_ready()`` function called only after all its child nodes have their "
"``_ready()`` functions called, so that the parent knows its children are "
"completely ready to be accessed. This is also known as post-order traversal. "
"In the above image, ``NameLabel`` would be notified first (but only after "
"its children, if it had any!), followed by ``Name``, etc., and ``Panel`` "
"would be notified last."
msgstr ""
"Eine wichtige Ausnahme ist die Funktion ``_ready()``: bei jedem Parent-Node "
"wird die Funktion ``_ready()`` erst dann aufgerufen, wenn bei allen Child-"
"Nodes die Funktion ``_ready()`` aufgerufen wurde, so dass der Parent-Node "
"weiß, dass seine Child-Nodes vollständig zum Zugriff bereit sind. Dies ist "
"auch als Post-Order-Traversal bekannt. In der obigen Abbildung würde "
"``NameLabel`` zuerst benachrichtigt werden (aber erst nach seinen Child-"
"Nodes, falls er welche hat!), gefolgt von ``Name``, usw., und ``Panel`` "
"würde zuletzt benachrichtigt werden."

msgid ""
"The order of operations can also be overridden using the "
"``process_priority`` node property. Nodes with a lower number are called "
"first. For example, nodes with the priorities \"0, 1, 2, 3\" would be called "
"in that order from left to right."
msgstr ""
"Die Reihenfolge der Operationen kann auch durch die Node-Property "
"``process_priority`` außer Kraft gesetzt werden. Nodes mit einer niedrigeren "
"Nummer werden zuerst aufgerufen. Zum Beispiel würden Nodes mit den "
"Prioritäten \"0, 1, 2, 3\" in dieser Reihenfolge von links nach rechts "
"aufgerufen werden."

msgid "\"Becoming active\" by entering the *Scene Tree*"
msgstr "\"Aktiv werden\" durch das Betreten des *Szenenbaums*"

msgid "A scene is loaded from disk or created by scripting."
msgstr "Eine Szene wird von der Festplatte geladen oder per Skript erzeugt."

msgid ""
"The root node of that scene (only one root, remember?) is added as either a "
"child of the \"root\" Viewport (from SceneTree), or to any of its "
"descendants."
msgstr ""
"Der Root-Node dieser Szene (es gibt nur einen Root-Node, erinnern Sie sich?) "
"wird entweder als Child des \"Root\"-Viewports (von SceneTree) oder zu einem "
"seiner untergeordnetn Nodes hinzugefügt."

msgid ""
"Every node of the newly added scene will receive the \"enter_tree\" "
"notification ( ``_enter_tree()`` callback in GDScript) in top-to-bottom "
"order (pre-order traversal)."
msgstr ""
"Jeder Node der neu hinzugefügten Szene erhält die \"enter_tree\"-"
"Benachrichtigung ( ``_enter_tree()``-Callback in GDScript) in der "
"Reihenfolge von oben nach unten (Pre-Order Traversal)."

msgid ""
"Every node will receive the \"ready\" notification ( ``_ready()`` callback "
"in GDScript) for convenience, once all its children have received the "
"\"ready\" notification (post-order traversal)."
msgstr ""
"Jeder Node erhält der Einfachheit halber die \"ready\"-Benachrichtigung "
"( ``_ready()`` Callback in GDScript), sobald alle seine Child-Nodes die "
"\"ready\"-Benachrichtigung erhalten haben (Post-Order Traversal)."

msgid ""
"When a scene (or part of it) is removed, they receive the \"exit scene\" "
"notification ( ``_exit_tree()`` callback in GDScript) in bottom-to-top order "
"(the exact reverse of top-to-bottom order)."
msgstr ""
"Wenn eine Szene (oder ein Teil davon) entfernt wird, erhalten sie die \"exit "
"scene\"-Benachrichtigung ( ``_exit_tree()``-Callback in GDScript) in der "
"Reihenfolge von unten nach oben (die genaue Umkehrung der Reihenfolge von "
"oben nach unten)."

msgid "Changing current scene"
msgstr "Änderung der aktuellen Szene"

msgid ""
"After a scene is loaded, you may want to change this scene for another one. "
"One way to do this is to use the :ref:`SceneTree.change_scene_to_file() "
"<class_SceneTree_method_change_scene_to_file>` function:"
msgstr ""
"Nachdem eine Szene geladen wurde, möchten Sie vielleicht diese Szene durch "
"eine andere ersetzen. Eine Möglichkeit, dies zu tun, ist die Verwendung der "
"Funktion :ref:`SceneTree.change_scene_to_file() "
"<class_SceneTree_method_change_scene_to_file>`:"

msgid ""
"Rather than using file paths, one can also use ready-made :ref:`PackedScene "
"<class_PackedScene>` resources using the equivalent function :ref:`SceneTree."
"change_scene_to_packed(PackedScene scene) "
"<class_SceneTree_method_change_scene_to_packed>`:"
msgstr ""
"Anstatt Dateipfade zu verwenden, kann man auch fertige :ref:`PackedScene "
"<class_PackedScene>`-Ressourcen mit der entsprechenden Funktion :ref:"
"`SceneTree.change_scene_to_packed(PackedScene scene) "
"<class_SceneTree_method_change_scene_to_packed>` verwenden:"

msgid ""
"These are quick and useful ways to switch scenes but have the drawback that "
"the game will stall until the new scene is loaded and running. At some point "
"in the development of your game, it may be preferable to create proper "
"loading screens with progress bar, animated indicators or threaded "
"(background) loading. This must be done manually using :ref:"
"`doc_singletons_autoload` and :ref:`doc_background_loading`."
msgstr ""
"Dies sind schnelle und nützliche Wege, um die Szene zu wechseln, haben aber "
"den Nachteil, dass das Spiel stehen bleibt, bis die neue Szene geladen ist "
"und läuft. An einem bestimmten Punkt in der Entwicklung Ihres Spiels kann es "
"besser sein, richtige Ladebildschirme mit Fortschrittsbalken, animierte "
"Indikatoren oder Hintergrundladen mit Threading zu erstellen. Dies muss "
"manuell mit :ref:`doc_singletons_autoload` und :ref:`doc_background_loading` "
"gemacht werden."

msgid "Translation status"
msgstr "Übersetzungsstatus"
