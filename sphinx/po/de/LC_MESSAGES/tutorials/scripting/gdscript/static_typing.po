# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Static typing in GDScript"
msgstr "Statische Typisierung in GDScript"

msgid "In this guide, you will learn:"
msgstr "In dieser Anleitung lernen Sie:"

msgid "how to use static typing in GDScript;"
msgstr "wie man die statische Typisierung in GDScript verwendet;"

msgid "that static types can help you avoid bugs;"
msgstr "dass statische Typen zur Vermeidung von Bugs beitragen können;"

msgid "that static typing improves your experience with the editor."
msgstr "dass die statische Typisierung Ihren Umgang mit dem Editor verbessert."

msgid ""
"Where and how you use this language feature is entirely up to you: you can "
"use it only in some sensitive GDScript files, use it everywhere, or don't "
"use it at all."
msgstr ""
"Wo und wie Sie dieses neue Sprachfeature verwenden, liegt ganz bei Ihnen: "
"Sie können es nur in einigen kritischen GDScript-Dateien verwenden, es "
"überall verwenden, oder es überhaupt nicht verwenden."

msgid ""
"Static types can be used on variables, constants, functions, parameters, and "
"return types."
msgstr ""
"Statische Typen können für Variablen, Konstanten, Funktionen, Parameter und "
"Rückgabetypen verwendet werden."

msgid "A brief look at static typing"
msgstr "Ein kurzer Überblick über statische Typisierung"

msgid ""
"With static typing, GDScript can detect more errors without even running the "
"code. Also type hints give you and your teammates more information as you're "
"working, as the arguments' types show up when you call a method. Static "
"typing improves editor autocompletion and :ref:`documentation "
"<doc_gdscript_documentation_comments>` of your scripts."
msgstr ""
"Mit statischer Typisierung kann GDScript mehr Fehler erkennen, ohne dass der "
"Code überhaupt ausgeführt wird. Außerdem geben Typisierungshinweise Ihnen "
"und Ihren Teamkollegen mehr Informationen während der Arbeit, da die Typen "
"der Argumente beim Aufruf einer Methode angezeigt werden. Die statische "
"Typisierung verbessert die Autovervollständigung im Editor und die :ref:"
"`Dokumentation <doc_gdscript_documentation_comments>` Ihrer Skripte."

msgid ""
"Imagine you're programming an inventory system. You code an ``Item`` class, "
"then an ``Inventory``. To add items to the inventory, the people who work "
"with your code should always pass an ``Item`` to the ``Inventory.add()`` "
"method. With types, you can enforce this::"
msgstr ""
"Stellen Sie sich vor, Sie programmieren ein Inventarsystem. Sie "
"programmieren eine ``Item``-Klasse, dann ein ``Inventory``. Um Gegenstände "
"zum Inventar hinzuzufügen, sollten die Leute, die mit Ihrem Code arbeiten, "
"immer ein ``Item`` an die Methode ``Inventory.add()`` übergeben. Mit Typen "
"können Sie dies erzwingen::"

msgid ""
"Static types also give you better code completion options. Below, you can "
"see the difference between a dynamic and a static typed completion options."
msgstr ""
"Statische Typen bieten auch bessere Optionen für die Code-Vervollständigung. "
"Nachfolgend sehen Sie den Unterschied bei Code-Vervollständigung zwischen "
"einer dynamischen und einer statischen Typisierung."

msgid ""
"You've probably encountered a lack of autocomplete suggestions after a dot:"
msgstr ""
"Wahrscheinlich haben Sie schon einmal festgestellt, dass nach einem Punkt "
"keine Vorschläge für die automatische Code-Vervollständigung gemacht werden:"

msgid "Completion options for dynamic typed code."
msgstr "Vervollständigungsoptionen für dynamisch typisierten Code."

msgid ""
"This is due to dynamic code. Godot cannot know what value type you're "
"passing to the function. If you write the type explicitly however, you will "
"get all methods, properties, constants, etc. from the value:"
msgstr ""
"Dies ist auf den dynamischen Code zurückzuführen. Godot kann nicht wissen, "
"welchen Werttyp Sie an die Funktion übergeben. Wenn Sie den Typ jedoch "
"explizit angeben, erhalten Sie alle Methoden, Propertys, Konstanten usw. von "
"dem Wert:"

msgid "Completion options for static typed code."
msgstr "Vervollständigungsoptionen für statisch typisierten Code."

msgid ""
"If you prefer static typing, we recommend enabling the **Text Editor > "
"Completion > Add Type Hints** editor setting. Also consider enabling `some "
"warnings <Warning system_>`_ that are disabled by default."
msgstr ""
"Wenn Sie statische Typisierung bevorzugen, empfehlen wir Ihnen, die "
"Editoreinstellung **Texteditor > Vervollständigung > Typhinweise "
"hinzufügen** zu aktivieren. Ziehen Sie auch in Erwägung, `einige Warnungen "
"<Warning system_>`_ zu aktivieren, die standardmäßig deaktiviert sind."

msgid ""
"Also, typed GDScript improves performance by using optimized opcodes when "
"operand/argument types are known at compile time. More GDScript "
"optimizations are planned in the future, such as JIT/AOT compilation."
msgstr ""
"Außerdem verbessert typisiertes GDScript die Performance durch die "
"Verwendung optimierter Opcodes, wenn die Typen der Operanden/Argumente zur "
"Kompilierungszeit bekannt sind. Für die Zukunft sind weitere GDScript-"
"Optimierungen geplant, z. B. die JIT/AOT-Kompilierung."

msgid ""
"Overall, typed programming gives you a more structured experience. It helps "
"prevent errors and improves the self-documenting aspect of your scripts. "
"This is especially helpful when you're working in a team or on a long-term "
"project: studies have shown that developers spend most of their time reading "
"other people's code, or scripts they wrote in the past and forgot about. The "
"clearer and the more structured the code, the faster it is to understand, "
"the faster you can move forward."
msgstr ""
"Insgesamt bietet die typisierte Programmierung ein besser strukturiertes "
"Erlebnis. Es hilft, Fehler zu vermeiden und verbessert den "
"selbstdokumentierenden Aspekt Ihrer Skripte. Dies ist besonders hilfreich, "
"wenn Sie in einem Team oder an einem langfristigen Projekt arbeiten: Studien "
"haben gezeigt, dass Entwickler die meiste Zeit damit verbringen, den Code "
"anderer Leute oder Skripte zu lesen, die sie in der Vergangenheit "
"geschrieben und vergessen haben. Je klarer und strukturierter der Code ist, "
"desto schneller ist er zu verstehen, desto schneller können Sie vorankommen."

msgid "How to use static typing"
msgstr "Wie man statische Typisierung einsetzt"

msgid ""
"To define the type of a variable, parameter, or constant, write a colon "
"after the name, followed by its type. E.g. ``var health: int``. This forces "
"the variable's type to always stay the same::"
msgstr ""
"Um den Typ einer Variablen, eines Parameters oder einer Konstanten zu "
"definieren, schreiben Sie einen Doppelpunkt nach dem Namen, gefolgt von "
"seinem Typ. Z.B. ``var health: int``. Dadurch bleibt der Typ der Variablen "
"immer derselbe::"

msgid ""
"Godot will try to infer types if you write a colon, but you omit the type::"
msgstr ""
"Godot versucht, die Typen zu ermitteln, wenn Sie einen Doppelpunkt "
"schreiben, aber den Typ: weglassen::"

msgid "There is no difference between ``=`` and ``:=`` for constants."
msgstr "Es gibt keinen Unterschied zwischen ``=`` und ``:=`` für Konstanten."

msgid ""
"You don't need to write type hints for constants, as Godot sets it "
"automatically from the assigned value. But you can still do so to make the "
"intent of your code clearer. Also, this is useful for typed arrays (like "
"``const A: Array[int] = [1, 2, 3]``), since untyped arrays are used by "
"default."
msgstr ""
"Sie brauchen keine Type-Hints für Konstanten zu schreiben, da Godot diese "
"automatisch anhand des zugewiesenen Wertes festlegt. Sie können dies aber "
"trotzdem tun, um die Absicht Ihres Codes zu verdeutlichen. Außerdem ist dies "
"für typisierte Arrays nützlich (wie ``const A: Array[int] = [1, 2, 3]``), da "
"untypisierte Arrays standardmäßig verwendet werden."

msgid "What can be a type hint"
msgstr "Was ein Type-Hint sein kann"

msgid "Here is a complete list of what can be used as a type hint:"
msgstr ""
"Hier finden Sie eine vollständige Liste der Elemente, die als Type-Hint "
"verwendet werden können:"

msgid ""
"``Variant``. Any type. In most cases this is not much different from an "
"untyped declaration, but increases readability. As a return type, forces the "
"function to explicitly return some value."
msgstr ""
"``Variant``. Beliebiger Typ. In den meisten Fällen ist dies nicht viel "
"anders als eine Deklaration ohne Typisierung, erhöht aber die Lesbarkeit. "
"Als Rückgabetyp zwingt es die Funktion, explizit einen Wert zurückzugeben."

msgid ""
"*(Only return type)* ``void``. Indicates that the function does not return "
"any value."
msgstr ""
"*(Nur Rückgabetyp)* ``void``. Gibt an, dass die Funktion keinen Wert "
"zurückgibt."

msgid ":ref:`Built-in types <doc_gdscript_builtin_types>`."
msgstr ":ref:`Built-in-Typen <doc_gdscript_builtin_types>`."

msgid "Native classes (``Object``, ``Node``, ``Area2D``, ``Camera2D``, etc.)."
msgstr "Native Klassen (``Object``, ``Node``, ``Area2D``, ``Camera2D``, etc.)."

msgid ":ref:`Global classes <doc_gdscript_basics_class_name>`."
msgstr ":ref:`Globale Klassen <doc_gdscript_basics_class_name>`."

msgid ":ref:`Inner classes <doc_gdscript_basics_inner_classes>`."
msgstr ":ref:`Innere Klassen <doc_gdscript_basics_inner_classes>`."

msgid ""
"Global, native and custom named enums. Note that an enum type is just an "
"``int``, there is no guarantee that the value belongs to the set of enum "
"values."
msgstr ""
"Globale, native und benannte Enums. Beachten Sie, dass ein Enum-Typ nur ein "
"``int`` ist, es gibt keine Garantie, dass der Wert zur Menge der Enum-Werte "
"gehört."

msgid ""
"Constants (including local ones) if they contain a preloaded class or enum."
msgstr ""
"Konstanten (einschließlich lokaler Konstanten), wenn sie eine vorgeladene "
"Klasse oder Enum enthalten."

msgid ""
"You can use any class, including your custom classes, as types. There are "
"two ways to use them in scripts. The first method is to preload the script "
"you want to use as a type in a constant::"
msgstr ""
"Sie können jede Klasse, einschließlich Ihrer benutzerdefinierten Klassen, "
"als Typen verwenden. Es gibt zwei Möglichkeiten, sie in Skripten zu "
"verwenden. Die erste Methode besteht darin, das Skript, das Sie als Typ "
"verwenden möchten, in einer Konstante vorzuladen::"

msgid ""
"The second method is to use the ``class_name`` keyword when you create. For "
"the example above, your ``rifle.gd`` would look like this::"
msgstr ""
"Die zweite Methode ist die Verwendung des Schlüsselwortes ``class_name`` "
"beim Erstellen. Für das obige Beispiel würde Ihre ``rifle.gd`` wie folgt "
"aussehen::"

msgid ""
"If you use ``class_name``, Godot registers the ``Rifle`` type globally in "
"the editor, and you can use it anywhere, without having to preload it into a "
"constant::"
msgstr ""
"Wenn Sie ``class_name`` verwenden, registriert Godot den Typ ``Rifle`` "
"global im Editor, und Sie können ihn überall verwenden, ohne ihn in eine "
"Konstante vorladen zu müssen::"

msgid "Specify the return type of a function with the arrow ``->``"
msgstr "Geben Sie den Rückgabetyp einer Funktion mit dem Pfeil ``->`` an"

msgid ""
"To define the return type of a function, write a dash and a right angle "
"bracket ``->`` after its declaration, followed by the return type::"
msgstr ""
"Um den Rückgabetyp einer Funktion zu definieren, schreiben Sie einen "
"Bindestrich und eine rechteckige Klammer ``->`` nach ihrer Deklaration, "
"gefolgt vom Rückgabetyp::"

msgid ""
"The type ``void`` means the function does not return anything. You can use "
"any type, as with variables::"
msgstr ""
"Der Typ ``void`` bedeutet, dass die Funktion nichts zurückgibt. Sie können "
"jeden Typ verwenden, wie bei Variablen::"

msgid "You can also use your own classes as return types::"
msgstr "Sie können auch Ihre eigenen Klassen als Rückgabetypen verwenden::"

msgid "Covariance and contravariance"
msgstr "Kovarianz und Kontravarianz"

msgid ""
"When inheriting base class methods, you should follow the `Liskov "
"substitution principle <https://en.wikipedia.org/wiki/"
"Liskov_substitution_principle>`__."
msgstr ""
"Bei der Vererbung von Basisklassen-Methoden sollten Sie das `Liskov-"
"Substitutionsprinzip <https://en.wikipedia.org/wiki/"
"Liskov_substitution_principle>`__ befolgen."

msgid ""
"**Covariance:** When you inherit a method, you can specify a return type "
"that is more specific (**subtype**) than the parent method."
msgstr ""
"**Kovarianz:** Wenn Sie eine Methode erben, können Sie einen Rückgabetyp "
"angeben, der spezifischer ist (**Subtyp**) als die Parent-Methode."

msgid ""
"**Contravariance:** When you inherit a method, you can specify a parameter "
"type that is less specific (**supertype**) than the parent method."
msgstr ""
"**Kontravarianz:** Wenn Sie eine Methode erben, können Sie einen "
"Parametertyp angeben, der weniger spezifisch ist (**Supertyp**) als die "
"Parent-Methode."

msgid "Example::"
msgstr "Beispiel::"

msgid "Specify the element type of an ``Array``"
msgstr "Spezifizieren des Elementtyps eines ``Arrays``"

msgid "To define the type of an ``Array``, enclose the type name in ``[]``."
msgstr ""
"Um den Typ eines ``Arrays`` zu definieren, schließen Sie den Typnamen in "
"``[]`` ein."

msgid ""
"An array's type applies to ``for`` loop variables, as well as some operators "
"like ``[]``, ``[]=``, and ``+``. Array methods (such as ``push_back``) and "
"other operators (such as ``==``) are still untyped. Built-in types, native "
"and custom classes, and enums may be used as element types. Nested array "
"types are not supported."
msgstr ""
"Der Typ eines Arrays gilt für ``for``-Schleifenvariablen, sowie für einige "
"Operatoren wie ``[]``, ``[]=`` und ``+``. Array-Methoden (wie ``push_back``) "
"und andere Operatoren (wie ``==``) sind weiterhin untypisiert. Built-in-"
"Typen, native und benutzerdefinierte Klassen und Enums können als "
"Elementtypen verwendet werden. Verschachtelte Array-Typen werden nicht "
"unterstützt."

msgid ""
"Since Godot 4.2, you can also specify a type for the loop variable in a "
"``for`` loop. For instance, you can write::"
msgstr ""
"Seit Godot 4.2 können Sie auch einen Typ für die Schleifenvariable in einer "
"``for``-Schleife angeben. Sie können zum Beispiel schreiben::"

msgid ""
"The array will remain untyped, but the ``name`` variable within the ``for`` "
"loop will always be of ``String`` type."
msgstr ""
"Das Array bleibt untypisiert, aber die Variable ``name`` innerhalb der "
"``for``-Schleife wird immer vom Typ ``String`` sein."

msgid "Type casting"
msgstr "Typ-Casting"

msgid ""
"Type casting is an important concept in typed languages. Casting is the "
"conversion of a value from one type to another."
msgstr ""
"Typ-Casting ist ein wichtiges Konzept in typisierten Sprachen. Casting ist "
"die Umwandlung eines Wertes von einem Typ in einen anderen."

msgid ""
"Imagine an ``Enemy`` in your game, that ``extends Area2D``. You want it to "
"collide with the ``Player``, a ``CharacterBody2D`` with a script called "
"``PlayerController`` attached to it. You use the ``body_entered`` signal to "
"detect the collision. With typed code, the body you detect is going to be a "
"generic ``PhysicsBody2D``, and not your ``PlayerController`` on the "
"``_on_body_entered`` callback."
msgstr ""
"Stellen Sie sich einen ``Enemy`` in Ihrem Spiel vor, der per ``extend`` eine "
"``Area2D`` erweitert. Sie wollen, dass er mit dem ``Player`` kollidiert, "
"einem ``CharacterBody2D`` mit einem Skript namens ``PlayerController``, das "
"an ihm hängt. Sie benutzen das Signal ``body_entered``, um die Kollision zu "
"erkennen. Mit typisiertem Code wird der Body, den Sie erkennen, ein "
"generischer ``PhysicsBody2D`` sein, und nicht Ihr ``PlayerController`` beim "
"``_on_body_entered``-Callback."

msgid ""
"You can check if this ``PhysicsBody2D`` is your ``Player`` with the ``as`` "
"keyword, and using the colon ``:`` again to force the variable to use this "
"type. This forces the variable to stick to the ``PlayerController`` type::"
msgstr ""
"Sie können überprüfen, ob dieser ``PhysicsBody2D`` Ihr ``Player`` ist, indem "
"Sie das ``as``-Schlüsselwort benutzen, und den Doppelpunkt ``:`` erneut "
"verwenden, um die Variable zu zwingen, diesen Typ zu benutzen. Dies zwingt "
"die Variable, sich an den ``PlayerController``-Typ zu halten::"

msgid ""
"As we're dealing with a custom type, if the ``body`` doesn't extend "
"``PlayerController``, the ``player`` variable will be set to ``null``. We "
"can use this to check if the body is the player or not. We will also get "
"full autocompletion on the player variable thanks to that cast."
msgstr ""
"Da wir es mit einem benutzerdefinierten Typ zu tun haben, wird die Variable "
"``player`` auf ``null`` gesetzt, wenn der ``body`` nicht "
"``PlayerController`` erweitert. Wir können dies benutzen, um zu überprüfen, "
"ob der Body der Spieler ist oder nicht. Dank dieses Casts erhalten wir auch "
"eine vollständige Autovervollständigung für die Player-Variable."

msgid ""
"The ``as`` keyword silently casts the variable to ``null`` in case of a type "
"mismatch at runtime, without an error/warning. While this may be convenient "
"in some cases, it can also lead to bugs. Use the ``as`` keyword only if this "
"behavior is intended. A safer alternative is to use the ``is`` keyword::"
msgstr ""
"Das ``as``-Schlüsselwort verwandelt die Variable im Falle einer zur Laufzeit "
"stillschweigend in ``null``, wenn der Typ nicht übereinstimmt, ohne dass ein "
"Fehler oder eine Warnung ausgegeben wird. Obwohl dies in einigen Fällen "
"bequem sein kann, kann es auch zu Fehlern führen. Verwenden Sie das "
"Schlüsselwort ``as`` nur, wenn dieses Verhalten beabsichtigt ist. Eine "
"sicherere Alternative ist die Verwendung des ``is`` Schlüsselwortes::"

msgid "or ``assert()`` statement::"
msgstr "oder ``assert()`` Anweisung::"

msgid ""
"If you try to cast with a built-in type and it fails, Godot will throw an "
"error."
msgstr ""
"Wenn Sie versuchen, mit einem Built-in-Typ zu casten und dies fehlschlägt, "
"gibt Godot einen Fehler aus."

msgid "Safe lines"
msgstr "Sichere Zeilen"

msgid ""
"You can also use casting to ensure safe lines. Safe lines are a tool to tell "
"you when ambiguous lines of code are type-safe. As you can mix and match "
"typed and dynamic code, at times, Godot doesn't have enough information to "
"know if an instruction will trigger an error or not at runtime."
msgstr ""
"Sie können auch Casting verwenden, um sichere Zeilen zu gewährleisten. "
"Sichere Zeilen sind ein Werkzeug, das Ihnen sagt, wann mehrdeutige "
"Codezeilen typsicher sind. Da Sie typisierten und dynamischen Code "
"vermischen können, verfügt Godot manchmal nicht über genügend Informationen, "
"um zu wissen, ob eine Anweisung zur Laufzeit einen Fehler auslösen wird oder "
"nicht."

msgid ""
"This happens when you get a child node. Let's take a timer for example: with "
"dynamic code, you can get the node with ``$Timer``. GDScript supports `duck-"
"typing <https://stackoverflow.com/a/4205163/8125343>`__, so even if your "
"timer is of type ``Timer``, it is also a ``Node`` and an ``Object``, two "
"classes it extends. With dynamic GDScript, you also don't care about the "
"node's type as long as it has the methods you need to call."
msgstr ""
"Dies geschieht, wenn Sie einen Child-Node erhalten. Nehmen wir zum Beispiel "
"einen Timer: mit dynamischem Code können Sie den Node mit ``$Timer`` "
"erhalten. GDScript unterstützt `duck-typing <https://stackoverflow.com/"
"a/4205163/8125343>`__, d.h. selbst wenn Ihr Timer vom Typ ``Timer`` ist, ist "
"er auch ein ``Node`` und ein ``Object``, zwei Klassen, die er erweitert. Mit "
"dynamischem GDScript ist der Typ des Nodes auch egal, solange er die "
"Methoden hat, die Sie aufrufen müssen."

msgid ""
"You can use casting to tell Godot the type you expect when you get a node: "
"``($Timer as Timer)``, ``($Player as CharacterBody2D)``, etc. Godot will "
"ensure the type works and if so, the line number will turn green at the left "
"of the script editor."
msgstr ""
"Sie können das Casting verwenden, um Godot mitzuteilen, welchen Typ Sie "
"erwarten, wenn Sie einen Node erhalten: ``($Timer as Timer)``, ``($Player as "
"CharacterBody2D)``, usw. Godot überprüft, ob der Typ funktioniert, und wenn "
"ja, wird die Zeilennummer links im Skript-Editor grün angezeigt."

msgid "Unsafe vs Safe Line"
msgstr "Unsichere vs. sichere Zeile"

msgid "Unsafe line (line 7) vs Safe Lines (line 6 and 8)"
msgstr "Unsichere Zeile (Zeile 7) vs. sichere Zeilen (Zeilen 6 und 8)"

msgid ""
"Safe lines do not always mean better or more reliable code. See the note "
"above about the ``as`` keyword. For example::"
msgstr ""
"Sichere Zeilen bedeuten nicht immer besseren oder zuverlässigeren Code. "
"Siehe die obige Anmerkung über das Schlüsselwort ``as``. Zum Beispiel::"

msgid ""
"Even though ``node_2`` declaration is marked as an unsafe line, it is more "
"reliable than ``node_1`` declaration. Because if you change the node type in "
"the scene and accidentally forget to change it in the script, the error will "
"be detected immediately when the scene is loaded. Unlike ``node_1``, which "
"will be silently cast to ``null`` and the error will be detected later."
msgstr ""
"Auch wenn die ``node_2``-Deklaration als unsichere Zeile markiert ist, ist "
"sie zuverlässiger als die ``Node_1``-Deklaration. Denn wenn Sie den Node-Typ "
"in der Szene ändern und versehentlich vergessen, ihn im Skript zu ändern, "
"wird der Fehler sofort entdeckt, wenn die Szene geladen wird. Im Gegensatz "
"zu ``node_1``, das stillschweigend zu ``null`` gecastet wird und der Fehler "
"erst später entdeckt wird."

msgid ""
"You can turn off safe lines or change their color in the editor settings."
msgstr ""
"Sie können sichere Zeilen deaktivieren oder ihre Farbe in den "
"Editoreinstellungen ändern."

msgid "Typed or dynamic: stick to one style"
msgstr "Typisiert oder dynamisch: Halten Sie sich an einen Stil"

msgid ""
"Typed GDScript and dynamic GDScript can coexist in the same project. But "
"it's recommended to stick to either style for consistency in your codebase, "
"and for your peers. It's easier for everyone to work together if you follow "
"the same guidelines, and faster to read and understand other people's code."
msgstr ""
"Typisiertes GDScript und dynamisches GDScript können im selben Projekt "
"koexistieren. Aus Gründen der Konsistenz in Ihrer Codebasis und für Ihre "
"Kollegen ist es jedoch empfehlenswert, durchgängug einen der beiden Stile zu "
"verwenden. Es ist für alle einfacher, zusammenzuarbeiten, wenn Sie dieselben "
"Richtlinien befolgen, und macht es einfacher und schneller, den Code anderer "
"Leute zu lesen und zu verstehen."

msgid ""
"Typed code takes a little more writing, but you get the benefits we "
"discussed above. Here's an example of the same, empty script, in a dynamic "
"style::"
msgstr ""
"Typisierter Code erfordert ein wenig mehr Schreibarbeit, aber Sie erhalten "
"die oben beschriebenen Vorteile. Hier ist ein Beispiel für dasselbe leere "
"Skript in dynamischem Stil::"

msgid "And with static typing::"
msgstr "Und mit statischer Typisierung::"

msgid ""
"As you can see, you can also use types with the engine's virtual methods. "
"Signal callbacks, like any methods, can also use types. Here's a "
"``body_entered`` signal in a dynamic style::"
msgstr ""
"Wie Sie sehen können, können Sie auch Typen mit den virtuellen Methoden der "
"Engine verwenden. Signal-Callbacks können, wie alle Methoden, auch Typen "
"verwenden. Hier ist ein ``body_entered``-Signal in dynamischem Stil::"

msgid "And the same callback, with type hints::"
msgstr "Und dasselbe Callback mit Type-Hints::"

msgid "Warning system"
msgstr "Warnsystem"

msgid ""
"Detailed documentation about the GDScript warning system has been moved to :"
"ref:`doc_gdscript_warning_system`."
msgstr ""
"Die ausführliche Dokumentation über das GDScript-Warnsystem wurde nach :ref:"
"`doc_gdscript_warning_system` verschoben."

msgid ""
"From version 3.1, Godot gives you warnings about your code as you write it: "
"the engine identifies sections of your code that may lead to issues at "
"runtime, but lets you decide whether or not you want to leave the code as it "
"is."
msgstr ""
"Ab Version 3.1 gibt Godot bereits während des Schreibens Warnungen zu Ihrem "
"Code aus: Die Engine identifiziert Abschnitte Ihres Codes, die zur Laufzeit "
"zu Problemen führen könnten, lässt Ihnen aber die Entscheidung, ob Sie den "
"Code so belassen wollen, wie er ist oder nicht."

msgid ""
"We have a number of warnings aimed specifically at users of typed GDScript. "
"By default, these warnings are disabled, you can enable them in Project "
"Settings (**Debug > GDScript**, make sure **Advanced Settings** is enabled)."
msgstr ""
"Es gibt eine Reihe von Warnungen, die sich speziell an Benutzer von "
"typisiertem GDScript richten. Standardmäßig sind diese Warnungen "
"deaktiviert, Sie können sie in den Projekteinstellungen aktivieren (**Debug "
"> GDScript**, stellen Sie sicher, dass **Erweiterte Einstellungen** "
"aktiviert ist)."

msgid ""
"You can enable the ``UNTYPED_DECLARATION`` warning if you want to always use "
"static types. Additionally, you can enable the ``INFERRED_DECLARATION`` "
"warning if you prefer a more readable and reliable, but more verbose syntax."
msgstr ""
"Sie können die Warnung ``UNTYPED_DECLARATION`` aktivieren, wenn Sie immer "
"statische Typen verwenden wollen. Zusätzlich können Sie die Warnung "
"``INFERRED_DECLARATION`` aktivieren, wenn Sie eine lesbarere und "
"zuverlässigere, aber ausführlichere Syntax bevorzugen."

msgid ""
"``UNSAFE_*`` warnings make unsafe operations more noticeable, than unsafe "
"lines. Currently, ``UNSAFE_*`` warnings do not cover all cases that unsafe "
"lines cover."
msgstr ""
"``UNSAFE_*``-Warnungen machen unsichere Operationen deutlicher als unsichere "
"Zeilen. Derzeit decken ``UNSAFE_*``-Warnungen nicht alle Fälle ab, die von "
"unsicheren Zeilen abgedeckt werden."

msgid "Common unsafe operations and their safe counterparts"
msgstr ""

msgid "``UNSAFE_PROPERTY_ACCESS`` and ``UNSAFE_METHOD_ACCESS`` warnings"
msgstr ""

msgid ""
"In this example, we aim to set a property and call a method on an object "
"that has a script attached with ``class_name MyScript`` and that ``extends "
"Node2D``. If we have a reference to the object as a ``Node2D`` (for "
"instance, as it was passed to us by the physics system), we can first check "
"if the property and method exist and then set and call them if they do::"
msgstr ""

msgid ""
"However, this code will produce ``UNSAFE_PROPERTY_ACCESS`` and "
"``UNSAFE_METHOD_ACCESS`` warnings as the property and method are not present "
"in the referenced type - in this case a ``Node2D``. To make these operations "
"safe, you can first check if the object is of type ``MyScript`` using the "
"``is`` keyword and then declare a variable with the type ``MyScript`` on "
"which you can set its properties and call its methods::"
msgstr ""

msgid ""
"Alternatively, you can declare a variable and use the ``as`` operator to try "
"to cast the object. You'll then want to check whether the cast was "
"successful by confirming that the variable was assigned::"
msgstr ""

msgid "``UNSAFE_CAST`` warning"
msgstr ""

msgid ""
"In this example, we would like the label connected to an object entering our "
"collision area to show the area's name. Once the object enters the collision "
"area, the physics system sends a signal with a ``Node2D`` object, and the "
"most straightforward (but not statically typed) solution to do what we want "
"could be achieved like this::"
msgstr ""

msgid ""
"This piece of code produces an ``UNSAFE_PROPERTY_ACCESS`` warning because "
"``label`` is not defined in ``Node2D``. To solve this, we could first check "
"if the ``label`` property exist and cast it to type ``Label`` before "
"settings its text property like so::"
msgstr ""

msgid ""
"However, this produces an ``UNSAFE_CAST`` warning because ``body.label`` is "
"of a ``Variant`` type. To safely get the property in the type you want, you "
"can use the ``Object.get()`` method which returns the object as a "
"``Variant`` value or returns ``null`` if the property doesn't exist. You can "
"then determine whether the property contains an object of the right type "
"using the ``is`` keyword, and finally declare a statically typed variable "
"with the object::"
msgstr ""

msgid "Cases where you can't specify types"
msgstr "Fälle, in denen Sie keine Typen spezifizieren können"

msgid ""
"To wrap up this introduction, let's mention cases where you can't use type "
"hints. This will trigger a **syntax error**."
msgstr ""
"Zum Abschluss dieser Einführung wollen wir noch die Fälle erwähnen, in denen "
"Sie keine Type-Hints verwenden können. Dies führt zu einem **Syntaxfehler**."

msgid ""
"You can't specify the type of individual elements in an array or a "
"dictionary::"
msgstr ""
"Sie können den Typ der einzelnen Elemente in einem Array oder einem "
"Dictionary nicht angeben::"

msgid "Nested types are not currently supported::"
msgstr "Verschachtelte Typen werden derzeit nicht unterstützt::"

msgid "Typed dictionaries are not currently supported::"
msgstr "Typisierte Dictionarys werden derzeit nicht unterstützt::"

msgid "Summary"
msgstr "Zusammenfassung"

msgid ""
"Typed GDScript is a powerful tool. It helps you write more structured code, "
"avoid common errors, and create scalable and reliable systems. Static types "
"improve GDScript performance and more optimizations are planned for the "
"future."
msgstr ""
"Typisiertes GDScript ist ein leistungsstarkes Werkzeug. Es hilft Ihnen, "
"strukturierteren Code zu schreiben, häufige Fehler zu vermeiden und "
"skalierbare und zuverlässige Systeme zu erstellen. Statische Typen "
"verbessern die Leistung von GDScript, und weitere Optimierungen sind für die "
"Zukunft geplant."

msgid "Translation status"
msgstr "Übersetzungsstatus"
