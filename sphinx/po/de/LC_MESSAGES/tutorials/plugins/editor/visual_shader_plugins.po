# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Visual Shader plugins"
msgstr "Visual Shader-Plugins"

msgid ""
"Visual Shader plugins are used to create custom :ref:`class_VisualShader` "
"nodes in GDScript."
msgstr ""
"Visual Shader-Plugins werden verwendet, um benutzerdefinierte :ref:"
"`class_VisualShader`-Nodes in GDScript zu erstellen."

msgid ""
"The creation process is different from usual editor plugins. You do not need "
"to create a ``plugin.cfg`` file to register it; instead, create and save a "
"script file and it will be ready to use, provided the custom node is "
"registered with ``class_name``."
msgstr ""
"Der Erstellungsprozess ist anders als bei den üblichen Editor-Plugins. Sie "
"brauchen keine ``plugin.cfg``-Datei zu erstellen, um es zu registrieren; "
"stattdessen erstellen und speichern Sie eine Skriptdatei und es ist bereit "
"zur Verwendung, vorausgesetzt der benutzerdefinierte Node ist mit "
"``class_name`` registriert."

msgid ""
"This short tutorial will explain how to make a Perlin-3D noise node "
"(original code from this `GPU noise shaders plugin <https://github.com/curly-"
"brace/Godot-3.0-Noise-Shaders/blob/master/assets/gpu_noise_shaders/"
"classic_perlin3d.tres>`_."
msgstr ""
"In diesem kurzen Tutorial wird erklärt, wie man einen Perlin-3D-Noise-Node "
"erstellt (Originalcode aus diesem `GPU Noise Shaders-Plugin <https://github."
"com/curly-brace/Godot-3.0-Noise-Shaders/blob/master/assets/gpu_noise_shaders/"
"classic_perlin3d.tres>`_."

msgid ""
"Create a Sprite2D and assign a :ref:`class_ShaderMaterial` to its material "
"slot:"
msgstr ""
"Erstellen Sie ein Sprite2D und weisen Sie seinem Material-Slot ein :ref:"
"`class_ShaderMaterial` zu:"

msgid "Assign :ref:`class_VisualShader` to the shader slot of the material:"
msgstr "Weisen Sie :ref:`class_VisualShader` dem Shader-Slot des Materials zu:"

msgid ""
"Don't forget to change its mode to \"CanvasItem\" (if you are using a "
"Sprite2D):"
msgstr ""
"Vergessen Sie nicht, den Modus auf \"CanvasItem\" zu ändern (wenn Sie ein "
"Sprite2D verwenden):"

msgid ""
"Create a script which derives from :ref:`class_VisualShaderNodeCustom`. This "
"is all you need to initialize your plugin."
msgstr ""
"Erstellen Sie ein Skript, das sich von :ref:`class_VisualShaderNodeCustom` "
"ableitet. Dies ist alles, was Sie brauchen, um Ihr Plugin zu initialisieren."

msgid ""
"Save it and open the Visual Shader. You should see your new node type within "
"the member's dialog under the Addons category (if you can't see your new "
"node, try restarting the editor):"
msgstr ""
"Speichern Sie ihn und öffnen Sie den Visual Shader. Sie sollten Ihren neuen "
"Node-Typ im Member-Dialog unter der Kategorie Addons sehen (wenn Sie Ihren "
"neuen Node nicht sehen können, versuchen Sie, den Editor neu zu starten):"

msgid "Place it on a graph and connect the required ports:"
msgstr ""
"Platzieren Sie ihn in einem Diagramm und verbinden Sie die erforderlichen "
"Anschlüsse:"

msgid ""
"That is everything you need to do, as you can see it is easy to create your "
"own custom VisualShader nodes!"
msgstr ""
"Das ist alles, was Sie tun müssen. Wie Sie sehen können, ist es einfach, "
"Ihre eigenen VisualShader-Nodes zu erstellen!"

msgid "Translation status"
msgstr "Übersetzungsstatus"
