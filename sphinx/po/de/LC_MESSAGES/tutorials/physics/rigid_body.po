# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using RigidBody"
msgstr "Verwenden von RigidBody"

msgid "What is a rigid body?"
msgstr "Was ist ein Rigid Body?"

msgid ""
"A rigid body is one that is directly controlled by the physics engine in "
"order to simulate the behavior of physical objects. In order to define the "
"shape of the body, it must have one or more :ref:`Shape3D <class_Shape3D>` "
"objects assigned. Note that setting the position of these shapes will affect "
"the body's center of mass."
msgstr ""
"Ein Rigid Body ist ein Körper, der direkt von der Physik-Engine gesteuert "
"wird, um das Verhalten von physikalischen Objekten zu simulieren. Um die "
"Form des Bodys zu definieren, müssen ihm ein oder mehrere :ref:`Shape3D "
"<class_Shape3D>`-Objekte zugewiesen werden. Beachten Sie, dass das Setzen "
"der Position dieser Shapes den Massenschwerpunkt des Körpers beeinflusst."

msgid "How to control a rigid body"
msgstr "Wie man einen Rigid Body kontrolliert"

msgid ""
"A rigid body's behavior can be altered by setting its properties, such as "
"mass and weight. A physics material needs to be added to the rigid body to "
"adjust its friction and bounce, and set if it's absorbent and/or rough. "
"These properties can be set in the Inspector or via code. See :ref:"
"`RigidBody3D <class_RigidBody3D>` and :ref:`PhysicsMaterial "
"<class_PhysicsMaterial>` for the full list of properties and their effects."
msgstr ""
"Das Verhalten eines Rigid Bodys kann durch die Einstellung seiner "
"Eigenschaften, wie Masse und Gewicht, verändert werden. Ein physikalisches "
"Material muss dem Rigid Body hinzugefügt werden, um seine Reibung und "
"Elastizität einzustellen und festzulegen, ob er absorbierend und/oder rau "
"ist. Diese Propertys können im Inspector oder per Code eingestellt werden. "
"Siehe :ref:`RigidBody3D <class_RigidBody3D>` und :ref:`PhysicsMaterial "
"<class_PhysicsMaterial>` für die vollständige Liste der Propertys und ihre "
"Auswirkungen."

msgid ""
"There are several ways to control a rigid body's movement, depending on your "
"desired application."
msgstr ""
"Abhängig von Ihrer gewünschten Anwendung gibt es verschiedene Möglichkeiten, "
"die Bewegung eines Rigid Bodys zu steuern."

msgid ""
"If you only need to place a rigid body once, for example to set its initial "
"location, you can use the methods provided by the :ref:`Node3D "
"<class_Node3D>` node, such as ``set_global_transform()`` or ``look_at()``. "
"However, these methods cannot be called every frame or the physics engine "
"will not be able to correctly simulate the body's state. As an example, "
"consider a rigid body that you want to rotate so that it points towards "
"another object. A common mistake when implementing this kind of behavior is "
"to use ``look_at()`` every frame, which breaks the physics simulation. "
"Below, we'll demonstrate how to implement this correctly."
msgstr ""
"Wenn Sie einen Rigid Body nur einmal platzieren müssen, z.B. um seine "
"anfängliche Position zu bestimmen, können Sie die Methoden verwenden, die "
"vom :ref:`Node3D <class_Node3D>`-Node bereitgestellt werden, wie "
"``set_global_transform()`` oder ``look_at()``. Diese Methoden können jedoch "
"nicht in jedem Frame aufgerufen werden, da die Physik-Engine sonst nicht in "
"der Lage ist, den Zustand des Bodys korrekt zu simulieren. Nehmen wir als "
"Beispiel einen Rigid Body, der so gedreht werden soll, dass er auf ein "
"anderes Objekt zeigt. Ein häufiger Fehler bei der Implementierung dieser Art "
"von Verhalten ist die Verwendung von ``look_at()`` in jedem Frame, was die "
"Physiksimulation unterbricht. Im Folgenden werden wir zeigen, wie man dies "
"korrekt implementiert."

msgid ""
"The fact that you can't use ``set_global_transform()`` or ``look_at()`` "
"methods doesn't mean that you can't have full control of a rigid body. "
"Instead, you can control it by using the ``_integrate_forces()`` callback. "
"In this method, you can add *forces*, apply *impulses*, or set the "
"*velocity* in order to achieve any movement you desire."
msgstr ""
"Die Tatsache, dass Sie die Methoden ``set_global_transform()`` oder "
"``look_at()`` nicht verwenden können, bedeutet nicht, dass Sie nicht die "
"vollständige Kontrolle über einen Rigid Body haben können, stattdessen "
"können Sie hierfür ``_integrate_forces()`` nutzen. Bei dieser Methode können "
"Sie *Kräfte* hinzufügen, *Impulse* anwenden oder die *Geschwindigkeit* "
"einstellen, um jede gewünschte Bewegung zu erzielen."

msgid "The \"look at\" method"
msgstr "Die \"look at\" -Methode"

msgid ""
"As described above, using the Node3D's ``look_at()`` method can't be used "
"each frame to follow a target. Here is a custom ``look_at()`` method called "
"``look_follow()`` that will work with rigid bodies:"
msgstr ""
"Wie oben beschrieben, kann die ``look_at()``-Methode von Node3D nicht in "
"jedem Frame verwendet werden, um ein Ziel zu verfolgen. Hier ist eine eigene "
"``look_at()``-Methode namens ``look_follow()``, die mit Rigid Bodys "
"funktioniert:"

msgid ""
"This method uses the rigid body's ``angular_velocity`` property to rotate "
"the body. The axis to rotate around is given by the cross product between "
"the current forward direction and the direction one wants to look in. The "
"``clamp`` is a simple method used to prevent the amount of rotation from "
"going past the direction which is wanted to be looked in, as the total "
"amount of rotation needed is given by the arccosine of the dot product. This "
"method can be used with ``axis_lock_angular_*`` as well. If more precise "
"control is needed, solutions such as ones relying on :ref:`class_Quaternion` "
"may be required, as discussed in :ref:`doc_using_transforms`."
msgstr ""
"Diese Methode benutzt die Property ``angular_velocity`` des Rigid Body, um "
"den Body zu rotieren. Die Achse, um die rotiert werden soll, wird durch das "
"Kreuzprodukt zwischen der aktuellen Vorwärtsrichtung und der Richtung, in "
"die man schauen möchte, bestimmt. Das ``Clamping`` ist eine einfache "
"Methode, um zu verhindern, daß die Rotation über die Richtung hinausgeht, in "
"die man schauen möchte, da die gesamte benötigte Rotation durch den "
"Arkussinus des Skalarprodukts gegeben ist. Diese Methode kann auch mit "
"``axis_lock_angular_*`` verwendet werden. Wenn eine genauere Kontrolle "
"benötigt wird, können Lösungen, die auf :ref:`class_Quaternion` beruhen, "
"erforderlich sein, wie in :ref:`doc_using_transforms` beschrieben."

msgid "Translation status"
msgstr "Übersetzungsstatus"
