# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Physics introduction"
msgstr "Einführung in die Physik"

msgid ""
"In game development, you often need to know when two objects in the game "
"intersect or come into contact. This is known as **collision detection**. "
"When a collision is detected, you typically want something to happen. This "
"is known as **collision response**."
msgstr ""
"In der Spielentwicklung muss man oft wissen, ob sich zwei Objekte im Spiel "
"berühren oder überlagern. Dies wird als **Kollisionserkennung** bezeichnet. "
"Falls es zu solch einer Kollision kommt, soll normalerweise etwas passieren. "
"Dies wird als **Kollisionsreaktion** bezeichnet."

msgid ""
"Godot offers a number of collision objects in 2D and 3D to provide both "
"collision detection and response. Trying to decide which one to use for your "
"project can be confusing. You can avoid problems and simplify development if "
"you understand how each works and what their pros and cons are."
msgstr ""
"Godot bietet eine Reihe von Kollisionsobjekten in 2D und 3D, um sowohl die "
"Kollisionserkennung als auch die Reaktion darauf zu ermöglichen. Die "
"Entscheidung, welches davon für Ihr Projekt verwendet werden soll, kann "
"verwirrend sein. Sie können Probleme vermeiden und die Entwicklung "
"vereinfachen, wenn Sie verstehen, wie jedes Objekt funktioniert und welche "
"Vor- und Nachteile es hat."

msgid "In this guide, you will learn:"
msgstr "In dieser Anleitung lernen Sie:"

msgid "Godot's four collision object types"
msgstr "Godots vier Arten von Kollisionsobjekten"

msgid "How each collision object works"
msgstr "Wie jedes Kollisionsobjekt funktioniert"

msgid "When and why to choose one type over another"
msgstr "Wann und warum man sich für einen Typ entscheidet"

msgid ""
"This document's examples will use 2D objects. Every 2D physics object and "
"collision shape has a direct equivalent in 3D and in most cases they work in "
"much the same way."
msgstr ""
"In den Beispielen dieses Dokuments werden 2D-Objekte verwendet. Jedes 2D-"
"Physikobjekt und jede Collision Shape hat ein direktes Äquivalent in 3D und "
"funktioniert in den meisten Fällen auf die gleiche Weise."

msgid "Collision objects"
msgstr "Kollisionsobjekte"

msgid ""
"Godot offers four kinds of collision objects which all extend :ref:"
"`CollisionObject2D <class_CollisionObject2D>`. The last three listed below "
"are physics bodies and additionally extend :ref:`PhysicsBody2D "
"<class_PhysicsBody2D>`."
msgstr ""
"Godot bietet vier Arten von Kollisionsobjekten, die alle :ref:"
"`CollisionObject2D <class_CollisionObject2D>` erweitern. Die letzten drei "
"unten aufgeführten sind Physik-Bodys und erweitern zusätzlich :ref:"
"`PhysicsBody2D <class_PhysicsBody2D>`."

msgid ":ref:`Area2D <class_Area2D>`"
msgstr ":ref:`Area2D <class_Area2D>`"

msgid ""
"``Area2D`` nodes provide **detection** and **influence**. They can detect "
"when objects overlap and can emit signals when bodies enter or exit. An "
"``Area2D`` can also be used to override physics properties, such as gravity "
"or damping, in a defined area."
msgstr ""
"``Area2D``-Nodes bieten **Erkennung** und **Einfluss**. Sie können erkennen, "
"wenn sich Objekte überlappen, und Signale ausgeben, wenn Bodys den Bereich "
"betreten oder verlassen. Eine ``Area2D`` kann auch verwendet werden, um "
"physikalische Eigenschaften wie Schwerkraft oder Dämpfung in einem "
"definierten Bereich zu umgehen."

msgid ":ref:`StaticBody2D <class_StaticBody2D>`"
msgstr ":ref:`StaticBody2D <class_StaticBody2D>`"

msgid ""
"A static body is one that is not moved by the physics engine. It "
"participates in collision detection, but does not move in response to the "
"collision. They are most often used for objects that are part of the "
"environment or that do not need to have any dynamic behavior."
msgstr ""
"Ein Static Body wird nicht von der Physik-Engine bewegt. Es nimmt an der "
"Kollisionserkennung teil, bewegt sich jedoch nicht als Reaktion auf die "
"Kollision. Sie werden am häufigsten für Objekte verwendet, die Teil der "
"Umgebung sind oder kein dynamisches Verhalten benötigen."

msgid ":ref:`RigidBody2D <class_RigidBody2D>`"
msgstr ":ref:`RigidBody2D <class_RigidBody2D>`"

msgid ""
"This is the node that implements simulated 2D physics. You do not control a "
"``RigidBody2D`` directly, but instead you apply forces to it (gravity, "
"impulses, etc.) and the physics engine calculates the resulting movement. :"
"ref:`Read more about using rigid bodies. <doc_rigid_body>`"
msgstr ""
"Dies ist der Node, der simulierte 2D-Physik implementiert. Sie steuern einen "
"``RigidBody2D`` nicht direkt, sondern üben stattdessen Kräfte auf ihn aus "
"(Schwerkraft, Impulse usw.) und die Physik-Engine berechnet die "
"resultierende Bewegung. :ref:`Lesen Sie mehr über die Verwendung von Rigid "
"Bodys <doc_rigid_body>`"

msgid ":ref:`CharacterBody2D <class_CharacterBody2D>`"
msgstr ":ref:`CharacterBody2D <class_CharacterBody2D>`"

msgid ""
"A body that provides collision detection, but no physics. All movement and "
"collision response must be implemented in code."
msgstr ""
"Ein Body, der Kollisionserkennung bietet, aber keine Physik. Alle Bewegungs- "
"und Kollisionsreaktionen müssen im Code implementiert sein."

msgid "Physics material"
msgstr "Physikmaterial"

msgid ""
"Static bodies and rigid bodies can be configured to use a :ref:"
"`PhysicsMaterial <class_PhysicsMaterial>`. This allows adjusting the "
"friction and bounce of an object, and set if it's absorbent and/or rough."
msgstr ""
"Static Bodys und Rigid Bodys können so konfiguriert werden, dass sie ein :"
"ref:`PhysicsMaterial <class_PhysicsMaterial>` verwenden. Dies erlaubt es, "
"die Reibung und das Abprallen eines Objekts einzustellen und festzulegen, ob "
"es absorbierend und/oder rau ist."

msgid "Collision shapes"
msgstr "Collision Shapes"

msgid ""
"A physics body can hold any number of :ref:`Shape2D <class_Shape2D>` objects "
"as children. These shapes are used to define the object's collision bounds "
"and to detect contact with other objects."
msgstr ""
"Ein Physik-Body kann eine beliebige Anzahl von :ref:`Shape2D "
"<class_Shape2D>`-Objekten als Child-Objekte enthalten. Diese Shapes werden "
"verwendet, um die Kollisionsgrenzen des Objekts zu definieren und den "
"Kontakt mit anderen Objekten zu erkennen."

msgid ""
"In order to detect collisions, at least one ``Shape2D`` must be assigned to "
"the object."
msgstr ""
"Um Kollisionen zu erkennen, muss dem Objekt mindestens eine ``Shape2D`` "
"zugewiesen werden."

msgid ""
"The most common way to assign a shape is by adding a :ref:`CollisionShape2D "
"<class_CollisionShape2D>` or :ref:`CollisionPolygon2D "
"<class_CollisionPolygon2D>` as a child of the object. These nodes allow you "
"to draw the shape directly in the editor workspace."
msgstr ""
"Die häufigste Methode zum Zuweisen einer Shape ist das Hinzufügen von :ref:"
"`CollisionShape2D <class_CollisionShape2D>` oder :ref:`CollisionPolygon2D "
"<class_CollisionPolygon2D>` als Child des Objekt. Mit diesen Nodes können "
"Sie die Shape direkt im Editor-Arbeitsbereich zeichnen."

msgid ""
"Be careful to never scale your collision shapes in the editor. The \"Scale\" "
"property in the Inspector should remain ``(1, 1)``. When changing the size "
"of the collision shape, you should always use the size handles, **not** the "
"``Node2D`` scale handles. Scaling a shape can result in unexpected collision "
"behavior."
msgstr ""
"Achten Sie darauf, Ihre Collision Shapes niemals im Editor zu skalieren. Die "
"Eigenschaft \"Skalierung\" im Inspektor sollte ``(1, 1)`` bleiben. Wenn Sie "
"die Größe der Collision Shape ändern, sollten Sie immer die Größenregler "
"verwenden und **nicht** die ``Node2D``-Skalenregler. Das Skalieren einer "
"Shape kann zu unerwartetem Kollisionsverhalten führen."

msgid "Physics process callback"
msgstr "Physikprozess-Callback"

msgid ""
"The physics engine runs at a fixed rate (a default of 60 iterations per "
"second). This rate is typically different from the frame rate which "
"fluctuates based on what is rendered and available resources."
msgstr ""
"Die Physik-Engine läuft mit einer festen Rate (standardmäßig 60 Iterationen "
"pro Sekunde). Diese Rate unterscheidet sich in der Regel von der Framerate, "
"die je nach gerendertem Inhalt und verfügbaren Ressourcen schwankt."

msgid ""
"It is important that all physics related code runs at this fixed rate. "
"Therefore Godot differentiates :ref:`between physics and idle processing "
"<doc_idle_and_physics_processing>`. Code that runs each frame is called idle "
"processing and code that runs on each physics tick is called physics "
"processing. Godot provides two different callbacks, one for each of those "
"processing rates."
msgstr ""
"Es ist wichtig, dass der gesamte physikbezogene Code mit dieser festen Rate "
"läuft. Deshalb unterscheidet Godot :ref:`zwischen Physik- und "
"Leerlaufverarbeitung <doc_idle_and_physics_processing>`. Code, der bei jedem "
"Frame läuft, wird Leerlaufverarbeitung genannt und Code, der bei jedem "
"Physik-Tick läuft, wird Physik-Verarbeitung genannt. Godot bietet zwei "
"verschiedene Callbacks, einen für jede dieser Verarbeitungsraten."

msgid ""
"The physics callback, :ref:`Node._physics_process() "
"<class_Node_private_method__physics_process>`, is called before each physics "
"step. Any code that needs to access a body's properties should be run in "
"here. This method will be passed a ``delta`` parameter, which is a floating-"
"point number equal to the time passed in *seconds* since the last step. When "
"using the default 60 Hz physics update rate, it will typically be equal to "
"``0.01666...`` (but not always, see below)."
msgstr ""
"Der Physik-Callback, :ref:`Node._physics_process() "
"<class_Node_private_method__physics_process>`, wird vor jedem Physikschritt "
"aufgerufen. Jeder Code, der auf die Propertys eines Körpers zugreifen muss, "
"sollte hier ausgeführt werden. Dieser Methode wird ein Parameter ``delta`` "
"übergeben, der eine Float-Zahl ist, die der Zeit in *Sekunden* seit dem "
"letzten Schritt entspricht. Wenn man die Default-Aktualisierungsrate der "
"Physik von 60 Hz verwendet, wird sie normalerweise gleich ``0.01666...`` "
"sein (aber nicht immer, siehe unten)."

msgid ""
"It's recommended to always use the ``delta`` parameter when relevant in your "
"physics calculations, so that the game behaves correctly if you change the "
"physics update rate or if the player's device can't keep up."
msgstr ""
"Es wird empfohlen immer den Parameter ``delta`` zu verwenden wenn dies für "
"Ihre Physikberechnungen relevant ist, damit sich das Spiel korrekt verhält "
"wenn Sie die Aktualisierungsrate der Physik ändern oder wenn das Gerät des "
"Spielers nicht mithalten kann."

msgid "Collision layers and masks"
msgstr "Kollisionsebenen und -masken"

msgid ""
"One of the most powerful, but frequently misunderstood, collision features "
"is the collision layer system. This system allows you to build up complex "
"interactions between a variety of objects. The key concepts are **layers** "
"and **masks**. Each ``CollisionObject2D`` has 32 different physics layers it "
"can interact with."
msgstr ""
"Eine der leistungsfähigsten, aber häufig missverstandenen "
"Kollisionsfunktionen ist das System der Kollisionsebenen. Dieses System "
"ermöglicht es Ihnen, komplexe Interaktionen zwischen einer Vielzahl von "
"Objekten aufzubauen. Die Schlüsselkonzepte sind **Ebenen** und **Masken**. "
"Jedes ``CollisionObject2D`` hat 32 verschiedene Physik-Ebenen, mit denen es "
"interagieren kann."

msgid "Let's look at each of the properties in turn:"
msgstr "Schauen wir uns nacheinander die einzelnen Propertys an:"

msgid "collision_layer"
msgstr "collision_layer"

msgid ""
"This describes the layers that the object appears **in**. By default, all "
"bodies are on layer ``1``."
msgstr ""
"Dies beschreibt die Ebenen, **in** denen das Objekt erscheint. Standardmäßig "
"sind alle Objekte auf Ebene ``1``."

msgid "collision_mask"
msgstr "collision_mask"

msgid ""
"This describes what layers the body will **scan** for collisions. If an "
"object isn't in one of the mask layers, the body will ignore it. By default, "
"all bodies scan layer ``1``."
msgstr ""
"Dies beschreibt, welche Ebenen der Body auf Kollisionen **prüfen** wird. "
"Wenn sich ein Objekt nicht in einer der Maskenebenen befindet, wird es vom "
"Body ignoriert. Standardmäßig scannen alle Bodys die Ebene ``1``."

msgid ""
"These properties can be configured via code, or by editing them in the "
"Inspector."
msgstr ""
"Diese Eigenschaften können per Code oder im Inspektor konfiguriert werden."

msgid ""
"Keeping track of what you're using each layer for can be difficult, so you "
"may find it useful to assign names to the layers you're using. Names can be "
"assigned in Project Settings -> Layer Names."
msgstr ""
"Es kann schwierig sein den Überblick darüber zu behalten, wofür Sie die "
"einzelnen Ebenen verwenden. Daher ist es möglicherweise hilfreich, den von "
"Ihnen verwendeten Ebenen Namen zuzuweisen. Namen können unter "
"Projekteinstellungen -> Ebenen-Namen vergeben werden."

msgid "GUI example"
msgstr "GUI-Beispiel"

msgid ""
"You have four node types in your game: Walls, Player, Enemy, and Coin. Both "
"Player and Enemy should collide with Walls. The Player node should detect "
"collisions with both Enemy and Coin, but Enemy and Coin should ignore each "
"other."
msgstr ""
"Sie haben vier Node-Typen in Ihrem Spiel: Wände, Spieler, Gegner und Münze. "
"Sowohl der Spieler als auch der Gegner sollten mit Wänden kollidieren "
"können. Der Spieler-Node sollte Kollisionen mit dem Gegner und der Münze "
"erkennen, aber der Gegner und die Münze sollten sich gegenseitig ignorieren."

msgid ""
"Start by naming layers 1-4 \"walls\", \"player\", \"enemies\", and \"coins\" "
"and place each node type in its respective layer using the \"Layer\" "
"property. Then set each node's \"Mask\" property by selecting the layers it "
"should interact with. For example, the Player's settings would look like "
"this:"
msgstr ""
"Benennen Sie zunächst die Ebenen 1 bis 4 \"walls\", \"player\", \"enemies\" "
"und \"coins\" und platzieren Sie jeden Node-Typ mithilfe der Property "
"\"Ebene\" in der jeweiligen Ebene. Legen Sie dann die \"Masken\"-Property "
"jedes Nodes fest, indem Sie die Ebenen auswählen, mit denen er interagieren "
"soll. Die Einstellungen des Spielers sehen beispielsweise folgendermaßen aus:"

msgid "Code example"
msgstr "Code-Beispiel"

msgid ""
"In function calls, layers are specified as a bitmask. Where a function "
"enables all layers by default, the layer mask will be given as "
"``0xffffffff``. Your code can use binary, hexadecimal, or decimal notation "
"for layer masks, depending on your preference."
msgstr ""
"In Funktionsaufrufen werden die Ebenen als Bitmaske angegeben. Wenn eine "
"Funktion standardmäßig alle Ebenen aktiviert, wird die Ebenenmaske als "
"``0xffffffff`` angegeben. Ihr Code kann je nach Vorliebe binäre, "
"hexadezimale oder dezimale Notation für Ebenenmasken verwenden."

msgid ""
"The code equivalent of the above example where layers 1, 3 and 4 were "
"enabled would be as follows::"
msgstr ""
"Das Code-Äquivalent des obigen Beispiels, in dem die Ebenen 1, 3 und 4 "
"aktiviert wurden, lautet wie folgt::"

msgid "Area2D"
msgstr "Area2D"

msgid ""
"Area nodes provide **detection** and **influence**. They can detect when "
"objects overlap and emit signals when bodies enter or exit. Areas can also "
"be used to override physics properties, such as gravity or damping, in a "
"defined area."
msgstr ""
"Area-Nodes bieten **Erkennung** und **Einfluss**. Sie können erkennen wenn "
"sich Objekte überlappen und Signale aussenden wenn Bodys den Bereich "
"betreten oder verlassen. Bereiche können auch verwendet werden, um Physik-"
"Eigenschaften wie Schwerkraft oder Dämpfung in einem definierten Bereich zu "
"umgehen."

msgid "There are three main uses for :ref:`Area2D <class_Area2D>`:"
msgstr "Es gibt drei Hauptanwendungen für :ref:`Area2D <class_Area2D>`:"

msgid "Overriding physics parameters (such as gravity) in a given region."
msgstr ""
"Überschreiben von Physik-Parametern (wie z.B. der Schwerkraft) in einer "
"bestimmten Region."

msgid ""
"Detecting when other bodies enter or exit a region or what bodies are "
"currently in a region."
msgstr ""
"Erkennen, wann andere Bodys eine Region betreten oder verlassen oder welche "
"Bodys sich derzeit in einer Region befinden."

msgid "Checking other areas for overlap."
msgstr "Überprüfen anderer Bereiche auf Überlappung."

msgid "By default, areas also receive mouse and touchscreen input."
msgstr "Standardmäßig empfangen Bereiche auch Maus- und Touchscreen-Eingaben."

msgid "StaticBody2D"
msgstr "StaticBody2D"

msgid ""
"A static body is one that is not moved by the physics engine. It "
"participates in collision detection, but does not move in response to the "
"collision. However, it can impart motion or rotation to a colliding body "
"**as if** it were moving, using its ``constant_linear_velocity`` and "
"``constant_angular_velocity`` properties."
msgstr ""
"Ein Static Body wird von der Physik-Engine nicht bewegt. Es nimmt an der "
"Kollisionserkennung teil, bewegt sich jedoch nicht als Reaktion auf die "
"Kollision. Er kann jedoch einem kollidierenden Körper Bewegung oder Rotation "
"verleihen **als ob** er sich bewegen würde, und zwar unter Verwendung seiner "
"Propertys ``constant_linear_velocity`` und ``constant_angular_velocity`` "
"(konstante lineare Geschwindigkeit und konstante Winkelgeschwindigkeit)."

msgid ""
"``StaticBody2D`` nodes are most often used for objects that are part of the "
"environment or that do not need to have any dynamic behavior."
msgstr ""
"`` StaticBody2D``-Nodes werden am häufigsten für Objekte verwendet, die Teil "
"der Umgebung sind oder kein dynamisches Verhalten benötigen."

msgid "Example uses for ``StaticBody2D``:"
msgstr "Beispiele für ``StaticBody2D``:"

msgid "Platforms (including moving platforms)"
msgstr "Plattformen (einschließlich beweglicher Plattformen)"

msgid "Conveyor belts"
msgstr "Förderbänder"

msgid "Walls and other obstacles"
msgstr "Wände und andere Hindernisse"

msgid "RigidBody2D"
msgstr "RigidBody2D"

msgid ""
"This is the node that implements simulated 2D physics. You do not control a :"
"ref:`RigidBody2D <class_RigidBody2D>` directly. Instead, you apply forces to "
"it and the physics engine calculates the resulting movement, including "
"collisions with other bodies, and collision responses, such as bouncing, "
"rotating, etc."
msgstr ""
"Dies ist der Node, der simulierte 2D-Physik implementiert. Sie steuern ein :"
"ref:`RigidBody2D <class_RigidBody2D>` nicht direkt. Stattdessen üben Sie "
"Kräfte darauf aus, und die Physik-Engine berechnet die resultierende "
"Bewegung, einschließlich Kollisionen mit anderen Körpern, und "
"Kollisionsreaktionen wie Abprallen, Rotation etc."

msgid ""
"You can modify a rigid body's behavior via properties such as \"Mass\", "
"\"Friction\", or \"Bounce\", which can be set in the Inspector."
msgstr ""
"Sie können das Verhalten eines Rigid Bodys über Eigenschaften wie \"Masse\", "
"\"Reibung\" oder \"Elastizität\" ändern, die im Inspektor eingestellt werden "
"können."

msgid ""
"The body's behavior is also affected by the world's properties, as set in "
"`Project Settings -> Physics`, or by entering an :ref:`Area2D "
"<class_Area2D>` that is overriding the global physics properties."
msgstr ""
"Das Verhalten des Bodys wird auch von den Eigenschaften der Welt "
"beeinflusst, wie unter `Projekteinstellungen -> Physik` festgelegt ist, oder "
"durch Eingabe eines :ref:`Area2D <class_Area2D>`, das die globalen Physik-"
"Eigenschaften überschreibt."

msgid ""
"When a rigid body is at rest and hasn't moved for a while, it goes to sleep. "
"A sleeping body acts like a static body, and its forces are not calculated "
"by the physics engine. The body will wake up when forces are applied, either "
"by a collision or via code."
msgstr ""
"Wenn ein Rigid Body in Ruhe ist und sich eine Weile nicht bewegt hat, legt "
"er sich schlafen. Ein schlafender Body wirkt wie ein Static Body und seine "
"Kräfte werden nicht von der Physik-Engine berechnet. Der Körper wacht auf, "
"wenn Kräfte angendet werden, entweder durch eine Kollision oder per Code."

msgid "Using RigidBody2D"
msgstr "Nutzung von RigidBody2D"

msgid ""
"One of the benefits of using a rigid body is that a lot of behavior can be "
"had \"for free\" without writing any code. For example, if you were making "
"an \"Angry Birds\"-style game with falling blocks, you would only need to "
"create RigidBody2Ds and adjust their properties. Stacking, falling, and "
"bouncing would automatically be calculated by the physics engine."
msgstr ""
"Einer der Vorteile der Verwendung eines Rigid Bodys besteht darin, dass "
"viele Verhaltensweisen \"kostenlos\" ausgeführt werden können, ohne dass "
"Code geschrieben werden muss. Wenn Sie beispielsweise ein Spiel im \"Angry "
"Birds\"-Stil mit fallenden Blöcken erstellen, müssen Sie nur RigidBody2Ds "
"erstellen und deren Eigenschaften anpassen. Das Stapeln, Fallen und "
"Abprallen wird automatisch von der Physik-Engine berechnet."

msgid ""
"However, if you do wish to have some control over the body, you should take "
"care - altering the ``position``, ``linear_velocity``, or other physics "
"properties of a rigid body can result in unexpected behavior. If you need to "
"alter any of the physics-related properties, you should use the :ref:"
"`_integrate_forces() <class_RigidBody2D_private_method__integrate_forces>` "
"callback instead of ``_physics_process()``. In this callback, you have "
"access to the body's :ref:`PhysicsDirectBodyState2D "
"<class_PhysicsDirectBodyState2D>`, which allows for safely changing "
"properties and synchronizing them with the physics engine."
msgstr ""
"Wenn Sie jedoch eine gewisse Kontrolle über den Body haben wollen, sollten "
"Sie vorsichtig sein - das Ändern der ``position``, ``linear_velocity`` oder "
"anderer Physik-Propertys eines Rigid Bodys kann zu unerwartetem Verhalten "
"führen. Wenn Sie eine der physikbezogenen Propertys ändern müssen, sollten "
"Sie den :ref:`_integrate_forces() "
"<class_RigidBody2D_private_method__integrate_forces>`-Callback anstelle von "
"``_physics_process()`` verwenden. In diesem Callback hat man Zugriff auf "
"den :ref:`PhysicsDirectBodyState2D <class_PhysicsDirectBodyState2D>` des "
"Bodys, was eine sichere Änderung von Propertys und deren Synchronisation mit "
"der Physik-Engine ermöglicht."

msgid "For example, here is the code for an \"Asteroids\" style spaceship:"
msgstr ""
"Hier ist zum Beispiel der Code für ein Raumschiff im \"Asteroids\"-Stil:"

msgid ""
"Note that we are not setting the ``linear_velocity`` or ``angular_velocity`` "
"properties directly, but rather applying forces (``thrust`` and ``torque``) "
"to the body and letting the physics engine calculate the resulting movement."
msgstr ""
"Beachten Sie, dass wir die Propertys ``linear_velocity`` oder "
"``angular_velocity`` nicht direkt einstellen, sondern Kräfte (``thrust`` und "
"``torque`` - \"Schub\" und \"Drehmoment\") auf den Körper ausüben, und die "
"Physik-Engine die resultierende Bewegung berechnet ."

msgid ""
"When a rigid body goes to sleep, the ``_integrate_forces()`` function will "
"not be called. To override this behavior, you will need to keep the body "
"awake by creating a collision, applying a force to it, or by disabling the :"
"ref:`can_sleep <class_RigidBody2D_property_can_sleep>` property. Be aware "
"that this can have a negative effect on performance."
msgstr ""
"Wenn sich ein Rigid Body schlafen legt, wird die Funktion "
"``_integrate_forces()`` nicht aufgerufen. Um dieses Verhalten zu "
"überschreiben, müssen Sie den Körper wach halten, indem Sie eine Kollision "
"erstellen, eine Kraft auf ihn ausüben oder die Property :ref:`can_sleep "
"<class_RigidBody2D_property_can_sleep>` deaktivieren. Beachten Sie, dass "
"sich dies negativ auf die Performance auswirken kann."

msgid "Contact reporting"
msgstr "Kontakt-Meldungen"

msgid ""
"By default, rigid bodies do not keep track of contacts, because this can "
"require a huge amount of memory if many bodies are in the scene. To enable "
"contact reporting, set the :ref:`max_contacts_reported "
"<class_RigidBody2D_property_max_contacts_reported>` property to a non-zero "
"value. The contacts can then be obtained via :ref:`PhysicsDirectBodyState2D."
"get_contact_count() "
"<class_PhysicsDirectBodyState2D_method_get_contact_count>` and related "
"functions."
msgstr ""
"Standardmäßig behalten Rigid Bodys keine Kontakte im Auge, da dies bei "
"vielen Bodys in der Szene sehr viel Speicherplatz beanspruchen kann. Um die "
"Kontakt-Meldungen zu aktivieren, setzen Sie die Property :ref:"
"`max_contacts_reported <class_RigidBody2D_property_max_contacts_reported>` "
"auf einen Wert ungleich Null. Die Kontakte können dann über :ref:"
"`PhysicsDirectBodyState2D.get_contact_count() "
"<class_PhysicsDirectBodyState2D_method_get_contact_count>` und verwandte "
"Funktionen ermittelt werden."

msgid ""
"Contact monitoring via signals can be enabled via the :ref:`contact_monitor "
"<class_RigidBody2D_property_contact_monitor>` property. See :ref:"
"`RigidBody2D <class_RigidBody2D>` for the list of available signals."
msgstr ""
"Die Kontaktüberwachung über Signale kann über die Property :ref:"
"`contact_monitor <class_RigidBody2D_property_contact_monitor>` aktiviert "
"werden. Eine Liste der verfügbaren Signale finden Sie unter :ref:"
"`RigidBody2D <class_RigidBody2D>`."

msgid "CharacterBody2D"
msgstr "CharacterBody2D"

msgid ""
":ref:`CharacterBody2D <class_CharacterBody2D>` bodies detect collisions with "
"other bodies, but are not affected by physics properties like gravity or "
"friction. Instead, they must be controlled by the user via code. The physics "
"engine will not move a character body."
msgstr ""
":ref:`CharacterBody2D <class_CharacterBody2D>`-Bodys erkennen Kollisionen "
"mit anderen Bodys, werden aber nicht von physikalischen Eigenschaften wie "
"Schwerkraft oder Reibung beeinflusst. Stattdessen müssen sie vom Benutzer "
"durch Code gesteuert werden. Die Physik-Engine wird einen Character Body "
"nicht bewegen."

msgid ""
"When moving a character body, you should not set its ``position`` directly. "
"Instead, you use the ``move_and_collide()`` or ``move_and_slide()`` methods. "
"These methods move the body along a given vector, and it will instantly stop "
"if a collision is detected with another body. After the body has collided, "
"any collision response must be coded manually."
msgstr ""
"Wenn man einen Character Body bewegt, sollte man seine ``position`` nicht "
"direkt setzen. Stattdessen benutzen Sie die Methoden ``move_and_collide()`` "
"oder ``move_and_slide()``. Diese Methoden bewegen den Body entlang eines "
"gegebenen Vektors, und er hält sofort an, wenn eine Kollision mit einem "
"anderen Body festgestellt wird. Nachdem der Body kollidiert ist, muss jede "
"Kollisionsreaktion manuell kodiert werden."

msgid "Character collision response"
msgstr "Character-Kollisions-Reaktion"

msgid ""
"After a collision, you may want the body to bounce, to slide along a wall, "
"or to alter the properties of the object it hit. The way you handle "
"collision response depends on which method you used to move the "
"CharacterBody2D."
msgstr ""
"Nach einer Kollision möchten Sie vielleicht, dass der Body abprallt, an "
"einer Wand entlang gleitet oder die Eigenschaften des getroffenen Objekts "
"ändert. Die Art und Weise, wie Sie die Kollisionsreaktion behandeln, hängt "
"davon ab, welche Methode Sie zum Bewegen des CharacterBody2D verwendet haben."

msgid ":ref:`move_and_collide <class_PhysicsBody2D_method_move_and_collide>`"
msgstr ":ref:`move_and_collide <class_PhysicsBody2D_method_move_and_collide>`"

msgid ""
"When using ``move_and_collide()``, the function returns a :ref:"
"`KinematicCollision2D <class_KinematicCollision2D>` object, which contains "
"information about the collision and the colliding body. You can use this "
"information to determine the response."
msgstr ""
"Bei Verwendung von ``move_and_collide()`` gibt die :ref:"
"`KinematicCollision2D <class_KinematicCollision2D>`-Funktion ein Objekt "
"zurück, das Informationen über die Kollision und den kollidierenden Body "
"enthält. Sie können diese Informationen verwenden, um die Reaktion zu "
"bestimmen."

msgid ""
"For example, if you want to find the point in space where the collision "
"occurred:"
msgstr ""
"Wenn Sie beispielsweise den Punkt im Raum suchen möchten, an dem die "
"Kollision aufgetreten ist:"

msgid "Or to bounce off of the colliding object:"
msgstr "Oder um vom kollidierenden Objekt abzuprallen:"

msgid ":ref:`move_and_slide <class_CharacterBody2D_method_move_and_slide>`"
msgstr ":ref:`move_and_slide <class_CharacterBody2D_method_move_and_slide>`"

msgid ""
"Sliding is a common collision response; imagine a player moving along walls "
"in a top-down game or running up and down slopes in a platformer. While it's "
"possible to code this response yourself after using ``move_and_collide()``, "
"``move_and_slide()`` provides a convenient way to implement sliding movement "
"without writing much code."
msgstr ""
"Gleiten ist eine häufige Kollisionsreaktion. Stellen Sie sich einen Spieler "
"vor, der sich in einem Top-Down-Spiel an Wänden entlang bewegt oder in einem "
"Plattformer an Schrägen auf und ab läuft. Während es möglich ist, diese "
"Reaktion nach der Verwendung von ``move_and_collide()`` selbst zu "
"programmieren, bietet ``move_and_slide()`` eine bequeme Möglichkeit, eine "
"Gleitbewegung zu implementieren, ohne viel Code zu schreiben."

msgid ""
"``move_and_slide()`` automatically includes the timestep in its calculation, "
"so you should **not** multiply the velocity vector by ``delta``."
msgstr ""
"``move_and_slide()`` bezieht automatisch den Zeitschritt in seine Berechnung "
"ein, daher sollten Sie den Geschwindigkeitsvektor **nicht** mit ``delta`` "
"multiplizieren."

msgid ""
"For example, use the following code to make a character that can walk along "
"the ground (including slopes) and jump when standing on the ground:"
msgstr ""
"Verwenden Sie beispielsweise den folgenden Code, um einen Charakter zu "
"erstellen, der über den Boden laufen (einschließlich Schrägen) und auch "
"springen kann, wenn er auf dem Boden steht:"

msgid ""
"See :ref:`doc_kinematic_character_2d` for more details on using "
"``move_and_slide()``, including a demo project with detailed code."
msgstr ""
"Siehe :ref:`doc_kinematic_character_2d` für weitere Details zur Verwendung "
"von ``move_and_slide()``, einschließlich eines Demo-Projekts mit "
"detailliertem Code."

msgid "Translation status"
msgstr "Übersetzungsstatus"
