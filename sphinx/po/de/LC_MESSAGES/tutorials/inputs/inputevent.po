# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using InputEvent"
msgstr "Verwendung von InputEvent"

msgid "What is it?"
msgstr "Was ist das?"

msgid ""
"Managing input is usually complex, no matter the OS or platform. To ease "
"this a little, a special built-in type is provided, :ref:`InputEvent "
"<class_InputEvent>`. This datatype can be configured to contain several "
"types of input events. Input events travel through the engine and can be "
"received in multiple locations, depending on the purpose."
msgstr ""
"Das Verwalten von Eingaben ist normalerweise komplex, unabhängig vom "
"Betriebssystem oder der Plattform. Um dies ein wenig zu vereinfachen, wird "
"ein spezieller Built-in-Typ bereitgestellt :ref:`InputEvent "
"<class_InputEvent>`. Dieser Datentyp kann so konfiguriert werden, dass er "
"verschiedene Arten von Eingabeereignissen enthält. Eingabeereignisse laufen "
"durch die Engine und können je nach Zweck an mehreren Orten empfangen werden."

msgid "Here is a quick example, closing your game if the escape key is hit:"
msgstr ""
"Hier ist ein kurzes Beispiel, dass das Spiel beendet, sobald die Escape-"
"Taste gedrückt wird:"

msgid ""
"However, it is cleaner and more flexible to use the provided :ref:`InputMap "
"<class_InputMap>` feature, which allows you to define input actions and "
"assign them different keys. This way, you can define multiple keys for the "
"same action (e.g. the keyboard escape key and the start button on a "
"gamepad). You can then more easily change this mapping in the project "
"settings without updating your code, and even build a key mapping feature on "
"top of it to allow your game to change the key mapping at runtime!"
msgstr ""
"Es ist jedoch sauberer und flexibler, die bereitgestellte Funktion :ref:"
"`InputMap <class_InputMap>` zu verwenden, mit der Sie Eingabeaktionen "
"definieren und ihnen verschiedene Tasten zuweisen können. Auf diese Weise "
"können Sie mehrere Tasten für dieselbe Aktion definieren (z.B. die Escape-"
"Taste auf der Tastatur und den Start-Button auf einem Gamepad). Sie können "
"diese Zuordnung dann einfacher in den Projekteinstellungen ändern, ohne "
"Ihren Code zu aktualisieren, und sogar eine Tastenzuordnung darüber "
"erstellen, damit Ihr Spiel diese Zuordnung zur Laufzeit ändern kann!"

msgid ""
"You can set up your InputMap under **Project > Project Settings > Input "
"Map** and then use those actions like this:"
msgstr ""
"Sie können Ihre InputMap unter **Projekt > Projekt Einstellungen > Eingabe-"
"Zuordnung** einrichten und dann die folgenden Aktionen ausführen:"

msgid "How does it work?"
msgstr "Wie funktioniert es?"

msgid ""
"Every input event is originated from the user/player (though it's possible "
"to generate an InputEvent and feed them back to the engine, which is useful "
"for gestures). The DisplayServer for each platform will read events from the "
"operating system, then feed them to the root :ref:`Window <class_Window>`."
msgstr ""
"Jedes Eingabeereignis geht vom Benutzer/Spieler aus (obwohl es möglich ist, "
"ein InputEvent zu generieren und es an die Engine zurückzugeben, was für "
"Gesten nützlich ist). Der DisplayServer für jede Plattform liest Ereignisse "
"vom Betriebssystem und leitet sie dann an das Root-:ref:`Fenster "
"<class_Window>` weiter."

msgid ""
"The window's :ref:`Viewport <class_Viewport>` does quite a lot of stuff with "
"the received input, in order:"
msgstr ""
"Der :ref:`Viewport <class_Viewport>` des Fensters macht eine ganze Menge "
"Dinge mit den empfangenen Eingaben, der Reihe nach:"

msgid ""
"If the Viewport is embedding Windows, the Viewport tries to interpret the "
"event in its capability as a Window-Manager (e.g. for resizing or moving "
"Windows)."
msgstr ""
"Wenn das Viewport Fenster einbettet, versucht das Viewport das Event in "
"seiner Funktion als Window-Manager zu interpretieren (z.B. für "
"Größenänderung oder Verschieben von Fenstern)."

msgid ""
"Next if an embedded Window is focused, the event is sent to that Window and "
"processed in the Windows Viewport and afterwards treated as handled. If no "
"embedded Window is focused, the event is sent to the nodes of the current "
"viewport in the following order."
msgstr ""
"Wenn ein eingebettetes Fenster fokussiert ist, wird das Event an dieses "
"Fenster gesendet, im Fenster-Viewport verarbeitet und anschließend als "
"behandelt betrachtet. Wenn kein eingebettetes Fenster fokussiert ist, wird "
"das Event an die Nodes des aktuellen Viewports in der folgenden Reihenfolge "
"gesendet."

msgid ""
"First of all, the standard :ref:`Node._input() "
"<class_Node_private_method__input>` function will be called in any node that "
"overrides it (and hasn't disabled input processing with :ref:`Node."
"set_process_input() <class_Node_method_set_process_input>`). If any function "
"consumes the event, it can call :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>`, and the event will not spread "
"any more. This ensures that you can filter all events of interest, even "
"before the GUI. For gameplay input, :ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>` is generally a better fit, "
"because it allows the GUI to intercept the events."
msgstr ""
"Zunächst einmal wird die Standardfunktion :ref:`Node._input() "
"<class_Node_private_method__input>` in jedem Node aufgerufen, der sie "
"überschreibt (und die Eingabeverarbeitung nicht mit :ref:`Node."
"set_process_input() <class_Node_method_set_process_input>` deaktiviert hat). "
"Wenn eine Funktion das Ereignis konsumiert, kann sie :ref:`Viewport."
"set_input_as_handled() <class_Viewport_method_set_input_as_handled>` "
"aufrufen, und das Ereignis wird nicht mehr verbreitet. Dies stellt sicher, "
"dass Sie alle Ereignisse von Interesse filtern können, sogar vor der GUI. "
"Für Gameplay-Eingaben ist :ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>` im Allgemeinen besser "
"geeignet, weil es der GUI erlaubt, die Ereignisse abzufangen."

msgid ""
"Second, it will try to feed the input to the GUI, and see if any control can "
"receive it. If so, the :ref:`Control <class_Control>` will be called via the "
"virtual function :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>` and the signal \"gui_input\" will "
"be emitted (this function is re-implementable by script by inheriting from "
"it). If the control wants to \"consume\" the event, it will call :ref:"
"`Control.accept_event() <class_Control_method_accept_event>` and the event "
"will not spread any more. Use the :ref:`Control.mouse_filter "
"<class_Control_property_mouse_filter>` property to control whether a :ref:"
"`Control <class_Control>` is notified of mouse events via :ref:`Control."
"_gui_input() <class_Control_private_method__gui_input>` callback, and "
"whether these events are propagated further."
msgstr ""
"Zweitens wird versucht, die Eingabe an die GUI weiterzuleiten und zu sehen, "
"ob irgendein Control sie empfangen kann. Wenn ja, wird das :ref:`Control "
"<class_Control>` über die virtuelle Funktion :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>` aufgerufen und das Signal "
"\"gui_input\" wird ausgesendet (diese Funktion kann von Skripten durch "
"Vererbung neu implementiert werden). Wenn das Control das Event "
"\"konsumieren\" will, ruft es :ref:`Control.accept_event() "
"<class_Control_method_accept_event>` auf und das Event wird nicht mehr "
"verbreitet. Mit der Property :ref:`Control.mouse_filter "
"<class_Control_property_mouse_filter>` können Sie steuern, ob ein :ref:"
"`Control <class_Control>` über Mausereignisse per :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>`-Callback benachrichtigt wird und "
"ob diese Ereignisse weiter verbreitet werden."

msgid ""
"If so far no one consumed the event, the :ref:`Node._shortcut_input() "
"<class_Node_private_method__shortcut_input>` callback will be called if "
"overridden (and not disabled with :ref:`Node.set_process_shortcut_input() "
"<class_Node_method_set_process_shortcut_input>`). This happens only for :ref:"
"`InputEventKey <class_InputEventKey>`, :ref:`InputEventShortcut "
"<class_InputEventShortcut>` and :ref:`InputEventJoypadButton "
"<class_InputEventJoypadButton>`. If any function consumes the event, it can "
"call :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>`, and the event will not spread "
"any more. The shortcut input callback is ideal for treating events that are "
"intended as shortcuts."
msgstr ""
"Wenn bisher niemand das Event konsumiert hat, wird der :ref:`Node."
"_shortcut_input() <class_Node_private_method__shortcut_input>`-Callback "
"aufgerufen, falls überschrieben (und nicht mit :ref:`Node."
"set_process_shortcut_input() <class_Node_method_set_process_shortcut_input>` "
"deaktiviert). Dies geschieht nur für :ref:`InputEventKey "
"<class_InputEventKey>`, :ref:`InputEventShortcut <class_InputEventShortcut>` "
"und :ref:`InputEventJoypadButton <class_InputEventJoypadButton>`. Wenn eine "
"Funktion das Event konsumiert, kann sie :ref:`Viewport."
"set_input_as_handled() <class_Viewport_method_set_input_as_handled>` "
"aufrufen, und das Event wird nicht mehr verbreitet. Der Tastenkürzel-Input-"
"Callback ist ideal für die Behandlung von Ereignissen, die als Tastenkürzel "
"gedacht sind."

msgid ""
"If so far no one consumed the event, the :ref:`Node._unhandled_key_input() "
"<class_Node_private_method__unhandled_key_input>` callback will be called if "
"overridden (and not disabled with :ref:`Node."
"set_process_unhandled_key_input() "
"<class_Node_method_set_process_unhandled_key_input>`). This happens only if "
"the event is a :ref:`InputEventKey <class_InputEventKey>`. If any function "
"consumes the event, it can call :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>`, and the event will not spread "
"any more. The unhandled key input callback is ideal for key events."
msgstr ""
"Wenn bisher niemand das Event konsumiert hat, wird der :ref:`Node."
"_unhandled_key_input() <class_Node_private_method__unhandled_key_input>`-"
"Callback aufgerufen, falls überschrieben (und nicht mit :ref:`Node."
"set_process_unhandled_key_input() "
"<class_Node_method_set_process_unhandled_key_input>` deaktiviert). Dies "
"geschieht nur, wenn das Event ein :ref:`InputEventKey <class_InputEventKey>` "
"ist. Wenn eine Funktion das Event konsumiert, kann sie :ref:`Viewport."
"set_input_as_handled() <class_Viewport_method_set_input_as_handled>` "
"aufrufen, und das Event wird nicht mehr verbreitet. Der Callback für "
"unbehandelte Tasteneingaben ist ideal für Tasten-Events."

msgid ""
"If so far no one consumed the event, the :ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>` callback will be called if "
"overridden (and not disabled with :ref:`Node.set_process_unhandled_input() "
"<class_Node_method_set_process_unhandled_input>`). If any function consumes "
"the event, it can call :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>`, and the event will not spread "
"any more. The unhandled input callback is ideal for full-screen gameplay "
"events, so they are not received when a GUI is active."
msgstr ""
"Wenn bisher niemand das Event konsumiert hat, wird der :ref:`Node."
"_unhandled_input() <class_Node_private_method__unhandled_input>`-Callback "
"aufgerufen, wenn er überschrieben ist (und nicht mit :ref:`Node."
"set_process_unhandled_input() "
"<class_Node_method_set_process_unhandled_input>` deaktiviert wurde). Wenn "
"eine Funktion das Event konsumiert, kann sie :ref:`Viewport."
"set_input_as_handled() <class_Viewport_method_set_input_as_handled>` "
"aufrufen, und das Event wird nicht mehr weitergegeben. Der unbehandelte "
"Eingabe-Callback ist ideal für Vollbild-Gameplay-Ereignisse, damit sie nicht "
"empfangen werden, wenn eine GUI aktiv ist."

#, fuzzy
msgid ""
"If no one wanted the event so far, and :ref:`Object Picking "
"<class_viewport_property_physics_object_picking>` is turned on, the event is "
"used for object picking. For the root viewport, this can also be enabled in :"
"ref:`Project Settings <class_ProjectSettings_property_physics/common/"
"enable_object_picking>`. In the case of a 3D scene if a :ref:`Camera3D "
"<class_Camera3D>` is assigned to the Viewport, a ray to the physics world "
"(in the ray direction from the click) will be cast. If this ray hits an "
"object, it will call the :ref:`CollisionObject3D._input_event() "
"<class_CollisionObject3D_private_method__input_event>` function in the "
"relevant physics object. In the case of a 2D scene, conceptually the same "
"happens with :ref:`CollisionObject2D._input_event() "
"<class_CollisionObject2D_private_method__input_event>`."
msgstr ""
"Wenn niemand das Event bisher wollte, und :ref:`Object Picking "
"<class_viewport_property_physics_object_picking>` eingeschaltet ist, wird "
"das Event für das Object Picking verwendet. Für den Root-Viewport kann dies "
"auch in :ref:`Projekteinstellungen <class_ProjectSettings_property_physics/"
"common/enable_object_picking>` aktiviert werden. Im Falle einer 3D-Szene, "
"wenn dem Viewport eine :ref:`Camera3D <class_Camera3D>` zugewiesen ist, wird "
"ein Strahl in die Physikwelt (in Strahlrichtung des Klicks) geworfen. Wenn "
"dieser Strahl ein Objekt trifft, wird die Funktion :ref:`CollisionObject3D."
"_input_event() <class_CollisionObject3D_private_method__input_event>` im "
"entsprechenden Physikobjekt aufgerufen (Bodys erhalten diesen Callback "
"standardmäßig, Areas jedoch nicht. Dies kann durch die :ref:`Area3D "
"<class_Area3D>`-Propertys konfiguriert werden). Im Falle einer 2D-Szene "
"geschieht konzeptionell dasselbe mit :ref:`CollisionObject2D._input_event() "
"<class_CollisionObject2D_private_method__input_event>`."

msgid ""
"When sending events to its child and descendant nodes, the viewport will do "
"so, as depicted in the following graphic, in a reverse depth-first order, "
"starting with the node at the bottom of the scene tree, and ending at the "
"root node. Excluded from this process are Windows and SubViewports."
msgstr ""
"Wenn der Viewport Events an seine Child- und darunter liegenden Nodes "
"sendet, geschieht dies, wie in der folgenden Grafik dargestellt, in "
"umgekehrter Reihenfolge, beginnend mit dem Node am unteren Ende des "
"Szenenbaums und endend mit dem Root Node. Ausgenommen von diesem Prozess "
"sind Fenster und SubViewports."

msgid ""
"This order doesn't apply to :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>`, which uses a different method "
"based on event location or focused Control."
msgstr ""
"Diese Reihenfolge gilt nicht für :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>`, die je nach Event-Ort oder "
"fokussiertem Control eine andere Methode verwendet."

msgid ""
"Since Viewports don't send events to other :ref:`SubViewports "
"<class_SubViewport>`, one of the following methods has to be used:"
msgstr ""
"Da die Viewports keine Events an andere :ref:`SubViewports "
"<class_SubViewport>` senden, muss eine der folgenden Methoden verwendet "
"werden:"

msgid ""
"Use a :ref:`SubViewportContainer <class_SubViewportContainer>`, which "
"automatically sends events to its child :ref:`SubViewports "
"<class_SubViewport>` after :ref:`Node._input() "
"<class_Node_private_method__input>` or :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>`."
msgstr ""
"Verwenden Sie einen :ref:`SubViewportContainer "
"<class_SubViewportContainer>`, der automatisch Events an seine "
"untergeordneten :ref:`SubViewports <class_SubViewport>` nach :ref:`Node."
"_input() <class_Node_private_method__input>` oder :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>` sendet."

msgid "Implement event propagation based on the individual requirements."
msgstr ""
"Implementierung der Event-Propagation auf der Grundlage der individuellen "
"Anforderungen."

msgid ""
"GUI events also travel up the scene tree but, since these events target "
"specific Controls, only direct ancestors of the targeted Control node "
"receive the event."
msgstr ""
"GUI-Events werden auch im Szenenbaum angezeigt. Da diese Events jedoch auf "
"bestimmte Controls abzielen, erhalten nur direkte Vorfahren des als Ziel "
"gesetzten Control-Nodes das Event."

msgid ""
"In accordance with Godot's node-based design, this enables specialized child "
"nodes to handle and consume particular events, while their ancestors, and "
"ultimately the scene root, can provide more generalized behavior if needed."
msgstr ""
"In Übereinstimmung mit dem Node-basierten Design von Godot können "
"spezialisierte Child-Nodes bestimmte Events verarbeiten, während ihre "
"Vorfahren und letztendlich der Szenen-Root bei Bedarf ein allgemeineres "
"Verhalten liefern können."

msgid "Anatomy of an InputEvent"
msgstr "Anatomie eines InputEvents"

msgid ""
":ref:`InputEvent <class_InputEvent>` is just a base built-in type, it does "
"not represent anything and only contains some basic information, such as "
"event ID (which is increased for each event), device index, etc."
msgstr ""
":ref:`InputEvent <class_InputEvent>` ist nur ein Built-in-Basistyp, stellt "
"nichts dar und enthält nur einige grundlegende Informationen wie die Event-"
"ID (die für jedes Event erhöht wird), den Geräteindex usw."

msgid ""
"There are several specialized types of InputEvent, described in the table "
"below:"
msgstr ""
"Es gibt verschiedene spezielle Arten von Eingabe-Events, die in der "
"folgenden Tabelle beschrieben werden:"

msgid "Event"
msgstr "Event"

msgid "Description"
msgstr "Beschreibung"

msgid ":ref:`InputEvent <class_InputEvent>`"
msgstr ":ref:`InputEvent <class_InputEvent>`"

msgid "Empty Input Event."
msgstr "Leeres Eingabe-Event."

msgid ":ref:`InputEventKey <class_InputEventKey>`"
msgstr ":ref:`InputEventKey <class_InputEventKey>`"

msgid "Contains a keycode and Unicode value, as well as modifiers."
msgstr "Enthält einen Tasten-Code und einen Unicode-Wert sowie Modifikatoren."

msgid ":ref:`InputEventMouseButton <class_InputEventMouseButton>`"
msgstr ":ref:`InputEventMouseButton <class_InputEventMouseButton>`"

msgid "Contains click information, such as button, modifiers, etc."
msgstr "Enthält Klickinformationen, z. B. Button, Modifikatoren usw."

msgid ":ref:`InputEventMouseMotion <class_InputEventMouseMotion>`"
msgstr ":ref:`InputEventMouseMotion <class_InputEventMouseMotion>`"

msgid ""
"Contains motion information, such as relative and absolute positions and "
"speed."
msgstr ""
"Enthält Bewegungsinformationen, wie z.B. relative und absolute Positionen "
"und Geschwindigkeit."

msgid ":ref:`InputEventJoypadMotion <class_InputEventJoypadMotion>`"
msgstr ":ref:`InputEventJoypadMotion <class_InputEventJoypadMotion>`"

msgid "Contains Joystick/Joypad analog axis information."
msgstr "Enthält Informationen zu den analogen Joystick/Joypad-Achsen."

msgid ":ref:`InputEventJoypadButton <class_InputEventJoypadButton>`"
msgstr ":ref:`InputEventJoypadButton <class_InputEventJoypadButton>`"

msgid "Contains Joystick/Joypad button information."
msgstr "Enthält Informationen zu Joystick-/Joypad-Buttons."

msgid ":ref:`InputEventScreenTouch <class_InputEventScreenTouch>`"
msgstr ":ref:`InputEventScreenTouch <class_InputEventScreenTouch>`"

msgid ""
"Contains multi-touch press/release information. (only available on mobile "
"devices)"
msgstr ""
"Enthält Multi-Touch-Informationen für Drücken/Loslassen. (nur auf "
"Mobilgeräten verfügbar)"

msgid ":ref:`InputEventScreenDrag <class_InputEventScreenDrag>`"
msgstr ":ref:`InputEventScreenDrag <class_InputEventScreenDrag>`"

msgid ""
"Contains multi-touch drag information. (only available on mobile devices)"
msgstr ""
"Enthält Informationen zum Multi-Touch-Ziehen (nur auf Mobilgeräten verfügbar)"

msgid ":ref:`InputEventMagnifyGesture <class_InputEventMagnifyGesture>`"
msgstr ":ref:`InputEventMagnifyGesture <class_InputEventMagnifyGesture>`"

msgid "Contains a position, a factor as well as modifiers."
msgstr "Enthält eine Position, einen Faktor sowie Modifikatoren."

msgid ":ref:`InputEventPanGesture <class_InputEventPanGesture>`"
msgstr ":ref:`InputEventPanGesture <class_InputEventPanGesture>`"

msgid "Contains a position, a delta as well as modifiers."
msgstr "Enthält eine Position, ein Delta sowie Modifikatoren."

msgid ":ref:`InputEventMIDI <class_InputEventMIDI>`"
msgstr ":ref:`InputEventMIDI <class_InputEventMIDI>`"

msgid "Contains MIDI-related information."
msgstr "Enthält MIDI-bezogene Informationen."

msgid ":ref:`InputEventShortcut <class_InputEventShortcut>`"
msgstr ":ref:`InputEventShortcut <class_InputEventShortcut>`"

msgid "Contains a shortcut."
msgstr "Enthält ein Tastenkürzel."

msgid ":ref:`InputEventAction <class_InputEventAction>`"
msgstr ":ref:`InputEventAction <class_InputEventAction>`"

msgid ""
"Contains a generic action. These events are often generated by the "
"programmer as feedback. (more on this below)"
msgstr ""
"Enthält eine generische Aktion. Diese Events werden häufig vom Programmierer "
"als Feedback generiert. (mehr dazu weiter unten)"

msgid "Actions"
msgstr "Aktionen"

msgid ""
"Actions are a grouping of zero or more InputEvents into a commonly "
"understood title (for example, the default \"ui_left\" action grouping both "
"joypad-left input and a keyboard's left arrow key). They are not required to "
"represent an InputEvent but are useful because they abstract various inputs "
"when programming the game logic."
msgstr ""
"Aktionen sind eine Gruppierung von null oder mehr InputEvents zu einem "
"allgemein verständlichen Titel (z.B. die Default-Aktion \"ui_left\", die "
"sowohl die Joypad-Links-Eingabe als auch die linke Pfeiltaste der Tastatur "
"gruppiert). Sie sind nicht erforderlich, um ein InputEvent darzustellen, "
"sind aber nützlich, weil sie verschiedene Eingaben bei der Programmierung "
"der Spiellogik abstrahieren."

msgid "This allows for:"
msgstr "Dies ermöglicht:"

msgid ""
"The same code to work on different devices with different inputs (e.g., "
"keyboard on PC, Joypad on console)."
msgstr ""
"Derselbe Code funktioniert für verschiedene Geräte mit unterschiedlichen "
"Eingaben (z.B. Tastatur auf dem PC, Joypad auf Konsolen)."

msgid "Input to be reconfigured at run-time."
msgstr "Eingaben, die zur Laufzeit neu konfiguriert werden sollen."

msgid "Actions to be triggered programmatically at run-time."
msgstr "Aktionen, die zur Laufzeit programmatisch ausgelöst werden sollen."

msgid ""
"Actions can be created from the Project Settings menu in the **Input Map** "
"tab and assigned input events."
msgstr ""
"Aktionen können über das Menü Projekteinstellungen auf dem Tab **Eingabe-"
"Zuordnung** erstellt und Eingabe-Events zugewiesen werden."

msgid ""
"Any event has the methods :ref:`InputEvent.is_action() "
"<class_InputEvent_method_is_action>`, :ref:`InputEvent.is_pressed() "
"<class_InputEvent_method_is_pressed>` and :ref:`InputEvent "
"<class_InputEvent>`."
msgstr ""
"Jedes Event hat die Methoden :ref:`InputEvent.is_action() "
"<class_InputEvent_method_is_action>`, :ref:`InputEvent.is_pressed() "
"<class_InputEvent_method_is_pressed>` und :ref:`InputEvent "
"<class_InputEvent>`."

msgid ""
"Alternatively, it may be desired to supply the game back with an action from "
"the game code (a good example of this is detecting gestures). The Input "
"singleton has a method for this: :ref:`Input.parse_input_event() "
"<class_input_method_parse_input_event>`. You would normally use it like this:"
msgstr ""
"Alternativ kann es gewünscht sein, dem Spiel eine Aktion aus dem Spielcode "
"zurückzuliefern (ein gutes Beispiel dafür ist die Erkennung von Gesten). Das "
"Input-Singleton hat eine Methode dafür: :ref:`Input.parse_input_event() "
"<class_input_method_parse_input_event>`. Normalerweise würden Sie sie wie "
"folgt verwenden:"

msgid "InputMap"
msgstr "InputMap"

msgid ""
"Customizing and re-mapping input from code is often desired. If your whole "
"workflow depends on actions, the :ref:`InputMap <class_InputMap>` singleton "
"is ideal for reassigning or creating different actions at run-time. This "
"singleton is not saved (must be modified manually) and its state is run from "
"the project settings (project.godot). So any dynamic system of this type "
"needs to store settings in the way the programmer best sees fit."
msgstr ""
"Die Anpassung und Neuzuordnung von Eingaben aus dem Code ist oft gewünscht. "
"Wenn Ihr gesamter Workflow von Aktionen abhängt, ist das Singleton :ref:"
"`InputMap <class_InputMap>` ideal für die Neuzuweisung oder Erstellung "
"verschiedener Aktionen zur Laufzeit. Dieses Singleton wird nicht gespeichert "
"(es muss manuell geändert werden) und sein Zustand wird über die "
"Projekteinstellungen (project.godot) gesteuert. Daher muss jedes dynamische "
"System dieser Art die Einstellungen so speichern, wie es der Programmierer "
"für richtig hält."

msgid "Translation status"
msgstr "Übersetzungsstatus"
