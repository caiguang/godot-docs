# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Scene organization"
msgstr "Szenenorganisation"

msgid ""
"This article covers topics related to the effective organization of scene "
"content. Which nodes should one use? Where should one place them? How should "
"they interact?"
msgstr ""
"Dieser Artikel behandelt Themen im Zusammenhang mit der effektiven "
"Organisation von Szeneninhalten. Welche Nodes sollte man verwenden? Wo "
"sollte man sie platzieren? Wie sollten sie interagieren?"

msgid "How to build relationships effectively"
msgstr "Wie man effektiv Beziehungen aufbaut"

msgid ""
"When Godot users begin crafting their own scenes, they often run into the "
"following problem:"
msgstr ""
"Wenn Godot-Anwender beginnen, ihre eigenen Szenen zu erstellen, stoßen sie "
"häufig auf das folgende Problem:"

msgid ""
"They create their first scene and fill it with content only to eventually "
"end up saving branches of their scene into separate scenes as the nagging "
"feeling that they should split things up starts to accumulate. However, they "
"then notice that the hard references they were able to rely on before are no "
"longer possible. Re-using the scene in multiple places creates issues "
"because the node paths do not find their targets and signal connections "
"established in the editor break."
msgstr ""
"Sie erstellen ihre erste Szene und füllen sie mit Inhalten, um dann "
"irgendwann Teile ihrer Szene in separate Szenen zu speichern, da sich im "
"Laufe der Zeit das Gefühl einstellt, dass sie die Dinge aufteilen sollten. "
"Dann stellen sie jedoch fest, dass die direkten Verweise, auf die sie sich "
"zuvor verlassen konnten, nicht mehr möglich sind. Die Wiederverwendung der "
"Szene an mehreren Stellen führt zu Problemen, da die Node-Pfade nicht mehr "
"ihre Ziele finden und Signalverbindungen, die im Editor erstellt wurde, "
"abbrechen."

msgid ""
"To fix these problems, one must instantiate the sub-scenes without them "
"requiring details about their environment. One needs to be able to trust "
"that the sub-scene will create itself without being picky about how one uses "
"it."
msgstr ""
"Um diese Probleme zu beheben, muss man die Unterszenen so instanziieren, "
"dass sie keine Details zu ihrer Umgebung benötigen. Man muss darauf "
"vertrauen können, dass sich die Unterszene selbst erstellt, ohne wählerisch "
"damit zu sein, wie man sie verwendet."

msgid ""
"One of the biggest things to consider in OOP is maintaining focused, "
"singular-purpose classes with `loose coupling <https://en.wikipedia.org/wiki/"
"Loose_coupling>`_ to other parts of the codebase. This keeps the size of "
"objects small (for maintainability) and improves their reusability."
msgstr ""
"Eines der wichtigsten Dinge, die bei OOP berücksichtigt werden müssen, ist "
"die Beibehaltung konzentrierter Einzweck-Klassen mit `loser Kopplung "
"<https://de.wikipedia.org/wiki/Lose_Kopplung>`_ an andere Teile der "
"Codebasis. Dies hält die Größe von Objekten klein (zwecks Wartbarkeit) und "
"verbessert deren Wiederverwendbarkeit."

msgid ""
"These OOP best practices have *several* implications for best practices in "
"scene structure and script usage."
msgstr ""
"Diese bewährten OOP-Praktiken haben *mehrere* Konsequenzen für bewährte "
"Praktiken in der Szenenstruktur und der Skriptverwendung."

msgid ""
"**If at all possible, one should design scenes to have no dependencies.** "
"That is, one should create scenes that keep everything they need within "
"themselves."
msgstr ""
"**Wenn irgend möglich, sollte man Szenen so gestalten, dass sie keine "
"Abhängigkeiten aufweisen.** Das heißt, man sollte Szenen schaffen, die "
"alles, was sie brauchen, in sich tragen."

msgid ""
"If a scene must interact with an external context, experienced developers "
"recommend the use of `Dependency Injection <https://en.wikipedia.org/wiki/"
"Dependency_injection>`_. This technique involves having a high-level API "
"provide the dependencies of the low-level API. Why do this? Because classes "
"which rely on their external environment can inadvertently trigger bugs and "
"unexpected behavior."
msgstr ""
"Muss eine Szene mit einem externen Kontext interagieren, empfehlen erfahrene "
"Entwickler die Verwendung von `Dependency Injection <https://de.wikipedia."
"org/wiki/Dependency_Injection>`_. Dieses Verfahren beschreibt die "
"Bereitstellung einer High-Level-API für die Abhängigkeiten der Low-Level-"
"API. Warum das? Weil Klassen, die sich auf ihre externe Umgebung verlassen, "
"ungewollt Bugs und unerwartetes Verhalten auslösen können."

msgid ""
"To do this, one must expose data and then rely on a parent context to "
"initialize it:"
msgstr ""
"Dazu muss man Daten verfügbar machen und sich dann auf einen übergeordneten "
"Kontext verlassen, um sie zu initialisieren:"

msgid ""
"Connect to a signal. Extremely safe, but should be used only to \"respond\" "
"to behavior, not start it. By convention, signal names are usually past-"
"tense verbs like \"entered\", \"skill_activated\", or \"item_collected\"."
msgstr ""
"Mit einem Signal verbinden. Äußerst sicher, sollte aber nur verwendet "
"werden, um auf ein Verhalten zu \"reagieren\", nicht, um es einzuleiten. "
"Signalnamen bestehen in der Regel aus Verben in der Vergangenheitsform, z.B. "
"\"entered\", \"skill_activated\" oder \"item_collected\"."

msgid "Call a method. Used to start behavior."
msgstr "Eine Methode aufrufen. Wird verwendet, um ein Verhalten einzuleiten."

msgid ""
"Initialize a :ref:`Callable <class_Callable>` property. Safer than a method "
"as ownership of the method is unnecessary. Used to start behavior."
msgstr ""
"Initialisieren einer :ref:`Callable <class_Callable>`-Property. Sicherer als "
"eine Methode, da es nicht nötig ist, die Methode zu besitzen. Wird "
"verwendet, um ein Verhalten einzuleiten."

msgid "Initialize a Node or other Object reference."
msgstr "Initialisieren eines Nodes oder einer anderen Objektreferenz."

msgid "Initialize a NodePath."
msgstr "Initialisieren eines NodePath."

msgid ""
"These options hide the points of access from the child node. This in turn "
"keeps the child **loosely coupled** to its environment. One can reuse it in "
"another context without any extra changes to its API."
msgstr ""
"Diese Optionen verbergen die Zugriffspunkte vor dem Child-Node. Dadurch "
"bleibt der Child-Node wiederum **lose** an seine Umgebung **gekoppelt**. Man "
"kann ihn in einem anderen Kontext wiederverwenden, ohne zusätzliche "
"Änderungen an seiner API vorzunehmen."

msgid ""
"Although the examples above illustrate parent-child relationships, the same "
"principles apply towards all object relations. Nodes which are siblings "
"should only be aware of their hierarchies while an ancestor mediates their "
"communications and references."
msgstr ""
"Obwohl die obigen Beispiele Parent-Child-Beziehungen illustrieren, gelten "
"die gleichen Prinzipien für alle Objektbeziehungen. Nodes, die benachbart "
"sind, sollten sich nur ihrer Hierarchien bewusst sein, während ein "
"übergeordneter Node ihre Kommunikation und Referenzen vermittelt."

msgid ""
"The same principles also apply to non-Node objects that maintain "
"dependencies on other objects. Whichever object actually owns the objects "
"should manage the relationships between them."
msgstr ""
"Dieselben Prinzipien gelten auch für Nicht-Node-Objekte, die Abhängigkeiten "
"von anderen Objekten führen. Das Objekt, das die Objekte tatsächlich "
"besitzt, sollte die Beziehungen zwischen ihnen verwalten."

msgid ""
"One should favor keeping data in-house (internal to a scene) though as "
"placing a dependency on an external context, even a loosely coupled one, "
"still means that the node will expect something in its environment to be "
"true. The project's design philosophies should prevent this from happening. "
"If not, the code's inherent liabilities will force developers to use "
"documentation to keep track of object relations on a microscopic scale; this "
"is otherwise known as development hell. Writing code that relies on external "
"documentation for one to use it safely is error-prone by default."
msgstr ""
"Man sollte es jedoch vorziehen, die Daten intern (innerhalb einer Szene) zu "
"halten, da eine Abhängigkeit von einem externen Kontext, selbst einem lose "
"gekoppelten, immer noch bedeutet, dass der Node eine bestimmte Information "
"in seiner Umgebung erwartet. Die Designphilosophien des Projekts sollten "
"dies verhindern. Ist das nicht der Fall, werden die inhärenten "
"Verbindlichkeiten des Codes die Entwickler dazu zwingen, die Beziehungen "
"zwischen Objekten haarklein über Dokumentation nachzuverfolgen. Dieses "
"Phänomen wird als Development Hell bezeichnet. Code zu schreiben, der auf "
"externe Dokumentation angewiesen ist, damit man ihn sicher verwenden kann, "
"ist immer fehleranfällig."

msgid ""
"To avoid creating and maintaining such documentation, one converts the "
"dependent node (\"child\" above) into a tool script that implements "
"``_get_configuration_warnings()``. Returning a non-empty PackedStringArray "
"from it will make the Scene dock generate a warning icon with the string(s) "
"as a tooltip by the node. This is the same icon that appears for nodes such "
"as the :ref:`Area2D <class_Area2D>` node when it has no child :ref:"
"`CollisionShape2D <class_CollisionShape2D>` nodes defined. The editor then "
"self-documents the scene through the script code. No content duplication via "
"documentation is necessary."
msgstr ""
"Um die Erstellung und Pflege einer solchen Dokumentation zu vermeiden, "
"konvertiert man den abhängigen Node (\"Child\" oben) in ein Tool-Skript, das "
"``_get_configuration_warnings()`` implementiert. Die Rückgabe eines nicht "
"leeren PackedStringArray bewirkt, dass das Szenen-Dock ein Warnsymbol mit "
"den Strings als Tooltip neben dem Node erzeugt. Dies ist das gleiche Symbol, "
"das für Nodes wie dem :ref:`Area2D <class_Area2D>`-Node erscheint, wenn er "
"keine Child-:ref:`CollisionShape2D <class_CollisionShape2D>`-Nodes definiert "
"hat. Der Editor dokumentiert die Szene dann selbst durch den Skriptcode. "
"Keine inhaltliche Duplizierung über die Dokumentation ist mehr notwendig."

msgid ""
"A GUI like this can better inform project users of critical information "
"about a Node. Does it have external dependencies? Have those dependencies "
"been satisfied? Other programmers, and especially designers and writers, "
"will need clear instructions in the messages telling them what to do to "
"configure it."
msgstr ""
"Eine solche GUI kann Projektnutzer besser über wichtige Informationen zu "
"einem Node informieren. Hat er externe Abhängigkeiten? Wurden diese "
"Abhängigkeiten erfüllt? Andere Programmierer, und insbesondere Designer und "
"Autoren, benötigen klare Anweisungen in den Meldungen, die ihnen sagen, was "
"sie tun müssen, um ihn zu konfigurieren."

msgid ""
"So, why does all this complex switcharoo work? Well, because scenes operate "
"best when they operate alone. If unable to work alone, then working with "
"others anonymously (with minimal hard dependencies, i.e. loose coupling) is "
"the next best thing. Inevitably, changes may need to be made to a class and "
"if these changes cause it to interact with other scenes in unforeseen ways, "
"then things will start to break down. The whole point of all this "
"indirection is to avoid ending up in a situation where changing one class "
"results in adversely effecting other classes dependent on it."
msgstr ""
"Warum also funktioniert dieses komplizierte Wechselspiel? Nun, weil Szenen "
"am besten funktionieren, wenn sie allein arbeiten. Wenn sie nicht allein "
"arbeiten können, dann ist die zweitbeste Lösung, mit anderen anonym zu "
"arbeiten (mit minimalen harten Abhängigkeiten, d.h. loser Kopplung). Es kann "
"unvermeidlich sein, dass Änderungen an einer Klasse vorgenommen werden "
"müssen, und wenn diese Änderungen dazu führen, dass sie auf unvorhergesehene "
"Weise mit anderen Szenen interagiert, dann werden die Dinge anfangen, "
"zusammenzubrechen. Der Sinn all dieser Indirektion ist es, zu vermeiden, "
"dass die Änderung einer Klasse sich negativ auf andere, von ihr abhängige "
"Klassen auswirkt."

msgid ""
"Scripts and scenes, as extensions of engine classes, should abide by *all* "
"OOP principles. Examples include..."
msgstr ""
"Skripte und Szenen als Erweiterungen von Engine-Klassen sollten *allen* OOP-"
"Prinzipien folgen. Beispiele beinhalten..."

msgid "`SOLID <https://en.wikipedia.org/wiki/SOLID>`_"
msgstr ""
"`SOLID <https://de.wikipedia.org/wiki/"
"Prinzipien_objektorientierten_Designs#SOLID-Prinzipien>`_"

msgid "`DRY <https://en.wikipedia.org/wiki/Don%27t_repeat_yourself>`_"
msgstr "`DRY <https://de.wikipedia.org/wiki/Don%E2%80%99t_repeat_yourself>`_"

msgid "`KISS <https://en.wikipedia.org/wiki/KISS_principle>`_"
msgstr "`KISS <https://de.wikipedia.org/wiki/KISS-Prinzip>`_"

msgid "`YAGNI <https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it>`_"
msgstr "`YAGNI <https://de.wikipedia.org/wiki/YAGNI>`_"

msgid "Choosing a node tree structure"
msgstr "Auswahl einer Node-Baum-Struktur"

msgid ""
"So, a developer starts work on a game only to stop at the vast possibilities "
"before them. They might know what they want to do, what systems they want to "
"have, but *where* to put them all? Well, how one goes about making their "
"game is always up to them. One can construct node trees in countless ways. "
"But, for those who are unsure, this helpful guide can give them a sample of "
"a decent structure to start with."
msgstr ""
"Ein Entwickler beginnt also mit der Arbeit an einem Spiel, um dann "
"angesichts der riesigen Möglichkeiten, die sich ihm bieten, stecken zu "
"bleiben. Sie wissen vielleicht, was sie tun wollen, welche Systeme sie haben "
"wollen, aber *wo* soll das alles hin? Nun, wie man bei der Entwicklung "
"seines Spiels vorgeht, bleibt immer jedem selbst überlassen. Man kann Node-"
"Bäume auf unzählige Arten konstruieren. Aber für diejenigen, die sich nicht "
"sicher sind, kann diese hilfreiche Anleitung ein Beispiel für eine sinnvolle "
"Struktur geben, mit der man beginnen kann."

msgid ""
"A game should always have a sort of \"entry point\"; somewhere the developer "
"can definitively track where things begin so that they can follow the logic "
"as it continues elsewhere. This place also serves as a bird's eye view of "
"all of the other data and logic in the program. For traditional "
"applications, this would be the \"main\" function. In this case, it would be "
"a Main node."
msgstr ""
"Ein Spiel sollte immer eine Art \"Einstiegspunkt\" haben; irgendwo kann der "
"Entwickler definitiv nachvollziehen, wo die Dinge beginnen, damit er die "
"Logik verfolgen kann, wenn sie an anderer Stelle fortgesetzt wird. Dieser "
"Ort dient auch als grobe Übersicht über alle weiteren Daten und die Logik im "
"Programm. Bei traditionellen Anwendungen wäre dies die \"main\"-Funktion. In "
"unserem Fall wäre es ein Main-Node."

msgid "Node \"Main\" (main.gd)"
msgstr "Node \"Main\" (main.gd)"

msgid ""
"The ``main.gd`` script would then serve as the primary controller of one's "
"game."
msgstr ""
"Das ``main.gd``-Skript würde dann als primärer Steuerblock des eigenen "
"Spiels dienen."

msgid ""
"Then one has their actual in-game \"World\" (a 2D or 3D one). This can be a "
"child of Main. In addition, one will need a primary GUI for their game that "
"manages the various menus and widgets the project needs."
msgstr ""
"Dann hat man seine eigentliche \"Welt\" im Spiel (eine 2D- oder 3D-Welt). "
"Dies kann ein Child-Node von Main sein. Außerdem benötigt man für sein Spiel "
"eine primäre GUI, von der die verschiedenen Menüs und Widgets des Projekts "
"verwaltet werden."

msgid "Node2D/Node3D \"World\" (game_world.gd)"
msgstr "Node2D/Node3D \"Welt\" (game_world.gd)"

msgid "Control \"GUI\" (gui.gd)"
msgstr "Control \"GUI\" (gui.gd)"

msgid ""
"When changing levels, one can then swap out the children of the \"World\" "
"node. :ref:`Changing scenes manually <doc_change_scenes_manually>` gives "
"users full control over how their game world transitions."
msgstr ""
"Beim Wechseln von Leveln kann man dann die Child-Nodes des \"Welt\"-Nodes "
"austauschen. :ref:`Das manuelle Ändern von Szenen "
"<doc_change_scenes_manually>` gibt dem Benutzer die volle Kontrolle über die "
"Übergänge seiner Spielwelt."

msgid ""
"The next step is to consider what gameplay systems one's project requires. "
"If one has a system that..."
msgstr ""
"Der nächste Schritt besteht darin, zu überlegen, welche Gameplay-Systeme für "
"ein Projekt erforderlich sind. Wenn man ein System hat, das ..."

msgid "tracks all of its data internally"
msgstr "alle seine Daten intern trackt"

msgid "should be globally accessible"
msgstr "global zugänglich sein sollte"

msgid "should exist in isolation"
msgstr "isoliert existieren sollte"

msgid ""
"... then one should create an :ref:`autoload 'singleton' node "
"<doc_singletons_autoload>`."
msgstr ""
"... dann sollte man einen :ref:`Autoload-'Singleton'-Node "
"<doc_singletons_autoload>` erstellen."

msgid ""
"For smaller games, a simpler alternative with less control would be to have "
"a \"Game\" singleton that simply calls the :ref:`SceneTree."
"change_scene_to_file() <class_SceneTree_method_change_scene_to_file>` method "
"to swap out the main scene's content. This structure more or less keeps the "
"\"World\" as the main game node."
msgstr ""
"Für kleinere Spiele wäre eine einfachere Alternative mit weniger Kontrolle "
"ein Singleton namens \"Game\", das einfach die Methode :ref:`SceneTree."
"change_scene_to_file() <class_SceneTree_method_change_scene_to_file>` "
"aufruft, um den Inhalt der Hauptszene auszutauschen. Diese Struktur behält "
"mehr oder weniger \"Welt\" als Haupt-Spiel-Node."

msgid ""
"Any GUI would need to also be a singleton; be a transitory part of the "
"\"World\"; or be manually added as a direct child of the root. Otherwise, "
"the GUI nodes would also delete themselves during scene transitions."
msgstr ""
"Jede GUI müsste ebenfalls ein Singleton sein, ein vorübergehender Teil der "
"\"Welt\" sein oder manuell als direkter Child-Node zum Root hinzugefügt "
"werden. Andernfalls würden sich die GUI-Nodes bei Szenenübergängen auch "
"selbst löschen."

msgid ""
"If one has systems that modify other systems' data, one should define those "
"as their own scripts or scenes rather than autoloads. For more information "
"on the reasons, please see the :ref:`Autoloads versus regular nodes "
"<doc_autoloads_versus_internal_nodes>` documentation."
msgstr ""
"Wenn man Systeme hat, die Daten anderer Systeme ändern, sollte man diese als "
"eigene Skripte oder Szenen und nicht als Autoloads definieren. Weitere "
"Informationen zu den Gründen finden Sie in der Dokumentation :ref:`Autoloads "
"im Vergleich zu Internal Nodes <doc_autoloads_versus_internal_nodes>`."

msgid ""
"Each subsystem within one's game should have its own section within the "
"SceneTree. One should use parent-child relationships only in cases where "
"nodes are effectively elements of their parents. Does removing the parent "
"reasonably mean that one should also remove the children? If not, then it "
"should have its own place in the hierarchy as a sibling or some other "
"relation."
msgstr ""
"Jedes Subsystem innerhalb eines Spiels sollte seinen eigenen Abschnitt "
"innerhalb des Szenenbaums haben. Man sollte Parent-Child-Beziehungen nur in "
"Fällen verwenden, in denen die Nodes tatsächlich Elemente ihrer Parent-Nodes "
"sind. Würde das Entfernen des Parent-Nodes bedeuten, dass man "
"sinnvollerweise auch die Child-Nodes entfernen sollte? Wenn nicht, dann "
"sollten sie ihren eigenen Platz in der Hierarchie als Nachbarn oder als eine "
"andere Beziehung haben."

msgid ""
"In some cases, one needs these separated nodes to *also* position themselves "
"relative to each other. One can use the :ref:`RemoteTransform "
"<class_RemoteTransform3D>` / :ref:`RemoteTransform2D "
"<class_RemoteTransform2D>` nodes for this purpose. They will allow a target "
"node to conditionally inherit selected transform elements from the Remote\\* "
"node. To assign the ``target`` :ref:`NodePath <class_NodePath>`, use one of "
"the following:"
msgstr ""
"In manchen Fällen muss man diese getrennten Nodes *auch* relativ zueinander "
"positionieren. Zu diesem Zweck kann man die :ref:`RemoteTransform3D "
"<class_RemoteTransform3D>` / :ref:`RemoteTransform2D "
"<class_RemoteTransform2D>`-Nodes verwenden. Sie ermöglichen es einem Ziel-"
"Node, ausgewählte Transformationselemente von dem Remote\\*-Node zu erben. "
"Um den``Ziel``-:ref:`NodePath <class_NodePath>` zuzuweisen, verwenden Sie "
"eine der folgenden Möglichkeiten:"

msgid ""
"A reliable third party, likely a parent node, to mediate the assignment."
msgstr ""
"Ein zuverlässiger Dritter, wahrscheinlich ein Parent-Node, der die Zuweisung "
"vermittelt."

msgid ""
"A group, to easily pull a reference to the desired node (assuming there will "
"only ever be one of the targets)."
msgstr ""
"Eine Gruppe, um einfach eine Referenz auf den gewünschten Node zu ziehen "
"(vorausgesetzt, es wird immer nur eines der Ziele geben)."

msgid ""
"When should one do this? Well, this is subjective. The dilemma arises when "
"one must micro-manage when a node must move around the SceneTree to preserve "
"itself. For example..."
msgstr ""
"Wann sollte man das tun? Das ist subjektiv. Das Dilemma entsteht, wenn man "
"kleinteilig organisieren muss, wann ein Node sich durch den Szenenbaum "
"bewegen muss, um sich selbst am Leben zu erhalten. Zum Beispiel..."

msgid "Add a \"player\" node to a \"room\"."
msgstr "Fügen Sie einen \"Spieler\"-Node zu einem \"Raum\" hinzu."

msgid "Need to change rooms, so one must delete the current room."
msgstr ""
"Sie wollen den Raum wechseln, also müssen Sie den aktuellen Raum löschen."

msgid ""
"Before the room can be deleted, one must preserve and/or move the player."
msgstr ""
"Bevor der Raum gelöscht werden kann, muss der Spieler gesichert und/oder "
"bewegt werden."

msgid "Is memory a concern?"
msgstr "Gibt es Bedenken in Hinsicht auf Speicherplatz?"

msgid ""
"If not, one can just create the two rooms, move the player and delete the "
"old one. No problem."
msgstr ""
"Falls nicht, kann man einfach die beiden Räume erstellen, den Spieler "
"bewegen und den alten Raum löschen. Kein Problem."

msgid "If so, one will need to..."
msgstr "Falls doch, muss man..."

msgid "Move the player somewhere else in the tree."
msgstr "Den Spieler an eine andere Stelle im Baum bewegen."

msgid "Delete the room."
msgstr "Den Raum löschen."

msgid "Instantiate and add the new room."
msgstr "Den neuen Raum instanziieren und hinzufügen."

msgid "Re-add the player."
msgstr "Den Spieler wieder hinzufügen."

msgid ""
"The issue is that the player here is a \"special case\"; one where the "
"developers must *know* that they need to handle the player this way for the "
"project. As such, the only way to reliably share this information as a team "
"is to *document* it. Keeping implementation details in documentation however "
"is dangerous. It's a maintenance burden, strains code readability, and "
"bloats the intellectual content of a project unnecessarily."
msgstr ""
"Das Problem ist, dass der Spieler hier ein \"Sonderfall\" ist; Einer, bei "
"dem die Entwickler *wissen* müssen, dass sie den Spieler für das Projekt so "
"handhaben müssen. Daher besteht die einzige Möglichkeit, diese Informationen "
"in einem Team zuverlässig weiterzugeben darin, sie zu dokumentieren. Es ist "
"jedoch gefährlich, Implementierungsdetails in der Dokumentation zu "
"verwalten. Dies ist eine Wartungslast, von der die Lesbarkeit des Codes "
"beeinträchtigt wird und die den Wissensgehalt eines Projekts unnötig "
"aufbläht."

msgid ""
"In a more complex game with larger assets, it can be a better idea to simply "
"keep the player somewhere else in the SceneTree entirely. This results in:"
msgstr ""
"In einem etwas komplexeren Spiel mit größeren Assets kann es durchaus eine "
"gute Idee sein, den Spieler irgendwo anders im Szenenbaum aufzubewahren. "
"Dies führt zu:"

msgid "More consistency."
msgstr "Mehr Konsistenz."

msgid "No \"special cases\" that must be documented and maintained somewhere."
msgstr ""
"Keine \"Spezialfälle\", die weder dokumentiert noch irgendwo gepflegt werden "
"müssen."

msgid ""
"No opportunity for errors to occur because these details are not accounted "
"for."
msgstr ""
"Keine Möglichkeit für das Auftreten von Fehlern, da diese Details nicht "
"berücksichtigt werden müssen."

msgid ""
"In contrast, if one ever needs to have a child node that does *not* inherit "
"the transform of their parent, one has the following options:"
msgstr ""
"Wenn man dagegen einen Child-Node haben möchte, der die Transformation des "
"Parent-Nodes *nicht* erbt, hat man folgende Möglichkeiten:"

msgid ""
"The **declarative** solution: place a :ref:`Node <class_Node>` in between "
"them. As nodes with no transform, Nodes will not pass along such information "
"to their children."
msgstr ""
"Die **deklarative** Lösung: Setzen Sie einen :ref:`Node <class_Node>` "
"dazwischen. Als Node ohne Transformation geben Nodes solche Informationen "
"nicht an ihre Child-Nodes weiter."

msgid ""
"The **imperative** solution: Use the ``top_level`` property for the :ref:"
"`CanvasItem <class_CanvasItem_property_top_level>` or :ref:`Node3D "
"<class_Node3D_property_top_level>` node. This will make the node ignore its "
"inherited transform."
msgstr ""
"Die **imperative** Lösung: Verwenden Sie die Property ``top_level`` für den :"
"ref:`CanvasItem <class_CanvasItem_property_top_level>`- oder :ref:`Node3D "
"<class_Node3D_property_top_level>`-Node. Dies führt dazu, dass der Node "
"seine geerbte Transformation ignoriert."

msgid ""
"If building a networked game, keep in mind which nodes and gameplay systems "
"are relevant to all players versus those just pertinent to the authoritative "
"server. For example, users do not all need to have a copy of every players' "
"\"PlayerController\" logic. Instead, they need only their own. As such, "
"keeping these in a separate branch from the \"world\" can help simplify the "
"management of game connections and the like."
msgstr ""
"Wenn Sie ein Netzwerkspiel erstellen, sollten Sie darauf achten, welche "
"Nodes und Spielsysteme für alle Spieler relevant sind und welche nur für den "
"steuernden Server. Zum Beispiel müssen nicht alle Benutzer eine Kopie der "
"\"PlayerController\"-Logik jedes Spielers haben. Stattdessen benötigen sie "
"nur ihre eigene. Wenn Sie diese in einem von \"Welt\" getrennten Zweig "
"aufbewahren, können Sie die Verwaltung von Spielverbindungen und Ähnlichem "
"vereinfachen."

msgid ""
"The key to scene organization is to consider the SceneTree in relational "
"terms rather than spatial terms. Are the nodes dependent on their parent's "
"existence? If not, then they can thrive all by themselves somewhere else. If "
"they are dependent, then it stands to reason that they should be children of "
"that parent (and likely part of that parent's scene if they aren't already)."
msgstr ""
"Der Schlüssel zur Organisation der Szene liegt darin, den Szenenbaum in "
"relationalen Begriffen und nicht in räumlichen Begriffen zu betrachten. Sind "
"die Nodes von der Existenz ihres Parent-Nodes abhängig? Wenn nicht, dann "
"können sie ganz allein an anderer Stelle gedeihen. Wenn sie abhängig sind, "
"dann ist es logisch, dass sie Child-Nodes dieses Parents sein sollten (und "
"wahrscheinlich Teil der Szene dieses Parents, wenn sie es nicht schon sind)."

msgid ""
"Does this mean nodes themselves are components? Not at all. Godot's node "
"trees form an aggregation relationship, not one of composition. But while "
"one still has the flexibility to move nodes around, it is still best when "
"such moves are unnecessary by default."
msgstr ""
"Bedeutet dies, dass die Nodes selbst Komponenten sind? Ganz und gar nicht. "
"Die Node-Bäume von Godot bilden eine Aggregationsbeziehung, keine "
"Kompositionsbeziehung. Man hat zwar immer noch die Flexibilität, Nodes zu "
"verschieben, aber es ist immer noch am besten, wenn solche Verschiebungen im "
"Normalfall unnötig sind."

msgid "Translation status"
msgstr "Übersetzungsstatus"
