# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Matrices and transforms"
msgstr "Matrizen und Transformationen"

msgid "Introduction"
msgstr "Einführung"

msgid ""
"Before reading this tutorial, we recommend that you thoroughly read and "
"understand the :ref:`doc_vector_math` tutorial, as this tutorial requires a "
"knowledge of vectors."
msgstr ""
"Bevor Sie dieses Tutorial lesen, empfehlen wir das :ref:`doc_vector_math`-"
"Tutorial sorgfältig lesen und verstehen, da dieses Tutorial Kenntnisse über "
"Vektoren voraussetzt."

msgid ""
"This tutorial is about *transformations* and how we represent them in Godot "
"using matrices. It is not a full in-depth guide to matrices. Transformations "
"are most of the time applied as translation, rotation, and scale, so we will "
"focus on how to represent those with matrices."
msgstr ""
"In diesem Tutorial geht es um *Transformationen* und wie wir sie in Godot "
"mithilfe von Matrizen darstellen. Es ist keine ausführliche Anleitung zu "
"Matrizen. Transformationen werden meistens als Translation, Rotation und "
"Skalierung angewendet, daher konzentrieren wir uns darauf, wie diese mit "
"Matrizen dargestellt werden."

msgid ""
"Most of this guide focuses on 2D, using :ref:`class_Transform2D` and :ref:"
"`class_Vector2`, but the way things work in 3D is very similar."
msgstr ""
"Der größte Teil dieser Anleitung konzentriert sich auf 2D und verwendet :ref:"
"`class_Transform2D` und :ref:`class_Vector2`, aber die Funktionsweise in 3D "
"ist sehr ähnlich."

msgid ""
"As mentioned in the previous tutorial, it is important to remember that in "
"Godot, the Y axis points *down* in 2D. This is the opposite of how most "
"schools teach linear algebra, with the Y axis pointing up."
msgstr ""
"Wie im vorherigen Tutorial erwähnt, ist es wichtig, sich daran zu erinnern, "
"dass in Godot die Y-Achse in 2D *nach unten* zeigt. Dies ist das Gegenteil "
"davon, wie die meisten Schulen lineare Algebra unterrichten, wo die Y-Achse "
"nach oben zeigt."

msgid ""
"The convention is that the X axis is red, the Y axis is green, and the Z "
"axis is blue. This tutorial is color-coded to match these conventions, but "
"we will also represent the origin vector with a blue color."
msgstr ""
"Die Konvention ist, dass die X-Achse rot ist, die Y-Achse grün und die Z-"
"Achse blau. Dieses Tutorial ist farbcodiert, um diesen Konventionen zu "
"entsprechen. Wir werden jedoch auch den Ursprungsvektor mit einer blauen "
"Farbe darstellen."

msgid "Matrix components and the Identity matrix"
msgstr "Matrixkomponenten und die Einheitsmatrix"

msgid ""
"The identity matrix represents a transform with no translation, no rotation, "
"and no scale. Let's start by looking at the identity matrix and how its "
"components relate to how it visually appears."
msgstr ""
"Die Einheitsmatrix repräsentiert eine Transformation ohne Translation, ohne "
"Rotation und ohne Skalierung. Betrachten wir zunächst die Einheitsmatrix und "
"ihre Beziehung zu ihrer visuellen Darstellung."

msgid ""
"Matrices have rows and columns, and a transformation matrix has specific "
"conventions on what each does."
msgstr ""
"Matrizen haben Zeilen und Spalten, und eine Transformationsmatrix hat "
"spezifische Konventionen, wofür jede zuständig ist."

msgid ""
"In the image above, we can see that the red X vector is represented by the "
"first column of the matrix, and the green Y vector is likewise represented "
"by the second column. A change to the columns will change these vectors. We "
"will see how they can be manipulated in the next few examples."
msgstr ""
"Im obigen Bild sehen wir, dass der rote X-Vektor durch die erste Spalte der "
"Matrix dargestellt wird und der grüne Y-Vektor entsprechend durch die zweite "
"Spalte dargestellt wird. Durch eine Änderung der Spalten werden diese "
"Vektoren geändert. Wir werden in den nächsten Beispielen sehen, wie sie "
"manipuliert werden können."

msgid ""
"You should not worry about manipulating rows directly, as we usually work "
"with columns. However, you can think of the rows of the matrix as showing "
"which vectors contribute to moving in a given direction."
msgstr ""
"Sie sollten sich keine Gedanken über die direkte Bearbeitung von Zeilen "
"machen, da wir normalerweise mit Spalten arbeiten. Sie können sich jedoch "
"vorstellen, dass die Zeilen der Matrix angeben, welche Vektoren zur Bewegung "
"in eine bestimmte Richtung beitragen."

msgid ""
"When we refer to a value such as ``t.x.y``, that's the Y component of the X "
"column vector. In other words, the bottom-left of the matrix. Similarly, ``t."
"x.x`` is top-left, ``t.y.x`` is top-right, and ``t.y.y`` is bottom-right, "
"where ``t`` is the Transform2D."
msgstr ""
"Wenn wir uns auf einen Wert wie ``t.x.y`` beziehen, ist das die Y-Komponente "
"des X-Spaltenvektors. Mit anderen Worten, die untere linke Seite der Matrix. "
"In ähnlicher Weise steht ``t.x.x`` für oben links, ``t.y.x`` für oben rechts "
"und ``t.y.y`` für unten rechts, wobei ``t`` das Transform2D ist."

msgid "Scaling the transformation matrix"
msgstr "Skalierung der Transformationsmatrix"

msgid ""
"Applying a scale is one of the easiest operations to understand. Let's start "
"by placing the Godot logo underneath our vectors so that we can visually see "
"the effects on an object:"
msgstr ""
"Das Anwenden einer Skalierung ist eine der am einfachsten zu verstehenden "
"Operationen. Beginnen wir damit, das Godot-Logo unter unsere Vektoren zu "
"legen, damit wir die Auswirkungen auf ein Objekt visuell sehen können:"

msgid ""
"Now, to scale the matrix, all we need to do is multiply each component by "
"the scale we want. Let's scale it up by 2. 1 times 2 becomes 2, and 0 times "
"2 becomes 0, so we end up with this:"
msgstr ""
"Um die Matrix zu skalieren, müssen wir nur jede Komponente mit der "
"gewünschten Skalierung multiplizieren. Skalieren wir sie mit 2. 1 mal 2 wird "
"zu 2, und 0 mal 2 wird zu 0, so dass wir am Ende Folgendes erhalten:"

msgid "To do this in code, we multiply each of the vectors:"
msgstr "Um dies im Code zu tun, multiplizieren wir jeden der Vektoren:"

msgid ""
"If we wanted to return it to its original scale, we can multiply each "
"component by 0.5. That's pretty much all there is to scaling a "
"transformation matrix."
msgstr ""
"Wenn wir den ursprünglichen Maßstab wiederherstellen wollen, können wir jede "
"Komponente mit 0.5 multiplizieren. Das ist so ziemlich alles, was es zum "
"Skalieren einer Transformationsmatrix braucht."

msgid ""
"To calculate the object's scale from an existing transformation matrix, you "
"can use ``length()`` on each of the column vectors."
msgstr ""
"Um die Skalierung des Objekts aus einer bestehenden Transformationsmatrix zu "
"berechnen, können Sie ``length()`` auf jeden der Spaltenvektoren anwenden."

msgid ""
"In actual projects, you can use the ``scaled()`` method to perform scaling."
msgstr ""
"In echten Projekten können Sie die Methode ``scaled()`` verwenden, um eine "
"Skalierung durchzuführen."

msgid "Rotating the transformation matrix"
msgstr "Rotation der Transformationsmatrix"

msgid ""
"We'll start the same way as earlier, with the Godot logo underneath the "
"identity matrix:"
msgstr ""
"Wir beginnen auf die gleiche Weise wie zuvor, mit dem Godot-Logo unter der "
"Einheitsmatrix:"

msgid ""
"As an example, let's say we want to rotate our Godot logo clockwise by 90 "
"degrees. Right now the X axis points right and the Y axis points down. If we "
"rotate these in our head, we would logically see that the new X axis should "
"point down and the new Y axis should point left."
msgstr ""
"Nehmen wir als Beispiel an, wir wollen unser Godot-Logo um 90 Grad im "
"Uhrzeigersinn rotieren. Im Moment zeigt die X-Achse nach rechts und die Y-"
"Achse nach unten. Wenn wir diese in unserem Kopf rotieren, würden wir "
"logischerweise sehen, dass die neue X-Achse nach unten und die neue Y-Achse "
"nach links zeigen sollte."

msgid ""
"You can imagine that you grab both the Godot logo and its vectors, and then "
"spin it around the center. Wherever you finish spinning, the orientation of "
"the vectors determines what the matrix is."
msgstr ""
"Sie können sich vorstellen, dass Sie sowohl das Godot-Logo als auch seine "
"Vektoren nehmen und es dann um den Mittelpunkt drehen. Je nachdem, wo man "
"die Drehung beendet, bestimmt die Ausrichtung der Vektoren das Aussehen der "
"Matrix."

msgid ""
"We need to represent \"down\" and \"left\" in normal coordinates, so means "
"we'll set X to (0, 1) and Y to (-1, 0). These are also the values of "
"``Vector2.DOWN`` and ``Vector2.LEFT``. When we do this, we get the desired "
"result of rotating the object:"
msgstr ""
"Wir müssen \"unten\" und \"links\" in Normalen-Koordinaten darstellen, d.h. "
"wir setzen X auf (0, 1) und Y auf (-1, 0). Dies sind auch die Werte von "
"``Vector2.DOWN`` und ``Vector2.LEFT``. Wenn wir dies tun, erhalten wir das "
"gewünschte Ergebnis der Rotation des Objekts:"

msgid ""
"If you have trouble understanding the above, try this exercise: Cut a square "
"of paper, draw X and Y vectors on top of it, place it on graph paper, then "
"rotate it and note the endpoints."
msgstr ""
"Wenn Sie Schwierigkeiten haben, das oben Beschriebene zu verstehen, "
"versuchen Sie diese Übung: Schneiden Sie ein Quadrat aus Papier aus, "
"zeichnen Sie X- und Y-Vektoren darauf, legen Sie es auf Millimeterpapier, "
"rotieren Sie es und notieren Sie die Endpunkte."

msgid ""
"To perform rotation in code, we need to be able to calculate the values "
"programmatically. This image shows the formulas needed to calculate the "
"transformation matrix from a rotation angle. Don't worry if this part seems "
"complicated, I promise it's the hardest thing you need to know."
msgstr ""
"Um eine Rotation im Code durchzuführen, müssen wir in der Lage sein, die "
"Werte programmatisch zu berechnen. Dieses Bild zeigt die Formeln, die zur "
"Berechnung der Transformationsmatrix aus einem Rotationswinkel erforderlich "
"sind. Keine Sorge, wenn dieser Teil kompliziert erscheint: Ich verspreche, "
"dass es das Schwierigste ist, was Sie wissen müssen."

msgid ""
"Godot represents all rotations with radians, not degrees. A full turn is "
"`TAU` or `PI*2` radians, and a quarter turn of 90 degrees is `TAU/4` or "
"`PI/2` radians. Working with `TAU` usually results in more readable code."
msgstr ""
"Godot stellt alle Drehungen im Bogenmaß und nicht in Grad dar. Eine volle "
"Drehung ist `TAU` oder `PI*2` Bogenmaß, und eine Vierteldrehung von 90 Grad "
"ist `TAU/4` oder `PI/2` Bogenmaß. Die Arbeit mit `TAU` führt in der Regel zu "
"einem besser lesbaren Code."

msgid ""
"Fun fact: In addition to Y being *down* in Godot, rotation is represented "
"clockwise. This means that all the math and trig functions behave the same "
"as a Y-is-up CCW system, since these differences \"cancel out\". You can "
"think of rotations in both systems being \"from X to Y\"."
msgstr ""
"Interessante Fakt am Rande: In Godot ist Y nicht nur *unten*, sondern "
"Rotation wird auch im Uhrzeigersinn dargestellt. Das bedeutet, dass sich "
"alle mathematischen und trigonometrischen Funktionen genauso verhalten wie "
"in einem System mit Y nach oben und gegen den Uhrzeigersinn, da sich diese "
"Unterschiede \"aufheben\". Sie können sich Rotationen in beiden Systemen als "
"\"von X nach Y\" vorstellen."

msgid ""
"In order to perform a rotation of 0.5 radians (about 28.65 degrees), we plug "
"in a value of 0.5 to the formula above and evaluate to find what the actual "
"values should be:"
msgstr ""
"Um eine Drehung von 0.5 Bogenmaß (ca. 28.65 Grad) durchzuführen, setzen wir "
"einen Wert von 0.5 in die obige Formel ein und werten aus, was die "
"tatsächlichen Werte sein sollten:"

msgid "Here's how that would be done in code (place the script on a Node2D):"
msgstr ""
"So würde das im Code gemacht werden (hängen Sie das Skript an einen Node2D):"

msgid ""
"To calculate the object's rotation from an existing transformation matrix, "
"you can use ``atan2(t.x.y, t.x.x)``, where t is the Transform2D."
msgstr ""
"Um die Rotation des Objekts aus einer bestehenden Transformationsmatrix zu "
"berechnen, können Sie ``atan2(t.x.y, t.x.x)`` verwenden, wobei t das "
"Transform2D ist."

msgid ""
"In actual projects, you can use the ``rotated()`` method to perform "
"rotations."
msgstr ""
"In echten Projekten können Sie die Methode ``rotated()`` verwenden, um "
"Rotationen durchzuführen."

msgid "Basis of the transformation matrix"
msgstr "Basis der Transformationsmatrix"

msgid ""
"So far we have only been working with the ``x`` and ``y``, vectors, which "
"are in charge of representing rotation, scale, and/or shearing (advanced, "
"covered at the end). The X and Y vectors are together called the *basis* of "
"the transformation matrix. The terms \"basis\" and \"basis vectors\" are "
"important to know."
msgstr ""
"Bisher haben wir nur mit den Vektoren ``x`` und ``y`` gearbeitet, die für "
"die Darstellung von Rotation, Skalierung und/oder Scherung zuständig sind "
"(fortgeschritten, wird am Ende behandelt). Die X- und Y-Vektoren werden "
"zusammen als *Basis* der Transformationsmatrix bezeichnet. Die Begriffe "
"\"Basis\" und \"Basisvektoren\" sind wichtig zu wissen."

msgid ""
"You might have noticed that :ref:`class_Transform2D` actually has three :ref:"
"`class_Vector2` values: ``x``, ``y``, and ``origin``. The ``origin`` value "
"is not part of the basis, but it is part of the transform, and we need it to "
"represent position. From now on we'll keep track of the origin vector in all "
"examples. You can think of origin as another column, but it's often better "
"to think of it as completely separate."
msgstr ""
"Sie haben vielleicht bemerkt, dass :ref:`class_Transform2D` eigentlich drei :"
"ref:`class_Vector2` Werte hat: ``x``, ``y`` und ``origin``. Der ``origin``-"
"Wert ist nicht Teil der Basis, aber er ist Teil der Transformation, und wir "
"brauchen ihn, um die Position zu repräsentieren. Von nun an werden wir den "
"Ursprungsvektor in allen Beispielen im Auge behalten. Man kann sich den "
"Ursprung als eine weitere Spalte vorstellen, aber oft ist es besser, ihn als "
"völlig eigenständig zu betrachten."

msgid ""
"Note that in 3D, Godot has a separate :ref:`class_Basis` structure for "
"holding the three :ref:`class_Vector3` values of the basis, since the code "
"can get complex and it makes sense to separate it from :ref:"
"`class_Transform3D` (which is composed of one :ref:`class_Basis` and one "
"extra :ref:`class_Vector3` for the origin)."
msgstr ""
"Beachten Sie, dass Godot in 3D eine separate :ref:`class_Basis`-Struktur für "
"die drei :ref:`class_Vector3`-Werte der Basis hat, da der Code komplex "
"werden kann und es sinnvoll ist, ihn von :ref:`class_Transform3D` zu trennen "
"(das aus einer :ref:`class_Basis` und einem zusätzlichen :ref:"
"`class_Vector3` für den Ursprung besteht)."

msgid "Translating the transformation matrix"
msgstr "Verschieben der Transformationsmatrix"

msgid ""
"Changing the ``origin`` vector is called *translating* the transformation "
"matrix. Translating is basically a technical term for \"moving\" the object, "
"but it explicitly does not involve any rotation."
msgstr ""
"Das Ändern des ``Ursprungsvektors`` wird als *Translation* der "
"Transformationsmatrix bezeichnet. Translation ist im Grunde ein technischer "
"Begriff für das \"Verschieben\" des Objekts, aber es beinhaltet ausdrücklich "
"keine Drehung."

msgid ""
"Let's work through an example to help understand this. We will start with "
"the identity transform like last time, except we will keep track of the "
"origin vector this time."
msgstr ""
"Lassen Sie uns ein Beispiel durcharbeiten, um dies zu verstehen. Wir werden "
"wie beim letzten Mal mit der Einheitstransformation beginnen, außer dass wir "
"diesmal den Ursprungsvektor beobachten."

msgid ""
"If we want to move the object to a position of (1, 2), we need to set its "
"``origin`` vector to (1, 2):"
msgstr ""
"Wenn wir das Objekt an eine Position von (1, 2) verschieben wollen, müssen "
"wir seinen ``Ursprungsvektor`` auf (1, 2) setzen:"

msgid ""
"There is also a ``translated()`` method, which performs a different "
"operation to adding or changing ``origin`` directly. The ``translated()`` "
"method will translate the object *relative to its own rotation*. For "
"example, an object rotated 90 degrees clockwise will move to the right when "
"``translated()`` with ``Vector2.UP``."
msgstr ""
"Es gibt auch eine Methode ``translated()``, die eine andere Operation "
"durchführt als das direkte Hinzufügen oder Ändern von ``origin``. Die "
"Methode ``translated()`` übersetzt das Objekt *relativ zu seiner eigenen "
"Drehung*. Zum Beispiel wird ein um 90 Grad im Uhrzeigersinn gedrehtes Objekt "
"nach rechts verschoben, wenn ``translated()`` mit ``Vector2.UP`` "
"durchgeführt wird."

msgid ""
"Godot's 2D uses coordinates based on pixels, so in actual projects you will "
"want to translate by hundreds of units."
msgstr ""
"Das 2D-System von Godot verwendet Koordinaten auf der Basis von Pixeln, so "
"dass Sie in tatsächlichen Projekten um Hunderte von Einheiten verschieben "
"werden."

msgid "Putting it all together"
msgstr "Fügen wir alles zusammen"

msgid ""
"We're going to apply everything we mentioned so far onto one transform. To "
"follow along, create a project with a Sprite2D node and use the Godot logo "
"for the texture resource."
msgstr ""
"Jetzt werden wir alles, was wir bisher erwähnt haben, auf eine "
"Transformation anwenden. Erstellen Sie dazu ein Projekt mit einem Sprite2D-"
"Node und verwenden Sie das Godot-Logo als Texturressource."

msgid ""
"Let's set the translation to (350, 150), rotate by -0.5 rad, and scale by 3. "
"I've posted a screenshot, and the code to reproduce it, but I encourage you "
"to try and reproduce the screenshot without looking at the code!"
msgstr ""
"Setzen wir die Translation auf (350, 150), rotieren wir um -0.5 Bogenmaß und "
"skalieren wir um 3. Ich habe einen Screenshot und den Code zur Reproduktion "
"gepostet, aber ich möchte Sie ermutigen, den Screenshot zu reproduzieren, "
"ohne sich den Code anzusehen!"

msgid "Shearing the transformation matrix (advanced)"
msgstr "Scheren der Transformationsmatrix (fortgeschritten)"

msgid ""
"If you are only looking for how to *use* transformation matrices, feel free "
"to skip this section of the tutorial. This section explores an uncommonly "
"used aspect of transformation matrices for the purpose of building an "
"understanding of them."
msgstr ""
"Wenn Sie nur wissen wollen, wie man Transformationsmatrizen *verwendet*, "
"können Sie diesen Abschnitt des Tutorials getrost überspringen. In diesem "
"Abschnitt wird ein selten genutzter Aspekt von Transformationsmatrizen "
"untersucht, um ein Verständnis für sie zu entwickeln."

msgid "Node2D provides a shearing property out of the box."
msgstr "Node2D bietet von Haus aus eine Scher-Eigenschaft."

msgid ""
"You may have noticed that a transform has more degrees of freedom than the "
"combination of the above actions. The basis of a 2D transformation matrix "
"has four total numbers in two :ref:`class_Vector2` values, while a rotation "
"value and a Vector2 for scale only has 3 numbers. The high-level concept for "
"the missing degree of freedom is called *shearing*."
msgstr ""
"Sie haben vielleicht bemerkt, dass eine Transformation mehr Freiheitsgrade "
"hat als die Kombination der oben genannten Aktionen. Die Basis einer 2D-"
"Transformationsmatrix hat insgesamt vier Zahlen in zwei :ref:`class_Vector2`-"
"Werten, während ein Rotationswert und ein Vector2 für die Skalierung nur 3 "
"Zahlen haben. Das übergeordnete Konzept für den fehlenden Freiheitsgrad wird "
"*Scheren* genannt."

msgid ""
"Normally, you will always have the basis vectors perpendicular to each "
"other. However, shearing can be useful in some situations, and understanding "
"shearing helps you understand how transforms work."
msgstr ""
"Normalerweise stehen die Basisvektoren immer senkrecht aufeinander. Die "
"Scherung kann jedoch in einigen Situationen nützlich sein, und das "
"Verständnis der Scherung hilft Ihnen zu verstehen, wie Transformationen "
"funktionieren."

msgid ""
"To show you visually how it will look, let's overlay a grid onto the Godot "
"logo:"
msgstr ""
"Um Ihnen visuell zu zeigen, wie es aussehen wird, überlagern wir das Godot-"
"Logo mit einem Raster:"

msgid ""
"Each point on this grid is obtained by adding the basis vectors together. "
"The bottom-right corner is X + Y, while the top-right corner is X - Y. If we "
"change the basis vectors, the entire grid moves with it, as the grid is "
"composed of the basis vectors. All lines on the grid that are currently "
"parallel will remain parallel no matter what changes we make to the basis "
"vectors."
msgstr ""
"Jeder Punkt auf diesem Raster ergibt sich aus der Addition der "
"Basisvektoren. Die rechte untere Ecke ist X + Y, während die rechte obere "
"Ecke X - Y ist. Wenn wir die Basisvektoren ändern, bewegt sich das gesamte "
"Raster mit, da das Raster aus den Basisvektoren zusammengesetzt ist. Alle "
"Linien des Rasters, die derzeit parallel sind, bleiben parallel, egal welche "
"Änderungen wir an den Basisvektoren vornehmen."

msgid "As an example, let's set Y to (1, 1):"
msgstr "Als Beispiel setzen wir Y auf (1, 1):"

msgid ""
"You can't set the raw values of a Transform2D in the editor, so you *must* "
"use code if you want to shear the object."
msgstr ""
"Sie können die Rohwerte eines Transform2D im Editor nicht einstellen, also "
"*müssen* Sie Code verwenden, wenn Sie das Objekt scheren wollen."

msgid ""
"Due to the vectors no longer being perpendicular, the object has been "
"sheared. The bottom-center of the grid, which is (0, 1) relative to itself, "
"is now located at a world position of (1, 1)."
msgstr ""
"Da die Vektoren nicht mehr senkrecht zueinander stehen, ist das Objekt "
"geschert worden. Der untere Mittelpunkt des Rasters, der relativ zu sich "
"selbst (0, 1) ist, befindet sich jetzt an der Weltposition (1, 1)."

msgid ""
"The intra-object coordinates are called UV coordinates in textures, so let's "
"borrow that terminology for here. To find the world position from a relative "
"position, the formula is U * X + V * Y, where U and V are numbers and X and "
"Y are the basis vectors."
msgstr ""
"Die Intra-Objekt-Koordinaten werden in Texturen als UV-Koordinaten "
"bezeichnet, so dass wir diese Terminologie hier übernehmen wollen. Um die "
"Weltposition von einer relativen Position aus zu bestimmen, lautet die "
"Formel U * X + V * Y, wobei U und V Zahlen und X und Y die Basisvektoren "
"sind."

msgid ""
"The bottom-right corner of the grid, which is always at the UV position of "
"(1, 1), is at the world position of (2, 1), which is calculated from X*1 + "
"Y*1, which is (1, 0) + (1, 1), or (1 + 1, 0 + 1), or (2, 1). This matches up "
"with our observation of where the bottom-right corner of the image is."
msgstr ""
"Die untere rechte Ecke des Gitters, die sich immer an der UV-Position (1, 1) "
"befindet, befindet sich an der Weltposition (2, 1), die sich aus X*1 + Y*1, "
"also (1, 0) + (1, 1) oder (1 + 1, 0 + 1) oder (2, 1) ergibt. Dies stimmt mit "
"unserer Beobachtung überein, wo sich die untere rechte Ecke des Bildes "
"befindet."

msgid ""
"Similarly, the top-right corner of the grid, which is always at the UV "
"position of (1, -1), is at the world position of (0, -1), which is "
"calculated from X*1 + Y*-1, which is (1, 0) - (1, 1), or (1 - 1, 0 - 1), or "
"(0, -1). This matches up with our observation of where the top-right corner "
"of the image is."
msgstr ""
"Ebenso befindet sich die rechte obere Ecke des Gitters, die sich immer an "
"der UV-Position (1, -1) befindet, an der Weltposition (0, -1), die sich aus "
"X*1 + Y*-1 errechnet, was (1, 0) - (1, 1) oder (1 - 1, 0 - 1) oder (0, -1) "
"ist. Dies stimmt mit unserer Beobachtung überein, wo sich die rechte obere "
"Ecke des Bildes befindet."

msgid ""
"Hopefully you now fully understand the how a transformation matrix affects "
"the object, and the relationship between the basis vectors and how the "
"object's \"UV\" or \"intra-coordinates\" have their world position changed."
msgstr ""
"Sie verstehen nun hoffentlich, wie sich eine Transformationsmatrix auf das "
"Objekt auswirkt und welche Beziehung zwischen den Basisvektoren und der "
"Änderung der Weltposition der \"UV\"- oder \"Intra-Koordinaten\" des Objekts "
"besteht."

msgid ""
"In Godot, all transform math is done relative to the parent node. When we "
"refer to \"world position\", that would be relative to the node's parent "
"instead, if the node had a parent."
msgstr ""
"In Godot werden alle Transformationsberechnungen relativ zum übergeordneten "
"Node durchgeführt. Wenn wir uns auf die \"Weltposition\" beziehen, wäre das "
"relativ zum übergeordneten Node, wenn der Node einen übergeordneten Node "
"hätte."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about linear transformations: https://www.youtube.com/watch?"
"v=kYB8IZa5AuE"
msgstr ""
"Wenn Sie weitere Erklärungen wünschen, sollten Sie sich das exzellente Video "
"von 3Blue1Brown über lineare Transformationen ansehen: https://www.youtube."
"com/watch?v=kYB8IZa5AuE"

msgid "Practical applications of transforms"
msgstr "Praktische Anwendungen von Transformationen"

msgid ""
"In actual projects, you will usually be working with transforms inside "
"transforms by having multiple :ref:`class_Node2D` or :ref:`class_Node3D` "
"nodes parented to each other."
msgstr ""
"In tatsächlichen Projekten werden Sie normalerweise mit Transformationen "
"innerhalb von Transformationen arbeiten, indem Sie mehrere :ref:"
"`class_Node2D` oder :ref:`class_Node3D`-Nodes haben, die einander "
"übergeordnet sind."

msgid ""
"However, it's useful to understand how to manually calculate the values we "
"need. We will go over how you could use :ref:`class_Transform2D` or :ref:"
"`class_Transform3D` to manually calculate transforms of nodes."
msgstr ""
"Es ist jedoch nützlich zu wissen, wie man die benötigten Werte manuell "
"berechnen kann. Wir gehen darauf ein, wie Sie :ref:`class_Transform2D` oder :"
"ref:`class_Transform3D` verwenden können, um Transformationen von Nodes "
"manuell zu berechnen."

msgid "Converting positions between transforms"
msgstr "Positionen zwischen Transformationen konvertieren"

msgid ""
"There are many cases where you'd want to convert a position in and out of a "
"transform. For example, if you have a position relative to the player and "
"would like to find the world (parent-relative) position, or if you have a "
"world position and want to know where it is relative to the player."
msgstr ""
"Es gibt viele Fälle, in denen man eine Position in und aus einer "
"Transformation konvertieren möchte. Zum Beispiel, wenn man eine Position "
"relativ zum Spieler hat und die Weltposition (relativ zum Parent) finden "
"möchte, oder wenn man eine Weltposition hat und wissen möchte, wo sie "
"relativ zum Spieler ist."

msgid ""
"We can find what a vector relative to the player would be defined in world "
"space as using the ``*`` operator:"
msgstr ""
"Wir können herausfinden, wie ein Vektor relativ zum Spieler im World-Space "
"definiert wäre, indem wir den Operator ``*`` verwenden:"

msgid ""
"And we can use the ``*`` operator in the opposite order to find a what world "
"space position would be if it was defined relative to the player:"
msgstr ""
"Und wir können den Operator ``*`` in umgekehrter Reihenfolge verwenden, um "
"eine Position im World-Space zu finden, die relativ zum Spieler definiert "
"wäre:"

msgid ""
"If you know in advance that the transform is positioned at (0, 0), you can "
"use the \"basis_xform\" or \"basis_xform_inv\" methods instead, which skip "
"dealing with translation."
msgstr ""
"Wenn Sie im Voraus wissen, dass die Transformation auf (0, 0) positioniert "
"ist, können Sie stattdessen die Methoden \"basis_xform\" oder "
"\"basis_xform_inv\" verwenden, um die Translation überspringen."

msgid "Moving an object relative to itself"
msgstr "Verschieben eines Objekts relativ zu sich selbst"

msgid ""
"A common operation, especially in 3D games, is to move an object relative to "
"itself. For example, in first-person shooter games, you would want the "
"character to move forward (-Z axis) when you press :kbd:`W`."
msgstr ""
"Vor allem in 3D-Spielen ist es üblich, ein Objekt relativ zu sich selbst zu "
"bewegen. In Ego-Shooter-Spielen möchte man zum Beispiel, dass sich die Figur "
"nach vorne bewegt (-Z-Achse), wenn man :kbd:`W` drückt."

msgid ""
"Since the basis vectors are the orientation relative to the parent, and the "
"origin vector is the position relative to the parent, we can add multiples "
"of the basis vectors to move an object relative to itself."
msgstr ""
"Da die Basisvektoren die Orientierung relativ zum übergeordneten Objekt und "
"der Ursprungsvektor die Position relativ zum übergeordneten Objekt "
"darstellen, können wir ein Vielfaches der Basisvektoren addieren, um ein "
"Objekt relativ zu sich selbst zu bewegen."

msgid "This code moves an object 100 units to its own right:"
msgstr "Dieser Code verschiebt ein Objekt um 100 Einheiten nach rechts:"

msgid "For moving in 3D, you would need to replace \"x\" with \"basis.x\"."
msgstr ""
"Um sich in 3D zu bewegen, müssten Sie \"x\" durch \"basis.x\" ersetzen."

msgid ""
"In actual projects, you can use ``translate_object_local`` in 3D or "
"``move_local_x`` and ``move_local_y`` in 2D to do this."
msgstr ""
"In tatsächlichen Projekten können Sie ``translate_object_local`` in 3D oder "
"``move_local_x`` und ``move_local_y`` in 2D verwenden, um dies zu tun."

msgid "Applying transforms onto transforms"
msgstr "Anwenden von Transformationen auf Transformationen"

msgid ""
"One of the most important things to know about transforms is how you can use "
"several of them together. A parent node's transform affects all of its "
"children. Let's dissect an example."
msgstr ""
"Eines der wichtigsten Dinge, die Sie über Transformationen wissen sollten "
"ist, wie Sie mehrere davon zusammen verwenden können. Die Transformation "
"eines übergeordneten Nodes wirkt sich auf alle untergeordneten Nodes aus. "
"Lassen Sie uns ein Beispiel analysieren."

msgid ""
"In this image, the child node has a \"2\" after the component names to "
"distinguish them from the parent node. It might look a bit overwhelming with "
"so many numbers, but remember that each number is displayed twice (next to "
"the arrows and also in the matrices), and that almost half of the numbers "
"are zero."
msgstr ""
"In diesem Bild hat der Child-Node eine \"2\" hinter den Komponentennamen, um "
"sie vom Parent-Node zu unterscheiden. Bei so vielen Zahlen mag es etwas "
"überwältigend aussehen, aber bedenken Sie, dass jede Zahl zweimal angezeigt "
"wird (neben den Pfeilen und auch in den Matrizen) und dass fast die Hälfte "
"der Zahlen Null ist."

msgid ""
"The only transformations going on here are that the parent node has been "
"given a scale of (2, 1), the child has been given a scale of (0.5, 0.5), and "
"both nodes have been given positions."
msgstr ""
"Die einzigen Transformationen, die hier stattfinden, sind, dass dem Parent-"
"Node eine Skalierung von (2, 1), dem Child-Node ein Maßstab von (0.5, 0.5) "
"und beiden Nodes eine Position zugewiesen wurde."

msgid ""
"All child transformations are affected by the parent transformations. The "
"child has a scale of (0.5, 0.5), so you would expect it to be a 1:1 ratio "
"square, and it is, but only relative to the parent. The child's X vector "
"ends up being (1, 0) in world space, because it is scaled by the parent's "
"basis vectors. Similarly, the child node's ``origin`` vector is set to (1, "
"1), but this actually moves it (2, 1) in world space, due to the parent "
"node's basis vectors."
msgstr ""
"Alle Child-Transformationen werden von den Parent-Transformationen "
"beeinflusst. Das Child hat eine Skalierung von (0.5, 0.5), so dass man "
"erwarten würde, dass es ein Quadrat im Verhältnis 1:1 ist, und das ist es "
"auch, aber nur relativ zum Parent. Der X-Vektor des Child liegt im World-"
"Space bei (1, 0), weil er durch die Basisvektoren des Parent-Nodes skaliert "
"wird. In ähnlicher Weise wird der ``Ursprungsvektor`` des Child-Nodes auf "
"(1, 1) gesetzt, aber dadurch wird er im World-Space aufgrund der "
"Basisvektoren des Parent Nodes auf (2, 1) verschoben."

msgid ""
"To calculate a child transform's world space transform manually, this is the "
"code we would use:"
msgstr ""
"Um die World-Space-Transformation der Child-Transformation manuell zu "
"berechnen, würden wir den folgenden Code verwenden:"

msgid ""
"In actual projects, we can find the world transform of the child by applying "
"one transform onto another using the ``*`` operator:"
msgstr ""
"In tatsächlichen Projekten können wir die World-Space-Transformation des "
"Child finden, indem wir eine Transformation auf eine andere mit dem Operator "
"``*`` anwenden:"

msgid "When multiplying matrices, order matters! Don't mix them up."
msgstr ""
"Beim Multiplizieren von Matrizen kommt es auf die Reihenfolge an! "
"Verwechseln Sie sie nicht."

msgid "Lastly, applying the identity transform will always do nothing."
msgstr ""
"Zuletzt bewirkt die Anwendung der Einheitstransformation niemals etwas."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about matrix composition: https://www.youtube.com/watch?"
"v=XkY2DOUCWMU"
msgstr ""
"Wenn Sie weitere Erklärungen wünschen, sollten Sie sich das exzellente Video "
"von 3Blue1Brown über die Zusammensetzung von Matrizen ansehen: https://www."
"youtube.com/watch?v=XkY2DOUCWMU"

msgid "Inverting a transformation matrix"
msgstr "Invertieren einer Transformationsmatrix"

msgid ""
"The \"affine_inverse\" function returns a transform that \"undoes\" the "
"previous transform. This can be useful in some situations. Let's take a look "
"at a few examples."
msgstr ""
"Die Funktion \"affine_inverse\" gibt eine Transformation zurück, die eine "
"vorherige Transformation \"rückgängig macht\". Dies kann in einigen "
"Situationen nützlich sein. Schauen wir uns einige Beispiele an."

msgid ""
"Multiplying an inverse transform by the normal transform undoes all "
"transformations:"
msgstr ""
"Das Multiplizieren einer inversen Transformation mit der normalen "
"Transformation macht alle Transformationen rückgängig:"

msgid ""
"Transforming a position by a transform and its inverse results in the same "
"position:"
msgstr ""
"Die Transformation einer Position durch eine Transformation und ihre "
"Umkehrung ergibt dieselbe Position:"

msgid "How does it all work in 3D?"
msgstr "Wie funktioniert das alles in 3D?"

msgid ""
"One of the great things about transformation matrices is that they work very "
"similarly between 2D and 3D transformations. All the code and formulas used "
"above for 2D work the same in 3D, with 3 exceptions: the addition of a third "
"axis, that each axis is of type :ref:`class_Vector3`, and also that Godot "
"stores the :ref:`class_Basis` separately from the :ref:`class_Transform3D`, "
"since the math can get complex and it makes sense to separate it."
msgstr ""
"Eine der großartigen Eigenschaften von Transformationsmatrizen ist, dass die "
"2D- und 3D-Transformationen sehr ähnlich funktionieren. Der gesamte Code und "
"die Formeln, die oben für 2D verwendet wurden, funktionieren in 3D genauso, "
"mit drei Ausnahmen: die Hinzufügung einer dritten Achse, dass jede Achse vom "
"Typ :ref:`class_Vector3` ist, und auch, dass Godot die :ref:`class_Basis` "
"getrennt von der :ref:`class_Transform3D` speichert, da die Mathematik "
"komplex werden kann und es sinnvoll ist, sie zu trennen."

msgid ""
"All of the concepts for how translation, rotation, scale, and shearing work "
"in 3D are all the same compared to 2D. To scale, we take each component and "
"multiply it; to rotate, we change where each basis vector is pointing; to "
"translate, we manipulate the origin; and to shear, we change the basis "
"vectors to be non-perpendicular."
msgstr ""
"Alle Konzepte für die Funktionsweise von Translation, Rotation, Skalierung "
"und Scherung funktionieren in 3D genauso wie in 2D. Zum Skalieren nehmen wir "
"jede Komponente und multiplizieren sie; zum Rotieren ändern wir, wohin jeder "
"Basisvektor zeigt; zum Verschieben verändern wir den Ursprung; und zum "
"Scheren ändern wir die Basisvektoren so, dass sie nicht senkrecht sind."

msgid ""
"If you would like, it's a good idea to play around with transforms to get an "
"understanding of how they work. Godot allows you to edit 3D transform "
"matrices directly from the inspector. You can download this project which "
"has colored lines and cubes to help visualize the :ref:`class_Basis` vectors "
"and the origin in both 2D and 3D: https://github.com/godotengine/godot-demo-"
"projects/tree/master/misc/matrix_transform"
msgstr ""
"Wenn Sie möchten, ist es eine gute Idee, mit Transformationen "
"herumzuspielen, um ein Verständnis dafür zu bekommen, wie sie funktionieren. "
"Mit Godot können Sie 3D-Transformationsmatrizen direkt vom Inspektor aus "
"bearbeiten. Sie können das folgende Projekt mit farbigen Linien und Würfeln "
"herunterladen, um die Vektoren der :ref:`class_Basis` und den Ursprung "
"sowohl in 2D als auch in 3D zu visualisieren: https://github.com/godotengine/"
"godot-demo-projects/tree/master/misc/matrix_transform"

msgid ""
"You cannot edit Node2D's transform matrix directly in Godot 4.0's inspector. "
"This may be changed in a future release of Godot."
msgstr ""
"Sie können die Transformationsmatrix von Node2D nicht direkt im Inspektor "
"von Godot 4.0 bearbeiten. Dies wird möglicherweise in einer zukünftigen "
"Version von Godot geändert."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about 3D linear transformations: https://www.youtube.com/"
"watch?v=rHLEWRxRGiM"
msgstr ""
"Wenn Sie zusätzliche Erklärungen wünschen, sollten Sie sich das exzellente "
"Video von 3Blue1Brown über lineare 3D-Transformationen ansehen: https://www."
"youtube.com/watch?v=rHLEWRxRGiM"

msgid "Representing rotation in 3D (advanced)"
msgstr "Darstellung der Rotation in 3D (fortgeschritten)"

msgid ""
"The biggest difference between 2D and 3D transformation matrices is how you "
"represent rotation by itself without the basis vectors."
msgstr ""
"Der größte Unterschied zwischen 2D- und 3D-Transformationsmatrizen besteht "
"darin, wie Sie die Rotation selbst ohne die Basisvektoren darstellen."

msgid ""
"With 2D, we have an easy way (atan2) to switch between a transformation "
"matrix and an angle. In 3D, rotation is too complex to represent as one "
"number. There is something called Euler angles, which can represent "
"rotations as a set of 3 numbers, however, they are limited and not very "
"useful, except for trivial cases."
msgstr ""
"In 2D gibt es eine einfache Möglichkeit (atan2), zwischen einer "
"Transformationsmatrix und einem Winkel zu wechseln. In 3D ist die Drehung zu "
"komplex, um sie als eine Zahl darzustellen. Es gibt etwas, das Euler-Winkel "
"genannt wird und Drehungen als eine Menge von 3 Zahlen darstellen kann, aber "
"sie sind begrenzt und nicht sehr nützlich, außer für triviale Fälle."

msgid ""
"In 3D we do not typically use angles, we either use a transformation basis "
"(used pretty much everywhere in Godot), or we use quaternions. Godot can "
"represent quaternions using the :ref:`class_Quaternion` struct. My "
"suggestion to you is to completely ignore how they work under-the-hood, "
"because they are very complicated and unintuitive."
msgstr ""
"In 3D verwenden wir normalerweise keine Winkel, sondern entweder eine "
"Transformationsbasis (die in Godot so gut wie überall verwendet wird) oder "
"Quaternionen. Godot kann Quaternionen mit der Struktur :ref:"
"`class_Quaternion` darstellen. Ich schlage vor, dass Sie komplett "
"ignorieren, wie sie im Detail funktionieren, da sie sehr kompliziert und "
"unintuitiv sind."

msgid ""
"However, if you really must know how it works, here are some great "
"resources, which you can follow in order:"
msgstr ""
"Wenn Sie jedoch wirklich wissen müssen, wie es funktioniert, finden Sie hier "
"einige großartige Ressourcen, die Sie durchgehen können:"

msgid "https://www.youtube.com/watch?v=mvmuCPvRoWQ"
msgstr "https://www.youtube.com/watch?v=mvmuCPvRoWQ"

msgid "https://www.youtube.com/watch?v=d4EgbgTm0Bg"
msgstr "https://www.youtube.com/watch?v=d4EgbgTm0Bg"

msgid "https://eater.net/quaternions"
msgstr "https://eater.net/quaternions"

msgid "Translation status"
msgstr "Übersetzungsstatus"
