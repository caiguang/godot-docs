# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Optimization using MultiMeshes"
msgstr "Optimierungen durch MultiMeshes"

msgid ""
"For large amount of instances (in the thousands), that need to be constantly "
"processed (and certain amount of control needs to be retained), :ref:`using "
"servers directly <doc_using_servers>` is the recommended optimization."
msgstr ""
"Für eine große Anzahl (Tausende) von Instanzen, die ständig verarbeitet "
"werden müssen (und ein gewisses Maß an Kontrolle beibehalten werden muss), "
"wird Folgendes empfohlen :ref:`Server direkt verwenden <doc_using_servers>`."

msgid ""
"When the amount of objects reach the hundreds of thousands or millions, none "
"of these approaches are efficient anymore. Still, depending on the "
"requirements, there is one more optimization possible."
msgstr ""
"Wenn die Anzahl der Objekte Hunderttausende oder Millionen erreicht, ist "
"keiner dieser Ansätze mehr effizient. Abhängig von den Anforderungen ist "
"jedoch noch eine weitere Optimierung möglich."

msgid "MultiMeshes"
msgstr "MultiMeshes"

msgid ""
"A :ref:`MultiMesh<class_MultiMesh>` is a single draw primitive that can draw "
"up to millions of objects in one go. It's extremely efficient because it "
"uses the GPU hardware to do this (in OpenGL ES 2.0, it's less efficient "
"because there is no hardware support for it, though)."
msgstr ""
"Ein :ref:`MultiMesh <class_MultiMesh>` ist ein einzelnes Zeichenelement, das "
"bis zu Millionen von Objekten auf einmal zeichnen kann. Es ist äußerst "
"effizient, da hierfür die GPU-Hardware verwendet wird (in OpenGL ES 2.0 ist "
"es jedoch weniger effizient, da es keine Hardwareunterstützung gibt)."

msgid ""
"The only drawback is that there is no *screen* or *frustum* culling possible "
"for individual instances. This means, that millions of objects will be "
"*always* or *never* drawn, depending on the visibility of the whole "
"MultiMesh. It is possible to provide a custom visibility rect for them, but "
"it will always be *all-or-none* visibility."
msgstr ""
"Der einzige Nachteil ist, dass für einzelne Instanzen kein *Screen*- oder "
"*Frustum*-Culling möglich ist. Dies bedeutet, dass Millionen von Objekten "
"*immer* oder *nie* gezeichnet werden, abhängig von der Sichtbarkeit des "
"gesamten MultiMesh. Es ist möglich, eine benutzerdefinierte "
"Sichtbarkeitsrechteck für sie bereitzustellen, aber es wird immer eine "
"*alles oder nichts*-Sichtbarkeit sein."

msgid ""
"If the objects are simple enough (just a couple of vertices), this is "
"generally not much of a problem as most modern GPUs are optimized for this "
"use case. A workaround is to create several MultiMeshes for different areas "
"of the world."
msgstr ""
"Wenn die Objekte einfach genug sind (nur ein paar Vertices) ist dies im "
"Allgemeinen kein großes Problem, da die meisten modernen GPUs für diesen "
"Anwendungsfall optimiert sind. Eine Umgehung des Problems besteht darin, "
"mehrere MultiMeshes für verschiedene Regionen der Welt zu erstellen."

msgid ""
"It is also possible to execute some logic inside the vertex shader (using "
"the ``INSTANCE_ID`` or ``INSTANCE_CUSTOM`` built-in constants). For an "
"example of animating thousands of objects in a MultiMesh, see the :ref:"
"`Animating thousands of fish <doc_animating_thousands_of_fish>` tutorial. "
"Information to the shader can be provided via textures (there are floating-"
"point :ref:`Image<class_Image>` formats which are ideal for this)."
msgstr ""
"Es ist auch möglich, eine Logik innerhalb des Vertex-Shaders auszuführen "
"(unter Verwendung der Built-in-Konstanten ``INSTANCE_ID`` oder "
"``INSTANCE_CUSTOM``). Ein Beispiel für das Animieren von Tausenden von "
"Objekten in einem MultiMesh finden Sie in der Anleitung :ref:`Animieren von "
"Tausenden von Fischen <doc_animating_thousands_of_fish>`. Informationen für "
"den Shader können über Texturen bereitgestellt werden (es gibt Float-:ref:"
"`Bild <class_Image>`-Formate, die dafür ideal sind)."

msgid ""
"Another alternative is to use a GDExtension and C++, which should be "
"extremely efficient (it's possible to set the entire state for all objects "
"using linear memory via the :ref:`RenderingServer.multimesh_set_buffer() "
"<class_RenderingServer_method_multimesh_set_buffer>` function). This way, "
"the array can be created with multiple threads, then set in one call, "
"providing high cache efficiency."
msgstr ""
"Eine andere Alternative ist die Verwendung einer GDExtension und C++, was "
"extrem effizient sein sollte (es ist möglich, den gesamten Status für alle "
"Objekte mit linearem Speicher über die Funktion :ref:`RenderingServer."
"multimesh_set_buffer() <class_RenderingServer_method_multimesh_set_buffer>` "
"zu setzen). Auf diese Weise kann das Array mit mehreren Threads erstellt und "
"dann in einem Aufruf gesetzt werden, was eine hohe Cache-Effizienz bietet."

msgid ""
"Finally, it's not required to have all MultiMesh instances visible. The "
"amount of visible ones can be controlled with the :ref:`MultiMesh."
"visible_instance_count <class_MultiMesh_property_visible_instance_count>` "
"property. The typical workflow is to allocate the maximum amount of "
"instances that will be used, then change the amount visible depending on how "
"many are currently needed."
msgstr ""
"Schließlich müssen nicht alle MultiMesh-Instanzen sichtbar sein. Die Anzahl "
"der sichtbaren Instanzen kann mit der Property :ref:`MultiMesh."
"visible_instance_count <class_MultiMesh_property_visible_instance_count>` "
"gesteuert werden. Der typische Ablauf besteht darin, die maximale Anzahl der "
"verwendeten Instanzen zuzuweisen und dann die sichtbare Anzahl zu ändern, je "
"nachdem wie viele derzeit benötigt werden."

msgid "Multimesh example"
msgstr "Ein MultiMesh-Beispiel"

msgid ""
"Here is an example of using a MultiMesh from code. Languages other than "
"GDScript may be more efficient for millions of objects, but for a few "
"thousands, GDScript should be fine."
msgstr ""
"Hier ist ein Beispiel für die Verwendung eines MultiMeshs aus Code heraus. "
"Andere Sprachen als GDScript sind möglicherweise für Millionen von Objekten "
"effizienter, aber für einige Tausend sollte GDScript ausreichen."

msgid "Translation status"
msgstr "Übersetzungsstatus"
