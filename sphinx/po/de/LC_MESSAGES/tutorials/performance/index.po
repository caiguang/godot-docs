# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Performance"
msgstr "Performance"

msgid "Introduction"
msgstr "Einführung"

msgid ""
"Godot follows a balanced performance philosophy. In the performance world, "
"there are always tradeoffs, which consist of trading speed for usability and "
"flexibility. Some practical examples of this are:"
msgstr ""
"Godot verfolgt eine ausgewogene Performance-Philosophie. In der Welt der "
"Performance gibt es immer Kompromisse, die darin bestehen, Geschwindigkeit "
"gegen Benutzerfreundlichkeit und Flexibilität einzutauschen. Einige "
"praktische Beispiele hierfür sind:"

msgid ""
"Rendering large amounts of objects efficiently is easy, but when a large "
"scene must be rendered, it can become inefficient. To solve this, visibility "
"computation must be added to the rendering. This makes rendering less "
"efficient, but at the same time, fewer objects are rendered. Therefore, the "
"overall rendering efficiency is improved."
msgstr ""
"Das effiziente Rendern einer Vielzahl von Objekten ist einfach. Muss jedoch "
"eine besonders aufwändige Szene gerendert werden, kann es ineffizient "
"werden. Um dies zu lösen, muss vor dem Rendering eine Berechnung der "
"sichtbaren und damit aktuell relevanten Objekte stattfinden, wodurch das "
"Rendern ineffizienter wird, gleichzeitig jedoch weniger Objekte gezeichnet "
"werden, sodass sich die Effizienz insgesamt verbessert."

msgid ""
"Configuring the properties of every material for every object that needs to "
"be rendered is also slow. To solve this, objects are sorted by material to "
"reduce the costs. At the same time, sorting has a cost."
msgstr ""
"Auch das Setzen der Propertys jedes Materials für jedes Objekt, das "
"gezeichnet werden muss, ist langsam. Um dieses Problem zu lösen, werden die "
"Objekte nach Material sortiert, um die Kosten zu senken. Gleichzeitig ist "
"die Sortierung mit Kosten verbunden."

msgid ""
"In 3D physics, a similar situation happens. The best algorithms to handle "
"large amounts of physics objects (such as SAP) are slow at insertion/removal "
"of objects and raycasting. Algorithms that allow faster insertion and "
"removal, as well as raycasting, will not be able to handle as many active "
"objects."
msgstr ""
"In 3D-Physik-Berechnungen besteht eine ähnliche Situation. Die besten "
"Algorithmen für die Verarbeitung großer Mengen von Physikobjekten (z.B. SAP) "
"sind beim Einfügen/Entfernen von Objekten und Raycasting vergleichsweise "
"langsam. Im Gegensatz dazu können Algorithmen, die ein schnelleres Einfügen "
"und Entfernen sowie Raycasting ermöglichen, nicht so viele aktive Objekte "
"verarbeiten."

msgid ""
"And there are many more examples of this! Game engines strive to be general-"
"purpose in nature. Balanced algorithms are always favored over algorithms "
"that might be fast in some situations and slow in others, or algorithms that "
"are fast but are more difficult to use."
msgstr ""
"Und es gibt noch viele weitere Beispiele! Die meisten Spiele-Engines bieten "
"ein breites Anwendungsspektrum an, dabei werden ausgewogene Algorithmen den "
"Algorithmen vorgezogen, die in manchen Situationen schnell und in anderen "
"langsam sind, oder Algorithmen, die zwar schnell, jedoch komplizierter zu "
"verwenden sind."

msgid ""
"Godot is not an exception to this. While it is designed to have backends "
"swappable for different algorithms, the default backends prioritize balance "
"and flexibility over performance."
msgstr ""
"Godot bildet dabei keine Ausnahme. Während es so konzipiert ist, dass die "
"Backends für verschiedene Algorithmen austauschbar sind, haben bei den "
"Default-Backends Ausgewogenheit und Flexibilität Vorrang vor Performance."

msgid ""
"With this clear, the aim of this tutorial section is to explain how to get "
"the maximum performance out of Godot. While the tutorials can be read in any "
"order, it is a good idea to start from :ref:`doc_general_optimization`."
msgstr ""
"Vor diesem Hintergrund soll in diesem Tutorial erklärt werden, wie Sie die "
"maximale Performance von Godot erzielen können. Während die Tutorials in "
"beliebiger Reihenfolge gelesen werden können, ist es eine gute Idee, bei :"
"ref:`doc_general_optimization` zu beginnen."

msgid "Common"
msgstr "Allgemein"

msgid "CPU"
msgstr "CPU"

msgid "GPU"
msgstr "GPU"

msgid "3D"
msgstr "3D"

msgid "Threads"
msgstr "Threads"

msgid "Translation status"
msgstr "Übersetzungsstatus"
