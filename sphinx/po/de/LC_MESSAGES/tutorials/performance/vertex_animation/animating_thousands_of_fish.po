# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Animating thousands of fish with MultiMeshInstance3D"
msgstr "Animieren von Tausenden von Fischen mit MultiMeshInstance3D"

msgid ""
"This tutorial explores a technique used in the game `ABZU <https://www."
"gdcvault.com/play/1024409/Creating-the-Art-of-ABZ>`_ for rendering and "
"animating thousands of fish using vertex animation and static mesh "
"instancing."
msgstr ""
"Dieses Tutorial beschäftigt sich mit einer Methode, die in dem Spiel `ABZU "
"<https://www.gdcvault.com/play/1024409/Creating-the-Art-of-ABZ>`_ verwendet "
"wird, um Tausende von Fischen mit Hilfe von Vertex-Animation und statischem "
"Mesh-Instancing zu rendern und zu animieren."

msgid ""
"In Godot, this can be accomplished with a custom :ref:`Shader "
"<class_Shader>` and a :ref:`MultiMeshInstance3D "
"<class_MultiMeshInstance3D>`. Using the following technique you can render "
"thousands of animated objects, even on low end hardware."
msgstr ""
"In Godot kann dies mit einem eigenen :ref:`Shader <class_Shader>` und einem :"
"ref:`MultiMeshInstance3D <class_MultiMeshInstance3D>` erreicht werden. Mit "
"der folgenden Methode können Sie Tausende von animierten Objekten rendern, "
"sogar auf Low-End-Hardware."

msgid ""
"We will start by animating one fish. Then, we will see how to extend that "
"animation to thousands of fish."
msgstr ""
"Wir beginnen mit der Animation eines einzelnen Fisches. Dann werden wir "
"sehen, wie wir diese Animation auf Tausende von Fischen ausweiten können."

msgid "Animating one Fish"
msgstr "Animieren eines Fischs"

msgid ""
"We will start with a single fish. Load your fish model into a :ref:"
"`MeshInstance3D <class_MeshInstance3D>` and add a new :ref:`ShaderMaterial "
"<class_ShaderMaterial>`."
msgstr ""
"Wir werden mit einem einzelnen Fisch beginnen. Laden Sie Ihr Fischmodell in "
"eine :ref:`MeshInstance3D <class_MeshInstance3D>` und fügen Sie ein neues :"
"ref:`ShaderMaterial <class_ShaderMaterial>` hinzu."

msgid ""
"Here is the fish we will be using for the example images, you can use any "
"fish model you like."
msgstr ""
"Hier ist der Fisch, den wir für die Beispielbilder verwenden werden. Sie "
"können jedes beliebige Fischmodell verwenden, das Ihnen gefällt."

msgid ""
"The fish model in this tutorial is made by `QuaterniusDev <https://"
"quaternius.com>`_ and is shared with a creative commons license. CC0 1.0 "
"Universal (CC0 1.0) Public Domain Dedication https://creativecommons.org/"
"publicdomain/zero/1.0/"
msgstr ""
"Das Fischmodell in diesem Tutorial stammt von `QuaterniusDev <https://"
"quaternius.com>`_ und wird unter einer Creative Commons Lizenz zur Verfügung "
"gestellt. CC0 1.0 Universal (CC0 1.0) Public Domain Dedication https://"
"creativecommons.org/publicdomain/zero/1.0/"

msgid ""
"Typically, you would use bones and a :ref:`Skeleton3D <class_Skeleton3D>` to "
"animate objects. However, bones are animated on the CPU and so you end "
"having to calculate thousands of operations every frame and it becomes "
"impossible to have thousands of objects. Using vertex animation in a vertex "
"shader, you avoid using bones and can instead calculate the full animation "
"in a few lines of code and completely on the GPU."
msgstr ""
"Normalerweise würden Sie Knochen und ein :ref:`Skeleton3D "
"<class_Skeleton3D>` verwenden, um Objekte zu animieren. Knochen werden "
"jedoch auf der CPU animiert, so dass Sie am Ende Tausende von Operationen "
"pro Frame berechnen müssen und es unmöglich wird, Tausende von Objekten zu "
"haben. Wenn Sie die Vertex-Animation in einem Vertex-Shader verwenden, "
"vermeiden Sie die Verwendung von Knochen und können stattdessen die gesamte "
"Animation in wenigen Codezeilen und vollständig auf der GPU berechnen."

msgid "The animation will be made of four key motions:"
msgstr "Die Animation soll aus vier Hauptbewegungen bestehen:"

msgid "A side to side motion"
msgstr "Eine Bewegung von Seite zu Seite"

msgid "A pivot motion around the center of the fish"
msgstr "Eine Pivot-Drehbewegung um das Zentrum des Fisches"

msgid "A panning wave motion"
msgstr "Eine schwenkende Wellenbewegung"

msgid "A panning twist motion"
msgstr "Eine schwenkende Drehbewegung"

msgid ""
"All the code for the animation will be in the vertex shader with uniforms "
"controlling the amount of motion. We use uniforms to control the strength of "
"the motion so that you can tweak the animation in editor and see the results "
"in real time, without the shader having to recompile."
msgstr ""
"Der gesamte Code für die Animation befindet sich im Vertex-Shader, wobei "
"Uniforms den Umfang der Bewegung steuern. Wir verwenden Uniforms, um die "
"Stärke der Bewegung zu steuern, so dass Sie die Animation im Editor "
"optimieren und die Ergebnisse in Echtzeit sehen können, ohne dass der Shader "
"neu kompiliert werden muss."

msgid ""
"All the motions will be made using cosine waves applied to ``VERTEX`` in "
"model space. We want the vertices to be in model space so that the motion is "
"always relative to the orientation of the fish. For example, side-to-side "
"will always move the fish back and forth in its left to right direction, "
"instead of on the ``x`` axis in the world orientation."
msgstr ""
"Alle Bewegungen werden mit Kosinuswellen ausgeführt, die auf ``VERTEX`` im "
"Model-Space angewendet werden. Wir wollen, dass die Eckpunkte im Model-Space "
"liegen, so dass die Bewegung immer relativ zur Ausrichtung des Fisches ist. "
"Zum Beispiel wird der Fisch bei einer Seitwärtsbewegung immer von links nach "
"rechts hin- und herbewegt, anstatt entlang der ``x``-Achse im World-Space."

msgid ""
"In order to control the speed of the animation, we will start by defining "
"our own time variable using ``TIME``."
msgstr ""
"Um die Geschwindigkeit der Animation zu steuern, definieren wir zunächst "
"unsere eigene Zeitvariable mit ``TIME``."

msgid ""
"The first motion we will implement is the side to side motion. It can be "
"made by offsetting ``VERTEX.x`` by ``cos`` of ``TIME``. Each time the mesh "
"is rendered, all the vertices will move to the side by the amount of "
"``cos(time)``."
msgstr ""
"Die erste Bewegung, die wir implementieren werden, ist die Bewegung von "
"Seite zu Seite. Sie kann durch eine Verschiebung von ``VERTEX.x`` um ``cos`` "
"von ``TIME`` erzeugt werden. Jedes Mal, wenn das Mesh gerendert wird, werden "
"alle Vertices um den Betrag von ``cos(time)`` zur Seite bewegt."

msgid "The resulting animation should look something like this:"
msgstr "Die resultierende Animation sollte in etwa so aussehen:"

msgid ""
"Next, we add the pivot. Because the fish is centered at (0, 0), all we have "
"to do is multiply ``VERTEX`` by a rotation matrix for it to rotate around "
"the center of the fish."
msgstr ""
"Als nächstes fügen wir den Pivot-Punkt hinzu. Da der Fisch bei (0, 0) "
"zentriert ist, müssen wir nur ``VERTEX`` mit einer Rotationsmatrix "
"multiplizieren, damit er sich um den Mittelpunkt des Fisches rotiert."

msgid "We construct a rotation matrix like so:"
msgstr "Wir konstruieren eine Rotationsmatrix wie folgt:"

msgid ""
"And then we apply it in the ``x`` and ``z`` axes by multiplying it by "
"``VERTEX.xz``."
msgstr ""
"Und dann wenden wir es auf die Achsen ``x`` und ``z`` an, indem wir es mit "
"``VERTEX.xz`` multiplizieren."

msgid "With only the pivot applied you should see something like this:"
msgstr "Wenn Sie nur den Pivot anwenden, sollten Sie etwa so etwas sehen:"

msgid ""
"The next two motions need to pan down the spine of the fish. For that, we "
"need a new variable, ``body``. ``body`` is a float that is ``0`` at the tail "
"of the fish and ``1`` at its head."
msgstr ""
"Die nächsten beiden Bewegungen müssen die Wirbelsäule des Fisches abwärts "
"schwenken. Dafür brauchen wir eine neue Variable, ``body``. ``body`` ist ein "
"Float, der am Schwanz des Fisches den Wert ``0`` und am Kopf den Wert ``1`` "
"hat."

msgid ""
"The next motion is a cosine wave that moves down the length of the fish. To "
"make it move along the spine of the fish, we offset the input to ``cos`` by "
"the position along the spine, which is the variable we defined above, "
"``body``."
msgstr ""
"Die nächste Bewegung ist eine Kosinuswelle, die sich entlang der Länge des "
"Fisches bewegt. Damit sie sich entlang der Wirbelsäule des Fisches bewegt, "
"verschieben wir den Eingangswert von ``cos`` um die Position entlang der "
"Wirbelsäule, was die Variable ``body`` ist, die wir oben definiert haben."

msgid ""
"This looks very similar to the side to side motion we defined above, but in "
"this one, by using ``body`` to offset ``cos`` each vertex along the spine "
"has a different position in the wave making it look like a wave is moving "
"along the fish."
msgstr ""
"Dies sieht sehr ähnlich aus wie die Bewegung von Seite zu Seite, die wir "
"oben definiert haben, aber in diesem Fall hat jeder Vertex entlang der "
"Wirbelsäule eine andere Position in der Welle, so dass es so aussieht, als "
"würde sich eine Welle entlang des Fisches bewegen, indem wir ``body`` als "
"Offset für ``cos`` verwenden."

msgid ""
"The last motion is the twist, which is a panning roll along the spine. "
"Similarly to the pivot, we first construct a rotation matrix."
msgstr ""
"Die letzte Bewegung ist die Verdrehung, die eine schwenkende Rollbewegung "
"entlang der Wirbelsäule ist. Ähnlich wie bei der Pivot-Rotation konstruieren "
"wir zunächst eine Rotationsmatrix."

msgid ""
"We apply the rotation in the ``xy`` axes so that the fish appears to roll "
"around its spine. For this to work, the fish's spine needs to be centered on "
"the ``z`` axis."
msgstr ""
"Wir wenden die Rotation in der ``xy``-Achse an, so dass der Fisch um seine "
"Wirbelsäule zu rollen scheint. Damit dies funktioniert, muss die Wirbelsäule "
"des Fisches auf der ``z``-Achse zentriert sein."

msgid "Here is the fish with twist applied:"
msgstr "Hier ist der Fisch mit angewendeter Verdrehung:"

msgid ""
"If we apply all these motions one after another, we get a fluid jelly-like "
"motion."
msgstr ""
"Wenn wir alle diese Bewegungen nacheinander anwenden, erhalten wir eine "
"flüssige geleeartige Bewegung."

msgid ""
"Normal fish swim mostly with the back half of their body. Accordingly, we "
"need to limit the panning motions to the back half of the fish. To do this, "
"we create a new variable, ``mask``."
msgstr ""
"Normale Fische schwimmen hauptsächlich mit der hinteren Hälfte ihres "
"Körpers. Dementsprechend müssen wir die Schwenkbewegungen auf die hintere "
"Hälfte des Fisches beschränken. Zu diesem Zweck erstellen wir eine neue "
"Variable, ``mask``."

msgid ""
"``mask`` is a float that goes from ``0`` at the front of the fish to ``1`` "
"at the end using ``smoothstep`` to control the point at which the transition "
"from ``0`` to ``1`` happens."
msgstr ""
"``mask`` ist ein Float, der von ``0`` an der Vorderseite des Fisches bis "
"``1`` am Ende reicht und ``smoothstep`` benutzt, um den Punkt zu steuern, an "
"dem der Übergang von ``0`` zu ``1`` stattfindet."

msgid "Below is an image of the fish with ``mask`` used as ``COLOR``:"
msgstr ""
"Unten sehen Sie ein Bild des Fisches, der ``mask`` als ``COLOR`` verwendet:"

msgid ""
"For the wave, we multiply the motion by ``mask`` which will limit it to the "
"back half."
msgstr ""
"Für die Welle multiplizieren wir die Bewegung mit ``mask``, wodurch sie auf "
"die hintere Hälfte beschränkt wird."

msgid ""
"In order to apply the mask to the twist, we use ``mix``. ``mix`` allows us "
"to mix the vertex position between a fully rotated vertex and one that is "
"not rotated. We need to use ``mix`` instead of multiplying ``mask`` by the "
"rotated ``VERTEX`` because we are not adding the motion to the ``VERTEX`` we "
"are replacing the ``VERTEX`` with the rotated version. If we multiplied that "
"by ``mask``, we would shrink the fish."
msgstr ""
"Um die Maske auf die Verdrehung anzuwenden, benutzen wir ``mix``. ``mix`` "
"erlaubt es uns, die Position des Vertex zwischen einem vollständig rotierten "
"Vertex und einem nicht rotierten zu mischen. Wir müssen ``mix`` benutzen, "
"anstatt ``mask`` mit dem rotierten ``VERTEX`` zu multiplizieren, weil wir "
"die Bewegung nicht zum ``VERTEX`` hinzufügen, sondern den ``VERTEX`` durch "
"die rotierte Version ersetzen. Wenn wir das mit ``mask`` multiplizieren "
"würden, würden wir den Fisch schrumpfen."

msgid "Putting the four motions together gives us the final animation."
msgstr ""
"Wenn man die vier Bewegungen zusammenfügt, erhält man die endgültige "
"Animation."

msgid ""
"Go ahead and play with the uniforms in order to alter the swim cycle of the "
"fish. You will find that you can create a wide variety of swim styles using "
"these four motions."
msgstr ""
"Spielen Sie mit den Uniforms, um den Schwimmzyklus des Fisches zu verändern. "
"Sie werden feststellen, dass Sie mit diesen vier Bewegungen eine große "
"Vielfalt an Schwimmstilen erzeugen können."

msgid "Making a school of fish"
msgstr "Erstellen eines Fischschwarms"

msgid ""
"Godot makes it easy to render thousands of the same object using a "
"MultiMeshInstance3D node."
msgstr ""
"Godot macht es einfach, Tausende von ein und demselben Objekt mit einem "
"MultiMeshInstance3D-Node zu rendern."

msgid ""
"A MultiMeshInstance3D node is created and used the same way you would make a "
"MeshInstance3D node. For this tutorial, we will name the MultiMeshInstance3D "
"node ``School``, because it will contain a school of fish."
msgstr ""
"Ein MultiMeshInstance3D-Node wird auf die gleiche Weise erstellt und "
"verwendet wie ein MeshInstance3D-Node. Für dieses Tutorial werden wir den "
"MultiMeshInstance3D Node ``School`` nennen, da er einen Fischschwarm (engl. "
"school of fish) enthalten wird."

msgid ""
"Once you have a MultiMeshInstance3D add a :ref:`MultiMesh "
"<class_MultiMesh>`, and to that MultiMesh add your :ref:`Mesh <class_Mesh>` "
"with the shader from above."
msgstr ""
"Sobald Sie eine MultiMeshInstance3D haben, fügen Sie ein :ref:`MultiMesh "
"<class_MultiMesh>` hinzu, und zu diesem MultiMesh fügen Sie Ihr :ref:`Mesh "
"<class_Mesh>` mit dem Shader von oben hinzu."

msgid ""
"MultiMeshes draw your Mesh with three additional per-instance properties: "
"Transform (rotation, translation, scale), Color, and Custom. Custom is used "
"to pass in 4 multi-use variables using a :ref:`Color <class_Color>`."
msgstr ""
"MultiMeshes zeichnen Ihr Mesh mit drei zusätzlichen Propertys pro Instanz: "
"Transform (Rotation, Translation, Skalierung), Color und Custom. Custom wird "
"verwendet, um 4 mehrfach verwendbare Variablen mit einem :ref:`Color "
"<class_Color>` zu übergeben."

msgid ""
"``instance_count`` specifies how many instances of the mesh you want to "
"draw. For now, leave ``instance_count`` at ``0`` because you cannot change "
"any of the other parameters while ``instance_count`` is larger than ``0``. "
"We will set ``instance count`` in GDScript later."
msgstr ""
"``instance_count`` gibt an, wie viele Instanzen des Meshes Sie zeichnen "
"wollen. Für den Moment lassen Sie ``instance_count`` auf ``0`` stehen, da "
"Sie keinen der anderen Parameter ändern können, solange ``instance_count`` "
"größer als ``0`` ist. Wir werden ``instance count`` später in GDScript "
"einstellen."

msgid ""
"``transform_format`` specifies whether the transforms used are 3D or 2D. For "
"this tutorial, select 3D."
msgstr ""
"Mit ``transform_format`` wird angegeben, ob die verwendeten Transformationen "
"3D oder 2D sind. Für dieses Tutorial wählen Sie 3D."

msgid ""
"For both ``color_format`` and ``custom_data_format`` you can choose between "
"``None``, ``Byte``, and ``Float``. ``None`` means you won't be passing in "
"that data (either a per-instance ``COLOR`` variable, or ``INSTANCE_CUSTOM``) "
"to the shader. ``Byte`` means each number making up the color you pass in "
"will be stored with 8 bits while ``Float`` means each number will be stored "
"in a floating-point number (32 bits). ``Float`` is slower but more precise, "
"``Byte`` will take less memory and be faster, but you may see some visual "
"artifacts."
msgstr ""
"Sowohl für ``color_format`` als auch für ``custom_data_format`` können Sie "
"zwischen ``None``, ``Byte`` und ``Float`` wählen. ``None`` bedeutet, dass "
"Sie diese Daten (entweder eine ``COLOR``-Variable pro Instanz, oder "
"``INSTANCE_CUSTOM``) nicht an den Shader weitergeben werden. ``Byte`` "
"bedeutet, dass jede Zahl, aus der die Farbe besteht, die Sie übergeben, mit "
"8 Bits gespeichert wird, während ``Float`` bedeutet, dass jede Zahl in einem "
"Float (32 Bits) gespeichert wird. ``Float`` ist langsamer, aber präziser, "
"``Byte`` benötigt weniger Speicherplatz und ist schneller, aber Sie könnten "
"möglicherweise einige visuelle Artefakte sehen."

msgid "Now, set ``instance_count`` to the number of fish you want to have."
msgstr ""
"Setzen Sie nun ``instance_count`` auf die Anzahl der Fische, die Sie haben "
"möchten."

msgid "Next we need to set the per-instance transforms."
msgstr ""
"Als nächstes müssen wir die Transformationen für jede Instanz festlegen."

msgid ""
"There are two ways to set per-instance transforms for MultiMeshes. The first "
"is entirely in editor and is described in the :ref:`MultiMeshInstance3D "
"tutorial <doc_using_multi_mesh_instance>`."
msgstr ""
"Es gibt zwei Möglichkeiten, Transformationen pro Instanz für MultiMeshes zu "
"setzen. Die erste erfolgt vollständig im Editor und wird im :ref:"
"`MultiMeshInstance3D-Tutorial <doc_using_multi_mesh_instance>` beschrieben."

msgid ""
"The second is to loop over all the instances and set their transforms in "
"code. Below, we use GDScript to loop over all the instances and set their "
"transform to a random position."
msgstr ""
"Die zweite Möglichkeit besteht darin, eine Schleife über alle Instanzen zu "
"bilden und ihre Transformationen im Code festzulegen. Im Folgenden verwenden "
"wir GDScript, um eine Schleife über alle Instanzen zu bilden und ihre "
"Transformation auf eine zufällige Position zu setzen."

msgid ""
"Running this script will place the fish in random positions in a box around "
"the position of the MultiMeshInstance3D."
msgstr ""
"Wenn dieses Skript ausgeführt wird, werden die Fische an zufälligen "
"Positionen in einer Box um die Position der MultiMeshInstance3D platziert."

msgid ""
"If performance is an issue for you, try running the scene with fewer fish."
msgstr ""
"Wenn die Performance für Sie ein Problem darstellt, versuchen Sie, die Szene "
"mit weniger Fischen auszuführen."

msgid ""
"Notice how all the fish are all in the same position in their swim cycle? It "
"makes them look very robotic. The next step is to give each fish a different "
"position in the swim cycle so the entire school looks more organic."
msgstr ""
"Haben Sie bemerkt, dass alle Fische in ihrem Schwimmzyklus die gleiche "
"Position einnehmen? Das lässt sie sehr roboterhaft aussehen. Der nächste "
"Schritt besteht darin, jedem Fisch eine andere Position im Schwimmzyklus zu "
"geben, damit der gesamte Schwarm organischer aussieht."

msgid "Animating a school of fish"
msgstr "Animieren eines Fischschwarmes"

msgid ""
"One of the benefits of animating the fish using ``cos`` functions is that "
"they are animated with one parameter, ``time``. In order to give each fish a "
"unique position in the swim cycle, we only need to offset ``time``."
msgstr ""
"Einer der Vorteile der Animation der Fische mit Hilfe von ``cos``-Funktionen "
"ist, dass sie mit einem einzigen Parameter, ``time``, animiert werden. Um "
"jedem Fisch eine eindeutige Position im Schwimmzyklus zu geben, müssen wir "
"nur die ``time`` verschieben."

msgid ""
"We do that by adding the per-instance custom value ``INSTANCE_CUSTOM`` to "
"``time``."
msgstr ""
"Wir tun dies, indem wir den pro Instanz benutzerdefinierten Wert "
"``INSTANCE_CUSTOM`` zu ``time`` addieren."

msgid ""
"Next, we need to pass a value into ``INSTANCE_CUSTOM``. We do that by adding "
"one line into the ``for`` loop from above. In the ``for`` loop we assign "
"each instance a set of four random floats to use."
msgstr ""
"Als nächstes müssen wir einen Wert in ``INSTANCE_CUSTOM`` übergeben. Wir tun "
"dies, indem wir eine Zeile in die ``for``-Schleife von oben einfügen. In der "
"``for``-Schleife weisen wir jeder Instanz einen Satz von vier zufälligen "
"Floats zu, die sie verwenden soll."

msgid ""
"Now the fish all have unique positions in the swim cycle. You can give them "
"a little more individuality by using ``INSTANCE_CUSTOM`` to make them swim "
"faster or slower by multiplying by ``TIME``."
msgstr ""
"Jetzt haben die Fische alle einzigartige Positionen im Schwimmzyklus. Du "
"kannst ihnen ein wenig mehr Individualität geben, indem du "
"``INSTANCE_CUSTOM`` benutzt, um sie schneller oder langsamer schwimmen zu "
"lassen, indem du mit ``TIME`` multiplizierst."

msgid ""
"You can even experiment with changing the per-instance color the same way "
"you changed the per-instance custom value."
msgstr ""
"Sie können sogar damit experimentieren, die Farbe pro Instanz auf dieselbe "
"Weise zu ändern, wie Sie den benutzerdefinierten Wert pro Instanz geändert "
"haben."

msgid ""
"One problem that you will run into at this point is that the fish are "
"animated, but they are not moving. You can move them by updating the per-"
"instance transform for each fish every frame. Although doing so will be "
"faster than moving thousands of MeshInstance3Ds per frame, it'll still "
"likely be slow."
msgstr ""
"Ein Problem, auf das Sie an dieser Stelle stoßen werden, ist, dass die "
"Fische zwar animiert sind, sich aber nicht bewegen. Sie können sie durch "
"Aktualisieren der pro-Instanz-Transformation für jeden Fisch in jedem Frame "
"bewegen. Obwohl dies schneller ist als die Bewegung von Tausenden von "
"MeshInstance3Ds pro Frame, wird es wahrscheinlich immer noch langsam sein."

msgid ""
"In the next tutorial we will cover how to use :ref:`GPUParticles3D "
"<class_GPUParticles3D>` to take advantage of the GPU and move each fish "
"around individually while still receiving the benefits of instancing."
msgstr ""
"Im nächsten Tutorial werden wir uns damit beschäftigen, wie man :ref:"
"`GPUParticles3D <class_GPUParticles3D>` verwendet, um die Vorteile der GPU "
"zu nutzen und jeden Fisch einzeln zu bewegen, ohne auf die Vorteile der "
"Instanziierung zu verzichten."

msgid "Translation status"
msgstr "Übersetzungsstatus"
