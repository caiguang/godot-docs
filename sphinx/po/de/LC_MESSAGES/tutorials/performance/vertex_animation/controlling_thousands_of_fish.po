# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Controlling thousands of fish with Particles"
msgstr "Steuern von Tausenden von Fischen mittels Partikeln"

msgid ""
"The problem with :ref:`MeshInstance3D <class_MeshInstance3D>` is that it is "
"expensive to update their transform array. It is great for placing many "
"static objects around the scene. But it is still difficult to move the "
"objects around the scene."
msgstr ""
"Das Problem mit :ref:`MeshInstance3D <class_MeshInstance3D>` ist, dass es "
"teuer ist, ihr Transform-Array zu aktualisieren. Es ist großartig, um viele "
"statische Objekte in der Szene zu platzieren. Aber es ist immer noch "
"schwierig, die Objekte in der Szene zu bewegen."

msgid ""
"To make each instance move in an interesting way, we will use a :ref:"
"`GPUParticles3D <class_GPUParticles3D>` node. Particles take advantage of "
"GPU acceleration by computing and setting the per-instance information in a :"
"ref:`Shader <class_Shader>`."
msgstr ""
"Um jede Instanz auf interessante Weise zu bewegen, werden wir einen :ref:"
"`GPUParticles3D <class_GPUParticles3D>`-Node verwenden. Partikel nutzen die "
"Vorteile der GPU-Beschleunigung, indem sie die Informationen pro Instanz in "
"einem :ref:`Shader <class_Shader>` berechnen und einstellen."

msgid ""
"First create a Particles node. Then, under \"Draw Passes\" set the "
"Particle's \"Draw Pass 1\" to your :ref:`Mesh <class_Mesh>`. Then under "
"\"Process Material\" create a new :ref:`ShaderMaterial "
"<class_ShaderMaterial>`."
msgstr ""
"Erstellen Sie zunächst einen Particles-Node. Dann setzen Sie unter \"Draw "
"Passes\" den \"Draw Pass 1\" des Partikels auf Ihr :ref:`Mesh <class_Mesh>`. "
"Dann erstellen Sie unter \"Process Material\" ein neues :ref:`ShaderMaterial "
"<class_ShaderMaterial>`."

msgid "Set the ``shader_type`` to ``particles``."
msgstr "Setzen Sie den ``shader_type`` auf ``particles``."

msgid "Then add the following two functions:"
msgstr "Anschließend fügen Sie die folgenden beiden Funktionen hinzu:"

msgid ""
"These functions come from the default :ref:`ParticleProcessMaterial "
"<class_ParticleProcessMaterial>`. They are used to generate a random number "
"from each particle's ``RANDOM_SEED``."
msgstr ""
"Diese Funktionen kommen von dem Default-:ref:`ParticleProcessMaterial "
"<class_ParticleProcessMaterial>`. Sie werden verwendet, um eine Zufallszahl "
"aus dem ``RANDOM_SEED`` jedes Partikels zu erzeugen."

msgid ""
"A unique thing about particle shaders is that some built-in variables are "
"saved across frames. ``TRANSFORM``, ``COLOR``, and ``CUSTOM`` can all be "
"accessed in the shader of the mesh, and also in the particle shader the next "
"time it is run."
msgstr ""
"Einzigartig an Partikel-Shadern ist, dass einige Built-in-Variablen über "
"Frames hinweg gespeichert werden. Auf ``TRANSFORM``, ``COLOR`` und "
"``CUSTOM`` kann im Shader des Meshes zugegriffen werden und auch im Partikel-"
"Shader, wenn er das nächste Mal ausgeführt wird."

msgid ""
"Next, setup your ``start()`` function. Particles shaders contain a "
"``start()`` function and a ``process()`` function."
msgstr ""
"Als nächstes richten Sie Ihre ``start()`` Funktion ein. Partikel-Shader "
"enthalten eine ``start()`` Funktion und eine ``process()`` Funktion."

msgid ""
"The code in the ``start()`` function only runs when the particle system "
"starts. The code in the ``process()`` function will always run."
msgstr ""
"Der Code in der ``start()``-Funktion läuft nur, wenn das Partikelsystem "
"startet. Der Code in der ``process()``-Funktion wird immer ausgeführt."

msgid ""
"We need to generate 4 random numbers: 3 to create a random position and one "
"for the random offset of the swim cycle."
msgstr ""
"Wir müssen 4 Zufallszahlen erzeugen: 3, um eine zufällige Position zu "
"erzeugen, und eine für den zufälligen Offset des Schwimmzyklus."

msgid ""
"First, generate 4 seeds inside the ``start()`` function using the ``hash()`` "
"function provided above:"
msgstr ""
"Erzeugen Sie zunächst 4 Seeds innerhalb der ``start()``-Funktion unter "
"Verwendung der oben angegebenen ``hash()``-Funktion:"

msgid ""
"Then, use those seeds to generate random numbers using ``rand_from_seed``:"
msgstr ""
"Dann verwenden Sie diese Seeds, um Zufallszahlen unter Verwendung von "
"``rand_from_seed`` zu erzeugen:"

msgid ""
"Finally, assign ``position`` to ``TRANSFORM[3].xyz``, which is the part of "
"the transform that holds the position information."
msgstr ""
"Abschließend weisen Sie ``Position`` dem Wert ``TRANSFORM[3].xyz`` zu, die "
"den Teil der Transformation darstellt, der die Positionsinformationen "
"enthält."

msgid "Remember, all this code so far goes inside the ``start()`` function."
msgstr ""
"Denken Sie daran, dass der gesamte bisherige Code innerhalb der Funktion "
"``start()`` steht."

msgid ""
"The vertex shader for your mesh can stay the exact same as it was in the "
"previous tutorial."
msgstr ""
"Der Vertex-Shader für Ihr Mesh kann genau so bleiben, wie er im vorherigen "
"Tutorial war."

msgid ""
"Now you can move each fish individually each frame, either by adding to the "
"``TRANSFORM`` directly or by writing to ``VELOCITY``."
msgstr ""
"Jetzt können Sie jeden Fisch einzeln in jedem Frame bewegen, entweder indem "
"Sie die ``TRANSFORM`` direkt hinzufügen oder indem Sie in die ``VELOCITY`` "
"schreiben."

msgid ""
"Let's transform the fish by setting their ``VELOCITY`` in the ``start()`` "
"function."
msgstr ""
"Lassen Sie uns die Fische transformieren, indem wir ihre ``VELOCITY`` in der "
"``start()`` Funktion setzen."

msgid ""
"This is the most basic way to set ``VELOCITY`` every particle (or fish) will "
"have the same velocity."
msgstr ""
"Dies ist der einfachste Weg, um die ``VELOCITY`` einzustellen, da jeder "
"Partikel (oder Fisch) die gleiche Geschwindigkeit hat."

msgid ""
"Just by setting ``VELOCITY`` you can make the fish swim however you want. "
"For example, try the code below."
msgstr ""
"Indem Sie einfach ``VELOCITY`` einstellen, können Sie den Fisch schwimmen "
"lassen, wie Sie wollen. Probieren Sie zum Beispiel den folgenden Code aus."

msgid "This will give each fish a unique speed between ``2`` and ``10``."
msgstr ""
"Dadurch erhält jeder Fisch eine einzigartige Geschwindigkeit zwischen ``2`` "
"und ``10``."

msgid ""
"You can also let each fish change its velocity over time if you set the "
"velocity in the ``process()`` function."
msgstr ""
"Sie können auch jeden Fisch seine Geschwindigkeit über die Zeit ändern "
"lassen, wenn Sie die Geschwindigkeit in der Funktion ``process()`` festlegen."

msgid ""
"If you used ``CUSTOM.y`` in the last tutorial, you can also set the speed of "
"the swim animation based on the ``VELOCITY``. Just use ``CUSTOM.y``."
msgstr ""
"Wenn Sie ``CUSTOM.y`` im letzten Tutorial benutzt haben, können Sie auch die "
"Geschwindigkeit der Schwimmanimation basierend auf der ``VELOCITY`` "
"einstellen. Verwenden Sie einfach ``CUSTOM.y``."

msgid "This code gives you the following behavior:"
msgstr "Dieser Code führt zu folgendem Ergebnis:"

msgid ""
"Using a ParticleProcessMaterial you can make the fish behavior as simple or "
"complex as you like. In this tutorial we only set Velocity, but in your own "
"Shaders you can also set ``COLOR``, rotation, scale (through ``TRANSFORM``). "
"Please refer to the :ref:`Particles Shader Reference <doc_particle_shader>` "
"for more information on particle shaders."
msgstr ""
"Mit einem ParticleProcessMaterial kann man das Verhalten der Fische so "
"einfach oder komplex gestalten, wie man möchte. In diesem Tutorial stellen "
"wir nur die Geschwindigkeit ein, aber in Ihren eigenen Shadern können Sie "
"auch ``COLOR``, Rotation, Skalierung (durch ``TRANSFORM``) einstellen. Bitte "
"lesen Sie die :ref:`Partikel-Shader-Referenz <doc_particle_shader>` für "
"weitere Informationen über Partikel Shader."

msgid "Translation status"
msgstr "Übersetzungsstatus"
