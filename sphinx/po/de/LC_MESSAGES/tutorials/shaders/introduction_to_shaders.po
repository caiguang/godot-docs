# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to shaders"
msgstr "Einführung in Shader"

msgid ""
"This page explains what shaders are and will give you an overview of how "
"they work in Godot. For a detailed reference of the engine's shading "
"language, see :ref:`doc_shading_language`."
msgstr ""
"Diese Seite erklärt, was Shader sind und gibt einen Überblick über ihre "
"Funktionsweise in Godot. Für eine detaillierte Referenz der Shading-Sprache "
"der Engine siehe :ref:`doc_shading_language`."

msgid ""
"Shaders are a special kind of program that runs on Graphics Processing Units "
"(GPUs). They were initially used to shade 3D scenes but can nowadays do much "
"more. You can use them to control how the engine draws geometry and pixels "
"on the screen, allowing you to achieve all sorts of effects."
msgstr ""
"Shader sind eine spezielle Art von Programmen, die auf Grafikprozessoren "
"(GPUs) laufen. Ursprünglich dienten sie der Schattierung von 3D-Szenen, "
"heute können sie aber weitaus mehr. Sie können damit steuern, wie die Engine "
"Geometrie und Pixel auf dem Bildschirm zeichnet, sodass Sie alle möglichen "
"Effekte erzielen können."

msgid ""
"Modern rendering engines like Godot draw everything with shaders: graphics "
"cards can run thousands of instructions in parallel, leading to incredible "
"rendering speed."
msgstr ""
"Moderne Rendering-Engines wie Godot zeichnen alles mit Shadern: Grafikkarten "
"können Tausende von Anweisungen parallel ausführen, was zu einer "
"unglaublichen Rendering-Geschwindigkeit führt."

msgid ""
"Because of their parallel nature, though, shaders don't process information "
"the way a typical program does. Shader code runs on each vertex or pixel in "
"isolation. You cannot store data between frames either. As a result, when "
"working with shaders, you need to code and think differently from other "
"programming languages."
msgstr ""
"Aufgrund ihrer parallelen Natur verarbeiten Shader Informationen jedoch "
"nicht wie ein typisches Programm. Shader-Code wird isoliert auf jedem Vertex "
"oder Pixel ausgeführt. Sie können auch keine Daten zwischen Frames "
"speichern. Daher müssen Sie bei der Arbeit mit Shadern anders programmieren "
"und denken als in anderen Programmiersprachen."

msgid ""
"Suppose you want to update all the pixels in a texture to a given color. In "
"GDScript, your code would use ``for`` loops::"
msgstr ""
"Angenommen, Sie möchten alle Pixel einer Textur in einer bestimmten Farbe "
"aktualisieren. In GDScript würde Ihr Code ``for``-Schleifen verwenden::"

msgid ""
"Your code is already part of a loop in a shader, so the corresponding code "
"would look like this."
msgstr ""
"Ihr Code ist bereits Teil einer Schleife in einem Shader, so dass der "
"entsprechende Code wie folgt aussehen würde."

msgid ""
"The graphics card calls the ``fragment()`` function once or more for each "
"pixel it has to draw. More on that below."
msgstr ""
"Die Grafikkarte ruft die Funktion ``fragment()`` einmal oder mehrmals für "
"jedes Pixel auf, das sie zeichnen muß. Mehr dazu weiter unten."

msgid "Shaders in Godot"
msgstr "Shader in Godot"

msgid ""
"Godot provides a shading language based on the popular OpenGL Shading "
"Language (GLSL) but simplified. The engine handles some of the lower-level "
"initialization work for you, making it easier to write complex shaders."
msgstr ""
"Godot bietet eine Shading-Sprache, die auf der beliebten OpenGL Shading "
"Language (GLSL) basiert, jedoch vereinfacht ist. Die Engine übernimmt einen "
"Teil der Initialisierungsarbeit auf unterer Ebene für Sie und erleichtert so "
"das Schreiben komplexer Shader."

msgid ""
"In Godot, shaders are made up of main functions called \"processor "
"functions\". Processor functions are the entry point for your shader into "
"the program. There are seven different processor functions."
msgstr ""
"In Godot bestehen Shader aus Hauptfunktionen, die \"Prozessorfunktionen\" "
"genannt werden. Prozessorfunktionen sind der Einstiegspunkt für Ihren Shader "
"in das Programm. Es gibt sieben verschiedene Prozessorfunktionen."

msgid ""
"The ``vertex()`` function runs over all the vertices in the mesh and sets "
"their positions and some other per-vertex variables. Used in :ref:"
"`canvas_item shaders <doc_canvas_item_shader>` and :ref:`spatial shaders "
"<doc_spatial_shader>`."
msgstr ""
"Die Funktion ``vertex()`` durchläuft alle Vertices im Mesh und setzt ihre "
"Positionen und einige andere Variablen pro Vertex. Wird verwendet in :ref:"
"`canvas_item shaders <doc_canvas_item_shader>` und :ref:`spatial shaders "
"<doc_spatial_shader>`."

msgid ""
"The ``fragment()`` function runs for every pixel covered by the mesh. It "
"uses values output by the ``vertex()`` function, interpolated between the "
"vertices. Used in :ref:`canvas_item shaders <doc_canvas_item_shader>` and :"
"ref:`spatial shaders <doc_spatial_shader>`."
msgstr ""
"Die Funktion ``fragment()`` wird für jedes vom Mesh abgedeckte Pixel "
"ausgeführt. Sie benutzt Werte, die von der ``vertex()``-Funktion ausgegeben "
"werden, interpoliert zwischen den Vertices. Wird verwendet in :ref:"
"`canvas_item shaders <doc_canvas_item_shader>` und :ref:`spatial shaders "
"<doc_spatial_shader>`."

msgid ""
"The ``light()`` function runs for every pixel and for every light. It takes "
"variables from the ``fragment()`` function and from its previous runs. Used "
"in :ref:`canvas_item shaders <doc_canvas_item_shader>` and :ref:`spatial "
"shaders <doc_spatial_shader>`."
msgstr ""
"Die Funktion ``light()`` wird für jedes Pixel und für jede Lichtquelle "
"ausgeführt. Sie nimmt Variablen von der ``fragment()``-Funktion und von "
"ihren vorherigen Durchläufen. Sie wird verwendet in :ref:`canvas_item "
"shaders <doc_canvas_item_shader>` und :ref:`spatial shaders "
"<doc_spatial_shader>`."

msgid ""
"The ``start()`` function runs for every particle in a particle system once "
"when the particle is first spawned. Used in :ref:`particles shaders "
"<doc_particle_shader>`."
msgstr ""
"Die Funktion ``start()`` wird für jedes Partikel in einem Partikelsystem "
"einmal ausgeführt, wenn das Partikel zum ersten Mal gespawnt wird. Wird "
"verwendet in :ref:`Partikel-Shadern <doc_particle_shader>`."

msgid ""
"The ``process()`` function runs for every particle in a particle system for "
"each frame. Used in :ref:`particles shaders <doc_particle_shader>`."
msgstr ""
"Die Funktion ``process()`` läuft für jedes Partikel in einem Partikelsystem "
"für jedes Frame. Sie wird verwendet in :ref:`Partikel-Shadern "
"<doc_particle_shader>`."

msgid ""
"The ``sky()`` function runs for every pixel in the radiance cubemap when the "
"radiance cubemap needs to be updated, and for every pixel on the current "
"screen. Used in :ref:`sky shaders <doc_sky_shader>`."
msgstr ""
"Die Funktion ``sky()`` wird für jedes Pixel in der Radiance Cubemap "
"ausgeführt, wenn die Radiance Cubemap aktualisiert werden muss, und für "
"jedes Pixel auf dem aktuellen Bildschirm. Wird verwendet in :ref:`Sky Shader "
"<doc_sky_shader>`."

msgid ""
"The ``fog()`` function runs for every froxel in the volumetric fog froxel "
"buffer that intersects with the :ref:`FogVolume <class_FogVolume>`. Used by :"
"ref:`fog shaders <doc_fog_shader>`."
msgstr ""
"Die Funktion ``fog()`` wird für jedes Froxel im volumetrischen Nebel-Froxel-"
"Puffer ausgeführt, das sich mit dem :ref:`FogVolume <class_FogVolume>` "
"schneidet. Wird verwendet von :ref:`Fog-Shadern <doc_fog_shader>`."

msgid ""
"The ``light()`` function won't run if the ``vertex_lighting`` render mode is "
"enabled, or if **Rendering > Quality > Shading > Force Vertex Shading** is "
"enabled in the Project Settings. It's enabled by default on mobile platforms."
msgstr ""
"Die Funktion ``light()`` wird nicht ausgeführt, wenn der Rendermodus "
"``vertex_lighting`` aktiviert ist, oder wenn **Rendering > Qualität > "
"Schattierung > Vertex-Schattierung erzwingen** in den Projekteinstellungen "
"aktiviert ist. Auf mobilen Plattformen ist es standardmäßig aktiviert."

msgid ""
"Godot also exposes an API for users to write totally custom GLSL shaders. "
"For more information see :ref:`doc_compute_shaders`."
msgstr ""
"Godot stellt auch eine API zur Verfügung, mit der Benutzer völlig eigene "
"GLSL-Shader schreiben können. Für weitere Informationen siehe :ref:"
"`doc_compute_shaders`."

msgid "Shader types"
msgstr "Shader-Typen"

msgid ""
"Instead of supplying a general-purpose configuration for all uses (2D, 3D, "
"particles, sky, fog), you must specify the type of shader you're writing. "
"Different types support different render modes, built-in variables, and "
"processing functions."
msgstr ""
"Anstatt eine Allzweckkonfiguration für alle Verwendungszwecke (2D, 3D, "
"Partikel, Himmel, Nebel) bereitzustellen, müssen Sie den Typ des Shaders "
"angeben, den Sie schreiben. Verschiedene Typen unterstützen unterschiedliche "
"Rendermodi, Built-in-Variablen und Prozessierungsfunktionen."

msgid ""
"In Godot, all shaders need to specify their type in the first line, like so:"
msgstr ""
"In Godot müssen alle Shader ihren Typ in der ersten Zeile angeben, etwa so:"

msgid "Here are the available types:"
msgstr "Hier sind die verfügbaren Typen:"

msgid ":ref:`spatial <doc_spatial_shader>` for 3D rendering."
msgstr ":ref:`spatial <doc_spatial_shader>` für 3D-Rendering."

msgid ":ref:`canvas_item <doc_canvas_item_shader>` for 2D rendering."
msgstr ":ref:`canvas_item <doc_canvas_item_shader>` für 2D-Rendering."

msgid ":ref:`particles <doc_particle_shader>` for particle systems."
msgstr ":ref:`particles <doc_particle_shader>` für Partikelsysteme."

msgid ":ref:`sky <doc_sky_shader>` to render :ref:`Skies <class_Sky>`."
msgstr ""
":ref:`Himmel <doc_sky_shader>` zum Rendern eines :ref:`Himmels <class_Sky>`."

msgid ""
":ref:`fog <doc_fog_shader>` to render :ref:`FogVolumes <class_FogVolume>`"
msgstr ""
":ref:`Nebel <doc_fog_shader>` zum Rendern von :ref:`Fog-"
"Volumes<class_FogVolume>`"

msgid "Render modes"
msgstr "Render-Modi"

msgid ""
"Shaders have optional render modes you can specify on the second line, after "
"the shader type, like so:"
msgstr ""
"Shader haben optionale Rendermodi, die Sie in der zweiten Zeile nach dem "
"Shader-Typ angeben können, etwa so:"

msgid ""
"Render modes alter the way Godot applies the shader. For example, the "
"``unshaded`` mode makes the engine skip the built-in light processor "
"function."
msgstr ""
"Rendermodi verändern die Art und Weise, wie Godot den Shader anwendet. Zum "
"Beispiel überspringt die Engine im Modus ``unshaded`` die eingebaute "
"Lichtprozessorfunktion."

msgid ""
"Each shader type has different render modes. See the reference for each "
"shader type for a complete list of render modes."
msgstr ""
"Jeder Shader-Typ hat verschiedene Render-Modi. Eine vollständige Liste der "
"Rendermodi finden Sie in der Referenz für jeden Shadertyp."

msgid "Vertex processor"
msgstr "Vertex-Prozessor"

msgid ""
"The ``vertex()`` processing function is called once for every vertex in "
"``spatial`` and ``canvas_item`` shaders. For ``particles`` shaders, it is "
"called once for every particle."
msgstr ""
"Die Prozessierungsfunktion ``vertex()`` wird in ``spatial`` und "
"``canvas_item``-Shadern einmal für jeden Vertex aufgerufen. Bei ``Partikel``-"
"Shadern wird sie für jedes Partikel einmal aufgerufen."

msgid ""
"Each vertex in your world's geometry has properties like a position and "
"color. The function modifies those values and passes them to the fragment "
"function. You can also use it to send extra data to the fragment function "
"using varyings."
msgstr ""
"Jeder Vertex in der Geometrie Ihrer Welt hat Eigenschaften, wie eine "
"Position und eine Farbe. Die Funktion ändert diese Werte und übergibt sie an "
"die Fragment-Funktion. Sie können damit auch zusätzliche Daten an die "
"Fragmentfunktion senden, indem Sie Varyings verwenden."

msgid ""
"By default, Godot transforms your vertex information for you, which is "
"necessary to project geometry onto the screen. You can use render modes to "
"transform the data yourself; see the :ref:`Spatial shader doc "
"<doc_spatial_shader>` for an example."
msgstr ""
"Standardmäßig transformiert Godot die Vertex-Informationen für Sie, die "
"notwendig sind, um die Geometrie auf den Bildschirm zu projizieren. Sie "
"können Rendermodi verwenden, um die Daten selbst zu transformieren; ein "
"Beispiel finden Sie in der :ref:`Spatial-Shader-"
"Dokumentation<doc_spatial_shader>`."

msgid "Fragment processor"
msgstr "Fragment-Prozessor"

msgid ""
"The ``fragment()`` processing function is used to set up the Godot material "
"parameters per pixel. This code runs on every visible pixel the object or "
"primitive draws. It is only available in ``spatial``, ``canvas_item``, and "
"``sky`` shaders."
msgstr ""
"Die Prozessierungsfunktion ``fragment()`` wird verwendet, um die Godot-"
"Materialparameter pro Pixel einzustellen. Dieser Code läuft auf jedem "
"sichtbaren Pixel, den das Objekt oder Primitiv zeichnet. Er ist nur in "
"``spatial``, ``canvas_item`` und ``sky``-Shadern verfügbar."

msgid ""
"The standard use of the fragment function is to set up material properties "
"used to calculate lighting. For example, you would set values for "
"``ROUGHNESS``, ``RIM``, or ``TRANSMISSION``, which would tell the light "
"function how the lights respond to that fragment. This makes it possible to "
"control a complex shading pipeline without the user having to write much "
"code. If you don't need this built-in functionality, you can ignore it and "
"write your own light processing function, and Godot will optimize it away. "
"For example, if you do not write a value to ``RIM``, Godot will not "
"calculate rim lighting. During compilation, Godot checks to see if ``RIM`` "
"is used; if not, it cuts all the corresponding code out. Therefore, you will "
"not waste calculations on the effects that you do not use."
msgstr ""
"Die Standardanwendung der Fragmentfunktion ist die Einstellung von "
"Materialeigenschaften, die zur Berechnung der Beleuchtung verwendet werden. "
"Zum Beispiel würden Sie Werte für ``ROUGHNESS``, ``RIM`` oder "
"``TRANSMISSION`` setzen, die der Lichtfunktion mitteilen, wie die Lichter "
"auf dieses Fragment reagieren. Dies macht es möglich, eine komplexe Shading-"
"Pipeline zu steuern, ohne dass der Benutzer viel Code schreiben muss. Wenn "
"Sie diese eingebaute Funktionalität nicht benötigen, können Sie sie "
"ignorieren und Ihre eigene Lichtverarbeitungsfunktion schreiben, und Godot "
"wird sie wegoptimieren. Wenn Sie zum Beispiel keinen Wert für ``RIM`` "
"schreiben, wird Godot keine Randbeleuchtung berechnen. Während des "
"Kompilierens prüft Godot, ob ``RIM`` verwendet wird; wenn nicht, schneidet "
"es den gesamten entsprechenden Code heraus. Daher werden Sie keine "
"Berechnungen für Effekte verschwenden, die Sie nicht verwenden."

msgid "Light processor"
msgstr "Licht-Prozessor"

msgid ""
"The ``light()`` processor runs per pixel too, and it runs once for every "
"light that affects the object. It does not run if no lights affect the "
"object. It exists as a function called inside the ``fragment()`` processor "
"and typically operates on the material properties setup inside the "
"``fragment()`` function."
msgstr ""
"Der ``Licht()`` -Prozessor läuft ebenfalls pro Pixel, und er läuft einmal "
"für jedes Licht, das auf das Objekt einwirkt. Er wird nicht ausgeführt, wenn "
"keine Lichter das Objekt beeinflussen. Er existiert als eine Funktion, die "
"innerhalb des ``Fragment()``-Prozessors aufgerufen wird und arbeitet "
"normalerweise mit den Materialeigenschaften, die innerhalb der "
"``Fragment()`` Funktion eingestellt wurden."

msgid ""
"The ``light()`` processor works differently in 2D than it does in 3D; for a "
"description of how it works in each, see their documentation, :ref:"
"`CanvasItem shaders <doc_canvas_item_shader>` and :ref:`Spatial shaders "
"<doc_spatial_shader>`, respectively."
msgstr ""
"Der ``Licht()``-Prozessor arbeitet in 2D anders als in 3D; für eine "
"Beschreibung, wie er in beiden Fällen arbeitet, siehe deren Dokumentation, :"
"ref:`CanvasItem-Shader <doc_canvas_item_shader>` und :ref:`Spatial-Shader "
"<doc_spatial_shader>`."

msgid "Translation status"
msgstr "Übersetzungsstatus"
