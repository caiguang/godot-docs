# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using compute shaders"
msgstr "Verwendung von Compute-Shadern"

msgid ""
"This tutorial will walk you through the process of creating a minimal "
"compute shader. But first, a bit of background on compute shaders and how "
"they work with Godot."
msgstr ""
"Dieses Tutorial wird Sie durch den Prozess der Erstellung eines minimalen "
"Compute-Shaders führen. Zunächst aber ein paar Hintergrundinformationen zu "
"Compute-Shadern und wie sie mit Godot funktionieren."

msgid ""
"This tutorial assumes you are familiar with shaders generally. If you are "
"new to shaders please read :ref:`doc_introduction_to_shaders` and :ref:`your "
"first shader <toc-your-first-shader>` before proceeding with this tutorial."
msgstr ""
"Dieses Tutorial setzt voraus, dass Sie mit Shadern im Allgemeinen vertraut "
"sind. Wenn Sie neu im Bereich Shader sind, lesen Sie bitte :ref:"
"`doc_introduction_to_shaders` und :ref:`your first shader <toc-your-first-"
"shader>` bevor Sie mit diesem Tutorial fortfahren."

msgid ""
"A compute shader is a special type of shader program that is orientated "
"towards general purpose programming. In other words, they are more flexible "
"than vertex shaders and fragment shaders as they don't have a fixed purpose "
"(i.e. transforming vertices or writing colors to an image). Unlike fragment "
"shaders and vertex shaders, compute shaders have very little going on behind "
"the scenes. The code you write is what the GPU runs and very little else. "
"This can make them a very useful tool to offload heavy calculations to the "
"GPU."
msgstr ""
"Ein Compute-Shader ist eine besondere Art von Shader-Programm, das auf die "
"allgemeine Programmierung ausgerichtet ist. Mit anderen Worten, sie sind "
"flexibler als Vertex-Shader und Fragment-Shader, da sie keinen festen Zweck "
"haben (z.B. die Umwandlung von Vertices oder das Schreiben von Farben in ein "
"Bild). Im Gegensatz zu Fragment-Shadern und Vertex-Shadern läuft bei Compute-"
"Shadern sehr wenig im Hintergrund ab. Der Code, den Sie schreiben, ist das, "
"was die GPU ausführt, und sehr wenig anderes. Dies kann sie zu einem sehr "
"nützlichen Werkzeug machen, um aufwendige Berechnungen auf den "
"Grafikprozessor zu verlagern."

msgid "Now let's get started by creating a short compute shader."
msgstr "Beginnen wir nun mit der Erstellung eines kurzen Compute-Shaders."

msgid ""
"First, in the **external** text editor of your choice, create a new file "
"called ``compute_example.glsl`` in your project folder. When you write "
"compute shaders in Godot, you write them in GLSL directly. The Godot shader "
"language is based on GLSL. If you are familiar with normal shaders in Godot, "
"the syntax below will look somewhat familiar."
msgstr ""
"Erstellen Sie zunächst in einem **externen** Texteditor Ihrer Wahl eine neue "
"Datei namens ``compute_example.glsl`` in Ihrem Projektordner. Wenn Sie "
"Compute-Shader in Godot schreiben, schreiben Sie sie direkt in GLSL. Die "
"Shader-Sprache von Godot basiert auf GLSL. Wenn Sie mit normalen Shadern in "
"Godot vertraut sind, wird Ihnen die folgende Syntax bekannt vorkommen."

msgid ""
"Compute shaders can only be used from RenderingDevice-based renderers (the "
"Forward+ or Mobile renderer). To follow along with this tutorial, ensure "
"that you are using the Forward+ or Mobile renderer. The setting for which is "
"located in the top right-hand corner of the editor."
msgstr ""
"Compute-Shader können nur von RenderingDevice-basierten Renderern (dem "
"Forward+- oder Mobile-Renderer) verwendet werden. Um diesem Tutorial folgen "
"zu können, müssen Sie sicherstellen, dass Sie den Forward+- oder Mobile-"
"Renderer verwenden. Die Einstellung dafür befindet sich in der oberen "
"rechten Ecke des Editors."

msgid ""
"Note that compute shader support is generally poor on mobile devices (due to "
"driver bugs), even if they are technically supported."
msgstr ""
"Beachten Sie, dass die Unterstützung für Compute Shader auf mobilen Geräten "
"im Allgemeinen schlecht ist (aufgrund von Treiberfehlern), auch wenn sie "
"technisch unterstützt werden."

msgid "Let's take a look at this compute shader code:"
msgstr "Werfen wir einen Blick auf diesen Compute-Shader-Code:"

msgid ""
"This code takes an array of floats, multiplies each element by 2 and store "
"the results back in the buffer array. Now let's look at it line-by-line."
msgstr ""
"Dieser Code nimmt ein Array von Floats, multipliziert jedes Element mit 2 "
"und speichert die Ergebnisse zurück in das Puffer-Array. Schauen wir uns den "
"Code nun Zeile für Zeile an."

msgid "These two lines communicate two things:"
msgstr "Diese beiden Zeilen vermitteln zwei Dinge:"

msgid ""
"The following code is a compute shader. This is a Godot-specific hint that "
"is needed for the editor to properly import the shader file."
msgstr ""
"Der folgende Code ist ein Compute-Shader. Dies ist ein Godot-spezifischer "
"Hinweis, der benötigt wird, damit der Editor die Shader-Datei korrekt "
"importieren kann."

msgid "The code is using GLSL version 450."
msgstr "Der Code verwendet GLSL Version 450."

msgid ""
"You should never have to change these two lines for your custom compute "
"shaders."
msgstr ""
"Sie sollten niemals diese beiden Zeilen für Ihre benutzerdefinierten Compute-"
"Shader ändern müssen."

msgid ""
"Next, we communicate the number of invocations to be used in each workgroup. "
"Invocations are instances of the shader that are running within the same "
"workgroup. When we launch a compute shader from the CPU, we tell it how many "
"workgroups to run. Workgroups run in parallel to each other. While running "
"one workgroup, you cannot access information in another workgroup. However, "
"invocations in the same workgroup can have some limited access to other "
"invocations."
msgstr ""
"Als Nächstes teilen wir die Anzahl der Aufforderungen mit, die in jeder "
"Arbeitsgruppe verwendet werden sollen. Aufrufe sind Instanzen des Shaders, "
"die innerhalb derselben Arbeitsgruppe ausgeführt werden. Wenn wir einen "
"Compute-Shader von der CPU starten, teilen wir ihm mit, wie viele "
"Arbeitsgruppen er ausführen soll. Arbeitsgruppen werden parallel zueinander "
"ausgeführt. Während eine Arbeitsgruppe ausgeführt wird, können Sie nicht auf "
"Informationen in einer anderen Arbeitsgruppe zugreifen. Allerdings können "
"Aufrufe in derselben Workgroup in begrenztem Umfang auf andere Aufrufe "
"zugreifen."

msgid "Think about workgroups and invocations as a giant nested ``for`` loop."
msgstr ""
"Betrachten Sie Arbeitsgruppen und Aufrufe als eine riesige verschachtelte "
"``for``-Schleife."

msgid ""
"Workgroups and invocations are an advanced topic. For now, remember that we "
"will be running two invocations per workgroup."
msgstr ""
"Arbeitsgruppen und Aufrufe sind ein Thema für Fortgeschrittene. Denken Sie "
"zunächst daran, dass wir zwei Aufrufe pro Arbeitsgruppe durchführen werden."

msgid ""
"Here we provide information about the memory that the compute shader will "
"have access to. The ``layout`` property allows us to tell the shader where "
"to look for the buffer, we will need to match these ``set`` and ``binding`` "
"positions from the CPU side later."
msgstr ""
"Hier stellen wir Informationen über den Speicher zur Verfügung, auf den der "
"Compute-Shader Zugriff haben wird. Die Property ``layout`` erlaubt es uns, "
"dem Shader mitzuteilen, wo er nach dem Puffer suchen soll. Wir werden diese "
"``set`` und ``binding``-Positionen später auf der CPU-Seite abgleichen "
"müssen."

msgid ""
"The ``restrict`` keyword tells the shader that this buffer is only going to "
"be accessed from one place in this shader. In other words, we won't bind "
"this buffer in another ``set`` or ``binding`` index. This is important as it "
"allows the shader compiler to optimize the shader code. Always use "
"``restrict`` when you can."
msgstr ""
"Das Schlüsselwort ``restrict`` sagt dem Shader, dass auf diesen Puffer nur "
"von einer Stelle in diesem Shader zugegriffen werden soll. Mit anderen "
"Worten, wir werden diesen Puffer nicht in einen anderen ``set`` oder "
"``binding``-Index einbinden. Dies ist wichtig, da es dem Shader-Compiler "
"erlaubt, den Shader-Code zu optimieren. Benutzen Sie immer ``restrict`` wenn "
"Sie können."

msgid ""
"This is an *unsized* buffer, which means it can be any size. So we need to "
"be careful not to read from an index larger than the size of the buffer."
msgstr ""
"Es handelt sich um einen *unsized* Puffer, d.h. er kann beliebig groß sein. "
"Wir müssen also aufpassen, dass wir nicht aus einem Index lesen, der größer "
"ist als die Größe des Puffers."

msgid ""
"Finally, we write the ``main`` function which is where all the logic "
"happens. We access a position in the storage buffer using the "
"``gl_GlobalInvocationID`` built in variables. ``gl_GlobalInvocationID`` "
"gives you the global unique ID for the current invocation."
msgstr ""
"Schließlich schreiben wir die Funktion ``main``, in der die gesamte Logik "
"abläuft. Wir greifen auf eine Position im Speicherpuffer zu, indem wir die "
"Built-in-Variable ``gl_GlobalInvocationID`` verwenden. "
"``gl_GlobalInvocationID`` gibt Ihnen die global eindeutige ID für den "
"aktuellen Aufruf."

msgid ""
"To continue, write the code above into your newly created ``compute_example."
"glsl`` file."
msgstr ""
"Um fortzufahren, schreiben Sie den obigen Code in Ihre neu erstellte Datei "
"``compute_example.glsl``."

msgid "Create a local RenderingDevice"
msgstr "Erstellen eines lokalen RenderingDevices"

msgid ""
"To interact with and execute a compute shader, we need a script. Create a "
"new script in the language of your choice and attach it to any Node in your "
"scene."
msgstr ""
"Um mit einem Compute-Shader zu interagieren und ihn auszuführen, benötigen "
"wir ein Skript. Erstellen Sie ein neues Skript in einer Sprache Ihrer Wahl "
"und fügen Sie es an einen beliebigen Node in Ihrer Szene an."

msgid ""
"Now to execute our shader we need a local :ref:`class_RenderingDevice` which "
"can be created using the :ref:`class_RenderingServer`:"
msgstr ""
"Um nun unseren Shader auszuführen, benötigen wir ein lokales :ref:"
"`class_RenderingDevice`, das mit Hilfe des :ref:`class_RenderingServer` "
"erstellt werden kann:"

msgid ""
"After that, we can load the newly created shader file ``compute_example."
"glsl`` and create a precompiled version of it using this:"
msgstr ""
"Danach können wir die neu erstellte Shaderdatei ``compute_example.glsl`` "
"laden und damit eine vorkompilierte Version erstellen:"

msgid ""
"Local RenderingDevices cannot be debugged using tools such as `RenderDoc "
"<https://renderdoc.org/>`__."
msgstr ""
"Lokale RenderingDevices können nicht mit Tools wie `RenderDoc <https://"
"renderdoc.org/>`__ debuggt werden."

msgid "Provide input data"
msgstr "Bereitstellung von Eingabedaten"

msgid ""
"As you might remember, we want to pass an input array to our shader, "
"multiply each element by 2 and get the results."
msgstr ""
"Wie Sie sich vielleicht erinnern, wollen wir ein Eingabe-Array an unseren "
"Shader übergeben, jedes Element mit 2 multiplizieren und das Ergebnis "
"erhalten."

msgid ""
"We need to create a buffer to pass values to a compute shader. We are "
"dealing with an array of floats, so we will use a storage buffer for this "
"example. A storage buffer takes an array of bytes and allows the CPU to "
"transfer data to and from the GPU."
msgstr ""
"Wir müssen einen Puffer erstellen, um Werte an einen Compute-Shader zu "
"übergeben. Da wir es mit einem Array von Floats zu tun haben, werden wir für "
"dieses Beispiel einen Speicherpuffer verwenden. Ein Speicherpuffer nimmt ein "
"Array von Bytes auf und ermöglicht der CPU die Übertragung von Daten zur und "
"von der GPU."

msgid "So let's initialize an array of floats and create a storage buffer:"
msgstr ""
"Initialisieren wir also ein Array von Floats und erstellen einen "
"Speicherpuffer:"

msgid ""
"With the buffer in place we need to tell the rendering device to use this "
"buffer. To do that we will need to create a uniform (like in normal shaders) "
"and assign it to a uniform set which we can pass to our shader later."
msgstr ""
"Nachdem der Puffer jetzt vorhanden ist, müssen wir dem Rendering-Gerät "
"mitteilen, dass es diesen Puffer verwenden soll. Dazu müssen wir ein Uniform "
"erstellen (wie in normalen Shadern) und sie einem Uniform-Set zuweisen, das "
"wir später an unseren Shader übergeben können."

msgid "Defining a compute pipeline"
msgstr "Definieren einer Berechnungs-Pipeline"

msgid ""
"The next step is to create a set of instructions our GPU can execute. We "
"need a pipeline and a compute list for that."
msgstr ""
"Der nächste Schritt besteht darin, eine Reihe von Anweisungen zu erstellen, "
"die unsere GPU ausführen kann. Dazu benötigen wir eine Pipeline und eine "
"Berechnungs-Liste."

msgid "The steps we need to do to compute our result are:"
msgstr ""
"Die Schritte, die wir zur Berechnung unseres Ergebnisses durchführen müssen, "
"sind:"

msgid "Create a new pipeline."
msgstr "Erstellen einer neuen Pipeline."

msgid "Begin a list of instructions for our GPU to execute."
msgstr ""
"Beginnen mit einer Liste von Anweisungen, die unsere GPU ausführen soll."

msgid "Bind our compute list to our pipeline"
msgstr "Binden unserer Berechnungsliste an unsere Pipeline"

msgid "Bind our buffer uniform to our pipeline"
msgstr "Binden unseres Puffer-Uniforms an unsere Pipeline"

msgid "Specify how many workgroups to use"
msgstr "Festlegen, wie viele Arbeitsgruppen verwendet werden sollen"

msgid "End the list of instructions"
msgstr "Beenden der Liste von Anweisungen"

msgid ""
"Note that we are dispatching the compute shader with 5 work groups in the X "
"axis, and one in the others. Since we have 2 local invocations in the X axis "
"(specified in our shader), 10 compute shader invocations will be launched in "
"total. If you read or write to indices outside of the range of your buffer, "
"you may access memory outside of your shaders control or parts of other "
"variables which may cause issues on some hardware."
msgstr ""
"Beachten Sie, dass wir den Compute-Shader mit 5 Arbeitsgruppen in der X-"
"Achse und einer in den anderen Achsen starten. Da wir 2 lokale Aufrufe in "
"der X-Achse haben (angegeben in unserem Shader), werden insgesamt 10 Compute-"
"Shader-Aufrufe gestartet. Wenn Sie in Indizes außerhalb des Bereichs Ihres "
"Puffers lesen oder schreiben, greifen Sie möglicherweise auf Speicher "
"außerhalb der Kontrolle Ihres Shaders oder auf Teile anderer Variablen zu, "
"was auf mancher Hardware zu Problemen führen kann."

msgid "Execute a compute shader"
msgstr "Ausführen eines Compute-Shaders"

msgid ""
"After all of this we are almost done, but we still need to execute our "
"pipeline. So far we have only recorded what we would like the GPU to do; we "
"have not actually run the shader program."
msgstr ""
"Nach all dem sind wir fast fertig, aber wir müssen noch unsere Pipeline "
"ausführen. Bisher haben wir nur aufgezeichnet, was wir von der GPU erwarten; "
"wir haben das Shader-Programm noch nicht ausgeführt."

msgid ""
"To execute our compute shader we need to submit the pipeline to the GPU and "
"wait for the execution to finish:"
msgstr ""
"Um unseren Compute-Shader auszuführen, müssen wir die Pipeline an die GPU "
"senden und warten, bis die Ausführung abgeschlossen ist:"

msgid ""
"Ideally, you would not call ``sync()`` to synchronize the RenderingDevice "
"right away as it will cause the CPU to wait for the GPU to finish working. "
"In our example, we synchronize right away because we want our data available "
"for reading right away. In general, you will want to wait *at least* 2 or 3 "
"frames before synchronizing so that the GPU is able to run in parallel with "
"the CPU."
msgstr ""
"Idealerweise sollten Sie nicht ``sync()`` aufrufen, um das RenderingDevice "
"sofort zu synchronisieren, da dies dazu führt, dass die CPU auf die "
"Beendigung der Arbeit der GPU wartet. In unserem Beispiel synchronisieren "
"wir sofort, weil wir unsere Daten sofort zum Lesen zur Verfügung haben "
"wollen. Im Allgemeinen sollten Sie *mindestens* 2 oder 3 Frames warten, "
"bevor Sie synchronisieren, damit die GPU parallel zur CPU arbeiten kann."

msgid ""
"Long computations can cause Windows graphics drivers to \"crash\" due to :"
"abbr:`TDR (Timeout Detection and Recovery)` being triggered by Windows. This "
"is a mechanism that reinitializes the graphics driver after a certain amount "
"of time has passed without any activity from the graphics driver (usually 5 "
"to 10 seconds)."
msgstr ""
"Lange Berechnungen können dazu führen, dass Windows-Grafiktreiber "
"\"abstürzen\", weil :abbr:`TDR (Timeout Detection and Recovery)` von Windows "
"ausgelöst wird. Dabei handelt es sich um einen Mechanismus, der den "
"Grafiktreiber neu initialisiert, nachdem eine bestimmte Zeitspanne ohne "
"Aktivität des Grafiktreibers verstrichen ist (normalerweise 5 bis 10 "
"Sekunden)."

msgid ""
"Depending on the duration your compute shader takes to execute, you may need "
"to split it into multiple dispatches to reduce the time each dispatch takes "
"and reduce the chances of triggering a TDR. Given TDR is time-dependent, "
"slower GPUs may be more prone to TDRs when running a given compute shader "
"compared to a faster GPU."
msgstr ""
"Je nachdem, wie lange die Ausführung Ihres Compute-Shaders dauert, müssen "
"Sie ihn möglicherweise in mehrere Dispatches aufteilen, um die Zeit für "
"jeden Dispatch zu verkürzen und die Wahrscheinlichkeit der Auslösung eines "
"TDR zu verringern. Da TDR zeitabhängig ist, können langsamere GPUs bei der "
"Ausführung eines bestimmten Compute-Shaders anfälliger für TDRs sein als "
"schnellere GPUs."

msgid "Retrieving results"
msgstr "Abrufen von Ergebnissen"

msgid ""
"You may have noticed that, in the example shader, we modified the contents "
"of the storage buffer. In other words, the shader read from our array and "
"stored the data in the same array again so our results are already there. "
"Let's retrieve the data and print the results to our console."
msgstr ""
"Sie haben vielleicht bemerkt, dass wir im Beispiel-Shader den Inhalt des "
"Speicherpuffers verändert haben. Mit anderen Worten, der Shader hat aus "
"unserem Array gelesen und die Daten in demselben Array wieder gespeichert, "
"so dass unsere Ergebnisse bereits vorhanden sind. Lassen Sie uns die Daten "
"abrufen und die Ergebnisse auf unserer Konsole ausgeben."

msgid ""
"With that, you have everything you need to get started working with compute "
"shaders."
msgstr ""
"Damit haben Sie alles, was Sie brauchen, um mit Compute-Shadern zu arbeiten."

msgid ""
"The demo projects repository contains a `Compute Shader Heightmap demo "
"<https://github.com/godotengine/godot-demo-projects/tree/master/misc/"
"compute_shader_heightmap>`__ This project performs heightmap image "
"generation on the CPU and GPU separately, which lets you compare how a "
"similar algorithm can be implemented in two different ways (with the GPU "
"implementation being faster in most cases)."
msgstr ""
"Das Repository für Demoprojekte enthält eine `Compute Shader Höhenkarten-"
"Demo <https://github.com/godotengine/godot-demo-projects/tree/master/misc/"
"compute_shader_heightmap>`__. Dieses Projekt führt die Erzeugung von "
"Höhenkarten-Bildern auf der CPU und der GPU getrennt durch, wodurch Sie "
"vergleichen können, wie ein ähnlicher Algorithmus auf zwei verschiedene "
"Arten implementiert werden kann (wobei die GPU-Implementierung in den "
"meisten Fällen schneller ist)."

msgid "Translation status"
msgstr "Übersetzungsstatus"
