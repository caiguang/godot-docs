# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Your first 2D shader"
msgstr "Ihr erster 2D-Shader"

msgid "Introduction"
msgstr "Einführung"

msgid ""
"Shaders are special programs that execute on the GPU and are used for "
"rendering graphics. All modern rendering is done with shaders. For a more "
"detailed description of what shaders are please see :ref:`What are shaders "
"<doc_introduction_to_shaders>`."
msgstr ""
"Shader sind spezielle Programme, die auf dem Grafikprozessor ausgeführt und "
"zum Rendern von Grafiken verwendet werden. Das gesamte moderne Rendering "
"wird mit Shadern durchgeführt. Eine genauere Beschreibung der Shader finden "
"Sie unter :ref:`Was sind Shader <doc_introduction_to_shaders>`."

msgid ""
"This tutorial will focus on the practical aspects of writing shader programs "
"by walking you through the process of writing a shader with both vertex and "
"fragment functions. This tutorial targets absolute beginners to shaders."
msgstr ""
"Dieses Tutorial konzentriert sich auf die praktischen Aspekte der Erstellung "
"von Shader-Programmen, indem es Sie durch den Prozess der Erstellung eines "
"Shaders mit Vertex- und Fragment-Funktionen führt. Dieses Tutorial richtet "
"sich an absolute Anfänger im Bereich Shader."

msgid ""
"If you have experience writing shaders and are just looking for an overview "
"of how shaders work in Godot, see the :ref:`Shading Reference <toc-shading-"
"reference>`."
msgstr ""
"Wenn Sie Erfahrung mit dem Schreiben von Shadern haben und nur einen "
"Überblick über die Funktionsweise von Shadern in Godot suchen, lesen Sie "
"die :ref:`Shading Reference <toc-shading-reference>`."

msgid "Setup"
msgstr "Einrichtung"

msgid ""
":ref:`CanvasItem shaders <doc_canvas_item_shader>` are used to draw all 2D "
"objects in Godot, while :ref:`Spatial <doc_spatial_shader>` shaders are used "
"to draw all 3D objects."
msgstr ""
":ref:`CanvasItem-Shader <doc_canvas_item_shader>` werden verwendet, um alle "
"2D-Objekte in Godot zu zeichnen, während :ref:`Spatial <doc_spatial_shader>`-"
"Shader verwendet werden, um alle 3D-Objekte zu zeichnen."

msgid ""
"In order to use a shader it must be attached inside a :ref:`Material "
"<class_Material>` which must be attached to an object. Materials are a type "
"of :ref:`Resource <doc_resources>`. To draw multiple objects with the same "
"material, the material must be attached to each object."
msgstr ""
"Um einen Shader zu verwenden, muss er innerhalb eines :ref:`Materials "
"<class_Material>` angehängt sein, das wiederum an ein Objekt angehängt sein "
"muss. Materialien sind ein Typ von :ref:`Ressource <doc_resources>`. Um "
"mehrere Objekte mit demselben Material zu zeichnen, muss das Material an "
"jedes Objekt angehängt werden."

msgid ""
"All objects derived from a :ref:`CanvasItem <class_CanvasItem>` have a "
"material property. This includes all :ref:`GUI elements <class_Control>`, :"
"ref:`Sprite2Ds <class_Sprite2D>`, :ref:`TileMaps <class_Tilemap>`, :ref:"
"`MeshInstance2Ds <class_MeshInstance2D>` etc. They also have an option to "
"inherit their parent's material. This can be useful if you have a large "
"number of nodes that you want to use the same material."
msgstr ""
"Alle Objekte, die von einem :ref:`CanvasItem <class_CanvasItem>` abgeleitet "
"sind, haben eine Material-Property. Dazu gehören alle :ref:`GUI-Elemente "
"<class_Control>`, :ref:`Sprite2Ds <class_Sprite2D>`, :ref:`TileMaps "
"<class_Tilemap>`, :ref:`MeshInstance2Ds <class_MeshInstance2D>` usw. Sie "
"haben auch die Möglichkeit, das Material ihrer Eltern zu erben. Dies kann "
"nützlich sein, wenn Sie eine große Anzahl von Nodes haben, die das gleiche "
"Material verwenden sollen."

msgid ""
"To begin, create a Sprite2D node. :ref:`You can use any CanvasItem "
"<doc_custom_drawing_in_2d>`, so long as it is drawing to the canvas, so for "
"this tutorial we will use a Sprite2D, as it is the easiest CanvasItem to "
"start drawing with."
msgstr ""
"Zu Beginn erstellen Sie einen Sprite2D-Node. :ref:`Sie können ein beliebiges "
"CanvasItem <doc_custom_drawing_in_2d>` verwenden, solange es auf den Canvas "
"zeichnet. Für dieses Tutorial werden wir ein Sprite2D verwenden, da es das "
"einfachste CanvasItem ist, um mit dem Zeichnen zu beginnen."

#, fuzzy
msgid ""
"In the Inspector, click beside \"Texture\" where it says \"[empty]\" and "
"select \"Load\", then select \"icon.svg\". For new projects, this is the "
"Godot icon. You should now see the icon in the viewport."
msgstr ""
"Klicken Sie im Inspektor neben \"Textur\" auf die Stelle, an der \"[leer]\" "
"steht, und wählen Sie \"Laden\" und dann \"Icon.png\" aus. Bei neuen "
"Projekten ist dies das Godot-Icon. Sie sollten nun das Icon im Viewport "
"sehen."

msgid ""
"Next, look down in the Inspector, under the CanvasItem section, click beside "
"\"Material\" and select \"New ShaderMaterial\". This creates a new Material "
"resource. Click on the sphere that appears. Godot currently doesn't know "
"whether you are writing a CanvasItem Shader or a Spatial Shader and it "
"previews the output of spatial shaders. So what you are seeing is the output "
"of the default Spatial Shader."
msgstr ""
"Schauen Sie im Inspektor nach unten im Abschnitt CanvasItem, klicken Sie "
"neben \"Material\" und wählen Sie \"Neues ShaderMaterial\". Dadurch wird "
"eine neue Materialressource erstellt. Klicken Sie auf die erscheinende "
"Kugel. Godot weiß derzeit nicht, ob Sie einen CanvasItem-Shader oder einen "
"Spatial-Shader schreiben, und zeigt eine Vorschau der Ausgabe von Spatial-"
"Shadern an. Was Sie also sehen, ist die Ausgabe des Default-Spatial-Shaders."

msgid ""
"Click beside \"Shader\" and select \"New Shader\". Finally, click on the "
"shader you just created and the shader editor will open. You are now ready "
"to begin writing your first shader."
msgstr ""
"Klicken Sie neben \"Shader\" und wählen Sie \"Neuer Shader\". Klicken Sie "
"schließlich auf den soeben erstellten Shader und der Shader-Editor wird "
"geöffnet. Sie können nun mit dem Schreiben Ihres ersten Shaders beginnen."

msgid "Your first CanvasItem shader"
msgstr "Ein erster CanvasItem-Shader"

msgid ""
"In Godot, all shaders start with a line specifying what type of shader they "
"are. It uses the following format:"
msgstr ""
"In Godot beginnen alle Shader mit einer Zeile, die angibt, um welche Art von "
"Shader es sich handelt. Dabei wird das folgende Format verwendet:"

msgid ""
"Because we are writing a CanvasItem shader, we specify ``canvas_item`` in "
"the first line. All our code will go beneath this declaration."
msgstr ""
"Da wir einen CanvasItem-Shader schreiben, geben wir ``canvas_item`` in der "
"ersten Zeile an. Unser gesamter Code wird unterhalb dieser Deklaration "
"stehen."

msgid ""
"This line tells the engine which built-in variables and functionality to "
"supply you with."
msgstr ""
"Diese Zeile teilt der Engine mit, welche Buit-in-Variablen und -Funktionen "
"Sie bereitstellen soll."

msgid ""
"In Godot you can override three functions to control how the shader "
"operates; ``vertex``, ``fragment``, and ``light``. This tutorial will walk "
"you through writing a shader with both vertex and fragment functions. Light "
"functions are significantly more complex than vertex and fragment functions "
"and so will not be covered here."
msgstr ""
"In Godot können Sie drei Funktionen überschreiben, um zu kontrollieren, wie "
"der Shader arbeitet: ``Vertex``, ``Fragment`` und ``Licht``. Dieses Tutorial "
"wird Sie durch das Schreiben eines Shaders mit Vertex- und "
"Fragmentfunktionen führen. Lichtfunktionen sind wesentlich komplexer als "
"Vertex- und Fragmentfunktionen und werden daher hier nicht behandelt."

msgid "Your first fragment function"
msgstr "Ihre erste Fragmentfunktion"

msgid ""
"The fragment function runs for every pixel in a Sprite2D and determines what "
"color that pixel should be."
msgstr ""
"Die Fragment-Funktion wird für jedes Pixel in einem Sprite2D ausgeführt und "
"bestimmt, welche Farbe dieses Pixel haben soll."

msgid ""
"They are restricted to the pixels covered by the Sprite2D, that means you "
"cannot use one to, for example, create an outline around a Sprite2D."
msgstr ""
"Sie sind auf die vom Sprite2D abgedeckten Pixel beschränkt, d.h. man kann "
"sie nicht verwenden, um z.B. einen Umriss um ein Sprite2D zu erstellen."

msgid ""
"The most basic fragment function does nothing except assign a single color "
"to every pixel."
msgstr ""
"Die einfachste Fragmentfunktion tut nichts anderes, als jedem Pixel eine "
"einzelne Farbe zuzuweisen."

msgid ""
"We do so by writing a ``vec4`` to the built-in variable ``COLOR``. ``vec4`` "
"is shorthand for constructing a vector with 4 numbers. For more information "
"about vectors see the :ref:`Vector math tutorial <doc_vector_math>`. "
"``COLOR`` is both an input variable to the fragment function and the final "
"output from it."
msgstr ""
"Wir tun dies, indem wir einen ``vec4`` in die Built-in-Variable ``COLOR`` "
"schreiben. ``vec4`` ist eine Abkürzung für das Konstruieren eines Vektors "
"mit 4 Zahlen. Für weitere Informationen über Vektoren siehe das :ref:`Vector "
"math tutorial <doc_vector_math>`. ``COLOR`` ist sowohl eine Eingabevariable "
"für die Fragmentfunktion als auch die endgültige Ausgabe der Funktion."

msgid ""
"Congratulations! You're done. You have successfully written your first "
"shader in Godot."
msgstr ""
"Herzlichen Glückwunsch! Sie sind fertig. Sie haben erfolgreich Ihren ersten "
"Shader in Godot geschrieben."

msgid "Now let's make things more complex."
msgstr "Lassen Sie uns die Dinge jetzt komplexer machen."

msgid ""
"There are many inputs to the fragment function that you can use for "
"calculating ``COLOR``. ``UV`` is one of them. UV coordinates are specified "
"in your Sprite2D (without you knowing it!) and they tell the shader where to "
"read from textures for each part of the mesh."
msgstr ""
"Es gibt viele Eingaben für die Fragment-Funktion, die Sie für die Berechnung "
"von ``COLOR`` verwenden können. ``UV`` ist einer davon. UV-Koordinaten "
"werden in Ihrem Sprite2D angegeben (ohne dass Sie es wissen!) und sie sagen "
"dem Shader, wo er die Texturen für jeden Teil des Meshes auslesen soll."

msgid ""
"In the fragment function you can only read from ``UV``, but you can use it "
"in other functions or to assign values to ``COLOR`` directly."
msgstr ""
"In der Fragmentfunktion können Sie nur von ``UV`` lesen, aber Sie können es "
"in anderen Funktionen verwenden oder ``COLOR`` direkt Werte zuweisen."

msgid "``UV`` varies between 0-1 from left-right and from top-bottom."
msgstr ""
"``UV`` variiert zwischen 0-1 von links nach rechts und von oben nach unten."

msgid "Using ``TEXTURE`` built-in"
msgstr "Verwenden des ``TEXTURE``-Built-ins"

msgid ""
"The default fragment function reads from the set Sprite2D texture and "
"displays it."
msgstr ""

#, fuzzy
msgid ""
"When you want to adjust a color in a Sprite2D you can adjust the color from "
"the texture manually like in the code below."
msgstr ""
"Wenn Sie eine Farbe in einem Sprite2D anpassen wollen, können Sie die Farbe "
"der Textur nicht einfach manuell anpassen, wie im untenstehenden Code."

msgid ""
"Certain nodes, like Sprite2Ds, have a dedicated texture variable that can be "
"accessed in the shader using ``TEXTURE``. If you want to use the Sprite2D "
"texture to combine with other colors, you can use the ``UV`` with the "
"``texture`` function to access this variable. Use them to redraw the "
"Sprite2D with the texture."
msgstr ""

msgid "Uniform input"
msgstr "Uniform-Eingabe"

msgid ""
"Uniform input is used to pass data into a shader that will be the same "
"across the entire shader."
msgstr ""
"Uniform-Eingabe wird verwendet, um Daten in einen Shader zu übertragen, die "
"im gesamten Shader gleich sind."

msgid ""
"You can use uniforms by defining them at the top of your shader like so:"
msgstr ""
"Sie können Uniforms verwenden, indem Sie sie oben im Shader wie folgt "
"definieren:"

msgid ""
"For more information about usage see the :ref:`Shading Language doc "
"<doc_shading_language>`."
msgstr ""
"Weitere Informationen über Godots Shader-Sprache gibt es im eigenen "
"Artikel: :ref:`Shading-Sprach-Dokumentation <doc_shading_language>`."

msgid "Add a uniform to change the amount of blue in our Sprite2D."
msgstr ""
"Fügen Sie ein Uniform hinzu, um die Menge an Blau in unserem Sprite2D zu "
"ändern."

msgid ""
"Now you can change the amount of blue in the Sprite2D from the editor. Look "
"back at the Inspector under where you created your shader. You should see a "
"section called \"Shader Param\". Unfold that section and you will see the "
"uniform you just declared. If you change the value in the editor, it will "
"overwrite the default value you provided in the shader."
msgstr ""
"Jetzt können Sie den Blauanteil im Sprite2D über den Editor ändern. Schauen "
"Sie im Inspektor unter der Stelle nach, an der Sie Ihren Shader erstellt "
"haben. Sie sollten einen Abschnitt namens \"Shader Param\" sehen. Klappen "
"Sie diesen Abschnitt auf und Sie werden das Uniform sehen, das Sie gerade "
"deklariert haben. Wenn Sie den Wert im Editor ändern, wird der Defaultwert, "
"den Sie im Shader angegeben haben, überschrieben."

msgid "Interacting with shaders from code"
msgstr "Interaktion mit Shadern aus Code"

msgid ""
"You can change uniforms from code using the function "
"``set_shader_parameter()`` which is called on the node's material resource. "
"With a Sprite2D node, the following code can be used to set the ``blue`` "
"uniform."
msgstr ""
"Sie können Uniforms vom Code aus ändern, indem Sie die Funktion "
"``set_shader_parameter()`` verwenden, die auf der Materialressource des "
"Nodes aufgerufen wird. Bei einem Sprite2D-Node kann der folgende Code "
"verwendet werden, um das ``blaue`` Uniform zu setzen."

msgid ""
"Note that the name of the uniform is a string. The string must match exactly "
"with how it is written in the shader, including spelling and case."
msgstr ""
"Beachten Sie, dass der Name des Uniforms ein String ist. Der String muss "
"genau mit der Schreibweise im Shader übereinstimmen, einschließlich "
"Rechtschreibung und Groß-/Kleinschreibung."

msgid "Your first vertex function"
msgstr "Ihre erste Vertex Funktion"

msgid "Now that we have a fragment function, let's write a vertex function."
msgstr ""
"Da wir nun eine Fragment-Funktion haben, schreiben wir eine Vertex-Funktion."

msgid ""
"Use the vertex function to calculate where on the screen each vertex should "
"end up."
msgstr ""
"Verwenden Sie die Vertex-Funktion zur Berechnung, wo auf dem Bildschirm "
"jeder Vertex landen soll."

msgid ""
"The most important variable in the vertex function is ``VERTEX``. Initially, "
"it specifies the vertex coordinates in your model, but you also write to it "
"to determine where to actually draw those vertices. ``VERTEX`` is a ``vec2`` "
"that is initially presented in local-space (i.e. not relative to the camera, "
"viewport, or parent nodes)."
msgstr ""
"Die wichtigste Variable in der Vertex-Funktion ist ``VERTEX``. Anfänglich "
"gibt sie die Koordinaten der Vertices in Ihrem Modell an, aber Sie schreiben "
"auch in sie, um zu bestimmen, wo diese Vertices tatsächlich gezeichnet "
"werden sollen. ``VERTEX`` ist eine ``vec2``, die anfänglich im lokalen Raum "
"dargestellt wird (d.h. nicht relativ zur Kamera, dem Viewport oder den "
"übergeordneten Nodes)."

msgid "You can offset the vertices by directly adding to ``VERTEX``."
msgstr ""
"Sie können die Vertices mit einem Offset verschieben, indem Werte zu "
"``VERTEX`` addieren."

msgid ""
"Combined with the ``TIME`` built-in variable, this can be used for basic "
"animation."
msgstr ""
"In Kombination mit der Built-in-Variable ``TIME`` kann diese für einfache "
"Animationen verwendet werden."

msgid "Conclusion"
msgstr "Fazit"

msgid ""
"At their core, shaders do what you have seen so far, they compute ``VERTEX`` "
"and ``COLOR``. It is up to you to dream up more complex mathematical "
"strategies for assigning values to those variables."
msgstr ""
"Im Kern tun Shader das, was Sie bisher gesehen haben: Sie berechnen "
"``VERTEX`` und ``COLOR``. Es liegt an Ihnen, sich komplexere mathematische "
"Strategien für die Zuweisung von Werten zu diesen Variablen auszudenken."

msgid ""
"For inspiration, take a look at some of the more advanced shader tutorials, "
"and look at other sites like `Shadertoy <https://www.shadertoy.com/results?"
"query=&sort=popular&from=10&num=4>`_ and `The Book of Shaders <https://"
"thebookofshaders.com>`_."
msgstr ""
"Um sich zu inspirieren, schauen Sie sich einige der fortgeschritteneren "
"Shader-Tutorials an, und schauen Sie sich andere Seiten wie `Shadertoy "
"<https://www.shadertoy.com/results?query=&sort=popular&from=10&num=4>`_ und "
"`The Book of Shaders <https://thebookofshaders.com>`_ an."

msgid "Translation status"
msgstr "Übersetzungsstatus"
