# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-27 19:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Your first 3D shader"
msgstr "Ihr erster 3D-Shader"

msgid ""
"You have decided to start writing your own custom Spatial shader. Maybe you "
"saw a cool trick online that was done with shaders, or you have found that "
"the :ref:`StandardMaterial3D <class_StandardMaterial3D>` isn't quite meeting "
"your needs. Either way, you have decided to write your own and now you need "
"to figure out where to start."
msgstr ""
"Sie haben sich entschlossen, Ihren eigenen Spatial-Shader zu schreiben. "
"Vielleicht haben Sie im Internet einen coolen Trick gesehen, der mit Shadern "
"gemacht wurde, oder Sie haben festgestellt, dass das :ref:"
"`StandardMaterial3D <class_StandardMaterial3D>` Ihren Bedürfnissen nicht "
"ganz gerecht wird. In jedem Fall haben Sie beschlossen, Ihr eigenes Material "
"zu schreiben, und jetzt müssen Sie herausfinden, wo Sie anfangen sollen."

msgid ""
"This tutorial will explain how to write a Spatial shader and will cover more "
"topics than the :ref:`CanvasItem <doc_your_first_canvasitem_shader>` "
"tutorial."
msgstr ""
"Dieses Tutorial erklärt, wie Spatial-Shader erstellt werden und gehen mehr "
"ins Detail als :ref:`CanvasItem <doc_your_first_canvasitem_shader>`."

msgid ""
"Spatial shaders have more built-in functionality than CanvasItem shaders. "
"The expectation with spatial shaders is that Godot has already provided the "
"functionality for common use cases and all the user needs to do in the "
"shader is set the proper parameters. This is especially true for a PBR "
"(physically based rendering) workflow."
msgstr ""
"Spatial-Shader verfügen über mehr Built-in-Funktionen als CanvasItem-Shader. "
"Bei räumlichen Shadern wird erwartet, dass Godot bereits die Funktionalität "
"für allgemeine Anwendungsfälle besitzt und der Benutzer im Shader lediglich "
"die richtigen Parameter festlegen muss. Dies gilt insbesondere für einen PBR "
"(Physical Based Rendering)-Workflow."

msgid ""
"This is a two-part tutorial. In this first part we will create terrain using "
"vertex displacement from a heightmap in the vertex function. In the :ref:"
"`second part <doc_your_second_spatial_shader>` we will take the concepts "
"from this tutorial and set up custom materials in a fragment shader by "
"writing an ocean water shader."
msgstr ""
"Dies ist ein zweiteiliges Tutorial. In diesem ersten Teil werden wir Terrain "
"mit Vertex-Displacement aus einer Heightmap in der Vertex-Funktion "
"erstellen. Im :ref:`zweiten Teil <doc_your_second_spatial_shader>` werden "
"wir die Konzepte aus diesem Tutorial übernehmen und benutzerdefinierte "
"Materialien in einem Fragment-Shader einrichten, indem wir einen Meerwasser-"
"Shader schreiben."

msgid ""
"This tutorial assumes some basic shader knowledge such as types (``vec2``, "
"``float``, ``sampler2D``), and functions. If you are uncomfortable with "
"these concepts it is best to get a gentle introduction from `The Book of "
"Shaders <https://thebookofshaders.com>`_ before completing this tutorial."
msgstr ""
"Dieses Tutorial setzt einige grundlegende Shader-Kenntnisse wie Typen "
"(``vec2``, ``float``, ``sampler2D``) und Funktionen voraus. Wenn Sie mit "
"diesen Konzepten nicht vertraut sind, ist es am besten, sich sanfte "
"Einführung über `The Book of Shaders <https://thebookofshaders.com>`_ zu "
"verschaffen, bevor Sie dieses Tutorial beenden."

msgid "Where to assign my material"
msgstr "Wo kann ich mein Material zuordnen?"

msgid ""
"In 3D, objects are drawn using :ref:`Meshes <class_Mesh>`. Meshes are a "
"resource type that store geometry (the shape of your object) and materials "
"(the color and how the object reacts to light) in units called \"surfaces\". "
"A Mesh can have multiple surfaces, or just one. Typically, you would import "
"a mesh from another program (e.g. Blender). But Godot also has a few :ref:"
"`PrimitiveMeshes <class_primitivemesh>` that allow you to add basic geometry "
"to a scene without importing Meshes."
msgstr ""
"In 3D werden Objekte mit :ref:`Meshes <class_Mesh>` gezeichnet. Meshes sind "
"ein Ressourcentyp, der Geometrie (die Form des Objekts) und Materialien (die "
"Farbe und wie das Objekt auf Licht reagiert) in Einheiten speichert, die "
"\"Oberflächen\" genannt werden. Ein Mesh kann mehrere Oberflächen haben oder "
"auch nur eine. Normalerweise importiert man ein Mesh aus einem anderen "
"Programm (z.B. Blender). Aber Godot hat auch ein paar :ref:`PrimitiveMeshes "
"<class_primitivemesh>`, mit denen man einer Szene grundlegende Geometrie "
"hinzufügen kann, ohne Meshes zu importieren."

msgid ""
"There are multiple node types that you can use to draw a mesh. The main one "
"is :ref:`MeshInstance3D <class_MeshInstance3D>`, but you can also use :ref:"
"`GPUParticles3D <class_GPUParticles3D>`, :ref:`MultiMeshes "
"<class_MultiMesh>` (with a :ref:`MultiMeshInstance3D "
"<class_MultiMeshInstance3D>`), or others."
msgstr ""
"Es gibt mehrere Node-Typen, die Sie zum Zeichnen eines Meshs verwenden "
"können. Der wichtigste ist :ref:`MeshInstance3D <class_MeshInstance3D>`, "
"aber man kann auch :ref:`GPUParticles3D <class_GPUParticles3D>`, :ref:"
"`MultiMeshes <class_MultiMesh>` (mit einem :ref:`MultiMeshInstance3D "
"<class_MultiMeshInstance3D>`), oder andere verwenden."

msgid ""
"Typically, a material is associated with a given surface in a mesh, but some "
"nodes, like MeshInstance3D, allow you to override the material for a "
"specific surface, or for all surfaces."
msgstr ""
"Normalerweise ist ein Material mit einer bestimmten Oberfläche in einem Mesh "
"verbunden, aber einige Nodes, wie MeshInstance3D, ermöglichen es Ihnen, das "
"Material für eine bestimmte Oberfläche oder für alle Oberflächen zu "
"überschreiben."

msgid ""
"If you set a material on the surface or mesh itself, then all "
"MeshInstance3Ds that share that mesh will share that material. However, if "
"you want to reuse the same mesh across multiple mesh instances, but have "
"different materials for each instance then you should set the material on "
"the MeshInstance3D."
msgstr ""
"Wenn Sie ein Material auf der Oberfläche oder dem Mesh selbst festlegen, "
"wird dieses Material von allen MeshInstance3Ds, die dieses Mesh verwenden, "
"übernommen. Wenn Sie jedoch dasselbe Mesh in mehreren Mesh-Instanzen "
"wiederverwenden möchten, aber unterschiedliche Materialien für jede Instanz "
"haben, sollten Sie das Material auf der MeshInstance3D festlegen."

msgid ""
"For this tutorial we will set our material on the mesh itself rather than "
"taking advantage of the MeshInstance3D's ability to override materials."
msgstr ""
"Für dieses Tutorial werden wir unser Material auf das Mesh selbst setzen, "
"anstatt die Fähigkeit von MeshInstance3D zu nutzen, Materialien zu "
"überschreiben."

msgid "Setting up"
msgstr "Einrichtung"

msgid ""
"Add a new :ref:`MeshInstance3D <class_MeshInstance3D>` node to your scene."
msgstr ""
"Fügen Sie einen neuen :ref:`MeshInstance3D <class_MeshInstance3D>`-Node zu "
"Ihrer Szene hinzu."

msgid ""
"In the inspector tab beside \"Mesh\" click \"[empty]\" and select \"New "
"PlaneMesh\". Then click on the image of a plane that appears."
msgstr ""
"Klicken Sie im Inspektor-Tab neben \"Mesh\" auf \"[leer]\" und wählen Sie "
"\"Neu: PlaneMesh\". Dann klicken Sie auf das Bild einer Ebene, die erscheint."

msgid "This adds a :ref:`PlaneMesh <class_planemesh>` to our scene."
msgstr ""
"Dies fügt ein :ref:`PlaneMesh <class_planemesh>` zu unserer Szene hinzu."

msgid ""
"Then, in the viewport, click in the upper left corner on the button that "
"says \"Perspective\". A menu will appear. In the middle of the menu are "
"options for how to display the scene. Select 'Display Wireframe'."
msgstr ""
"Klicken Sie dann im Viewport in der oberen linken Ecke auf den Button "
"\"Perspective\". Ein Menü wird angezeigt. In der Mitte des Menüs finden Sie "
"Optionen für die Darstellung der Szene. Wählen Sie \"Drahtgitter anzeigen\"."

msgid "This will allow you to see the triangles making up the plane."
msgstr "So können Sie die Dreiecke sehen, aus denen die Ebene besteht."

msgid ""
"Now set ``Subdivide Width`` and ``Subdivide Depth`` of the :ref:`PlaneMesh "
"<class_planemesh>` to ``32``."
msgstr ""
"Setzen Sie nun ``Unterteilungsbreite`` und ``Unterteilungstiefe`` des :ref:"
"`PlaneMesh <class_planemesh>` auf ``32``."

msgid ""
"You can see that there are now many more triangles in the :ref:"
"`MeshInstance3D<class_MeshInstance3D>`. This will give us more vertices to "
"work with and thus allow us to add more detail."
msgstr ""
"Sie können sehen, dass es jetzt viel mehr Dreiecke in der :ref:"
"`MeshInstance3D<class_MeshInstance3D>` gibt. Dadurch haben wir mehr "
"Vertices, mit denen wir arbeiten können, und können somit mehr Details "
"hinzufügen."

msgid ""
":ref:`PrimitiveMeshes <class_primitivemesh>`, like PlaneMesh, only have one "
"surface, so instead of an array of materials there is only one. Click beside "
"\"Material\" where it says \"[empty]\" and select \"New ShaderMaterial\". "
"Then click the sphere that appears."
msgstr ""
":ref:`PrimitiveMeshes <class_primitivemesh>`, wie PlaneMesh, haben nur eine "
"Oberfläche, so dass es anstelle eines Arrays von Materialien nur eines gibt. "
"Klicken Sie neben \"Material\", wo \"[leer]\" steht, und wählen Sie \"Neu: "
"ShaderMaterial\". Klicken Sie dann auf die Kugel, die erscheint."

msgid ""
"Now click beside \"Shader\" where it says \"[empty]\" and select \"New "
"Shader\"."
msgstr ""
"Klicken Sie nun neben \"Shader\" auf die Stelle, wo \"[leer]\" steht, und "
"wählen Sie \"Neuer Shader\"."

msgid ""
"The shader editor should now pop up and you are ready to begin writing your "
"first Spatial shader!"
msgstr ""
"Der Shader-Editor sollte nun erscheinen und alles ist bereit um Ihren ersten "
"Spatial-Shader zu schreiben!"

msgid "Shader magic"
msgstr "Shader-Magie"

msgid ""
"The new shader is already generated with a ``shader_type`` variable and the "
"``fragment()`` function. The first thing Godot shaders need is a declaration "
"of what type of shader they are. In this case the ``shader_type`` is set to "
"``spatial`` because this is a spatial shader."
msgstr ""
"Der neue Shader wird bereits mit einer ``shader_type``-Variablen und der "
"``fragment()``-Funktion erzeugt. Das erste, was Godot-Shader brauchen, ist "
"eine Deklaration, welcher Typ von Shader sie sind. In diesem Fall ist der "
"``shader_type`` auf ``spatial`` gesetzt, da dies ein räumlicher Shader ist."

msgid ""
"For now ignore the ``fragment()`` function and define the ``vertex()`` "
"function. The ``vertex()`` function determines where the vertices of your :"
"ref:`MeshInstance3D<class_MeshInstance3D>` appear in the final scene. We "
"will be using it to offset the height of each vertex and make our flat plane "
"appear like a little terrain."
msgstr ""
"Für den Moment ignorieren Sie die ``fragment()``-Funktion und definieren die "
"``vertex()`` Funktion. Die ``vertex()``-Funktion bestimmt, wo die Vertices "
"Ihrer :ref:`MeshInstance3D<class_MeshInstance3D>` in der endgültigen Szene "
"erscheinen. Wir werden sie benutzen, um die Höhe jedes Vertex zu verschieben "
"und unsere flache Ebene wie ein kleines Terrain erscheinen zu lassen."

msgid "We define the vertex shader like so:"
msgstr "Wir definieren den Vertex-Shader wie folgt:"

msgid ""
"With nothing in the ``vertex()`` function, Godot will use its default vertex "
"shader. We can easily start to make changes by adding a single line:"
msgstr ""
"Wenn die Funktion ``vertex()`` nichts enthält, wird Godot seinen Default-"
"Vertex-Shader verwenden. Wir können leicht damit beginnen, Änderungen "
"vorzunehmen, indem wir eine einzige Zeile hinzufügen:"

msgid "Adding this line, you should get an image like the one below."
msgstr ""
"Wenn Sie diese Zeile hinzufügen, sollten Sie ein Bild wie das folgende "
"erhalten."

msgid ""
"Okay, let's unpack this. The ``y`` value of the ``VERTEX`` is being "
"increased. And we are passing the ``x`` and ``z`` components of the "
"``VERTEX`` as arguments to ``cos`` and ``sin``; that gives us a wave-like "
"appearance across the ``x`` and ``z`` axes."
msgstr ""
"Okay, packen wir das mal aus. Der ``y``-Wert des ``VERTEX`` wird erhöht. Und "
"wir geben die ``x``- und ``z``-Komponenten der ``VERTEX`` als Argumente an "
"``cos`` und ``sin`` weiter; das gibt uns ein wellenförmiges Aussehen über "
"die ``x``- und ``z``-Achsen."

msgid ""
"What we want to achieve is the look of little hills; after all. ``cos`` and "
"``sin`` already look kind of like hills. We do so by scaling the inputs to "
"the ``cos`` and ``sin`` functions."
msgstr ""
"Was wir schließlich erreichen wollen, ist das Aussehen von kleinen Hügeln. "
"``cos`` und ``sin`` sehen ja schon irgendwie wie Hügel aus. Wir tun dies, "
"indem wir die Eingaben für die Funktionen ``cos`` und ``sin`` skalieren."

msgid ""
"This looks better, but it is still too spiky and repetitive, let's make it a "
"little more interesting."
msgstr ""
"Das sieht besser aus, aber es ist immer noch zu stachelig und repetitiv, wir "
"sollten es etwas interessanter gestalten."

msgid "Noise heightmap"
msgstr "Rausch-Höhenkarte"

msgid ""
"Noise is a very popular tool for faking the look of terrain. Think of it as "
"similar to the cosine function where you have repeating hills except, with "
"noise, each hill has a different height."
msgstr ""
"Rauschen ist ein sehr beliebtes Mittel, um das Aussehen eines Geländes "
"vorzutäuschen. Stellen Sie es sich ähnlich wie die Kosinusfunktion vor, bei "
"der Sie sich wiederholende Hügel haben, mit dem Unterschied, dass bei "
"Rauschen jeder Hügel eine andere Höhe hat."

msgid ""
"Godot provides the :ref:`NoiseTexture2D <class_noisetexture2D>` resource for "
"generating a noise texture that can be accessed from a shader."
msgstr ""
"Godot stellt die Ressource :ref:`NoiseTexture2D <class_noisetexture2D>` zur "
"Verfügung, um eine Geräuschtextur zu erzeugen, auf die von einem Shader aus "
"zugegriffen werden kann."

msgid ""
"To access a texture in a shader add the following code near the top of your "
"shader, outside the ``vertex()`` function."
msgstr ""
"Um auf eine Textur in einem Shader zuzugreifen, fügen Sie den folgenden Code "
"am Anfang Ihres Shaders ein, außerhalb der ``vertex()`` Funktion."

msgid ""
"This will allow you to send a noise texture to the shader. Now look in the "
"inspector under your material. You should see a section called \"Shader "
"Params\". If you open it up, you'll see a section called \"noise\"."
msgstr ""
"Dies ermöglicht es Ihnen, eine Rauschtextur an den Shader zu senden. Schauen "
"Sie nun im Inspektor unter Ihrem Material nach. Sie sollten einen Abschnitt "
"namens \"Shader-Params\" sehen. Wenn Sie diesen öffnen, sehen Sie einen "
"Abschnitt namens \"Rauschen\"."

msgid ""
"Click beside it where it says \"[empty]\" and select \"New NoiseTexture2D\". "
"Then in your :ref:`NoiseTexture2D <class_noisetexture2D>` click beside where "
"it says \"Noise\" and select \"New FastNoiseLite\"."
msgstr ""
"Klicken Sie daneben, wo \"[leer]\" steht, und wählen Sie \"Neu: "
"NoiseTexture2D\". Dann klicken Sie in Ihrem :ref:`NoiseTexture2D "
"<class_noisetexture2D>` auf die Stelle, an der \"Rauschen\" steht, und "
"wählen Sie \"Neu: FastNoiseLite\"."

msgid ""
":ref:`FastNoiseLite <class_fastnoiselite>` is used by the NoiseTexture2D to "
"generate a heightmap."
msgstr ""
":ref:`FastNoiseLite <class_fastnoiselite>` wird von der NoiseTexture2D "
"verwendet, um eine Höhenkarte zu erzeugen."

msgid "Once you set it up and should look like this."
msgstr "Sobald Sie es eingerichtet haben und so aussehen sollten."

msgid ""
"Now, access the noise texture using the ``texture()`` function. "
"``texture()`` takes a texture as the first argument and a ``vec2`` for the "
"position on the texture as the second argument. We use the ``x`` and ``z`` "
"channels of ``VERTEX`` to determine where on the texture to look up. Note "
"that the PlaneMesh coordinates are within the [-1,1] range (for a size of "
"2), while the texture coordinates are within [0,1], so to normalize we "
"divide by the size of the PlaneMesh by 2.0 and add 0.5. ``texture()`` "
"returns a ``vec4`` of the ``r, g, b, a`` channels at the position. Since the "
"noise texture is grayscale, all of the values are the same, so we can use "
"any one of the channels as the height. In this case we'll use the ``r``, or "
"``x`` channel."
msgstr ""
"Greifen Sie nun mit der Funktion ``texture()`` auf die Rauschtextur zu. Die "
"Funktion ``texture()`` nimmt eine Textur als erstes Argument und ein "
"``vec2`` für die Position auf der Textur als zweites Argument. Wir benutzen "
"die ``x`` und ``z``-Kanäle von ``VERTEX``, um zu bestimmen, wo auf der "
"Textur nachgeschaut werden soll. Beachten Sie, dass die Koordinaten des "
"PlaneMesh im Bereich [-1,1] liegen (bei einer Größe von 2), während die "
"Koordinaten der Textur im Bereich [0,1] liegen, so dass wir zur "
"Normalisierung die Größe des PlaneMesh durch 2,0 teilen und 0,5 addieren. "
"``Textur()`` gibt eine ``Vec4`` der ``r, g, b, a`` Kanäle an der Position "
"zurück. Da die Rauschtextur Graustufen hat, sind alle Werte gleich, so dass "
"wir jeden der Kanäle als Höhe verwenden können. In diesem Fall verwenden wir "
"den ``r``- oder ``x``-Kanal."

msgid ""
"Note: ``xyzw`` is the same as ``rgba`` in GLSL, so instead of ``texture()."
"x`` above, we could use ``texture().r``. See the `OpenGL documentation "
"<https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Vectors>`_ for more "
"details."
msgstr ""
"Anmerkung: ``xyzw`` ist dasselbe wie ``rgba`` in GLSL, also könnten wir "
"statt ``texture().x`` oben ``texture().r`` verwenden. Siehe die `OpenGL "
"Dokumentation <https://www.khronos.org/opengl/wiki/"
"Data_Type_(GLSL)#Vectors>`_ für weitere Details."

msgid "Using this code you can see the texture creates random looking hills."
msgstr ""
"Mit diesem Code können Sie sehen, wie die Textur zufällig aussehende Hügel "
"erzeugt."

msgid ""
"Right now it is too spiky, we want to soften the hills a bit. To do that, we "
"will use a uniform. You already used a uniform above to pass in the noise "
"texture, now let's learn how they work."
msgstr ""
"Im Moment ist es zu stachelig, wir wollen die Hügel ein wenig abmildern. Um "
"das zu tun, werden wir ein Uniform verwenden. Sie haben bereits oben ein "
"Uniform verwendet um die Rausch-Textur zu übergeben, jetzt lassen Sie uns "
"lernen, wie sie funktionieren."

msgid "Uniforms"
msgstr "Uniforms"

msgid ""
"Uniform variables allow you to pass data from the game into the shader. They "
"are very useful for controlling shader effects. Uniforms can be almost any "
"datatype that can be used in the shader. To use a uniform, you declare it in "
"your :ref:`Shader<class_Shader>` using the keyword ``uniform``."
msgstr ""
"Uniform-Variablen ermöglichen es Ihnen, Daten aus dem Spiel an den Shader zu "
"übergeben. Sie sind sehr nützlich für die Steuerung von Shader-Effekten. "
"Uniforms können fast jeder Datentyp sein, der im Shader verwendet werden "
"kann. Um ein Uniform zu verwenden, deklariert man es in seinem :ref:"
"`Shader<class_Shader>` mit dem Schlüsselwort ``uniform``."

msgid "Let's make a uniform that changes the height of the terrain."
msgstr ""
"Lassen Sie uns ein Uniform herstellen, das die Höhe des Geländes verändert."

msgid ""
"Godot lets you initialize a uniform with a value; here, ``height_scale`` is "
"set to ``0.5``. You can set uniforms from GDScript by calling the function "
"``set_shader_parameter()`` on the material corresponding to the shader. The "
"value passed from GDScript takes precedence over the value used to "
"initialize it in the shader."
msgstr ""
"Godot erlaubt es Ihnen, ein Uniform mit einem Wert zu initialisieren; hier "
"ist ``height_scale`` auf ``0.5`` gesetzt. Sie können Uniforms von GDScript "
"aus setzen, indem Sie die Funktion ``set_shader_parameter()`` auf dem "
"Material, das dem Shader entspricht, aufrufen. Der von GDScript übergebene "
"Wert hat Vorrang vor dem Wert, mit dem er im Shader initialisiert wurde."

msgid ""
"Changing uniforms in Spatial-based nodes is different from CanvasItem-based "
"nodes. Here, we set the material inside the PlaneMesh resource. In other "
"mesh resources you may need to first access the material by calling "
"``surface_get_material()``. While in the MeshInstance3D you would access the "
"material using ``get_surface_material()`` or ``material_override``."
msgstr ""
"Das Ändern von Uniforms in Spatial-basierten Nodes unterscheidet sich von "
"CanvasItem-basierten Nodes. Hier setzen wir das Material innerhalb der "
"PlaneMesh-Ressource. In anderen Mesh-Ressourcen müssen Sie möglicherweise "
"zuerst auf das Material zugreifen, indem Sie ``surface_get_material()`` "
"aufrufen. In der MeshInstance3D würde man auf das Material mit "
"``get_surface_material()`` oder ``material_override`` zugreifen."

msgid ""
"Remember that the string passed into ``set_shader_parameter()`` must match "
"the name of the uniform variable in the :ref:`Shader<class_Shader>`. You can "
"use the uniform variable anywhere inside your :ref:`Shader<class_Shader>`. "
"Here, we will use it to set the height value instead of arbitrarily "
"multiplying by ``0.5``."
msgstr ""
"Denken Sie daran, dass der String, der in ``set_shader_parameter()`` "
"übergeben wird, mit dem Namen der Uniform-Variable im :ref:"
"`Shader<class_Shader>` übereinstimmen muss. Sie können die Uniform-Variable "
"überall in Ihrem :ref:`Shader<class_Shader>` verwenden. Hier werden wir sie "
"benutzen, um den Höhenwert zu setzen, anstatt willkürlich mit ``0.5`` zu "
"multiplizieren."

msgid "Now it looks much better."
msgstr "Nun sieht es viel besser aus."

msgid ""
"Using uniforms, we can even change the value every frame to animate the "
"height of the terrain. Combined with :ref:`Tweens <class_Tween>`, this can "
"be especially useful for animations."
msgstr ""
"Mit Uniforms können wir den Wert sogar bei jedem Frame ändern, um die Höhe "
"des Geländes zu animieren. In Kombination mit :ref:`Tweens <class_Tween>` "
"kann dies besonders für Animationen nützlich sein."

msgid "Interacting with light"
msgstr "Mit Licht interagieren"

msgid ""
"First, turn wireframe off. To do so, click in the upper-left of the Viewport "
"again, where it says \"Perspective\", and select \"Display Normal\"."
msgstr ""
"Schalten Sie zunächst die Drahtgitterdarstellung aus. Klicken Sie dazu "
"erneut oben links im Ansichtsfenster, wo \"Perspektive\" steht, und wählen "
"Sie \"Normalen anzeigen\"."

msgid ""
"Note how the mesh color goes flat. This is because the lighting on it is "
"flat. Let's add a light!"
msgstr ""
"Beachten Sie, dass die Farbe des Meshes flach wird. Das liegt daran, dass "
"die Beleuchtung darauf flach ist. Fügen wir ein Licht hinzu!"

msgid ""
"First, we will add an :ref:`OmniLight3D<class_OmniLight3D>` to the scene."
msgstr ""
"Zunächst fügen wir der Szene ein :ref:`OmniLight3D<class_OmniLight3D>` hinzu."

msgid ""
"You can see the light affecting the terrain, but it looks odd. The problem "
"is the light is affecting the terrain as if it were a flat plane. This is "
"because the light shader uses the normals from the :ref:`Mesh <class_mesh>` "
"to calculate light."
msgstr ""
"Sie können sehen, wie das Licht auf das Gelände wirkt, aber es sieht seltsam "
"aus. Das Problem ist, dass das Licht auf das Terrain einwirkt, als ob es "
"eine flache Ebene wäre. Das liegt daran, dass der Licht-Shader die Normalen "
"aus dem :ref:`Mesh <class_mesh>` zur Berechnung des Lichts verwendet."

msgid ""
"The normals are stored in the Mesh, but we are changing the shape of the "
"Mesh in the shader, so the normals are no longer correct. To fix this, we "
"can recalculate the normals in the shader or use a normal texture that "
"corresponds to our noise. Godot makes both easy for us."
msgstr ""
"Die Normalen sind im Mesh gespeichert, aber wir ändern die Form des Mesh im "
"Shader, so dass die Normalen nicht mehr korrekt sind. Um dies zu beheben, "
"können wir die Normalen im Shader neu berechnen oder eine Normalentextur "
"verwenden, die unserem Rauschen entspricht. Godot macht beides für uns "
"einfach."

msgid ""
"You can calculate the new normal manually in the vertex function and then "
"just set ``NORMAL``. With ``NORMAL`` set, Godot will do all the difficult "
"lighting calculations for us. We will cover this method in the next part of "
"this tutorial, for now we will read normals from a texture."
msgstr ""
"Sie können die neue Normale manuell in der Vertex-Funktion berechnen und "
"dann einfach ``NORMAL`` setzen. Wenn ``NORMAL`` gesetzt ist, wird Godot alle "
"schwierigen Beleuchtungsberechnungen für uns erledigen. Wir werden diese "
"Methode im nächsten Teil dieses Tutorials behandeln, für jetzt werden wir "
"Normalen von einer Textur lesen."

msgid ""
"Instead we will rely on the NoiseTexture again to calculate normals for us. "
"We do that by passing in a second noise texture."
msgstr ""
"Stattdessen werden wir uns wieder auf die NoiseTexture verlassen, um die "
"Normalen für uns zu berechnen. Wir tun dies, indem wir eine zweite "
"Rauschtextur übergeben."

msgid ""
"Set this second uniform texture to another :ref:`NoiseTexture2D "
"<class_noisetexture2D>` with another :ref:`FastNoiseLite "
"<class_fastnoiselite>`. But this time, check **As Normalmap**."
msgstr ""
"Setzen Sie diese zweite Uniform-Textur auf eine weitere :ref:`NoiseTexture2D "
"<class_noisetexture2D>` mit einer weiteren :ref:`FastNoiseLite "
"<class_fastnoiselite>`. Aber dieses Mal aktivieren Sie **Als Normal Map**."

msgid ""
"Now, because this is a normalmap and not a per-vertex normal, we are going "
"to assign it in the ``fragment()`` function. The ``fragment()`` function "
"will be explained in more detail in the next part of this tutorial."
msgstr ""
"Da es sich hier um eine Normal Map und nicht um eine Per-Vertex-Normale "
"handelt, werden wir sie in der Funktion ``fragment()`` zuweisen. Die "
"``fragment()``-Funktion wird im nächsten Teil des Tutorials genauer erklärt."

msgid ""
"When we have normals that correspond to a specific vertex we set ``NORMAL``, "
"but if you have a normalmap that comes from a texture, set the normal using "
"``NORMAL_MAP``. This way Godot will handle the wrapping of texture around "
"the mesh automatically."
msgstr ""
"Wenn wir Normalen haben, die einem bestimmten Vertex entsprechen, setzen wir "
"``NORMAL``, aber wenn Sie eine Norma Map haben, die von einer Textur kommt, "
"setzen Sie die Normalen mit ``NORMAL_MAP``. Auf diese Weise wird Godot das "
"umschließen der Textur um das Mesh automatisch handhaben."

msgid ""
"Lastly, in order to ensure that we are reading from the same places on the "
"noise texture and the normalmap texture, we are going to pass the ``VERTEX."
"xz`` position from the ``vertex()`` function to the ``fragment()`` function. "
"We do that with varyings."
msgstr ""
"Um sicherzustellen, daß wir von den gleichen Stellen in der Rausch-Textur "
"und der Normal Map-Textur lesen, übergeben wir die Position ``VERTEX.xz`` "
"von der Funktion ``vertex()`` an die Funktion ``fragment()``. Wir machen das "
"mit Varyings."

msgid ""
"Above the ``vertex()`` define a ``vec2`` called ``tex_position``. And inside "
"the ``vertex()`` function assign ``VERTEX.xz`` to ``tex_position``."
msgstr ""
"Oberhalb von ``vertex()`` definieren Sie einen ``vec2`` namens "
"``tex_position``. Und innerhalb der ``vertex()``-Funktion weisen Sie "
"``VERTEX.xz`` der ``tex_position`` zu."

msgid ""
"And now we can access ``tex_position`` from the ``fragment()`` function."
msgstr ""
"Und jetzt können wir auf ``tex_position`` von der ``fragment()`` Funktion "
"aus zugreifen."

msgid ""
"With the normals in place the light now reacts to the height of the mesh "
"dynamically."
msgstr ""
"Mit den Normalen reagiert das Licht nun dynamisch auf die Höhe des Meshs."

msgid ""
"We can even drag the light around and the lighting will update automatically."
msgstr ""
"Wir können das Licht sogar herumziehen und die Beleuchtung wird automatisch "
"aktualisiert."

msgid ""
"Here is the full code for this tutorial. You can see it is not very long as "
"Godot handles most of the difficult stuff for you."
msgstr ""
"Hier ist der vollständige Code für dieses Tutorial. Wie Sie sehen können, "
"ist er nicht sehr lang, da Godot die meisten schwierigen Dinge für Sie "
"erledigt."

msgid ""
"That is everything for this part. Hopefully, you now understand the basics "
"of vertex shaders in Godot. In the next part of this tutorial we will write "
"a fragment function to accompany this vertex function and we will cover a "
"more advanced technique to turn this terrain into an ocean of moving waves."
msgstr ""
"Das ist alles für diesen Teil. Hoffentlich verstehen Sie jetzt die "
"Grundlagen von Vertex-Shadern in Godot. Im nächsten Teil dieses Tutorials "
"werden wir eine Fragment-Funktion schreiben, um diese Vertex-Funktion zu "
"begleiten, und wir werden eine fortgeschrittenere Technik behandeln, um "
"dieses Terrain in ein Meer von sich bewegenden Wellen zu verwandeln."

msgid "Translation status"
msgstr "Übersetzungsstatus"
